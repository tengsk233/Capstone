{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":24,"col":2,"offset":501},"end":{"line":24,"col":67,"offset":566},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_0","lines":"\tfprintf(stderr, _(\"usage: kbd_mode [-a|-u|-k|-s] [-C device]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":33,"col":15,"offset":690},"end":{"line":33,"col":19,"offset":694},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"046a51d0f75bfffdbff09143daefbeff62342d7412beb7574666fa370635f5a2cac51af6f72d5631c544cd060b3197d974a2c62b57ca1f9f60ca3a9de20cc5a7_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":35,"col":2,"offset":702},"end":{"line":35,"col":23,"offset":723},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":2,"offset":702},"end":{"line":35,"col":11,"offset":711},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"736f744139c45925c967e35e6a25f41ba5ffea52da8140d61234058b77a36a76ae70a0dad89b33365c7e8dfa3e7f7007f5ecffb4596c5629730a5b7553e75024_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":39,"col":27,"offset":821},"end":{"line":39,"col":31,"offset":825},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"046a51d0f75bfffdbff09143daefbeff62342d7412beb7574666fa370635f5a2cac51af6f72d5631c544cd060b3197d974a2c62b57ca1f9f60ca3a9de20cc5a7_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":42,"col":14,"offset":879},"end":{"line":42,"col":42,"offset":907},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":42,"col":14,"offset":879},"end":{"line":42,"col":20,"offset":885},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dfe9a4b412f5b76fcbb36ec99abcdc88a285d35ef5b69f4833522ff38e0b5ddcf4635f5c4e7669c138f28a0582b58f69bfcf31121b1b5ae3801edeee4612f772_0","lines":"\twhile ((c = getopt(argc, argv, \"auskC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":42,"col":27,"offset":892},"end":{"line":42,"col":31,"offset":896},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"046a51d0f75bfffdbff09143daefbeff62342d7412beb7574666fa370635f5a2cac51af6f72d5631c544cd060b3197d974a2c62b57ca1f9f60ca3a9de20cc5a7_2","lines":"\twhile ((c = getopt(argc, argv, \"auskC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":88,"col":5,"offset":1682},"end":{"line":88,"col":58,"offset":1735},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_1","lines":"\t\t\t\tprintf(_(\"The keyboard is in raw (scancode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":91,"col":5,"offset":1773},"end":{"line":91,"col":63,"offset":1831},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_2","lines":"\t\t\t\tprintf(_(\"The keyboard is in mediumraw (keycode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":94,"col":5,"offset":1865},"end":{"line":94,"col":63,"offset":1923},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_3","lines":"\t\t\t\tprintf(_(\"The keyboard is in the default (ASCII) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":97,"col":5,"offset":1959},"end":{"line":97,"col":59,"offset":2013},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_4","lines":"\t\t\t\tprintf(_(\"The keyboard is in Unicode (UTF-8) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","start":{"line":100,"col":5,"offset":2042},"end":{"line":100,"col":56,"offset":2093},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce88ee0577e1a092cd0b6013aaca9f23b0e2e452a7ebc4aec9702fb80d162215bf8041b42dd17b2d8cf8ae2e78a4d11b6b3f88dd8c340b603c809ae07b04acf7_5","lines":"\t\t\t\tprintf(_(\"The keyboard is in some unknown mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":62,"col":7,"offset":1484},"end":{"line":62,"col":12,"offset":1489},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":62,"col":7,"offset":1484},"end":{"line":62,"col":8,"offset":1485},"abstract_content":"i"},"$SIGNED":{"start":{"line":62,"col":11,"offset":1488},"end":{"line":62,"col":12,"offset":1489},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_0","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":64,"col":3,"offset":1533},"end":{"line":64,"col":31,"offset":1561},"extra":{"metavars":{"$NARROW":{"start":{"line":64,"col":3,"offset":1533},"end":{"line":64,"col":7,"offset":1537},"abstract_content":"flag"},"$LARGE":{"start":{"line":64,"col":29,"offset":1559},"end":{"line":64,"col":30,"offset":1560},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"44564a56b8570f0d88bb704cc534a601e0961e31b59059a566c2284405eece8c7c6f5c663208560421ca84b652fd936d74ebfc451a1820f58c8aa3e3aa056e27_0","lines":"\t\tflag = lk_map_exists(ctx, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":70,"col":7,"offset":1635},"end":{"line":70,"col":12,"offset":1640},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":7,"offset":1635},"end":{"line":70,"col":8,"offset":1636},"abstract_content":"i"},"$SIGNED":{"start":{"line":70,"col":11,"offset":1639},"end":{"line":70,"col":12,"offset":1640},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_1","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":74,"col":8,"offset":1720},"end":{"line":74,"col":13,"offset":1725},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":74,"col":8,"offset":1720},"end":{"line":74,"col":9,"offset":1721},"abstract_content":"j"},"$SIGNED":{"start":{"line":74,"col":12,"offset":1724},"end":{"line":74,"col":13,"offset":1725},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_0","lines":"\t\tfor (j = 0; j < NR_KEYS / 2; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":103,"col":3,"offset":2183},"end":{"line":107,"col":4,"offset":2275},"extra":{"metavars":{"$EXPR1":{"start":{"line":103,"col":7,"offset":2187},"end":{"line":103,"col":15,"offset":2195},"abstract_content":"modifier"},"$EXPR2":{"start":{"line":103,"col":19,"offset":2199},"end":{"line":103,"col":25,"offset":2205},"abstract_content":"1<<i"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5c6906afea17f3cfd27e3de48f3bbea19a93ebc93db0d026b51e51fceda9bbca9ab85d2b061138b9a43d79c07d02d0a1a05dc73556af290bcc4dd2b62d76eed9_0","lines":"\t\tif (modifier & (1 << i)) {\n\t\t\tif (buf[0])\n\t\t\t\tstrcat(buf, \"_\");\n\t\t\tstrcat(buf, mods[i]);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":105,"col":5,"offset":2229},"end":{"line":105,"col":21,"offset":2245},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":5,"offset":2229},"end":{"line":105,"col":11,"offset":2235},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53d64251af87d6fec714f994d0a11378f4581314535d9428097e4c8f87a832641c9b4fe95fdfcf38f9fdef4364ba9dad50844d616b6974db410514789e317aee_0","lines":"\t\t\t\tstrcat(buf, \"_\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"72eeb346bddc1c119249970f5346bdc65746f0a8b212fce4e276a7adc929ba471b2e349055944acf9d41a1aa16c9b9655ae19467d87c6f94babc6fd8b317d3c2_0","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":10,"offset":2256},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53d64251af87d6fec714f994d0a11378f4581314535d9428097e4c8f87a832641c9b4fe95fdfcf38f9fdef4364ba9dad50844d616b6974db410514789e317aee_1","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{"$TYPE":{"start":{"line":96,"col":9,"offset":2086},"end":{"line":96,"col":13,"offset":2090},"abstract_content":"char"},"$LEN":{"start":{"line":96,"col":18,"offset":2095},"end":{"line":96,"col":20,"offset":2097},"abstract_content":"60"},"$FUN":{"start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":10,"offset":2256},"abstract_content":"strcat"},"$BUF":{"start":{"line":106,"col":11,"offset":2257},"end":{"line":106,"col":14,"offset":2260},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"45b987e62eff4b9d56a9744060f2bc5ae49d8560c393867215dfadbfa48892f3c745d1fa242e979af6ed18112d3605e9ae43d86fb58b2636bdd7a57df42a1a4c_0","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":108,"col":2,"offset":2277},"end":{"line":108,"col":13,"offset":2288},"extra":{"metavars":{"$TYPE":{"start":{"line":96,"col":9,"offset":2086},"end":{"line":96,"col":13,"offset":2090},"abstract_content":"char"},"$LEN":{"start":{"line":96,"col":18,"offset":2095},"end":{"line":96,"col":20,"offset":2097},"abstract_content":"60"},"$PTR":{"start":{"line":108,"col":9,"offset":2284},"end":{"line":108,"col":12,"offset":2287},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a740f9838aba7ff313bd49483b4bc1826c658ade4c3d905dcec33881b8d2cbbdb83602fb8a1129c354455bbfffdec64e7e62171489906be76a8bdcc7ca7298c_0","lines":"\treturn buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":118,"col":15,"offset":2456},"end":{"line":118,"col":34,"offset":2475},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":118,"col":15,"offset":2456},"end":{"line":118,"col":30,"offset":2471},"abstract_content":"func_buf_offset"},"$SIGNED":{"start":{"line":118,"col":33,"offset":2474},"end":{"line":118,"col":34,"offset":2475},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a048a094bb4a09db936a2be32471417fc7f30a72a2c633b845276fb373ba6ad44207a1f165a1dc6dbd1601ccf448a58682852462a320bf98c898970cfee22c73_0","lines":"\tunsigned int func_buf_offset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":131,"col":7,"offset":2867},"end":{"line":131,"col":12,"offset":2872},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":131,"col":7,"offset":2867},"end":{"line":131,"col":8,"offset":2868},"abstract_content":"i"},"$SIGNED":{"start":{"line":131,"col":11,"offset":2871},"end":{"line":131,"col":12,"offset":2872},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_2","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":135,"col":4,"offset":2971},"end":{"line":135,"col":68,"offset":3035},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":37,"offset":36},"abstract_content":"\"unsigned short %s_map[NR_KEYS] = {\""},"$ARG1":{"start":{"line":135,"col":12,"offset":2979},"end":{"line":135,"col":14,"offset":2981},"abstract_content":"fd"},"$FMT":{"start":{"line":135,"col":16,"offset":2983},"end":{"line":135,"col":52,"offset":3019},"abstract_content":"\"unsigned short %s_map[NR_KEYS] = {\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73bfc943cac59a70a8fee5210fbdfede24b77197b7a53b415fa1e207dc874d671390f1030dcf2debaa3951a7667d1ea4fccc4de205cbc6eedeced4feb50267d3_0","lines":"\t\t\tfprintf(fd, \"unsigned short %s_map[NR_KEYS] = {\", mk_mapname(i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":139,"col":5,"offset":3118},"end":{"line":139,"col":55,"offset":3168},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"\\t0x%04x,\""},"$ARG1":{"start":{"line":139,"col":13,"offset":3126},"end":{"line":139,"col":15,"offset":3128},"abstract_content":"fd"},"$FMT":{"start":{"line":139,"col":17,"offset":3130},"end":{"line":139,"col":28,"offset":3141},"abstract_content":"\"\\t0x%04x,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e413626cd629710cdbaedca24aff87b38bb37694914386ecd69190611ee5a2d51fef70c2dc9ea830b47d815d74dfb5ff5711bebeb959e7356938b018d9e391e5_0","lines":"\t\t\t\tfprintf(fd, \"\\t0x%04x,\", U(lk_get_key(ctx, i, j)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":144,"col":7,"offset":3214},"end":{"line":144,"col":32,"offset":3239},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":144,"col":7,"offset":3214},"end":{"line":144,"col":11,"offset":3218},"abstract_content":"imax"},"$SIGNED":{"start":{"line":144,"col":31,"offset":3238},"end":{"line":144,"col":32,"offset":3239},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3873715aca9b486051bc2fb02a7b66ccfe17133b8f4c2419b3668b415236ce965a0b84c9efe50a714155bfb65c0b465029c6c40c30981acf1f8f50c8e66576eb_0","lines":"\tfor (imax = MAX_NR_KEYMAPS - 1; imax > 0; imax--)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":148,"col":7,"offset":3361},"end":{"line":148,"col":12,"offset":3366},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":148,"col":7,"offset":3361},"end":{"line":148,"col":8,"offset":3362},"abstract_content":"i"},"$SIGNED":{"start":{"line":148,"col":11,"offset":3365},"end":{"line":148,"col":12,"offset":3366},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_3","lines":"\tfor (i = 0; i <= imax; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":151,"col":4,"offset":3457},"end":{"line":151,"col":41,"offset":3494},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s_map,\""},"$ARG1":{"start":{"line":151,"col":12,"offset":3465},"end":{"line":151,"col":14,"offset":3467},"abstract_content":"fd"},"$FMT":{"start":{"line":151,"col":16,"offset":3469},"end":{"line":151,"col":25,"offset":3478},"abstract_content":"\"%s_map,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"95208a76d290a85bf425256f417353eca22ecd7284e5c9f9f9b5b730dd0b9e14ad48b94575a886951996552a558595398e82b5bb3f2b798fa6619cc4ac5ad626_0","lines":"\t\t\tfprintf(fd, \"%s_map,\", mk_mapname(i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":172,"col":7,"offset":4220},"end":{"line":172,"col":12,"offset":4225},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":172,"col":7,"offset":4220},"end":{"line":172,"col":8,"offset":4221},"abstract_content":"i"},"$SIGNED":{"start":{"line":172,"col":11,"offset":4224},"end":{"line":172,"col":12,"offset":4225},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_4","lines":"\tfor (i = 0; i < maxfunc; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":184,"col":23,"offset":4501},"end":{"line":184,"col":33,"offset":4511},"extra":{"metavars":{"$TYPE":{"start":{"line":173,"col":3,"offset":4249},"end":{"line":173,"col":7,"offset":4253},"abstract_content":"char"},"$PTR2":{"start":{"line":184,"col":23,"offset":4501},"end":{"line":184,"col":26,"offset":4504},"abstract_content":"ptr"},"$PTR1":{"start":{"line":184,"col":29,"offset":4507},"end":{"line":184,"col":33,"offset":4511},"abstract_content":"func"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d32439c02ddc568a2cfe2a310ae5ade38733556e1a8741866d67405baa40334961369a3db8100e55f6578015acd79eb79ef5592bf820708070c1cb577083b6d6_0","lines":"\t\tfunc_buf_offset += (ptr - func + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":197,"col":7,"offset":4825},"end":{"line":197,"col":12,"offset":4830},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":197,"col":7,"offset":4825},"end":{"line":197,"col":8,"offset":4826},"abstract_content":"i"},"$SIGNED":{"start":{"line":197,"col":11,"offset":4829},"end":{"line":197,"col":12,"offset":4830},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_5","lines":"\tfor (i = 0; i < maxfunc; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":207,"col":2,"offset":5067},"end":{"line":238,"col":3,"offset":5945},"extra":{"metavars":{"$EXPR1":{"start":{"line":207,"col":6,"offset":5071},"end":{"line":207,"col":16,"offset":5081},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":207,"col":19,"offset":5084},"end":{"line":207,"col":41,"offset":5106},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"858fcdf50b96bb78792feb4030218dd6c67673b2850360a1855bd5487f36416d0d972d5bfcf3acc34702d2245a9d615de3b822aa1c25594634fcc4ab7d5851c5_0","lines":"\tif (ctx->flags & LK_FLAG_PREFER_UNICODE) {\n\t\tfprintf(fd, \"\\nstruct kbdiacruc accent_table[MAX_DIACR] = {\\n\");\n\t\tfor (i = 0; i < ctx->accent_table->count; i++) {\n\t\t\tkddiac = lk_array_get_ptr(ctx->accent_table, i);\n\n\t\t\tfprintf(fd, \"\\t{\");\n\t\t\toutchar(fd, kddiac->diacr, 1);\n\t\t\toutchar(fd, kddiac->base, 1);\n\t\t\tfprintf(fd, \"0x%04x},\", kddiac->result);\n\t\t\tif (i % 2)\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t}\n\t\tif (i % 2)\n\t\t\tfprintf(fd, \"\\n\");\n\t\tfprintf(fd, \"};\\n\\n\");\n\t} else {\n\t\tfprintf(fd, \"\\nstruct kbdiacr accent_table[MAX_DIACR] = {\\n\");\n\t\tfor (i = 0; i < ctx->accent_table->count; i++) {\n\t\t\tkddiac = lk_array_get_ptr(ctx->accent_table, i);\n\n\t\t\tfprintf(fd, \"\\t{\");\n\t\t\toutchar(fd, kddiac->diacr, 1);\n\t\t\toutchar(fd, kddiac->base, 1);\n\t\t\toutchar(fd, kddiac->result, 0);\n\t\t\tfprintf(fd, \"},\");\n\t\t\tif (i % 2)\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t}\n\t\tif (i % 2)\n\t\t\tfprintf(fd, \"\\n\");\n\t\tfprintf(fd, \"};\\n\\n\");\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":209,"col":8,"offset":5184},"end":{"line":209,"col":13,"offset":5189},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":209,"col":8,"offset":5184},"end":{"line":209,"col":9,"offset":5185},"abstract_content":"i"},"$SIGNED":{"start":{"line":209,"col":12,"offset":5188},"end":{"line":209,"col":13,"offset":5189},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_6","lines":"\t\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":215,"col":4,"offset":5374},"end":{"line":215,"col":43,"offset":5413},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"0x%04x},\""},"$ARG1":{"start":{"line":215,"col":12,"offset":5382},"end":{"line":215,"col":14,"offset":5384},"abstract_content":"fd"},"$FMT":{"start":{"line":215,"col":16,"offset":5386},"end":{"line":215,"col":26,"offset":5396},"abstract_content":"\"0x%04x},\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d0f2a67b11b8bd534f6b226808d1a23d06908a0d8f48ebd93cad7d0fc0cb28340c60ce361cbd43d420b41f2de7c50dda06cd9e19ec193984ede19b5458fea08_0","lines":"\t\t\tfprintf(fd, \"0x%04x},\", kddiac->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":224,"col":8,"offset":5598},"end":{"line":224,"col":13,"offset":5603},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":224,"col":8,"offset":5598},"end":{"line":224,"col":9,"offset":5599},"abstract_content":"i"},"$SIGNED":{"start":{"line":224,"col":12,"offset":5602},"end":{"line":224,"col":13,"offset":5603},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_7","lines":"\t\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":249,"col":7,"offset":6168},"end":{"line":249,"col":12,"offset":6173},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":249,"col":7,"offset":6168},"end":{"line":249,"col":8,"offset":6169},"abstract_content":"i"},"$SIGNED":{"start":{"line":249,"col":11,"offset":6172},"end":{"line":249,"col":12,"offset":6173},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_8","lines":"\tfor (i = 0; i < ctx->func_table->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":278,"col":7,"offset":6763},"end":{"line":278,"col":12,"offset":6768},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":278,"col":7,"offset":6763},"end":{"line":278,"col":8,"offset":6764},"abstract_content":"i"},"$SIGNED":{"start":{"line":278,"col":11,"offset":6767},"end":{"line":278,"col":12,"offset":6768},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_9","lines":"\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":288,"col":3,"offset":7011},"end":{"line":309,"col":4,"offset":7533},"extra":{"metavars":{"$EXPR1":{"start":{"line":288,"col":7,"offset":7015},"end":{"line":288,"col":17,"offset":7025},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":288,"col":20,"offset":7028},"end":{"line":288,"col":42,"offset":7050},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"858fcdf50b96bb78792feb4030218dd6c67673b2850360a1855bd5487f36416d0d972d5bfcf3acc34702d2245a9d615de3b822aa1c25594634fcc4ab7d5851c5_1","lines":"\t\tif (ctx->flags & LK_FLAG_PREFER_UNICODE) {\n\t\t\tksym = codetoksym(ctx, ptr->result ^ 0xf000);\n\t\t\tif (ksym) {\n\t\t\t\tfprintf(fd, \" to %s\\n\", ksym);\n\t\t\t} else {\n\t\t\t\tfprintf(fd, \" to U+%04x\\n\", ptr->result);\n\t\t\t}\n\t\t} else\n#endif\n\t\t    if (ptr->result > 0xff) {\n\t\t\t// impossible case?\n\t\t\tfprintf(fd, \" to 0x%x\\n\", ptr->result);\n\t\t} else {\n\t\t\tksym = codetoksym(ctx, ptr->result);\n\t\t\tif (ksym) {\n\t\t\t\tfprintf(fd, \" to %s\\n\", ksym);\n\t\t\t} else {\n\t\t\t\tfprintf(fd, \" to \");\n\t\t\t\tdumpchar(fd, ptr->result, 0);\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":293,"col":5,"offset":7169},"end":{"line":293,"col":45,"offset":7209},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":15,"offset":14},"abstract_content":"\" to U+%04x\\n\""},"$ARG1":{"start":{"line":293,"col":13,"offset":7177},"end":{"line":293,"col":15,"offset":7179},"abstract_content":"fd"},"$FMT":{"start":{"line":293,"col":17,"offset":7181},"end":{"line":293,"col":31,"offset":7195},"abstract_content":"\" to U+%04x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"270e7911704a02f610c48fee059865a7f80ccc34d94c7fa49b1c16ce868563a60a09d50152a0119ff2fc931c1c73f1537de75a4ac849d9f08e45dde84e08de48_0","lines":"\t\t\t\tfprintf(fd, \" to U+%04x\\n\", ptr->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":299,"col":4,"offset":7290},"end":{"line":299,"col":42,"offset":7328},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\" to 0x%x\\n\""},"$ARG1":{"start":{"line":299,"col":12,"offset":7298},"end":{"line":299,"col":14,"offset":7300},"abstract_content":"fd"},"$FMT":{"start":{"line":299,"col":16,"offset":7302},"end":{"line":299,"col":28,"offset":7314},"abstract_content":"\" to 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4369829662e063f96e92a287828f5a2f2a2ff191ffe4a6ffa83135373025761bac1496a77becf0e5b104def97bd59327638b84c36b7a78737ff2443446cd4424_0","lines":"\t\t\tfprintf(fd, \" to 0x%x\\n\", ptr->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":317,"col":2,"offset":7625},"end":{"line":317,"col":19,"offset":7642},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":317,"col":2,"offset":7625},"end":{"line":317,"col":3,"offset":7626},"abstract_content":"i"},"$SIGNED":{"start":{"line":317,"col":6,"offset":7629},"end":{"line":317,"col":7,"offset":7630},"abstract_content":"n","propagated_value":{"svalue_start":{"line":317,"col":18,"offset":7641},"svalue_end":{"line":317,"col":19,"offset":7642},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4016cc15371bad20a4fb9e689bab27d908f5562b2c0ed979f9884753242b067fb8f66d285e847ed8ec349185b5db4c77b2d47f0cfbf357e0da9d5751e92e0fd5_0","lines":"\ti = n = m = s = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":321,"col":7,"offset":7677},"end":{"line":321,"col":12,"offset":7682},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":321,"col":7,"offset":7677},"end":{"line":321,"col":8,"offset":7678},"abstract_content":"i"},"$SIGNED":{"start":{"line":321,"col":11,"offset":7681},"end":{"line":321,"col":12,"offset":7682},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2f58876898002cc929bb290099c7a3112efd785dea17c779b884bbe76b7c327a4feb2f4c528b71fd0cbdd80b1c4154a75dfdfa8cb85ace05088b6be8f549a1b_10","lines":"\tfor (i = 0; i < ctx->keymap->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":322,"col":3,"offset":7717},"end":{"line":323,"col":13,"offset":7791},"extra":{"metavars":{"$EXPR1":{"start":{"line":322,"col":7,"offset":7721},"end":{"line":322,"col":20,"offset":7734},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":322,"col":23,"offset":7737},"end":{"line":322,"col":43,"offset":7757},"abstract_content":"LK_KEYWORD_ALTISMETA"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"df8fec13e9fd6575463e8d6709378c62182af2825755a31d35f1a20ca53cb877cd3cb6ce3ccf5e6c4c2e3f63f8a00bcdd511e52550b32df96b85506ac3c23da6_0","lines":"\t\tif (ctx->keywords & LK_KEYWORD_ALTISMETA && i == (i | M_ALT))\n\t\t\tcontinue;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":14,"offset":8043},"extra":{"metavars":{"$NARROW":{"start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":6,"offset":8035},"abstract_content":"n"},"$LARGE":{"start":{"line":336,"col":9,"offset":8038},"end":{"line":336,"col":10,"offset":8039},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"845c4a11464ab93fd5bfbcc4087aa628afebfe9ab25ed6609fa76bd48d63ef62200de04b92f9baee23cce03db4729adb580f62af2d6f4755496e8c53acd31a8a_0","lines":"\t\t\t\tn = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":14,"offset":8043},"extra":{"metavars":{"$SIGNED":{"start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":6,"offset":8035},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":336,"col":9,"offset":8038},"end":{"line":336,"col":10,"offset":8039},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4016cc15371bad20a4fb9e689bab27d908f5562b2c0ed979f9884753242b067fb8f66d285e847ed8ec349185b5db4c77b2d47f0cfbf357e0da9d5751e92e0fd5_1","lines":"\t\t\t\tn = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":21,"offset":8065},"extra":{"metavars":{"$NARROW":{"start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":5,"offset":8049},"abstract_content":"m"},"$LARGE":{"start":{"line":337,"col":16,"offset":8060},"end":{"line":337,"col":17,"offset":8061},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0d29e0f5180d7174bf33e7eb4ac4f91ffa35ccd25364d803f0635200ab3d14b8dff0a99e3d8b744cebf3b40b01669c08e44317bcb76929a1ecb098e562304a22_0","lines":"\t\t\tm         = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":21,"offset":8065},"extra":{"metavars":{"$SIGNED":{"start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":5,"offset":8049},"abstract_content":"m"},"$UNSIGNED":{"start":{"line":337,"col":16,"offset":8060},"end":{"line":337,"col":17,"offset":8061},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fff49a4b124bdfdcb34ef9453a71292f6f66dbe38c6053cc1baf972bfd25c05a8528ac7beaf0791da9176581b9ea92376fe0160f622de18f6d99e3aae7503d1e_0","lines":"\t\t\tm         = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":357,"col":4,"offset":8359},"end":{"line":358,"col":36,"offset":8419},"extra":{"metavars":{"$EXPR1":{"start":{"line":357,"col":8,"offset":8363},"end":{"line":357,"col":9,"offset":8364},"abstract_content":"x"},"$EXPR2":{"start":{"line":357,"col":13,"offset":8368},"end":{"line":357,"col":26,"offset":8381},"abstract_content":"1<<mod->->bit"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef2dab55f60202196301f004a64be03bae721d701088e7dc5688297a8dc901f545a1c2d2cc5ef35bd89cf14b9d8707032f8c14749ffe6fd62121a001b92cd54a_0","lines":"\t\t\tif (x & (1 << mod->bit))\n\t\t\t\tfprintf(fd, \"%s\\t\", mod->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":374,"col":2,"offset":8625},"end":{"line":374,"col":16,"offset":8639},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":374,"col":2,"offset":8625},"end":{"line":374,"col":3,"offset":8626},"abstract_content":"t"},"$SIGNED":{"start":{"line":374,"col":11,"offset":8634},"end":{"line":374,"col":15,"offset":8638},"abstract_content":"code"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba0e5bc22015481959ffb5d6776aa820c3dd084fbbd3e05c1a9557021d842b2698e0d0c789be14df9123d527f11ccc17e3d451c9ff359678f660e44c386247b2_0","lines":"\tt = KTYP(code);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":375,"col":2,"offset":8642},"end":{"line":375,"col":16,"offset":8656},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":375,"col":2,"offset":8642},"end":{"line":375,"col":3,"offset":8643},"abstract_content":"v"},"$SIGNED":{"start":{"line":375,"col":11,"offset":8651},"end":{"line":375,"col":15,"offset":8655},"abstract_content":"code"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"03dd05ddd7606cd9dd23f384c55c96e34c581212b23850acf911a7609a26fbc7678ab05a45aeb6668304b7e5011b7d42ba817e35ff115743d0058b3f0b708191_0","lines":"\tv = KVAL(code);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":380,"col":4,"offset":8774},"end":{"line":380,"col":50,"offset":8820},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":19,"offset":18},"abstract_content":"\"U+%04x          \""},"$ARG1":{"start":{"line":380,"col":12,"offset":8782},"end":{"line":380,"col":14,"offset":8784},"abstract_content":"fd"},"$FMT":{"start":{"line":380,"col":16,"offset":8786},"end":{"line":380,"col":34,"offset":8804},"abstract_content":"\"U+%04x          \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1f4517b9b8bfdbb22c3808f3a034c0a937ac795ec63dad1df3c02d1ff4d933c51f2de5285ca363cd5b29a2eda920e6046cdc51959b2493a650c7bb6b3793d848_0","lines":"\t\t\tfprintf(fd, \"U+%04x          \", code ^ 0xf000);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":389,"col":2,"offset":8919},"end":{"line":399,"col":59,"offset":9392},"extra":{"metavars":{"$EXPR1":{"start":{"line":390,"col":7,"offset":8958},"end":{"line":390,"col":8,"offset":8959},"abstract_content":"p"},"$EXPR2":{"start":{"line":390,"col":11,"offset":8962},"end":{"line":390,"col":32,"offset":8983},"abstract_content":"codetoksym(ctx code)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"85f17541692413f7f0d5f568ba49446c703e5e35df6de600a59310bcbaa932bf9106b47e78bca583ddf3c257572631aa72b197bb76e558759a5ae67c485122ad_0","lines":"\tif (!numeric && t == KT_LATIN &&\n\t    (p = codetoksym(ctx, code)))\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t < syms_size && v < get_sym_size(ctx, t) &&\n\t         (p = get_sym(ctx, t, v))[0])\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":392,"col":7,"offset":9029},"end":{"line":399,"col":59,"offset":9392},"extra":{"metavars":{"$EXPR1":{"start":{"line":393,"col":12,"offset":9101},"end":{"line":393,"col":13,"offset":9102},"abstract_content":"p"},"$EXPR2":{"start":{"line":393,"col":16,"offset":9105},"end":{"line":393,"col":34,"offset":9123},"abstract_content":"get_sym(ctx t v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d3c33114ccd3990011369329a778c3f5b725f29ad49c00711149e85195a22d272fa4f4c8fe49b2288fd1e7f3276f23c1315037754bb8f6244d10c6623c9efab_0","lines":"\telse if (!numeric && t < syms_size && v < get_sym_size(ctx, t) &&\n\t         (p = get_sym(ctx, t, v))[0])\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":395,"col":7,"offset":9172},"end":{"line":399,"col":59,"offset":9392},"extra":{"metavars":{"$EXPR1":{"start":{"line":396,"col":12,"offset":9261},"end":{"line":396,"col":13,"offset":9262},"abstract_content":"p"},"$EXPR2":{"start":{"line":396,"col":16,"offset":9265},"end":{"line":396,"col":41,"offset":9290},"abstract_content":"get_sym(ctx KT_LATIN v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c93f76d57877902a007f09f167d08a382f98661f6b99cd66eeadecd3182543679b100b6f05e2d5fd92b24c9434df6d009cd12f6e1f2a75275306c56e353cd143_0","lines":"\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":399,"col":3,"offset":9336},"end":{"line":399,"col":58,"offset":9391},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"\"0x%04x         %s\""},"$ARG1":{"start":{"line":399,"col":11,"offset":9344},"end":{"line":399,"col":13,"offset":9346},"abstract_content":"fd"},"$FMT":{"start":{"line":399,"col":15,"offset":9348},"end":{"line":399,"col":34,"offset":9367},"abstract_content":"\"0x%04x         %s\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a65117d2ba477aee9128407c15af756eb112f9ab40e687db1d70dcfaaf82af891c2dc735e027d6179d97a6925578b79f57b6be5db6b98c6f6292c2c9e2bd7fe0_0","lines":"\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":431,"col":7,"offset":10114},"end":{"line":431,"col":12,"offset":10119},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":431,"col":7,"offset":10114},"end":{"line":431,"col":8,"offset":10115},"abstract_content":"j"},"$SIGNED":{"start":{"line":431,"col":11,"offset":10118},"end":{"line":431,"col":12,"offset":10119},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_1","lines":"\tfor (j = 0; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":437,"col":8,"offset":10276},"end":{"line":437,"col":13,"offset":10281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":437,"col":8,"offset":10276},"end":{"line":437,"col":9,"offset":10277},"abstract_content":"i"},"$SIGNED":{"start":{"line":437,"col":12,"offset":10280},"end":{"line":437,"col":13,"offset":10281},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"65dd9211f711b281ebc85b02bd403ec7c76dfe0ae57e388cc3190c2012d2e8725166af3df35cb7ac64ea8427a4aee9c05e7343a473e2650409afeabc46d113cb_0","lines":"\t\tfor (i = 1; i < NR_KEYS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":440,"col":4,"offset":10332},"end":{"line":440,"col":32,"offset":10360},"extra":{"metavars":{"$NARROW":{"start":{"line":440,"col":4,"offset":10332},"end":{"line":440,"col":8,"offset":10336},"abstract_content":"buf0"},"$LARGE":{"start":{"line":440,"col":27,"offset":10355},"end":{"line":440,"col":28,"offset":10356},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"82ad9249eff38f07b1bb5b1ca212a916bc0b193ba59fa27d712f14d7bebc0938e9c0129b9942273c3cd63248f81c0bbbfb5058a3df7199d07e0b721e9bc51940_0","lines":"\t\t\tbuf0 = lk_get_key(ctx, j, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":440,"col":4,"offset":10332},"end":{"line":440,"col":32,"offset":10360},"extra":{"metavars":{"$SIGNED":{"start":{"line":440,"col":4,"offset":10332},"end":{"line":440,"col":8,"offset":10336},"abstract_content":"buf0"},"$UNSIGNED":{"start":{"line":440,"col":27,"offset":10355},"end":{"line":440,"col":28,"offset":10356},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dcd517d339d3cfdbbde9fd8afcc0f1d01f9ccf32458321cdb0c5f2d95842f501ac8e391b0657a9ded53834298ff92ecbf69f45993cbf245b0550f096251a4515_0","lines":"\t\t\tbuf0 = lk_get_key(ctx, j, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":448,"col":5,"offset":10491},"end":{"line":450,"col":20,"offset":10580},"extra":{"metavars":{"$NARROW":{"start":{"line":448,"col":5,"offset":10491},"end":{"line":448,"col":9,"offset":10495},"abstract_content":"buf1"},"$LARGE":{"start":{"line":448,"col":31,"offset":10517},"end":{"line":448,"col":33,"offset":10519},"abstract_content":"ja"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7b9464414896c2ed3319ec5c85aef385b540111f1df9d8f73debef950e591b3b4dee681dafd4c857751e7154dc300a9a1c5f0ed0a724dae18d400bf56269ec4_0","lines":"\t\t\t\tbuf1 = lk_map_exists(ctx, ja)\n\t\t\t\t           ? lk_get_key(ctx, ja, i)\n\t\t\t\t           : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":448,"col":5,"offset":10491},"end":{"line":450,"col":20,"offset":10580},"extra":{"metavars":{"$SIGNED":{"start":{"line":448,"col":5,"offset":10491},"end":{"line":448,"col":9,"offset":10495},"abstract_content":"buf1"},"$UNSIGNED":{"start":{"line":448,"col":31,"offset":10517},"end":{"line":448,"col":33,"offset":10519},"abstract_content":"ja"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9ce1ebc469e189f18a1ff171745d3da689cec526dc75278c16f7108014908ec831d8e70998c9741928af06e0508edc5b76de0776222ce922ffacdbabcd4c61d0_0","lines":"\t\t\t\tbuf1 = lk_map_exists(ctx, ja)\n\t\t\t\t           ? lk_get_key(ctx, ja, i)\n\t\t\t\t           : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":463,"col":7,"offset":10751},"end":{"line":463,"col":12,"offset":10756},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":463,"col":7,"offset":10751},"end":{"line":463,"col":8,"offset":10752},"abstract_content":"i"},"$SIGNED":{"start":{"line":463,"col":11,"offset":10755},"end":{"line":463,"col":12,"offset":10756},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"65dd9211f711b281ebc85b02bd403ec7c76dfe0ae57e388cc3190c2012d2e8725166af3df35cb7ac64ea8427a4aee9c05e7343a473e2650409afeabc46d113cb_1","lines":"\tfor (i = 1; i < NR_KEYS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":466,"col":8,"offset":10803},"end":{"line":466,"col":13,"offset":10808},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":466,"col":8,"offset":10803},"end":{"line":466,"col":9,"offset":10804},"abstract_content":"j"},"$SIGNED":{"start":{"line":466,"col":12,"offset":10807},"end":{"line":466,"col":13,"offset":10808},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_2","lines":"\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":482,"col":9,"offset":11114},"end":{"line":482,"col":14,"offset":11119},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":482,"col":9,"offset":11114},"end":{"line":482,"col":10,"offset":11115},"abstract_content":"j"},"$SIGNED":{"start":{"line":482,"col":13,"offset":11118},"end":{"line":482,"col":14,"offset":11119},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_3","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":492,"col":9,"offset":11314},"end":{"line":492,"col":14,"offset":11319},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":492,"col":9,"offset":11314},"end":{"line":492,"col":10,"offset":11315},"abstract_content":"j"},"$SIGNED":{"start":{"line":492,"col":13,"offset":11318},"end":{"line":492,"col":14,"offset":11319},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_4","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":503,"col":3,"offset":11520},"end":{"line":503,"col":52,"offset":11569},"extra":{"metavars":{"$EXPR1":{"start":{"line":503,"col":15,"offset":11532},"end":{"line":503,"col":18,"offset":11535},"abstract_content":"typ","propagated_value":{"svalue_start":{"line":501,"col":14,"offset":11477},"svalue_end":{"line":501,"col":26,"offset":11489},"svalue_abstract_content":"KTYP(buf[0])"}},"$EXPR2":{"start":{"line":503,"col":22,"offset":11539},"end":{"line":503,"col":30,"offset":11547},"abstract_content":"KT_LATIN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5153c3ba71f51e6dc479ff7b4316ff51b422139312432a74675c756d64dbb6d24a1cf270857c8b66ef32624991d9e21f020c77b73691432e69eb1ded64fe36d_0","lines":"\t\tislatin  = (typ == KT_LATIN || typ == KT_LETTER);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":516,"col":9,"offset":11874},"end":{"line":516,"col":23,"offset":11888},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":516,"col":9,"offset":11874},"end":{"line":516,"col":10,"offset":11875},"abstract_content":"j"},"$SIGNED":{"start":{"line":516,"col":22,"offset":11887},"end":{"line":516,"col":23,"offset":11888},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a75a74bb703c11fc249a25673b459a3158795afcd64ecb65a6678cd4bfea9c0fc7470168673b253ec2d76f6a64dd79677beb5b566d5a2822581b7f49aaa7462b_0","lines":"\t\t\tfor (j          = 4; j < 8; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":519,"col":9,"offset":11949},"end":{"line":519,"col":23,"offset":11963},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":519,"col":9,"offset":11949},"end":{"line":519,"col":10,"offset":11950},"abstract_content":"j"},"$SIGNED":{"start":{"line":519,"col":22,"offset":11962},"end":{"line":519,"col":23,"offset":11963},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7f5adfcdcf02b453d038bdc615c856286082d5c6df3943b9bf31a9358f250b16bd35431d1cb55f591afb8c4e55b9ebc495560884c620d87736e22c7c2595117c_0","lines":"\t\t\tfor (j          = 8; j < 16; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":522,"col":9,"offset":12032},"end":{"line":522,"col":14,"offset":12037},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":522,"col":9,"offset":12032},"end":{"line":522,"col":10,"offset":12033},"abstract_content":"j"},"$SIGNED":{"start":{"line":522,"col":13,"offset":12036},"end":{"line":522,"col":14,"offset":12037},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_5","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":532,"col":8,"offset":12249},"end":{"line":532,"col":24,"offset":12265},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":532,"col":8,"offset":12249},"end":{"line":532,"col":9,"offset":12250},"abstract_content":"j"},"$SIGNED":{"start":{"line":532,"col":23,"offset":12264},"end":{"line":532,"col":24,"offset":12265},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_6","lines":"\t\tfor (j            = 0; j < keymapnr; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":536,"col":9,"offset":12334},"end":{"line":536,"col":14,"offset":12339},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":536,"col":9,"offset":12334},"end":{"line":536,"col":10,"offset":12335},"abstract_content":"j"},"$SIGNED":{"start":{"line":536,"col":13,"offset":12338},"end":{"line":536,"col":14,"offset":12339},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_7","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":542,"col":7,"offset":12591},"end":{"line":542,"col":52,"offset":12636},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6243ee1ed5cb13c71e610f7718bc7ac369cdb1c69c54ed9ec6abf6445843d32e1d02c53984f5daca9844c0bc62aadc230b1513360a169120bec2c42fd4a1f56e_0","lines":"\t\t\t\t\t\tfprintf(stderr, _(\"impossible: not meta?\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":560,"col":4,"offset":13082},"end":{"line":560,"col":19,"offset":13097},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":560,"col":4,"offset":13082},"end":{"line":560,"col":7,"offset":13085},"abstract_content":"bad"},"$SIGNED":{"start":{"line":560,"col":10,"offset":13088},"end":{"line":560,"col":15,"offset":13093},"abstract_content":"count","propagated_value":{"svalue_start":{"line":560,"col":18,"offset":13096},"svalue_end":{"line":560,"col":19,"offset":13097},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a05df45b1d220b712e415e57733d720407d821f3afcee13e44d5477289fecb21601271b5f4ec481b8ca4d3c28eac09bef1b54adb929eadc1f189c00282294d8d_0","lines":"\t\t\tbad = count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":560,"col":10,"offset":13088},"end":{"line":560,"col":19,"offset":13097},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":560,"col":10,"offset":13088},"end":{"line":560,"col":15,"offset":13093},"abstract_content":"count","propagated_value":{"svalue_start":{"line":560,"col":18,"offset":13096},"svalue_end":{"line":560,"col":19,"offset":13097},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":560,"col":18,"offset":13096},"end":{"line":560,"col":19,"offset":13097},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e02058924596dc45bd9b9dfb3b27425a59177b99e0a196a140747bc012bf807400133c40b944f2450f3931bff2290cade7d98c94fdeae13d7d39023c4a8d0a5f_0","lines":"\t\t\tbad = count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":562,"col":9,"offset":13108},"end":{"line":562,"col":14,"offset":13113},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":562,"col":9,"offset":13108},"end":{"line":562,"col":10,"offset":13109},"abstract_content":"j"},"$SIGNED":{"start":{"line":562,"col":13,"offset":13112},"end":{"line":562,"col":14,"offset":13113},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0c166f7f21e46ead7a78c8d729aefa49dffe16f452b62df4e76f27641adf16c15bb4ba6df08e32a4654585746acc88168d9b286883fd450fb7a5423155168ba8_0","lines":"\t\t\tfor (j = 1; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":579,"col":10,"offset":13413},"end":{"line":579,"col":15,"offset":13418},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":579,"col":10,"offset":13413},"end":{"line":579,"col":11,"offset":13414},"abstract_content":"j"},"$SIGNED":{"start":{"line":579,"col":14,"offset":13417},"end":{"line":579,"col":15,"offset":13418},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0c166f7f21e46ead7a78c8d729aefa49dffe16f452b62df4e76f27641adf16c15bb4ba6df08e32a4654585746acc88168d9b286883fd450fb7a5423155168ba8_1","lines":"\t\t\t\tfor (j = 1; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":585,"col":10,"offset":13568},"end":{"line":585,"col":15,"offset":13573},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":585,"col":10,"offset":13568},"end":{"line":585,"col":11,"offset":13569},"abstract_content":"j"},"$SIGNED":{"start":{"line":585,"col":14,"offset":13572},"end":{"line":585,"col":15,"offset":13573},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"14491f57839886398347735997cb21ca5f25a62468d49886f6085d6d0e643e5dd552101b5ce54e1395c26c69a1cf803cf4b93181623d759d6e873250085be82c_8","lines":"\t\t\t\tfor (j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":60,"col":20,"offset":1337},"end":{"line":60,"col":69,"offset":1386},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":60,"col":20,"offset":1337},"end":{"line":60,"col":28,"offset":1345},"abstract_content":"syn_size"},"$SIGNED":{"start":{"line":60,"col":67,"offset":1384},"end":{"line":60,"col":68,"offset":1385},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c311d61b80dc1b90067354106c0c6c8773c3cd796e65d2a649f5f7a03d177aabd013eb6dbedcfc08ddb1a1a7f5d74b81bea2d71907a059037120a76a3a7e10c3_0","lines":"const unsigned int syn_size  = sizeof(synonyms) / sizeof(synonyms[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":87,"col":27,"offset":2261},"end":{"line":87,"col":80,"offset":2314},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":87,"col":27,"offset":2261},"end":{"line":87,"col":40,"offset":2274},"abstract_content":"charsets_size"},"$SIGNED":{"start":{"line":87,"col":78,"offset":2312},"end":{"line":87,"col":79,"offset":2313},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"df53c60f76c5f308871fe67ab7efa478d024f04e64ff6d82ef03938ad596ae5cfac2c1384b264a181b564309e3a485eb6f0c9bb8bd97af0a5b3dbc6d1a43ee7d_0","lines":"static const unsigned int charsets_size = sizeof(charsets) / sizeof(charsets[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":97,"col":7,"offset":2481},"end":{"line":97,"col":12,"offset":2486},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":97,"col":7,"offset":2481},"end":{"line":97,"col":8,"offset":2482},"abstract_content":"j"},"$SIGNED":{"start":{"line":97,"col":11,"offset":2485},"end":{"line":97,"col":12,"offset":2486},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e0f053300f472ff6c9d754665833f8c079a3ccfe86d0ee5e0d7dce900d1a7667f28b2f4de420cb58007625aed2c2d414f44ef19f0b79659182db7b021b511672_0","lines":"\tfor (j = 0; j < sizeof(mm) / sizeof(mm[0]); j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":22,"offset":2616},"extra":{"metavars":{"$NARROW":{"start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":6,"offset":2600},"abstract_content":"lth"},"$LARGE":{"start":{"line":102,"col":19,"offset":2613},"end":{"line":102,"col":20,"offset":2614},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35405e7b12281653bc43d378c1f478e05148be93d9604de17daa6d2acfd9d81f75da817a816f5f96869a53fb88d7ee46439e9c5004c8e50861340ced88f32e66_0","lines":"\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":22,"offset":2616},"extra":{"metavars":{"$SIGNED":{"start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":6,"offset":2600},"abstract_content":"lth"},"$UNSIGNED":{"start":{"line":102,"col":19,"offset":2613},"end":{"line":102,"col":20,"offset":2614},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e0f6af176f14ce569c29240b0d1000973c53ee1466968803b1a74f16d8d2e09198725bb131bfb290b3e5c79218f205783c1b0b1073453dcf58949e38e3f3c999_0","lines":"\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":103,"col":8,"offset":2625},"end":{"line":103,"col":13,"offset":2630},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":103,"col":8,"offset":2625},"end":{"line":103,"col":9,"offset":2626},"abstract_content":"i"},"$SIGNED":{"start":{"line":103,"col":12,"offset":2629},"end":{"line":103,"col":13,"offset":2630},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"09821d79a1c43d41dae6f46faf2c9c7ec0f6fea2593abd85419e2f536e657804eae42b8f003d795124261d4fcf3cbbaa1fb228e4b88d110af71789129e7e407f_0","lines":"\t\tfor (i = 1; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":112,"col":7,"offset":2832},"end":{"line":112,"col":12,"offset":2837},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":112,"col":7,"offset":2832},"end":{"line":112,"col":8,"offset":2833},"abstract_content":"i"},"$SIGNED":{"start":{"line":112,"col":11,"offset":2836},"end":{"line":112,"col":12,"offset":2837},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_0","lines":"\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":113,"col":8,"offset":2872},"end":{"line":113,"col":13,"offset":2877},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":113,"col":8,"offset":2872},"end":{"line":113,"col":9,"offset":2873},"abstract_content":"j"},"$SIGNED":{"start":{"line":113,"col":12,"offset":2876},"end":{"line":113,"col":13,"offset":2877},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e0f053300f472ff6c9d754665833f8c079a3ccfe86d0ee5e0d7dce900d1a7667f28b2f4de420cb58007625aed2c2d414f44ef19f0b79659182db7b021b511672_1","lines":"\t\tfor (j = 0; j < sizeof(mm) / sizeof(mm[0]); j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":23,"offset":2940},"extra":{"metavars":{"$NARROW":{"start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":7,"offset":2924},"abstract_content":"lth"},"$LARGE":{"start":{"line":114,"col":20,"offset":2937},"end":{"line":114,"col":21,"offset":2938},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35405e7b12281653bc43d378c1f478e05148be93d9604de17daa6d2acfd9d81f75da817a816f5f96869a53fb88d7ee46439e9c5004c8e50861340ced88f32e66_1","lines":"\t\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":23,"offset":2940},"extra":{"metavars":{"$SIGNED":{"start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":7,"offset":2924},"abstract_content":"lth"},"$UNSIGNED":{"start":{"line":114,"col":20,"offset":2937},"end":{"line":114,"col":21,"offset":2938},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e0f6af176f14ce569c29240b0d1000973c53ee1466968803b1a74f16d8d2e09198725bb131bfb290b3e5c79218f205783c1b0b1073453dcf58949e38e3f3c999_1","lines":"\t\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":137,"col":7,"offset":3325},"end":{"line":137,"col":12,"offset":3330},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":137,"col":7,"offset":3325},"end":{"line":137,"col":8,"offset":3326},"abstract_content":"i"},"$SIGNED":{"start":{"line":137,"col":11,"offset":3329},"end":{"line":137,"col":12,"offset":3330},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_1","lines":"\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":147,"col":1,"offset":3477},"end":{"line":147,"col":13,"offset":3489},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":1,"offset":3477},"end":{"line":147,"col":13,"offset":3489},"abstract_content":"get_sym_size"},"$SIGNED":{"start":{"line":151,"col":10,"offset":3632},"end":{"line":151,"col":11,"offset":3633},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c9aa5ab3660a636d11f1b46d53d5506cf0c65da0b6ee735a8707ec1f43185965f1470c3c05cea0825f959fa88a0e340e564a14e0f73f53faa966dfe8fcf3da7f_0","lines":"get_sym_size(struct lk_ctx *ctx, unsigned int ktype)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":216,"col":8,"offset":4869},"end":{"line":216,"col":13,"offset":4874},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":216,"col":8,"offset":4869},"end":{"line":216,"col":9,"offset":4870},"abstract_content":"i"},"$SIGNED":{"start":{"line":216,"col":12,"offset":4873},"end":{"line":216,"col":13,"offset":4874},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_2","lines":"\t\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":31,"offset":4981},"extra":{"metavars":{"$NARROW":{"start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":11,"offset":4961},"abstract_content":"j"},"$LARGE":{"start":{"line":219,"col":23,"offset":4973},"end":{"line":219,"col":24,"offset":4974},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"003151f2624df6e47b91531b96bbba40779ffee443458a23c738a283f40667baf8e9c461496b85c070106b83ed4373cf97fe7cd4ddee36f4b0b187e8a6e3161b_0","lines":"\t\t\t\tfor (j = charsets[i].start; j < 256; j++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":31,"offset":4981},"extra":{"metavars":{"$SIGNED":{"start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":11,"offset":4961},"abstract_content":"j"},"$UNSIGNED":{"start":{"line":219,"col":23,"offset":4973},"end":{"line":219,"col":24,"offset":4974},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7ad4a011c9db320bcced4b54d88067d8e6973206444861e81d913d91674b969db35f8ffbd7ada8b25f29859ec934153bae057a388c7bed9d353b29c2ba7760f5_0","lines":"\t\t\t\tfor (j = charsets[i].start; j < 256; j++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":251,"col":2,"offset":5427},"end":{"line":251,"col":44,"offset":5469},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":251,"col":2,"offset":5427},"end":{"line":251,"col":5,"offset":5430},"abstract_content":"max"},"$SIGNED":{"start":{"line":251,"col":9,"offset":5434},"end":{"line":251,"col":18,"offset":5443},"abstract_content":"direction"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1f1511ffb792662b30fcea370cad6701ef72a2908265f851d31bd0d40dd3732d704699bfca114328a235bbbefa519f6e1610fa92d6a0e7eea002a4a51c120f93_0","lines":"\tmax = (direction == TO_UNICODE ? 128 : 256); // TODO(dmage): is 256 valid for ethiopic charset?","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":258,"col":2,"offset":5657},"end":{"line":258,"col":60,"offset":5715},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":258,"col":2,"offset":5657},"end":{"line":258,"col":5,"offset":5660},"abstract_content":"max"},"$SIGNED":{"start":{"line":258,"col":9,"offset":5664},"end":{"line":258,"col":18,"offset":5673},"abstract_content":"direction"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1f1511ffb792662b30fcea370cad6701ef72a2908265f851d31bd0d40dd3732d704699bfca114328a235bbbefa519f6e1610fa92d6a0e7eea002a4a51c120f93_1","lines":"\tmax = (direction == TO_UNICODE ? 128 : syms[KT_LATIN].size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":260,"col":7,"offset":5725},"end":{"line":260,"col":12,"offset":5730},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":260,"col":7,"offset":5725},"end":{"line":260,"col":8,"offset":5726},"abstract_content":"i"},"$SIGNED":{"start":{"line":260,"col":11,"offset":5729},"end":{"line":260,"col":12,"offset":5730},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_3","lines":"\tfor (i = 0; i < max; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":296,"col":7,"offset":6462},"end":{"line":296,"col":12,"offset":6467},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":296,"col":7,"offset":6462},"end":{"line":296,"col":8,"offset":6463},"abstract_content":"i"},"$SIGNED":{"start":{"line":296,"col":11,"offset":6466},"end":{"line":296,"col":12,"offset":6467},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"09821d79a1c43d41dae6f46faf2c9c7ec0f6fea2593abd85419e2f536e657804eae42b8f003d795124261d4fcf3cbbaa1fb228e4b88d110af71789129e7e407f_1","lines":"\tfor (i = 1; i < syms_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":297,"col":8,"offset":6498},"end":{"line":297,"col":13,"offset":6503},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":297,"col":8,"offset":6498},"end":{"line":297,"col":9,"offset":6499},"abstract_content":"j"},"$SIGNED":{"start":{"line":297,"col":12,"offset":6502},"end":{"line":297,"col":13,"offset":6503},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e0f053300f472ff6c9d754665833f8c079a3ccfe86d0ee5e0d7dce900d1a7667f28b2f4de420cb58007625aed2c2d414f44ef19f0b79659182db7b021b511672_2","lines":"\t\tfor (j = 0; j < syms[i].size; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":303,"col":7,"offset":6603},"end":{"line":303,"col":12,"offset":6608},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":303,"col":7,"offset":6603},"end":{"line":303,"col":8,"offset":6604},"abstract_content":"i"},"$SIGNED":{"start":{"line":303,"col":11,"offset":6607},"end":{"line":303,"col":12,"offset":6608},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_4","lines":"\tfor (i = 0; i < syn_size; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":318,"col":8,"offset":7042},"end":{"line":318,"col":13,"offset":7047},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":318,"col":8,"offset":7042},"end":{"line":318,"col":9,"offset":7043},"abstract_content":"i"},"$SIGNED":{"start":{"line":318,"col":12,"offset":7046},"end":{"line":318,"col":13,"offset":7047},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_5","lines":"\t\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":337,"col":8,"offset":7597},"end":{"line":337,"col":13,"offset":7602},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":337,"col":8,"offset":7597},"end":{"line":337,"col":9,"offset":7598},"abstract_content":"i"},"$SIGNED":{"start":{"line":337,"col":12,"offset":7601},"end":{"line":337,"col":13,"offset":7602},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_6","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":343,"col":8,"offset":7759},"end":{"line":343,"col":13,"offset":7764},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":343,"col":8,"offset":7759},"end":{"line":343,"col":9,"offset":7760},"abstract_content":"i"},"$SIGNED":{"start":{"line":343,"col":12,"offset":7763},"end":{"line":343,"col":13,"offset":7764},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_7","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":349,"col":8,"offset":7926},"end":{"line":349,"col":13,"offset":7931},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":349,"col":8,"offset":7926},"end":{"line":349,"col":9,"offset":7927},"abstract_content":"i"},"$SIGNED":{"start":{"line":349,"col":12,"offset":7930},"end":{"line":349,"col":13,"offset":7931},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_8","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":355,"col":8,"offset":8088},"end":{"line":355,"col":13,"offset":8093},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":355,"col":8,"offset":8088},"end":{"line":355,"col":9,"offset":8089},"abstract_content":"i"},"$SIGNED":{"start":{"line":355,"col":12,"offset":8092},"end":{"line":355,"col":13,"offset":8093},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_9","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":361,"col":8,"offset":8250},"end":{"line":361,"col":13,"offset":8255},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":361,"col":8,"offset":8250},"end":{"line":361,"col":9,"offset":8251},"abstract_content":"i"},"$SIGNED":{"start":{"line":361,"col":12,"offset":8254},"end":{"line":361,"col":13,"offset":8255},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"25f31899ac5584e88af172b20c475b077923c1ba8d0f6d3f5a4c4283c4c12af1f63e8bd21d3a33a17603a98193e2be300470161a70d7c994ff2a33099bdc29fb_10","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":381,"col":2,"offset":8672},"end":{"line":381,"col":51,"offset":8721},"extra":{"metavars":{"$EXPR1":{"start":{"line":381,"col":26,"offset":8696},"end":{"line":381,"col":35,"offset":8705},"abstract_content":"direction"},"$EXPR2":{"start":{"line":381,"col":39,"offset":8709},"end":{"line":381,"col":49,"offset":8719},"abstract_content":"TO_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7e9d70d4295e0612648f9782134c8a0745abbe0711e5ec24b59d153860b911be2bb542187418a0407d605cddda2e2f839cd7d1008a8dabfb2e8139ab4d34c1f6_0","lines":"\tint unicode_forced   = (direction == TO_UNICODE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","start":{"line":426,"col":2,"offset":10020},"end":{"line":433,"col":43,"offset":10360},"extra":{"metavars":{"$EXPR1":{"start":{"line":426,"col":35,"offset":10053},"end":{"line":426,"col":45,"offset":10063},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":426,"col":48,"offset":10066},"end":{"line":426,"col":70,"offset":10088},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c18cfa9125ad7ad833e615d7413d55fa82a7c7508ea22a8aa0fb2989fc4e6b36b957f7ec018e6dd04a299603465229c5c5ffb0666834901b594d068925551e3b_0","lines":"\tif (KTYP(code) == KT_LATIN && (!(ctx->flags & LK_FLAG_PREFER_UNICODE) || code < 0x80))\n\t\treturn K(KT_LETTER, KVAL(code));\n\telse if ((code ^ 0xf000) < 0x100)\n\t\t/* Unicode Latin-1 Supplement */\n\t\t/* a bit dirty to use KT_LETTER here, but it should work */\n\t\treturn K(KT_LETTER, code ^ 0xf000);\n\telse\n\t\treturn convert_code(ctx, code, TO_AUTO);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":49,"col":2,"offset":835},"end":{"line":65,"col":18,"offset":1731},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"99abba8a2657806daa6ea7bac88fafddf490c29cd33f18a57aea9268f1c38072c841690df9b4869f6b4b8cf86d7223c4246fd9ec923dce4eebdab642bce78f77_0","lines":"\tprintf(_(\"Usage: %s [OPTIONS] -- command\\n\"\n\t         \"\\n\"\n\t         \"This utility help you to start a program on a new virtual terminal (VT).\\n\"\n\t         \"\\n\"\n\t         \"Options:\\n\"\n\t         \"  -c, --console=NUM   use the given VT number;\\n\"\n\t         \"  -e, --exec          execute the command, without forking;\\n\"\n\t         \"  -f, --force         force opening a VT without checking;\\n\"\n\t         \"  -l, --login         make the command a login shell;\\n\"\n\t         \"  -u, --user          figure out the owner of the current VT;\\n\"\n\t         \"  -s, --switch        switch to the new VT;\\n\"\n\t         \"  -w, --wait          wait for command to complete;\\n\"\n\t         \"  -v, --verbose       print a message for each action;\\n\"\n\t         \"  -V, --version       print program version and exit;\\n\"\n\t         \"  -h, --help          output a brief help message.\\n\"\n\t         \"\\n\"),\n\t       progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":106,"col":2,"offset":2933},"end":{"line":107,"col":52,"offset":3014},"extra":{"metavars":{"$EXPR1":{"start":{"line":106,"col":8,"offset":2939},"end":{"line":106,"col":10,"offset":2941},"abstract_content":"dp","propagated_value":{"svalue_start":{"line":106,"col":13,"offset":2944},"svalue_end":{"line":106,"col":29,"offset":2960},"svalue_abstract_content":"opendir(\"/proc\")"}},"$EXPR2":{"start":{"line":106,"col":13,"offset":2944},"end":{"line":106,"col":29,"offset":2960},"abstract_content":"opendir(\"/proc\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a95f18735c9b26aacac50db44bd51349e677d9b8ef91e97215ae1a212e4e70bd9f8bd3629577a18d2894a9c349da1e0d9991e9fc4c5b88694140e25663664d53_0","lines":"\tif (!(dp = opendir(\"/proc\")))\n\t\tkbd_error(EXIT_FAILURE, errno, \"opendir(/proc)\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"99abba8a2657806daa6ea7bac88fafddf490c29cd33f18a57aea9268f1c38072c841690df9b4869f6b4b8cf86d7223c4246fd9ec923dce4eebdab642bce78f77_1","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$BUF":{"start":{"line":111,"col":10,"offset":3089},"end":{"line":111,"col":18,"offset":3097},"abstract_content":"filename"},"$FMT":{"start":{"line":111,"col":20,"offset":3099},"end":{"line":111,"col":26,"offset":3105},"abstract_content":"VTNAME"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1ec7d2900be1e62e81366573373bd68ed801f70b16d496f7ace5837798a7e7de8fc1f6c667f1a80a4062e18c691474d1f9349cc143beb908add45de9b53ef9a6_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$FUN":{"start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":9,"offset":3088},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5789744c7ee95139a6d827d8de93bacdae1d113db661fc5cf68327bd1f5aa33ce2e1435d6fcbb65016bf1e9d1fb58d8ff3dfb677b4f7f56a22755eb2926b5a50_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":9,"offset":3088},"abstract_content":"sprintf"},"$BUF":{"start":{"line":111,"col":10,"offset":3089},"end":{"line":111,"col":18,"offset":3097},"abstract_content":"filename"},"$FMT":{"start":{"line":111,"col":20,"offset":3099},"end":{"line":111,"col":26,"offset":3105},"abstract_content":"VTNAME"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"dddf167a17603133e0dcc9b6846f85edbb3619f4222f00e8c402cc21edf839e25254ee7934300691c2810ec7d9ee881a1269dfab80ae8e2381fc295bc478d297_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":26,"offset":3140},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1dc463477d611dd3918a4c2c84d43faf29bf8801b0de0bf10d85c71fa899633eda8572dccd2f511eb181a27d9401ac96d1330a5585e732269502a85f60cde236_0","lines":"\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":26,"offset":3140},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":10,"offset":3124},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5b8e6abaa790ada0b220520c3522783039d258ffeecaa9cd3183923f5353a90bda2c5f97e69b8285e16c8f421e7add178af6abf392c05a74b2ed51b7f225744a_0","lines":"\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"99abba8a2657806daa6ea7bac88fafddf490c29cd33f18a57aea9268f1c38072c841690df9b4869f6b4b8cf86d7223c4246fd9ec923dce4eebdab642bce78f77_2","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"VTNAME2"},"$BUF":{"start":{"line":114,"col":11,"offset":3175},"end":{"line":114,"col":19,"offset":3183},"abstract_content":"filename"},"$FMT":{"start":{"line":114,"col":21,"offset":3185},"end":{"line":114,"col":28,"offset":3192},"abstract_content":"VTNAME2"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"06098270107db1c1da08869297a8427caffcbd7b35a8932491aecf632a1ebff880d80fd92a1bb0c77964860c919030e23955391aa44089996aba03ab03d75c21_0","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":10,"offset":3174},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5789744c7ee95139a6d827d8de93bacdae1d113db661fc5cf68327bd1f5aa33ce2e1435d6fcbb65016bf1e9d1fb58d8ff3dfb677b4f7f56a22755eb2926b5a50_1","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"VTNAME2"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":10,"offset":3174},"abstract_content":"sprintf"},"$BUF":{"start":{"line":114,"col":11,"offset":3175},"end":{"line":114,"col":19,"offset":3183},"abstract_content":"filename"},"$FMT":{"start":{"line":114,"col":21,"offset":3185},"end":{"line":114,"col":28,"offset":3192},"abstract_content":"VTNAME2"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d8b1ab46d8e18b632f1ec7c4341d6d633ca39edc5e148c563a7608d62d90a04f062d340ad33a7eb58902b5562fe682b40547774cb4a2c51909d4dec1ea8b85d3_0","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":27,"offset":3228},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1dc463477d611dd3918a4c2c84d43faf29bf8801b0de0bf10d85c71fa899633eda8572dccd2f511eb181a27d9401ac96d1330a5585e732269502a85f60cde236_1","lines":"\t\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":27,"offset":3228},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":11,"offset":3212},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5b8e6abaa790ada0b220520c3522783039d258ffeecaa9cd3183923f5353a90bda2c5f97e69b8285e16c8f421e7add178af6abf392c05a74b2ed51b7f225744a_1","lines":"\t\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"99abba8a2657806daa6ea7bac88fafddf490c29cd33f18a57aea9268f1c38072c841690df9b4869f6b4b8cf86d7223c4246fd9ec923dce4eebdab642bce78f77_3","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$BUF":{"start":{"line":117,"col":12,"offset":3289},"end":{"line":117,"col":20,"offset":3297},"abstract_content":"filename"},"$FMT":{"start":{"line":117,"col":22,"offset":3299},"end":{"line":117,"col":28,"offset":3305},"abstract_content":"VTNAME"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1ec7d2900be1e62e81366573373bd68ed801f70b16d496f7ace5837798a7e7de8fc1f6c667f1a80a4062e18c691474d1f9349cc143beb908add45de9b53ef9a6_1","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":11,"offset":3288},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5789744c7ee95139a6d827d8de93bacdae1d113db661fc5cf68327bd1f5aa33ce2e1435d6fcbb65016bf1e9d1fb58d8ff3dfb677b4f7f56a22755eb2926b5a50_2","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":11,"offset":3288},"abstract_content":"sprintf"},"$BUF":{"start":{"line":117,"col":12,"offset":3289},"end":{"line":117,"col":20,"offset":3297},"abstract_content":"filename"},"$FMT":{"start":{"line":117,"col":22,"offset":3299},"end":{"line":117,"col":28,"offset":3305},"abstract_content":"VTNAME"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"dddf167a17603133e0dcc9b6846f85edbb3619f4222f00e8c402cc21edf839e25254ee7934300691c2810ec7d9ee881a1269dfab80ae8e2381fc295bc478d297_1","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":126,"col":2,"offset":3492},"end":{"line":127,"col":46,"offset":3575},"extra":{"metavars":{"$EXPR1":{"start":{"line":126,"col":8,"offset":3498},"end":{"line":126,"col":13,"offset":3503},"abstract_content":"pwnam","propagated_value":{"svalue_start":{"line":126,"col":16,"offset":3506},"svalue_end":{"line":126,"col":37,"offset":3527},"svalue_abstract_content":"getpwuid(console_uid)"}},"$EXPR2":{"start":{"line":126,"col":16,"offset":3506},"end":{"line":126,"col":37,"offset":3527},"abstract_content":"getpwuid(console_uid)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f60a72f7428f52cafc138888e5ec775e5c9dfe4dc2e0f5baf96ad901559896b8b83f7f3a1a3a816dd025415d7805ac000c37ee360c6cf6d87dfc102ba746a320_0","lines":"\tif (!(pwnam = getpwuid(console_uid)))\n\t\tkbd_error(EXIT_FAILURE, errno, \"getpwuid\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"/proc/%s/fd/0\""},"$BUF":{"start":{"line":132,"col":11,"offset":3745},"end":{"line":132,"col":19,"offset":3753},"abstract_content":"filename"},"$FMT":{"start":{"line":132,"col":21,"offset":3755},"end":{"line":132,"col":36,"offset":3770},"abstract_content":"\"/proc/%s/fd/0\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"db42b655f5c6a38f9d34c97c4d1b402bf75b473fe9bf1b8dba6036ea03c3004246ddbad277f583cba3d16a919b5dbb1c7a4898f148d8def4e6c428d00649097f_0","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":10,"offset":3744},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5789744c7ee95139a6d827d8de93bacdae1d113db661fc5cf68327bd1f5aa33ce2e1435d6fcbb65016bf1e9d1fb58d8ff3dfb677b4f7f56a22755eb2926b5a50_3","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"/proc/%s/fd/0\""},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":10,"offset":3744},"abstract_content":"sprintf"},"$BUF":{"start":{"line":132,"col":11,"offset":3745},"end":{"line":132,"col":19,"offset":3753},"abstract_content":"filename"},"$FMT":{"start":{"line":132,"col":21,"offset":3755},"end":{"line":132,"col":36,"offset":3770},"abstract_content":"\"/proc/%s/fd/0\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"feac06a8b4889851b371132fed6114141b808f155d994da9d6f0e3ec75fe749a4f262b2e3291211e5bfcba869c8613dc24655e12d1201924b2b72e5e997521ed_0","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":27,"offset":3815},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1dc463477d611dd3918a4c2c84d43faf29bf8801b0de0bf10d85c71fa899633eda8572dccd2f511eb181a27d9401ac96d1330a5585e732269502a85f60cde236_2","lines":"\t\tif (stat(filename, &buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":27,"offset":3815},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":11,"offset":3799},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5b8e6abaa790ada0b220520c3522783039d258ffeecaa9cd3183923f5353a90bda2c5f97e69b8285e16c8f421e7add178af6abf392c05a74b2ed51b7f225744a_2","lines":"\t\tif (stat(filename, &buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":154,"col":12,"offset":4146},"end":{"line":154,"col":32,"offset":4166},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":12,"offset":4146},"end":{"line":154,"col":16,"offset":4150},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"961abe348005d96b0eb91929afc102a886afc3969dd1aea52d0b6f13ca09e62e027822ec941983d90df012a29dfceed43c297faba3769c5c5d019c4d7f8a1468_0","lines":"\tif ((fd = open(vtname, O_RDWR)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":24,"col":2,"offset":501},"end":{"line":24,"col":67,"offset":566},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_0","lines":"\tfprintf(stderr, _(\"usage: kbd_mode [-a|-u|-k|-s] [-C device]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":33,"col":15,"offset":690},"end":{"line":33,"col":19,"offset":694},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b7e02856090045f1bb9a132c50069ebe24bd50eeb1d468200903528e75c4e0d9b6853087c6ca7a076c4c10670a50bab4ae4406594ef0b50222e280a36d8a1367_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":35,"col":2,"offset":702},"end":{"line":35,"col":23,"offset":723},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":2,"offset":702},"end":{"line":35,"col":11,"offset":711},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5ac0b53f2e812d0d9b8f178ec1a726a8a9cd882cefc66e2a2b5c123082bf0ee76d036cecf2f057901c45269bea6520b5d183fa3d1649ef73ef546db49df100be_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":39,"col":27,"offset":821},"end":{"line":39,"col":31,"offset":825},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b7e02856090045f1bb9a132c50069ebe24bd50eeb1d468200903528e75c4e0d9b6853087c6ca7a076c4c10670a50bab4ae4406594ef0b50222e280a36d8a1367_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":42,"col":14,"offset":879},"end":{"line":42,"col":42,"offset":907},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":42,"col":14,"offset":879},"end":{"line":42,"col":20,"offset":885},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3face361e7e87c595e6908223a841e314fb045755d7afd9de86aeef7d3384233c9a57bd1b3a9cd1ffd3ff85adaba051331e18b21ce5492fd4fac351af26e92cf_0","lines":"\twhile ((c = getopt(argc, argv, \"auskC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":42,"col":27,"offset":892},"end":{"line":42,"col":31,"offset":896},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b7e02856090045f1bb9a132c50069ebe24bd50eeb1d468200903528e75c4e0d9b6853087c6ca7a076c4c10670a50bab4ae4406594ef0b50222e280a36d8a1367_2","lines":"\twhile ((c = getopt(argc, argv, \"auskC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":88,"col":5,"offset":1682},"end":{"line":88,"col":58,"offset":1735},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_1","lines":"\t\t\t\tprintf(_(\"The keyboard is in raw (scancode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":91,"col":5,"offset":1773},"end":{"line":91,"col":63,"offset":1831},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_2","lines":"\t\t\t\tprintf(_(\"The keyboard is in mediumraw (keycode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":94,"col":5,"offset":1865},"end":{"line":94,"col":57,"offset":1917},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_3","lines":"\t\t\t\tprintf(_(\"The keyboard is in xlate (8-bit) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":97,"col":5,"offset":1953},"end":{"line":97,"col":59,"offset":2007},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_4","lines":"\t\t\t\tprintf(_(\"The keyboard is in Unicode (UTF-8) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","start":{"line":100,"col":5,"offset":2036},"end":{"line":100,"col":56,"offset":2087},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"590e3717be8e0a1c5e29b16dfca52d11cb19f5b40ab8f6da02e7324dba44130cfffcdb5ebd9443f6ecc85e4cb8e99a2ccc34af2c91009f918fffe93688f95255_5","lines":"\t\t\t\tprintf(_(\"The keyboard is in some unknown mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":24,"col":2,"offset":501},"end":{"line":24,"col":72,"offset":571},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_0","lines":"\tfprintf(stderr, _(\"usage: kbd_mode [-a|-u|-k|-s] [-f] [-C device]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":33,"col":4,"offset":682},"end":{"line":33,"col":66,"offset":744},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_1","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in raw (scancode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":36,"col":4,"offset":779},"end":{"line":36,"col":71,"offset":846},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_2","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in mediumraw (keycode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":39,"col":4,"offset":877},"end":{"line":39,"col":65,"offset":938},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_3","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in xlate (8-bit) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":42,"col":4,"offset":971},"end":{"line":42,"col":67,"offset":1034},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_4","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in Unicode (UTF-8) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":45,"col":4,"offset":1060},"end":{"line":45,"col":64,"offset":1120},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_5","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in some unknown mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":54,"col":15,"offset":1255},"end":{"line":54,"col":19,"offset":1259},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"47338c68db396720b99f24e4f5ebd23fccd86312a52ee2d2b174f975591a7aa2b2a0d95e66ea338cc27f14834f05612d60369acd76b5d866f3bb4b2c1723b085_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":56,"col":2,"offset":1267},"end":{"line":56,"col":23,"offset":1288},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":2,"offset":1267},"end":{"line":56,"col":11,"offset":1276},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0daf99e2fd25430a2e8fba430ff251eb10ef16d45b5c08454f07bac1f48e5ce3960eec669ad9a93db56da53219b5596a3bad174ace45a09f95fdb4ff0cd8e910_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":60,"col":27,"offset":1386},"end":{"line":60,"col":31,"offset":1390},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"47338c68db396720b99f24e4f5ebd23fccd86312a52ee2d2b174f975591a7aa2b2a0d95e66ea338cc27f14834f05612d60369acd76b5d866f3bb4b2c1723b085_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":63,"col":14,"offset":1444},"end":{"line":63,"col":43,"offset":1473},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":63,"col":14,"offset":1444},"end":{"line":63,"col":20,"offset":1450},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cd92ca27897b3419fa536af30b5cf93d8e0d209ea0dd58602088e584743f19f78e27e60e9f35fdf8b77de522237c8c56886bbe3c17ef57e7426fe89147e94b24_0","lines":"\twhile ((c = getopt(argc, argv, \"auskfC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":63,"col":27,"offset":1457},"end":{"line":63,"col":31,"offset":1461},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"47338c68db396720b99f24e4f5ebd23fccd86312a52ee2d2b174f975591a7aa2b2a0d95e66ea338cc27f14834f05612d60369acd76b5d866f3bb4b2c1723b085_2","lines":"\twhile ((c = getopt(argc, argv, \"auskfC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","start":{"line":127,"col":4,"offset":2686},"end":{"line":128,"col":69,"offset":2815},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5818b748019840c3400fdd1f089ee152a04c35f205e7a7faa0017847eade5d9c4577c5ab04690364b1065e522b9f2b26d23da9bef27211f8a658433ce66e16fe_6","lines":"\t\t\tfprintf(stderr, _(\"Changing to the requested mode may make \"\n\t\t\t\t\"your keyboard unusable, please use -f to force the change.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":36,"col":2,"offset":894},"end":{"line":56,"col":44,"offset":2114},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_0","lines":"\tfprintf(stderr, _(\"loadkeys version %s\\n\"\n\t                  \"\\n\"\n\t                  \"Usage: %s [option...] [mapfile...]\\n\"\n\t                  \"\\n\"\n\t                  \"Valid options are:\\n\"\n\t                  \"\\n\"\n\t                  \"  -a --ascii         force conversion to ASCII\\n\"\n\t                  \"  -b --bkeymap       output a binary keymap to stdout\\n\"\n\t                  \"  -c --clearcompose  clear kernel compose table\\n\"\n\t                  \"  -C --console=file\\n\"\n\t                  \"                     the console device to be used\\n\"\n\t                  \"  -d --default       load \\\"%s\\\"\\n\"\n\t                  \"  -h --help          display this help text\\n\"\n\t                  \"  -m --mktable       output a \\\"defkeymap.c\\\" to stdout\\n\"\n\t                  \"  -p --parse         search and parse keymap without action\\n\"\n\t                  \"  -q --quiet         suppress all normal output\\n\"\n\t                  \"  -s --clearstrings  clear kernel string table\\n\"\n\t                  \"  -u --unicode       force conversion to Unicode\\n\"\n\t                  \"  -v --verbose       report the changes\\n\"\n\t                  \"  -V --version       print version number\\n\"),\n\t        PACKAGE_VERSION, progname, DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":112,"col":2,"offset":3359},"end":{"line":112,"col":23,"offset":3380},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":2,"offset":3359},"end":{"line":112,"col":11,"offset":3368},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3bd768dce48fed91af6995872121cfc840a346c7fdb6068b7680c7f301d73d51dced66f655441986bfaad8b655b8859affe328a75db39207bb43d141d53b70e1_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":116,"col":26,"offset":3477},"end":{"line":116,"col":30,"offset":3481},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_0","lines":"\tprogname = set_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":123,"col":14,"offset":3558},"end":{"line":123,"col":66,"offset":3610},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":12,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":123,"col":14,"offset":3558},"end":{"line":123,"col":25,"offset":3569},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b78cf2ce4a6e0be92dd0abd3a3fb57e327146361a257959cdeecfb8c6063a4190abc3aff641b071d47abd71d80c71b9543c79e915a19a0ddefc0181618bcfa03_0","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":123,"col":32,"offset":3576},"end":{"line":123,"col":36,"offset":3580},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_1","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":124,"col":11,"offset":3631},"end":{"line":124,"col":12,"offset":3632},"extra":{"metavars":{"$VAR":{"start":{"line":124,"col":11,"offset":3631},"end":{"line":124,"col":12,"offset":3632},"abstract_content":"c","propagated_value":{"svalue_start":{"line":123,"col":14,"offset":3558},"svalue_end":{"line":123,"col":66,"offset":3610},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0e5d920df41d29d709d1599d318e84e986d9ec23eb99dc0d7b71858c06ad252d56168e65f5b883b9a6665a6e3bda3e5506e2b8d5005868a756b8abac49ba9de_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":161,"col":5,"offset":4294},"end":{"line":161,"col":65,"offset":4354},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_1","lines":"\t\t\t\tfprintf(stdout, _(\"%s from %s\\n\"), progname, PACKAGE_STRING);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":169,"col":2,"offset":4417},"end":{"line":174,"col":3,"offset":4601},"extra":{"metavars":{"$EXPR1":{"start":{"line":169,"col":7,"offset":4422},"end":{"line":169,"col":14,"offset":4429},"abstract_content":"options"},"$EXPR2":{"start":{"line":169,"col":17,"offset":4432},"end":{"line":169,"col":22,"offset":4437},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a22b97085d31396591de33a23ebe69160c2cedd8418cb381d2d9205b9b3308d292c6c8c25beb56614a4f052ada42446ca88930ad4b09bc671a6280900bc92d51_0","lines":"\tif ((options & OPT_U) && (options & OPT_A)) {\n\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);\n\t\texit(EXIT_FAILURE);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":170,"col":3,"offset":4465},"end":{"line":172,"col":20,"offset":4575},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_2","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":176,"col":2,"offset":4604},"end":{"line":208,"col":3,"offset":5709},"extra":{"metavars":{"$EXPR1":{"start":{"line":176,"col":8,"offset":4610},"end":{"line":176,"col":15,"offset":4617},"abstract_content":"options"},"$EXPR2":{"start":{"line":176,"col":18,"offset":4620},"end":{"line":176,"col":23,"offset":4625},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3dbb02fa9618751067b2a9470ed5312bb81e47d29e953c955b6cf1222d0ed4e4c81f85e2e768d025eb4ae7224e470169ab66e1fef4c2de03d8fffbe8f78f1e8_0","lines":"\tif (!(options & OPT_M) && !(options & OPT_B)) {\n\t\t/* get console */\n\t\tif ((fd = console ? getfd(console) : getfd_keymap()) < 0)\n\t\t\tkbd_error(EXIT_FAILURE, 0, _(\"Couldn't get a file descriptor referring to the console\"));\n\n\t\t/* check whether the keyboard is in Unicode mode */\n\t\tif (ioctl(fd, KDGKBMODE, &kbd_mode) ||\n\t\t    ioctl(fd, KDGETMODE, &kd_mode)) {\n\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif (kbd_mode == K_UNICODE) {\n\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}\n\n\t\t\t/* reset -u option if keyboard is in K_UNICODE anyway */\n\t\t\tflags ^= LK_FLAG_UNICODE_MODE;\n\n\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":184,"col":4,"offset":4964},"end":{"line":185,"col":21,"offset":5044},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_3","lines":"\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":190,"col":4,"offset":5108},"end":{"line":197,"col":5,"offset":5368},"extra":{"metavars":{"$EXPR1":{"start":{"line":190,"col":8,"offset":5112},"end":{"line":190,"col":15,"offset":5119},"abstract_content":"options"},"$EXPR2":{"start":{"line":190,"col":18,"offset":5122},"end":{"line":190,"col":23,"offset":5127},"abstract_content":"OPT_A"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e1a263ae354a516a4414512f6e88ce20df7c588fa0fe5b1b082070f3557c951ce0978d6ea940a38b7631525b58cb8356f97177107a6fc1b898e80f72d84df0d8_0","lines":"\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":191,"col":5,"offset":5135},"end":{"line":194,"col":22,"offset":5313},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_4","lines":"\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":202,"col":10,"offset":5474},"end":{"line":207,"col":4,"offset":5706},"extra":{"metavars":{"$EXPR1":{"start":{"line":202,"col":14,"offset":5478},"end":{"line":202,"col":21,"offset":5485},"abstract_content":"options"},"$EXPR2":{"start":{"line":202,"col":24,"offset":5488},"end":{"line":202,"col":29,"offset":5493},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a22b97085d31396591de33a23ebe69160c2cedd8418cb381d2d9205b9b3308d292c6c8c25beb56614a4f052ada42446ca88930ad4b09bc671a6280900bc92d51_1","lines":"\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":203,"col":4,"offset":5526},"end":{"line":206,"col":21,"offset":5701},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_5","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":213,"col":12,"offset":5778},"end":{"line":213,"col":42,"offset":5808},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":213,"col":12,"offset":5778},"end":{"line":213,"col":18,"offset":5784},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f474bfac5ffa699f264b94d8c20d73e0b5e5c1714b368b0c258053a90ce58fa91a9f457786b789c0a12ed3d66eddad5cdb556a4a9c7c4fd00e4e52991856e757_0","lines":"\tif ((ev = getenv(\"LOADKEYS_KEYMAP_PATH\")) != NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":218,"col":2,"offset":5872},"end":{"line":235,"col":3,"offset":6280},"extra":{"metavars":{"$EXPR1":{"start":{"line":218,"col":6,"offset":5876},"end":{"line":218,"col":13,"offset":5883},"abstract_content":"options"},"$EXPR2":{"start":{"line":218,"col":16,"offset":5886},"end":{"line":218,"col":21,"offset":5891},"abstract_content":"OPT_D"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65a2da438e8247001e81e7c198dfdcc80e7109f6cfe863445f281c1d7be0ec587ed0fcc2ca8cc445723f53fdeaa2ae9de9b069ea0bcc593fb64d59083eb3405e_0","lines":"\tif (options & OPT_D) {\n\t\t/* first read default map - search starts in . */\n\n\t\tif (lk_findfile(DEFMAP, dirpath, suffixes, &f)) {\n\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\n\t} else if (optind == argc) {\n\t\tf.fd = stdin;\n\t\tstrcpy(f.pathname, \"<stdin>\");\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":222,"col":4,"offset":6003},"end":{"line":222,"col":50,"offset":6049},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_6","lines":"\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":231,"col":3,"offset":6187},"end":{"line":231,"col":32,"offset":6216},"extra":{"metavars":{"$FUN":{"start":{"line":231,"col":3,"offset":6187},"end":{"line":231,"col":9,"offset":6193},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9684994a0c3cfc05b97c27981d2246f46256949c5ef95d598e8fd231d6c98ec96411757ea41420b2c13c24d6befb7c14f35c3d0cacee1c831817fcb1915e611_0","lines":"\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":237,"col":19,"offset":6300},"end":{"line":237,"col":23,"offset":6304},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_2","lines":"\tfor (i = optind; argv[i]; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":238,"col":15,"offset":6330},"end":{"line":238,"col":19,"offset":6334},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_3","lines":"\t\tif (!strcmp(argv[i], \"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":240,"col":4,"offset":6367},"end":{"line":240,"col":33,"offset":6396},"extra":{"metavars":{"$FUN":{"start":{"line":240,"col":4,"offset":6367},"end":{"line":240,"col":10,"offset":6373},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9684994a0c3cfc05b97c27981d2246f46256949c5ef95d598e8fd231d6c98ec96411757ea41420b2c13c24d6befb7c14f35c3d0cacee1c831817fcb1915e611_1","lines":"\t\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":242,"col":26,"offset":6424},"end":{"line":242,"col":30,"offset":6428},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_4","lines":"\t\t} else if (lk_findfile(argv[i], dirpath, suffixes, &f)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":243,"col":4,"offset":6462},"end":{"line":243,"col":56,"offset":6514},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81f5e2822a62622979da7b5b39f7d9dba27cdb9d1492e4d7453e15d8b1d079fe6ab2ea6549f52fc4b5f49aa35b618ee41c6d1f9f15dfa0bfc594f8639d75a28f_7","lines":"\t\t\tfprintf(stderr, _(\"cannot open file %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":243,"col":48,"offset":6506},"end":{"line":243,"col":52,"offset":6510},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"59b2e8ce9e03fcea539a3233c8263b4b6b047bee8de74a78663996b0986b15994cc3f8be45b65aec8eb310fdcbbbadd54f1ae9241beb288010e9380403abc18a_5","lines":"\t\t\tfprintf(stderr, _(\"cannot open file %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":251,"col":2,"offset":6599},"end":{"line":259,"col":3,"offset":6817},"extra":{"metavars":{"$EXPR1":{"start":{"line":251,"col":8,"offset":6605},"end":{"line":251,"col":15,"offset":6612},"abstract_content":"options"},"$EXPR2":{"start":{"line":251,"col":18,"offset":6615},"end":{"line":251,"col":23,"offset":6620},"abstract_content":"OPT_P"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"051569ad93df08046c792e1c1160b4ab89928f63db2a8bdd238b92e7f0a1731155c6f42bf43940fdb736c222df5a9b9da566df914b0609e3b44437e5dbd2cccd_0","lines":"\tif (!(options & OPT_P)) {\n\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":252,"col":3,"offset":6627},"end":{"line":258,"col":4,"offset":6814},"extra":{"metavars":{"$EXPR1":{"start":{"line":252,"col":7,"offset":6631},"end":{"line":252,"col":14,"offset":6638},"abstract_content":"options"},"$EXPR2":{"start":{"line":252,"col":17,"offset":6641},"end":{"line":252,"col":22,"offset":6646},"abstract_content":"OPT_B"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ebcf076b6955f67040e59bf3d83ac20543085ad829fdf1fdfa0cd8cc828c096e820a8a70d7c4f9cf9e573476e55dd02163aa1a382f3c42a4c46e40f52308fc8f_0","lines":"\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","start":{"line":254,"col":10,"offset":6697},"end":{"line":258,"col":4,"offset":6814},"extra":{"metavars":{"$EXPR1":{"start":{"line":254,"col":14,"offset":6701},"end":{"line":254,"col":21,"offset":6708},"abstract_content":"options"},"$EXPR2":{"start":{"line":254,"col":24,"offset":6711},"end":{"line":254,"col":29,"offset":6716},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3dbb02fa9618751067b2a9470ed5312bb81e47d29e953c955b6cf1222d0ed4e4c81f85e2e768d025eb4ae7224e470169ab66e1fef4c2de03d8fffbe8f78f1e8_1","lines":"\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":36,"col":2,"offset":575},"end":{"line":36,"col":9,"offset":582},"extra":{"metavars":{"$NARROW":{"start":{"line":36,"col":2,"offset":575},"end":{"line":36,"col":5,"offset":578},"abstract_content":"arg"},"$LARGE":{"start":{"line":36,"col":8,"offset":581},"end":{"line":36,"col":9,"offset":582},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8118286d8380f36e1c56c9ee5554834694d6dec2bbf904f4ea0229420942a220d367fab7adae28f9b80960a9d870a5a210be20fc2025fc4ad402d2e419e3ef2_0","lines":"\targ = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":49,"col":7,"offset":873},"end":{"line":49,"col":25,"offset":891},"extra":{"metavars":{"$FUN":{"start":{"line":49,"col":7,"offset":873},"end":{"line":49,"col":11,"offset":877},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"67e9e9d89229f7996e76cb18596fda623b3fade5e830d303759fb04ddd739f63fac8ce50fb63be49672a8b6d1fdf6e43ed37b226f400b8f0f3afadf7f9bcad82_0","lines":"\tfd = open(fnam, O_RDWR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":51,"col":8,"offset":913},"end":{"line":51,"col":28,"offset":933},"extra":{"metavars":{"$FUN":{"start":{"line":51,"col":8,"offset":913},"end":{"line":51,"col":12,"offset":917},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"67e9e9d89229f7996e76cb18596fda623b3fade5e830d303759fb04ddd739f63fac8ce50fb63be49672a8b6d1fdf6e43ed37b226f400b8f0f3afadf7f9bcad82_1","lines":"\t\tfd = open(fnam, O_WRONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":53,"col":8,"offset":955},"end":{"line":53,"col":28,"offset":975},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":8,"offset":955},"end":{"line":53,"col":12,"offset":959},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"67e9e9d89229f7996e76cb18596fda623b3fade5e830d303759fb04ddd739f63fac8ce50fb63be49672a8b6d1fdf6e43ed37b226f400b8f0f3afadf7f9bcad82_2","lines":"\t\tfd = open(fnam, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":69,"col":3,"offset":1176},"end":{"line":69,"col":49,"offset":1222},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"54196e5b2eb5b572c270d07534dec0b76b167fbeec1923a65b66be1312196340f4e3f8c802328d9aeccda7e2c0a2e0883858ea9e3b5570bf0eadb8415381c286_0","lines":"\t\tfprintf(stderr, _(\"Couldn't open %s\\n\"), fnam);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","start":{"line":85,"col":2,"offset":1451},"end":{"line":86,"col":73,"offset":1539},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"54196e5b2eb5b572c270d07534dec0b76b167fbeec1923a65b66be1312196340f4e3f8c802328d9aeccda7e2c0a2e0883858ea9e3b5570bf0eadb8415381c286_1","lines":"\tfprintf(stderr,\n\t        _(\"Couldn't get a file descriptor referring to the console\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":36,"col":2,"offset":894},"end":{"line":56,"col":44,"offset":2114},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_0","lines":"\tfprintf(stderr, _(\"loadkeys version %s\\n\"\n\t                  \"\\n\"\n\t                  \"Usage: %s [option...] [mapfile...]\\n\"\n\t                  \"\\n\"\n\t                  \"Valid options are:\\n\"\n\t                  \"\\n\"\n\t                  \"  -a --ascii         force conversion to ASCII\\n\"\n\t                  \"  -b --bkeymap       output a binary keymap to stdout\\n\"\n\t                  \"  -c --clearcompose  clear kernel compose table\\n\"\n\t                  \"  -C --console=file\\n\"\n\t                  \"                     the console device to be used\\n\"\n\t                  \"  -d --default       load \\\"%s\\\"\\n\"\n\t                  \"  -h --help          display this help text\\n\"\n\t                  \"  -m --mktable       output a \\\"defkeymap.c\\\" to stdout\\n\"\n\t                  \"  -p --parse         search and parse keymap without action\\n\"\n\t                  \"  -q --quiet         suppress all normal output\\n\"\n\t                  \"  -s --clearstrings  clear kernel string table\\n\"\n\t                  \"  -u --unicode       force conversion to Unicode\\n\"\n\t                  \"  -v --verbose       report the changes\\n\"\n\t                  \"  -V --version       print version number\\n\"),\n\t        PACKAGE_VERSION, progname, DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":112,"col":2,"offset":3359},"end":{"line":112,"col":23,"offset":3380},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":2,"offset":3359},"end":{"line":112,"col":11,"offset":3368},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a66c487ae86ccdcb03347a0d2d3965b03b7f411f984cc0575bd49a186910890025e6d1358a758a85d19002e2a272c2d197874f17b43ece532d2b8c172142396f_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":116,"col":26,"offset":3477},"end":{"line":116,"col":30,"offset":3481},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_0","lines":"\tprogname = set_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":123,"col":14,"offset":3558},"end":{"line":123,"col":66,"offset":3610},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":12,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":123,"col":14,"offset":3558},"end":{"line":123,"col":25,"offset":3569},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"94c5f2c82f7e3ef5b46e18abd41cfb5c4f8fb5b52424f56ac8ca35315cd840ea1eba44324a67aee52af55d275b3facecb16860bfa93d59303067e5808f19f4b9_0","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":123,"col":32,"offset":3576},"end":{"line":123,"col":36,"offset":3580},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_1","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":124,"col":11,"offset":3631},"end":{"line":124,"col":12,"offset":3632},"extra":{"metavars":{"$VAR":{"start":{"line":124,"col":11,"offset":3631},"end":{"line":124,"col":12,"offset":3632},"abstract_content":"c","propagated_value":{"svalue_start":{"line":123,"col":14,"offset":3558},"svalue_end":{"line":123,"col":66,"offset":3610},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfde2c4161b1fd78882cf8502caa3f0129d14a70aaffbf9901c3deef965a47ce8536e47b0a48165629e70efe84c894824398d6a487b9598b0a405ba6f3fdc77a_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":161,"col":5,"offset":4294},"end":{"line":161,"col":65,"offset":4354},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_1","lines":"\t\t\t\tfprintf(stdout, _(\"%s from %s\\n\"), progname, PACKAGE_STRING);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":169,"col":2,"offset":4417},"end":{"line":174,"col":3,"offset":4601},"extra":{"metavars":{"$EXPR1":{"start":{"line":169,"col":7,"offset":4422},"end":{"line":169,"col":14,"offset":4429},"abstract_content":"options"},"$EXPR2":{"start":{"line":169,"col":17,"offset":4432},"end":{"line":169,"col":22,"offset":4437},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"375968b9152d84b22d8a2f0a099f4c3ad3fbb628acbd5fcdc3a72b63e67938dd70159601e868512c5aaa13f24e8056a5f8b8612cf3ff0cfed3fa77d568f2b139_0","lines":"\tif ((options & OPT_U) && (options & OPT_A)) {\n\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);\n\t\texit(EXIT_FAILURE);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":170,"col":3,"offset":4465},"end":{"line":172,"col":20,"offset":4575},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_2","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":176,"col":2,"offset":4604},"end":{"line":208,"col":3,"offset":5682},"extra":{"metavars":{"$EXPR1":{"start":{"line":176,"col":8,"offset":4610},"end":{"line":176,"col":15,"offset":4617},"abstract_content":"options"},"$EXPR2":{"start":{"line":176,"col":18,"offset":4620},"end":{"line":176,"col":23,"offset":4625},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fd201812bf9dd1448fe5d7401afcb680e5a770929730dc61ea5ca95a0fefb87f475e304b262e9b8215564e53b9318ca64fe8a2f914a661ace88d52e898865385_0","lines":"\tif (!(options & OPT_M) && !(options & OPT_B)) {\n\t\t/* get console */\n\t\tif ((fd = getfd(console)) < 0)\n\t\t\tkbd_error(EXIT_FAILURE, 0, _(\"Couldn't get a file descriptor referring to the console\"));\n\n\t\t/* check whether the keyboard is in Unicode mode */\n\t\tif (ioctl(fd, KDGKBMODE, &kbd_mode) ||\n\t\t    ioctl(fd, KDGETMODE, &kd_mode)) {\n\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif (kbd_mode == K_UNICODE) {\n\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}\n\n\t\t\t/* reset -u option if keyboard is in K_UNICODE anyway */\n\t\t\tflags ^= LK_FLAG_UNICODE_MODE;\n\n\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":184,"col":4,"offset":4937},"end":{"line":185,"col":21,"offset":5017},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_3","lines":"\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":190,"col":4,"offset":5081},"end":{"line":197,"col":5,"offset":5341},"extra":{"metavars":{"$EXPR1":{"start":{"line":190,"col":8,"offset":5085},"end":{"line":190,"col":15,"offset":5092},"abstract_content":"options"},"$EXPR2":{"start":{"line":190,"col":18,"offset":5095},"end":{"line":190,"col":23,"offset":5100},"abstract_content":"OPT_A"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2fa7dd507d950f9b687e95f79a0b249b4809dacbf7a8a16501835cab7da3760a4a104aee8d741658bf4434d2b107fa7f9acebae03e88ec4b61c7e514b13f5df1_0","lines":"\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":191,"col":5,"offset":5108},"end":{"line":194,"col":22,"offset":5286},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_4","lines":"\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":202,"col":10,"offset":5447},"end":{"line":207,"col":4,"offset":5679},"extra":{"metavars":{"$EXPR1":{"start":{"line":202,"col":14,"offset":5451},"end":{"line":202,"col":21,"offset":5458},"abstract_content":"options"},"$EXPR2":{"start":{"line":202,"col":24,"offset":5461},"end":{"line":202,"col":29,"offset":5466},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"375968b9152d84b22d8a2f0a099f4c3ad3fbb628acbd5fcdc3a72b63e67938dd70159601e868512c5aaa13f24e8056a5f8b8612cf3ff0cfed3fa77d568f2b139_1","lines":"\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":203,"col":4,"offset":5499},"end":{"line":206,"col":21,"offset":5674},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_5","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":213,"col":12,"offset":5751},"end":{"line":213,"col":42,"offset":5781},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":213,"col":12,"offset":5751},"end":{"line":213,"col":18,"offset":5757},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c4d0ca0aae2df241e179e83e5f2ef21c4e6ae8544bbe015da5bdc1c859e819ddfc2c0dac0ce64e655d395ad538203ca727d8de70595cac1142f9a371deebe7e8_0","lines":"\tif ((ev = getenv(\"LOADKEYS_KEYMAP_PATH\")) != NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":218,"col":2,"offset":5845},"end":{"line":235,"col":3,"offset":6253},"extra":{"metavars":{"$EXPR1":{"start":{"line":218,"col":6,"offset":5849},"end":{"line":218,"col":13,"offset":5856},"abstract_content":"options"},"$EXPR2":{"start":{"line":218,"col":16,"offset":5859},"end":{"line":218,"col":21,"offset":5864},"abstract_content":"OPT_D"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"245d0e85e7610714f8893ae4b2bb4ead0dfb170c662291753946839492920e1c33ae37bdb04f34292a4995ecdfaab7d3d662918ded85dad097383d48a2e51437_0","lines":"\tif (options & OPT_D) {\n\t\t/* first read default map - search starts in . */\n\n\t\tif (lk_findfile(DEFMAP, dirpath, suffixes, &f)) {\n\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\n\t} else if (optind == argc) {\n\t\tf.fd = stdin;\n\t\tstrcpy(f.pathname, \"<stdin>\");\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":222,"col":4,"offset":5976},"end":{"line":222,"col":50,"offset":6022},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_6","lines":"\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":231,"col":3,"offset":6160},"end":{"line":231,"col":32,"offset":6189},"extra":{"metavars":{"$FUN":{"start":{"line":231,"col":3,"offset":6160},"end":{"line":231,"col":9,"offset":6166},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c1d1756645e2f540577913bf78b67e28334943ce4d0f3fc422443198ed73977717a0c01dea427ccee96d5da97e9e9c5254ab95c7e6da75b373ccc13598530f91_0","lines":"\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":237,"col":19,"offset":6273},"end":{"line":237,"col":23,"offset":6277},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_2","lines":"\tfor (i = optind; argv[i]; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":238,"col":15,"offset":6303},"end":{"line":238,"col":19,"offset":6307},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_3","lines":"\t\tif (!strcmp(argv[i], \"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":240,"col":4,"offset":6340},"end":{"line":240,"col":33,"offset":6369},"extra":{"metavars":{"$FUN":{"start":{"line":240,"col":4,"offset":6340},"end":{"line":240,"col":10,"offset":6346},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c1d1756645e2f540577913bf78b67e28334943ce4d0f3fc422443198ed73977717a0c01dea427ccee96d5da97e9e9c5254ab95c7e6da75b373ccc13598530f91_1","lines":"\t\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":242,"col":26,"offset":6397},"end":{"line":242,"col":30,"offset":6401},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_4","lines":"\t\t} else if (lk_findfile(argv[i], dirpath, suffixes, &f)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":243,"col":4,"offset":6435},"end":{"line":243,"col":56,"offset":6487},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7c5445ca4abb8ef4f46058810a9ee033f64308ed7893169c89f99cd640ba3a8bacfcb676a0489b95ce98c4979a05e17c24b0ffad2b48efb24370f25cd449616_7","lines":"\t\t\tfprintf(stderr, _(\"cannot open file %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":243,"col":48,"offset":6479},"end":{"line":243,"col":52,"offset":6483},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"266402021f7d43a2049d06d10f7d45a20c60445ffc452cdf801f873544fb77537de840612fa814f6b6007a656fc92c6200a30413ad1cd0a6ce7a718be7670e99_5","lines":"\t\t\tfprintf(stderr, _(\"cannot open file %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":251,"col":2,"offset":6572},"end":{"line":259,"col":3,"offset":6790},"extra":{"metavars":{"$EXPR1":{"start":{"line":251,"col":8,"offset":6578},"end":{"line":251,"col":15,"offset":6585},"abstract_content":"options"},"$EXPR2":{"start":{"line":251,"col":18,"offset":6588},"end":{"line":251,"col":23,"offset":6593},"abstract_content":"OPT_P"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b875385e4a242fc947681fb07f0fc20309a57298b1e0a94a3a0503d9572324b9da0913353c85f616fb2adefb989c189bef15c7b4cd8c927b8bd40da14c97553_0","lines":"\tif (!(options & OPT_P)) {\n\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":252,"col":3,"offset":6600},"end":{"line":258,"col":4,"offset":6787},"extra":{"metavars":{"$EXPR1":{"start":{"line":252,"col":7,"offset":6604},"end":{"line":252,"col":14,"offset":6611},"abstract_content":"options"},"$EXPR2":{"start":{"line":252,"col":17,"offset":6614},"end":{"line":252,"col":22,"offset":6619},"abstract_content":"OPT_B"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"014636d0fdbf10991bd3c1f12d2cb3663d8c60f9558f0b4eadb41dc7b8b796e38c198d4c880c3c5e6f844b40a3e6bbdfd7e96867355793ae5cd29a7f77c7cf30_0","lines":"\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","start":{"line":254,"col":10,"offset":6670},"end":{"line":258,"col":4,"offset":6787},"extra":{"metavars":{"$EXPR1":{"start":{"line":254,"col":14,"offset":6674},"end":{"line":254,"col":21,"offset":6681},"abstract_content":"options"},"$EXPR2":{"start":{"line":254,"col":24,"offset":6684},"end":{"line":254,"col":29,"offset":6689},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fd201812bf9dd1448fe5d7401afcb680e5a770929730dc61ea5ca95a0fefb87f475e304b262e9b8215564e53b9318ca64fe8a2f914a661ace88d52e898865385_1","lines":"\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":38,"offset":2335},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":18,"offset":2315},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3c157070017faaa7bba4131cafe64c48587f5532a5336b31b5b672c06d4c6f843434555ebe48b137d34e3de105ca870c5ea017475ed005f30dc2cfa599155057_0","lines":"\t\t\tswitch (getopt(argc, argv, \"alLc\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":38,"offset":2335},"extra":{"metavars":{"$VAR":{"start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":38,"offset":2335},"abstract_content":"getopt(argc argv\"alLc\")"},"$VAL1":{"start":{"line":101,"col":10,"offset":2348},"end":{"line":101,"col":13,"offset":2351},"abstract_content":"'a'"},"$VAL2":{"start":{"line":104,"col":10,"offset":2392},"end":{"line":104,"col":13,"offset":2395},"abstract_content":"'c'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d339535a18514d22fe06831006b3c0f79787648a47d2cd70a8f4b985bc411b98d020326cc0b90e6d967653e289a4cb7f2c887631a0dd7bb28e1b6d021fe16043_0","lines":"\t\t\tswitch (getopt(argc, argv, \"alLc\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":38,"offset":2335},"extra":{"metavars":{"$VAR":{"start":{"line":100,"col":12,"offset":2309},"end":{"line":100,"col":38,"offset":2335},"abstract_content":"getopt(argc argv\"alLc\")"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4bf9eb7c8113b8bb3e67c5348c8fdc60dded17c795d9dca3e3caf97abdbee20806eeebeb5264f285e9bcb1bc51d8bf2c0156bc90783f6f933a9d3f991a7aa712_0","lines":"\t\t\tswitch (getopt(argc, argv, \"alLc\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":100,"col":25,"offset":2322},"end":{"line":100,"col":29,"offset":2326},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2f44fa718bc3038c86c8fd421b38797bcaa4794b2cf3b071ac79945fb712f399f5b99bed8dcb2e0619c45121ed57b04d6ca43c508a244862bddf037c1f9940e0_0","lines":"\t\t\tswitch (getopt(argc, argv, \"alLc\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":123,"col":13,"offset":2635},"end":{"line":123,"col":37,"offset":2659},"extra":{"metavars":{"$FUN":{"start":{"line":123,"col":13,"offset":2635},"end":{"line":123,"col":18,"offset":2640},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fb40cb18fabca4a8cf96ce7ae5e234fc0a3ff89d2cf8224875ad49db59fc92cb18bfbfe33500e8ce24abf9e7dbf7d2e46234ca6be4824a9b701d6d88d949cb34_0","lines":"\t\tif ((in = fopen(argv[optind], \"r\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":123,"col":19,"offset":2641},"end":{"line":123,"col":23,"offset":2645},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2f44fa718bc3038c86c8fd421b38797bcaa4794b2cf3b071ac79945fb712f399f5b99bed8dcb2e0619c45121ed57b04d6ca43c508a244862bddf037c1f9940e0_1","lines":"\t\tif ((in = fopen(argv[optind], \"r\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":124,"col":42,"offset":2713},"end":{"line":124,"col":46,"offset":2717},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2f44fa718bc3038c86c8fd421b38797bcaa4794b2cf3b071ac79945fb712f399f5b99bed8dcb2e0619c45121ed57b04d6ca43c508a244862bddf037c1f9940e0_2","lines":"\t\t\tprintf(\"\\nUnable to open file %s.\\n\", argv[optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":134,"col":3,"offset":2847},"end":{"line":134,"col":32,"offset":2876},"extra":{"metavars":{"$NARROW":{"start":{"line":134,"col":3,"offset":2847},"end":{"line":134,"col":11,"offset":2855},"abstract_content":"codepage"},"$LARGE":{"start":{"line":134,"col":24,"offset":2868},"end":{"line":134,"col":30,"offset":2874},"abstract_content":"optind"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6c973d46cfe0c04d93155e0ba884833f253aeb6de73b9128ff15e9e1d615b75466e4ee5df851628c016bdc7a0337871bbd5a0a35e110ad0de6a0e53ca5424ac_0","lines":"\t\tcodepage = atoi(argv[optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":134,"col":14,"offset":2858},"end":{"line":134,"col":32,"offset":2876},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"4d9ea3f7bdd3e04f36e1092c9f3169eb016bc8700187699b4339809c7656480c077edf8f7e80c0e695dc99c4213f6f077fc409d6e3b9556f428f971e2d84c35e_0","lines":"\t\tcodepage = atoi(argv[optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":134,"col":19,"offset":2863},"end":{"line":134,"col":23,"offset":2867},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2f44fa718bc3038c86c8fd421b38797bcaa4794b2cf3b071ac79945fb712f399f5b99bed8dcb2e0619c45121ed57b04d6ca43c508a244862bddf037c1f9940e0_3","lines":"\t\tcodepage = atoi(argv[optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":156,"col":6,"offset":3100},"end":{"line":156,"col":59,"offset":3153},"extra":{"metavars":{"$FUN":{"start":{"line":156,"col":6,"offset":3100},"end":{"line":156,"col":11,"offset":3105},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_0","lines":"\tj = fread(&FontFileHeader, 1, sizeof(FontFileHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":156,"col":6,"offset":3100},"end":{"line":156,"col":59,"offset":3153},"extra":{"metavars":{"$PTR":{"start":{"line":156,"col":12,"offset":3106},"end":{"line":156,"col":27,"offset":3121},"abstract_content":"&FontFileHeader"},"$LEN":{"start":{"line":156,"col":29,"offset":3123},"end":{"line":156,"col":30,"offset":3124},"abstract_content":"1"},"$NITEMS":{"start":{"line":156,"col":32,"offset":3126},"end":{"line":156,"col":53,"offset":3147},"abstract_content":"sizeof FontFileHeader"},"$FS":{"start":{"line":156,"col":56,"offset":3150},"end":{"line":156,"col":58,"offset":3152},"abstract_content":"in"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ada7fff4b9986a20e77d4dbdd9c353f2a691ad156c97e9ddefad9b6034ea682c3ff97954ea081c1204517d74f8ae33e933d9fcc4fa5dd85b0f5a4e08315bb1fe_0","lines":"\tj = fread(&FontFileHeader, 1, sizeof(FontFileHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":162,"col":3,"offset":3280},"end":{"line":166,"col":36,"offset":3533},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":47,"offset":46},"abstract_content":"\"FontFileHeader: id=0x%x \\\"%7.7s\\\" res=%8.8s \""},"$FMT":{"start":{"line":162,"col":10,"offset":3287},"end":{"line":163,"col":44,"offset":3377},"abstract_content":"\"FontFileHeader: id=0x%x \\\"%7.7s\\\" res=%8.8s \"\"num=%d typ=%d fih_offset=%ld\\n\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f83581aa12d0a2a0a3698a709c05f97eee43ec79dd8ec922a4296f45549fb140e62269011fd5a81ed16a01c391437c3fa586355f0b4e480bddb4c6365e85ce8_0","lines":"\t\tprintf(\"FontFileHeader: id=0x%x \\\"%7.7s\\\" res=%8.8s \"\n\t\t       \"num=%d typ=%d fih_offset=%ld\\n\\n\",\n\t\t       FontFileHeader.id0, FontFileHeader.id, FontFileHeader.res,\n\t\t       FontFileHeader.pnum, FontFileHeader.ptyp,\n\t\t       FontFileHeader.fih_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":170,"col":12,"offset":3607},"end":{"line":171,"col":54,"offset":3700},"extra":{"metavars":{"$FUN":{"start":{"line":170,"col":12,"offset":3607},"end":{"line":170,"col":17,"offset":3612},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_1","lines":"\t\tj      = fread(&DRDOS_ExtendedFontFileHeader, 1,\n\t\t          sizeof(DRDOS_ExtendedFontFileHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":170,"col":12,"offset":3607},"end":{"line":171,"col":54,"offset":3700},"extra":{"metavars":{"$PTR":{"start":{"line":170,"col":18,"offset":3613},"end":{"line":170,"col":47,"offset":3642},"abstract_content":"&DRDOS_ExtendedFontFileHeader"},"$LEN":{"start":{"line":170,"col":49,"offset":3644},"end":{"line":170,"col":50,"offset":3645},"abstract_content":"1"},"$NITEMS":{"start":{"line":171,"col":13,"offset":3659},"end":{"line":171,"col":48,"offset":3694},"abstract_content":"sizeof DRDOS_ExtendedFontFileHeader"},"$FS":{"start":{"line":171,"col":51,"offset":3697},"end":{"line":171,"col":53,"offset":3699},"abstract_content":"in"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3999397e7a83297b8a553b4df88f1a668e9281f9e29b08ffc33981854fa45e6ab62ae4bafd304f03e49adbd44eeca0b07a6a6c13349a395cecc7e721e60878b_0","lines":"\t\tj      = fread(&DRDOS_ExtendedFontFileHeader, 1,\n\t\t          sizeof(DRDOS_ExtendedFontFileHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":194,"col":6,"offset":4317},"end":{"line":194,"col":59,"offset":4370},"extra":{"metavars":{"$FUN":{"start":{"line":194,"col":6,"offset":4317},"end":{"line":194,"col":11,"offset":4322},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_2","lines":"\tj = fread(&FontInfoHeader, 1, sizeof(FontInfoHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":194,"col":6,"offset":4317},"end":{"line":194,"col":59,"offset":4370},"extra":{"metavars":{"$PTR":{"start":{"line":194,"col":12,"offset":4323},"end":{"line":194,"col":27,"offset":4338},"abstract_content":"&FontInfoHeader"},"$LEN":{"start":{"line":194,"col":29,"offset":4340},"end":{"line":194,"col":30,"offset":4341},"abstract_content":"1"},"$NITEMS":{"start":{"line":194,"col":32,"offset":4343},"end":{"line":194,"col":53,"offset":4364},"abstract_content":"sizeof FontInfoHeader"},"$FS":{"start":{"line":194,"col":56,"offset":4367},"end":{"line":194,"col":58,"offset":4369},"abstract_content":"in"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cf88f7af937d100b642368d7043eb8e49cf9b79c54113b92eae1d1bf3d366763f0a9c32e927a11e0438466b73e5008ecf31fb4ea8967c92aee5449144720bade_0","lines":"\tj = fread(&FontInfoHeader, 1, sizeof(FontInfoHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":222,"col":6,"offset":4896},"end":{"line":222,"col":57,"offset":4947},"extra":{"metavars":{"$FUN":{"start":{"line":222,"col":6,"offset":4896},"end":{"line":222,"col":11,"offset":4901},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_3","lines":"\tj = fread(&CPEntryHeader, 1, sizeof(CPEntryHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":222,"col":6,"offset":4896},"end":{"line":222,"col":57,"offset":4947},"extra":{"metavars":{"$PTR":{"start":{"line":222,"col":12,"offset":4902},"end":{"line":222,"col":26,"offset":4916},"abstract_content":"&CPEntryHeader"},"$LEN":{"start":{"line":222,"col":28,"offset":4918},"end":{"line":222,"col":29,"offset":4919},"abstract_content":"1"},"$NITEMS":{"start":{"line":222,"col":31,"offset":4921},"end":{"line":222,"col":51,"offset":4941},"abstract_content":"sizeof CPEntryHeader"},"$FS":{"start":{"line":222,"col":54,"offset":4944},"end":{"line":222,"col":56,"offset":4946},"abstract_content":"in"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"094d86b3fbac364c285ebc2e87a438d0dad88048b3c828abc1e1ead06b4f7174aeafcd8d621a800d56d78d38a9f757cf180b83dd8ee892c06373bd3e55d6f9b0_0","lines":"\tj = fread(&CPEntryHeader, 1, sizeof(CPEntryHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":261,"col":6,"offset":6226},"end":{"line":261,"col":55,"offset":6275},"extra":{"metavars":{"$FUN":{"start":{"line":261,"col":6,"offset":6226},"end":{"line":261,"col":11,"offset":6231},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_4","lines":"\tj = fread(&CPInfoHeader, 1, sizeof(CPInfoHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":261,"col":6,"offset":6226},"end":{"line":261,"col":55,"offset":6275},"extra":{"metavars":{"$PTR":{"start":{"line":261,"col":12,"offset":6232},"end":{"line":261,"col":25,"offset":6245},"abstract_content":"&CPInfoHeader"},"$LEN":{"start":{"line":261,"col":27,"offset":6247},"end":{"line":261,"col":28,"offset":6248},"abstract_content":"1"},"$NITEMS":{"start":{"line":261,"col":30,"offset":6250},"end":{"line":261,"col":49,"offset":6269},"abstract_content":"sizeof CPInfoHeader"},"$FS":{"start":{"line":261,"col":52,"offset":6272},"end":{"line":261,"col":54,"offset":6274},"abstract_content":"in"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f2512865e4800d1e49ca2f60884fb3c57722dc42db568044d0fc72cb2fda813072682409c5ef78607d70ad271b338911f102502dc1c776b014be670b8801fb26_0","lines":"\tj = fread(&CPInfoHeader, 1, sizeof(CPInfoHeader), in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":275,"col":2,"offset":6587},"end":{"line":275,"col":51,"offset":6636},"extra":{"metavars":{"$FUN":{"start":{"line":275,"col":2,"offset":6587},"end":{"line":275,"col":9,"offset":6594},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"25e7b8a20ef98052bdec42c6d7e8ea7cc1bb9c96df98243260c33e30878fe87659795ddc2fbe11b9e6ed112e972b878ba27a02b3ac1a9ebdbea83eb1534744b8_0","lines":"\tsprintf(outfile, \"%d.cp\", CPEntryHeader.codepage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":276,"col":13,"offset":6650},"end":{"line":276,"col":32,"offset":6669},"extra":{"metavars":{"$FUN":{"start":{"line":276,"col":13,"offset":6650},"end":{"line":276,"col":18,"offset":6655},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fb40cb18fabca4a8cf96ce7ae5e234fc0a3ff89d2cf8224875ad49db59fc92cb18bfbfe33500e8ce24abf9e7dbf7d2e46234ca6be4824a9b701d6d88d949cb34_1","lines":"\tif ((out = fopen(outfile, \"w\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":282,"col":2,"offset":6790},"end":{"line":282,"col":52,"offset":6840},"extra":{"metavars":{"$RET":{"start":{"line":282,"col":2,"offset":6790},"end":{"line":282,"col":7,"offset":6795},"abstract_content":"fonts"},"$CAST":{"start":{"line":282,"col":11,"offset":6799},"end":{"line":282,"col":26,"offset":6814},"abstract_content":"unsigned char*"},"$FUN":{"start":{"line":282,"col":27,"offset":6815},"end":{"line":282,"col":33,"offset":6821},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e01dd209beadf96eb9dded482634c3cc7a4070e063ed6815433e6057affd204bcd2e13505bc1ffae621c37f447657ea96c8a9c4a7679928b668e912e9e89bd46_0","lines":"\tfonts = (unsigned char *)malloc(CPInfoHeader.size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":282,"col":27,"offset":6815},"end":{"line":282,"col":52,"offset":6840},"extra":{"metavars":{"$FUN":{"start":{"line":282,"col":27,"offset":6815},"end":{"line":282,"col":33,"offset":6821},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efae276afc65738cd1c6cb123b59132e8ffa9a83aa4f52764b5a34ad56a05857561fd4fc96ec394ff200e2ab721d96a7759639df8fcbac0f669fb42618d47812_0","lines":"\tfonts = (unsigned char *)malloc(CPInfoHeader.size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":284,"col":2,"offset":6844},"end":{"line":284,"col":40,"offset":6882},"extra":{"metavars":{"$FUN":{"start":{"line":284,"col":2,"offset":6844},"end":{"line":284,"col":7,"offset":6849},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa3608878deca6a5c5c3f79c3a39b79be56d3c3f16572fe44a66d54fa26df1d445ce0bafb64b2d7c54889b7486a5e58ae20f7428560292e28f1dbc0392d2195e_5","lines":"\tfread(fonts, CPInfoHeader.size, 1, in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":47,"offset":676},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s.%02x\""},"$BUF":{"start":{"line":26,"col":11,"offset":640},"end":{"line":26,"col":19,"offset":648},"abstract_content":"filename"},"$FMT":{"start":{"line":26,"col":21,"offset":650},"end":{"line":26,"col":30,"offset":659},"abstract_content":"\"%s.%02x\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6eda7d07027150ced18296043a71ac17bcaf41ce0821c7e3af7ab649b8f64ca45c4d4d7f00887ea72aab6b5870a4052074e46d3aee05c867673bd4037b363713_0","lines":"\t\tsprintf(filename, \"%s.%02x\", fontfile, from);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":47,"offset":676},"extra":{"metavars":{"$FUN":{"start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":10,"offset":639},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cd15dc29468fc35718de31e649bcc390f10e68df814a36c13bc0e430c88c61e3c650de30bb8ab3126f9586f63b0540ae931a15c3ed22e923d30a5fbdb17f4f4a_0","lines":"\t\tsprintf(filename, \"%s.%02x\", fontfile, from);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":47,"offset":676},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s.%02x\""},"$ARG1":{"start":{"line":26,"col":11,"offset":640},"end":{"line":26,"col":19,"offset":648},"abstract_content":"filename"},"$FMT":{"start":{"line":26,"col":21,"offset":650},"end":{"line":26,"col":30,"offset":659},"abstract_content":"\"%s.%02x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b7a43cc7cf24b02b3791a34336d5cef7625a8ecb3eac5294d7bb36fbef5a3cb31c9f9969aa391b824ef5506a07297ed042a7c347f006b915925caa2348d73255_0","lines":"\t\tsprintf(filename, \"%s.%02x\", fontfile, from);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":47,"offset":676},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s.%02x\""},"$TYPE":{"start":{"line":14,"col":2,"offset":324},"end":{"line":14,"col":6,"offset":328},"abstract_content":"char"},"$LEN":{"start":{"line":14,"col":16,"offset":338},"end":{"line":14,"col":20,"offset":342},"abstract_content":"4096"},"$FUN":{"start":{"line":26,"col":3,"offset":632},"end":{"line":26,"col":10,"offset":639},"abstract_content":"sprintf"},"$BUF":{"start":{"line":26,"col":11,"offset":640},"end":{"line":26,"col":19,"offset":648},"abstract_content":"filename"},"$FMT":{"start":{"line":26,"col":21,"offset":650},"end":{"line":26,"col":30,"offset":659},"abstract_content":"\"%s.%02x\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"892012f5199f1c026f843df7d5b808eedc9daf78d9c4f57a70ed489df4ed3d17e9b2f2ed98d9baef4853f17c185ed0620e590f8ff5faf61c9e18f6419db938d1_0","lines":"\t\tsprintf(filename, \"%s.%02x\", fontfile, from);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":27,"col":3,"offset":680},"end":{"line":30,"col":4,"offset":828},"extra":{"metavars":{"$EXPR1":{"start":{"line":27,"col":28,"offset":705},"end":{"line":27,"col":36,"offset":713},"abstract_content":"O_WRONLY"},"$EXPR2":{"start":{"line":27,"col":39,"offset":716},"end":{"line":27,"col":46,"offset":723},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04e7170b7f607519f3b7f3cc8c4a8f4f2525ae9edb3abcb85cf90c958b62f73213916bb745545c668f801cb13e6dc6f1d21c2eadc5e4999e52abc8bff711d473_0","lines":"\t\tif ((fd = open(filename, O_WRONLY | O_CREAT, 0666)) < 0) {\n\t\t\tperror(\"splitfont\");\n\t\t\tfprintf(stderr, \"cannot open %s for writing\\n\", filename);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":27,"col":13,"offset":690},"end":{"line":27,"col":53,"offset":730},"extra":{"metavars":{"$FUN":{"start":{"line":27,"col":13,"offset":690},"end":{"line":27,"col":17,"offset":694},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6cd44a37dcbcc67c703bfecd4aa2eb9dbe9b2da00a4cb89164f15758cdb441831102b623d20045107b9cc399d44e7d59bc1a859af0fbd743ae097be384e0fc9_0","lines":"\t\tif ((fd = open(filename, O_WRONLY | O_CREAT, 0666)) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":53,"col":6,"offset":1230},"end":{"line":53,"col":29,"offset":1253},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1964c1a831c3a8d59043af3f65d9bf9ac1be19e67a41897c1dde970105c1e2cfd4d3eb06192e2e567c68bb2fe25d223877bfa47be465e52d3031fdaa5a3ecf30_0","lines":"\tif (stat(argv[1], &statbuf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":53,"col":6,"offset":1230},"end":{"line":53,"col":29,"offset":1253},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":6,"offset":1230},"end":{"line":53,"col":10,"offset":1234},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"973310d7dd4761362dc7d173d998ba06df62aab14ec43b918f2645a753e9ecc178f3b7c82f0d598f6425f54c882a3c7a47d0a31f021f05ef52337f58bce6c73c_0","lines":"\tif (stat(argv[1], &statbuf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":53,"col":11,"offset":1235},"end":{"line":53,"col":15,"offset":1239},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_0","lines":"\tif (stat(argv[1], &statbuf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":55,"col":46,"offset":1325},"end":{"line":55,"col":50,"offset":1329},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_1","lines":"\t\tfprintf(stderr, \"cannot stat fontfile %s\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":66,"col":12,"offset":1575},"end":{"line":66,"col":35,"offset":1598},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":12,"offset":1575},"end":{"line":66,"col":16,"offset":1579},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6cd44a37dcbcc67c703bfecd4aa2eb9dbe9b2da00a4cb89164f15758cdb441831102b623d20045107b9cc399d44e7d59bc1a859af0fbd743ae097be384e0fc9_1","lines":"\tif ((fd = open(argv[1], O_RDONLY)) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":66,"col":17,"offset":1580},"end":{"line":66,"col":21,"offset":1584},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_2","lines":"\tif ((fd = open(argv[1], O_RDONLY)) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":68,"col":46,"offset":1675},"end":{"line":68,"col":50,"offset":1679},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_3","lines":"\t\tfprintf(stderr, \"cannot open fontfile %s\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":71,"col":6,"offset":1704},"end":{"line":71,"col":40,"offset":1738},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":6,"offset":1704},"end":{"line":71,"col":10,"offset":1708},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a4cee9131868985d91578b4929c00ef1503f661ccd74c7e6ce30a388cdc9091066fe1ed1701ae26b7d844e20b25d73e0fffdea3ce7c5495814ace9edf90c3978_0","lines":"\tif (read(fd, fontbuf, statbuf.st_size) != statbuf.st_size) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":73,"col":48,"offset":1831},"end":{"line":73,"col":52,"offset":1835},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_4","lines":"\t\tfprintf(stderr, \"error reading fontfile %s\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":77,"col":6,"offset":1861},"end":{"line":77,"col":10,"offset":1865},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_5","lines":"\tp = argv[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","start":{"line":88,"col":47,"offset":2121},"end":{"line":88,"col":51,"offset":2125},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f7d6875e242e93f0f1de0773e04b66b6673c293695e932a39b1a34621f8d333390a1348e7e86c01479465859e0d4cb03508e1ffa26b4c8f65984bc1a366e708f_6","lines":"\t\tdosplit(from, to, fontbuf, statbuf.st_size, argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/sti.c","start":{"line":20,"col":7,"offset":353},"end":{"line":20,"col":30,"offset":376},"extra":{"metavars":{"$FUN":{"start":{"line":20,"col":7,"offset":353},"end":{"line":20,"col":11,"offset":357},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9831bcc519fc4980fd25f2346f4da43931933edab43cce2e439ef3f7814c51f3fd54e1140ad46a570626749580f99dbba70bde0bd08072f4e718f991cc427d5b_0","lines":"\tfd = open(argv[1], O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/sti.c","start":{"line":20,"col":12,"offset":358},"end":{"line":20,"col":16,"offset":362},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60887d943d1d5ffe0ccf354427f039aefe0f9d6c1ec15f81e744ca26e239467a8c3c17b4e56cb2c3630e4ceb36aad3002344fe9323087dfde619c3aa6b58338c_0","lines":"\tfd = open(argv[1], O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/sti.c","start":{"line":22,"col":10,"offset":402},"end":{"line":22,"col":14,"offset":406},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60887d943d1d5ffe0ccf354427f039aefe0f9d6c1ec15f81e744ca26e239467a8c3c17b4e56cb2c3630e4ceb36aad3002344fe9323087dfde619c3aa6b58338c_1","lines":"\t\tperror(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/sti.c","start":{"line":26,"col":6,"offset":479},"end":{"line":26,"col":10,"offset":483},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60887d943d1d5ffe0ccf354427f039aefe0f9d6c1ec15f81e744ca26e239467a8c3c17b4e56cb2c3630e4ceb36aad3002344fe9323087dfde619c3aa6b58338c_2","lines":"\ts = argv[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":24,"col":13,"offset":390},"end":{"line":24,"col":40,"offset":417},"extra":{"metavars":{"$FUN":{"start":{"line":24,"col":13,"offset":390},"end":{"line":24,"col":17,"offset":394},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31ce53f160412c0709ee18e394635c98a177616c03368999d2bbf56a14d98aa55c3cefd8b1f3974becd5ef9174070f4a7b61bdd441fbb14d7262496d60571282_0","lines":"\tif ((fda = open(\"/dev/vcsa\", O_RDONLY)) < 0 && (fda = open(\"/dev/vcsa0\", O_RDONLY)) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":24,"col":56,"offset":433},"end":{"line":24,"col":84,"offset":461},"extra":{"metavars":{"$FUN":{"start":{"line":24,"col":56,"offset":433},"end":{"line":24,"col":60,"offset":437},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31ce53f160412c0709ee18e394635c98a177616c03368999d2bbf56a14d98aa55c3cefd8b1f3974becd5ef9174070f4a7b61bdd441fbb14d7262496d60571282_1","lines":"\tif ((fda = open(\"/dev/vcsa\", O_RDONLY)) < 0 && (fda = open(\"/dev/vcsa0\", O_RDONLY)) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":26,"col":6,"offset":495},"end":{"line":26,"col":22,"offset":511},"extra":{"metavars":{"$FUN":{"start":{"line":26,"col":6,"offset":495},"end":{"line":26,"col":10,"offset":499},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fb4c955ce4b647e9ed1af541adccd989628c28695312528a9cc610098d5c6da8184b2e877aca0b5a8a196d5379df3f5b0fe155b952245a37e735ca91f854abfe_0","lines":"\tif (read(fda, rc, 2) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":26,"col":6,"offset":495},"end":{"line":26,"col":22,"offset":511},"extra":{"metavars":{"$FD":{"start":{"line":26,"col":11,"offset":500},"end":{"line":26,"col":14,"offset":503},"abstract_content":"fda"},"$BUF":{"start":{"line":26,"col":16,"offset":505},"end":{"line":26,"col":18,"offset":507},"abstract_content":"rc"},"$LEN":{"start":{"line":26,"col":20,"offset":509},"end":{"line":26,"col":21,"offset":510},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d2cc6d3442340fc119165d723c19fd8efcdb7bf579bcb7c1fba43484e2e5745639a67489eac796015263df8c6116078b4c1832b9d419055d76a11442de46ac2d_0","lines":"\tif (read(fda, rc, 2) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":40,"col":12,"offset":682},"end":{"line":40,"col":38,"offset":708},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":12,"offset":682},"end":{"line":40,"col":16,"offset":686},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31ce53f160412c0709ee18e394635c98a177616c03368999d2bbf56a14d98aa55c3cefd8b1f3974becd5ef9174070f4a7b61bdd441fbb14d7262496d60571282_2","lines":"\tif ((fd = open(\"/dev/vcs\", O_WRONLY)) < 0 && (fd = open(\"/dev/vcs0\", O_WRONLY)) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":40,"col":53,"offset":723},"end":{"line":40,"col":80,"offset":750},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":53,"offset":723},"end":{"line":40,"col":57,"offset":727},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31ce53f160412c0709ee18e394635c98a177616c03368999d2bbf56a14d98aa55c3cefd8b1f3974becd5ef9174070f4a7b61bdd441fbb14d7262496d60571282_3","lines":"\tif ((fd = open(\"/dev/vcs\", O_WRONLY)) < 0 && (fd = open(\"/dev/vcs0\", O_WRONLY)) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","start":{"line":47,"col":3,"offset":863},"end":{"line":47,"col":69,"offset":929},"extra":{"metavars":{"$FUN":{"start":{"line":47,"col":3,"offset":863},"end":{"line":47,"col":10,"offset":870},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"69bebc3478a10fd13793250416f729e92e4e1f91a5856653e35e72dc8c63d58d1aad9ff50dc2dfb202ec787abd3986dbaded69b74a789a059fdf579ddeb05303_0","lines":"\t\tsprintf(tijd, \" %02d:%02d:%02d\", t->tm_hour, t->tm_min, t->tm_sec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":22,"col":15,"offset":369},"end":{"line":22,"col":19,"offset":373},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5d849b9d308ba35015b82285b19633e7b8269df468ab49f921bd211ae284b19266de56e4957847cbaf03ba38265293939ff9d5cde531a8beb3bf1fc879054a8a_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":24,"col":2,"offset":381},"end":{"line":24,"col":23,"offset":402},"extra":{"metavars":{"$FUN":{"start":{"line":24,"col":2,"offset":381},"end":{"line":24,"col":11,"offset":390},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cba8b754b78c1340914f972052da412a23407dfe6a390240f6cfd9bb0d978441398bd98a18971fda6d616ebefd8b05e5f6f97aa614e847b5370765556f6a363f_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":28,"col":27,"offset":500},"end":{"line":28,"col":31,"offset":504},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5d849b9d308ba35015b82285b19633e7b8269df468ab49f921bd211ae284b19266de56e4957847cbaf03ba38265293939ff9d5cde531a8beb3bf1fc879054a8a_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":32,"col":3,"offset":565},"end":{"line":32,"col":40,"offset":602},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9bbfbf590720569f8eb9b643af03e48ad98cfe29cf062e21038a6361a15c4db6158ba9eb5a9ecfef06bf345c705c477b2911a34c5f7eb78816627c180bbc2a6d_0","lines":"\t\tfprintf(stderr, _(\"usage: chvt N\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":39,"col":8,"offset":760},"end":{"line":39,"col":21,"offset":773},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"b041ebcb4fc011ab9585da563ed70ab042fdb3fd3e7d2e8e5bed42ece4111945bbeb43e0a54f4982d7f0c903ea63fbf0b2adee6b63285ec0f9525ece33110886_0","lines":"\tnum = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","start":{"line":39,"col":13,"offset":765},"end":{"line":39,"col":17,"offset":769},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5d849b9d308ba35015b82285b19633e7b8269df468ab49f921bd211ae284b19266de56e4957847cbaf03ba38265293939ff9d5cde531a8beb3bf1fc879054a8a_2","lines":"\tnum = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/clrunimap.c","start":{"line":22,"col":2,"offset":325},"end":{"line":22,"col":23,"offset":346},"extra":{"metavars":{"$FUN":{"start":{"line":22,"col":2,"offset":325},"end":{"line":22,"col":11,"offset":334},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2eb02d4d5f2a55f79de0db31293661d99a48343668d644cc9351a694763179052679151ee990e582bfc2a1b99859edf76a6c19f1bfb915f403a34d016f97701_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/clrunimap.c","start":{"line":26,"col":27,"offset":444},"end":{"line":26,"col":31,"offset":448},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"17cc5d560203eddf8ffae71af89cb8d346afb2f01e741f1f14c0f7eb72edde44847f32b0e049f39b6036fbff4bb3d665f74c10ec37b2d74eef476aee4f35afc6_0","lines":"\tif (argc >= 3 && !strcmp(argv[1], \"-C\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/clrunimap.c","start":{"line":27,"col":13,"offset":472},"end":{"line":27,"col":17,"offset":476},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"17cc5d560203eddf8ffae71af89cb8d346afb2f01e741f1f14c0f7eb72edde44847f32b0e049f39b6036fbff4bb3d665f74c10ec37b2d74eef476aee4f35afc6_1","lines":"\t\tconsole = argv[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":26,"col":15,"offset":478},"end":{"line":26,"col":19,"offset":482},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7a15f1dff63879fa064c14072b92329f2f998a7922459dadfd935213726b2efa7101bd4a7f7fae6efff121f15111217a4d7e42bda144aa1f64370bd1886206be_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":28,"col":2,"offset":490},"end":{"line":28,"col":23,"offset":511},"extra":{"metavars":{"$FUN":{"start":{"line":28,"col":2,"offset":490},"end":{"line":28,"col":11,"offset":499},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e3660e831f7a5887b7f64a5fb86db7b7659dfbbf87f3c060de42fa58fcce9201bc4f184a3e178f13b7a8f5b47c8f7aa2ea0932c68a6dc9eb56e931103bda18a4_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":32,"col":27,"offset":609},"end":{"line":32,"col":31,"offset":613},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7a15f1dff63879fa064c14072b92329f2f998a7922459dadfd935213726b2efa7101bd4a7f7fae6efff121f15111217a4d7e42bda144aa1f64370bd1886206be_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":36,"col":16,"offset":699},"end":{"line":36,"col":20,"offset":703},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7a15f1dff63879fa064c14072b92329f2f998a7922459dadfd935213726b2efa7101bd4a7f7fae6efff121f15111217a4d7e42bda144aa1f64370bd1886206be_2","lines":"\t\tif (!isdigit(argv[i][0])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":37,"col":4,"offset":717},"end":{"line":37,"col":56,"offset":769},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5c9aeb891b08cea118096d01946ad38dca77781acbe886fe4d379c174f20ef2b979f07d0940d28350a1252589dab68299dd0fc75168c9b8cbbcfe5b77a048d1_0","lines":"\t\t\tfprintf(stderr, _(\"%s: unknown option\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":52,"col":10,"offset":1131},"end":{"line":52,"col":23,"offset":1144},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"1296aa0b3e901c8b47aa7147c5afa195cab0ba204931c0de21db22bd9afb62d1541775399e6ae9789f720aa23c854a5531bc19efee18a57d360c5d5a849e01f5_0","lines":"\t\t\tnum = atoi(argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","start":{"line":52,"col":15,"offset":1136},"end":{"line":52,"col":19,"offset":1140},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7a15f1dff63879fa064c14072b92329f2f998a7922459dadfd935213726b2efa7101bd4a7f7fae6efff121f15111217a4d7e42bda144aa1f64370bd1886206be_3","lines":"\t\t\tnum = atoi(argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":31,"col":2,"offset":508},"end":{"line":31,"col":60,"offset":566},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_0","lines":"\tfprintf(stderr, _(\"dumpkeys version %s\"), PACKAGE_VERSION);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":32,"col":2,"offset":569},"end":{"line":48,"col":18,"offset":1236},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_1","lines":"\tfprintf(stderr, _(\"\\\n\\n\\\nusage: dumpkeys [options...]\\n\\\n\\n\\\nvalid options are:\\n\\\n\\n\\\n\t-h --help\t    display this help text\\n\\\n\t-i --short-info\t    display information about keyboard driver\\n\\\n\t-l -s --long-info   display above and symbols known to loadkeys\\n\\\n\t-n --numeric\t    display keytable in hexadecimal notation\\n\\\n\t-f --full-table\t    don't use short-hand notations, one row per keycode\\n\\\n\t-1 --separate-lines one line per (modifier,keycode) pair\\n\\\n\t-S --shape=\\n\\\n\t-t --funcs-only\t    display only the function key strings\\n\\\n\t-k --keys-only\t    display only key bindings\\n\\\n\t-d --compose-only   display only compose key combinations\\n\\\n\t-c --charset=\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":50,"col":2,"offset":1266},"end":{"line":53,"col":4,"offset":1382},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_2","lines":"\tfprintf(stderr, _(\"\\\n\t\t\t    interpret character action codes to be from the\\n\\\n\t\t\t    specified character set\\n\\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":54,"col":2,"offset":1385},"end":{"line":57,"col":4,"offset":1468},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_3","lines":"\tfprintf(stderr, _(\"\\\n\t-v --verbose\\n\\\n\t-V --version\t    print version number\\n\\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":83,"col":7,"offset":2236},"end":{"line":83,"col":26,"offset":2255},"extra":{"metavars":{"$NARROW":{"start":{"line":83,"col":7,"offset":2236},"end":{"line":83,"col":16,"offset":2245},"abstract_content":"long_info"},"$LARGE":{"start":{"line":83,"col":25,"offset":2254},"end":{"line":83,"col":26,"offset":2255},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7dcb551dfc0d72333ab859cd9338ef473f121708790204478b1e4bf5765ce3fdd6c9a0afbeca28c714a46550153c7e64c08f29872fec821fc1f1338732167cfb_0","lines":"\tchar long_info       = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":84,"col":7,"offset":2263},"end":{"line":84,"col":26,"offset":2282},"extra":{"metavars":{"$NARROW":{"start":{"line":84,"col":7,"offset":2263},"end":{"line":84,"col":17,"offset":2273},"abstract_content":"short_info"},"$LARGE":{"start":{"line":84,"col":25,"offset":2281},"end":{"line":84,"col":26,"offset":2282},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6b8e7468112700c20a9da213407ee638102f0455ba119f406b6dddf990e8584cd0b75d9df4cb429861282a8e22aaec2039779e0cbb035170db92aa26d6bf581_0","lines":"\tchar short_info      = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":85,"col":7,"offset":2290},"end":{"line":85,"col":26,"offset":2309},"extra":{"metavars":{"$NARROW":{"start":{"line":85,"col":7,"offset":2290},"end":{"line":85,"col":14,"offset":2297},"abstract_content":"numeric"},"$LARGE":{"start":{"line":85,"col":25,"offset":2308},"end":{"line":85,"col":26,"offset":2309},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0941f61768633c537a2e853388ef725cf3563fad7c6c76319da2bd048e91332f6a153d67eb2b7fdda2688f5dfaccc00d7fef1b240a9fd9d29a4c67f52346aaba_0","lines":"\tchar numeric         = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":87,"col":7,"offset":2359},"end":{"line":87,"col":26,"offset":2378},"extra":{"metavars":{"$NARROW":{"start":{"line":87,"col":7,"offset":2359},"end":{"line":87,"col":17,"offset":2369},"abstract_content":"funcs_only"},"$LARGE":{"start":{"line":87,"col":25,"offset":2377},"end":{"line":87,"col":26,"offset":2378},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"98a2b0906dd2cf7a5450f5c05687613293b2c21f7267312f410183ede4855e3a7d3b716206ceffd3e2c44e0c5378fb50e3988cf751068a8cae6cee6aa6ce3908_0","lines":"\tchar funcs_only      = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":88,"col":7,"offset":2386},"end":{"line":88,"col":26,"offset":2405},"extra":{"metavars":{"$NARROW":{"start":{"line":88,"col":7,"offset":2386},"end":{"line":88,"col":16,"offset":2395},"abstract_content":"keys_only"},"$LARGE":{"start":{"line":88,"col":25,"offset":2404},"end":{"line":88,"col":26,"offset":2405},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54bf475138a2da7fd82fad16d1ce042f6918e08f1945fd20184ecfd5b349dcf803209ff8e1a3eaa95b81b55aa468fc8916cb623d34a98ff927726d320323cabd_0","lines":"\tchar keys_only       = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":89,"col":7,"offset":2413},"end":{"line":89,"col":26,"offset":2432},"extra":{"metavars":{"$NARROW":{"start":{"line":89,"col":7,"offset":2413},"end":{"line":89,"col":16,"offset":2422},"abstract_content":"diac_only"},"$LARGE":{"start":{"line":89,"col":25,"offset":2431},"end":{"line":89,"col":26,"offset":2432},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1979acd0cf0974273b16b9e4192b5676c45ebabd64f0e6612bbee1e9cfb6365f8cc649182c59a0ec7b5ec71fa77473f7e3c6d14697aecfa578335ef78255ec1d_0","lines":"\tchar diac_only       = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":93,"col":15,"offset":2471},"end":{"line":93,"col":19,"offset":2475},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1bffe98869b7277b7655c068861e555ebeab9c1f64a44b49aba2b26df6daa4fbbe2480e7d7360296723063811b4a43bebc623d805be849ea3357cf05ff83cbbb_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":95,"col":2,"offset":2483},"end":{"line":95,"col":23,"offset":2504},"extra":{"metavars":{"$FUN":{"start":{"line":95,"col":2,"offset":2483},"end":{"line":95,"col":11,"offset":2492},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b1309d7a8a01739ce588de5fc74bc3072370e3b952c6c7ccfda098673f63d3f30e1c1da88d3a17bb0b8fd57ecfc1be120dd5be358e53fa25425a1fe32f6e0dc5_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":104,"col":14,"offset":2646},"end":{"line":105,"col":54,"offset":2723},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":104,"col":14,"offset":2646},"end":{"line":104,"col":25,"offset":2657},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b86b26df581452b401a460b370f5ba8bc2477043c45531a216446414ba356e8a0389a8f96656a0e7e876f7d1728d6d32ee0636dfb88391fdf533db957e1a6619_0","lines":"\twhile ((c = getopt_long(argc, argv,\n\t                        short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":104,"col":32,"offset":2664},"end":{"line":104,"col":36,"offset":2668},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1bffe98869b7277b7655c068861e555ebeab9c1f64a44b49aba2b26df6daa4fbbe2480e7d7360296723063811b4a43bebc623d805be849ea3357cf05ff83cbbb_1","lines":"\twhile ((c = getopt_long(argc, argv,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":106,"col":11,"offset":2744},"end":{"line":106,"col":12,"offset":2745},"extra":{"metavars":{"$VAR":{"start":{"line":106,"col":11,"offset":2744},"end":{"line":106,"col":12,"offset":2745},"abstract_content":"c","propagated_value":{"svalue_start":{"line":104,"col":14,"offset":2646},"svalue_end":{"line":105,"col":54,"offset":2723},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}},"$VAL2":{"start":{"line":107,"col":9,"offset":2757},"end":{"line":107,"col":12,"offset":2760},"abstract_content":"'i'"},"$VAL1":{"start":{"line":146,"col":9,"offset":3487},"end":{"line":146,"col":12,"offset":3490},"abstract_content":"'V'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"985d2bc957e6b957ae83b8b34bc86a121c136b346ff7bf2b611ed1407ed85a83cd7a43b6934170b840d8e30025a5b636bc894f100ad26f0d409f1a440cd6588e_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":106,"col":11,"offset":2744},"end":{"line":106,"col":12,"offset":2745},"extra":{"metavars":{"$VAR":{"start":{"line":106,"col":11,"offset":2744},"end":{"line":106,"col":12,"offset":2745},"abstract_content":"c","propagated_value":{"svalue_start":{"line":104,"col":14,"offset":2646},"svalue_end":{"line":105,"col":54,"offset":2723},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bca342a1a91ed24dd534487e7f8a771cc78b1ca2506e3af65a38fa3c98a9335b59e49b965500bcaa8bd32c2e9ae326650e6c799239fefd35e8950c549ea8ca12_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":108,"col":5,"offset":2766},"end":{"line":108,"col":19,"offset":2780},"extra":{"metavars":{"$NARROW":{"start":{"line":108,"col":5,"offset":2766},"end":{"line":108,"col":15,"offset":2776},"abstract_content":"short_info"},"$LARGE":{"start":{"line":108,"col":18,"offset":2779},"end":{"line":108,"col":19,"offset":2780},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a5e3844030716000dd2c6c63103c3a5bc6c2ca3950ee1f3113493f13bc377785390d5eadf2dbd4568864bf979811a616e0694789ba94aa48a3e71636c5c51739_0","lines":"\t\t\t\tshort_info = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":112,"col":5,"offset":2823},"end":{"line":112,"col":18,"offset":2836},"extra":{"metavars":{"$NARROW":{"start":{"line":112,"col":5,"offset":2823},"end":{"line":112,"col":14,"offset":2832},"abstract_content":"long_info"},"$LARGE":{"start":{"line":112,"col":17,"offset":2835},"end":{"line":112,"col":18,"offset":2836},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e3c98b17a2b7f684e6b6cbb948787448bc3d9da68360e22c32d259b8b07fbadb05cc8f16829ae798e25920116c2dc20676f016ea6ecd79a1134128f0cd9ded2_0","lines":"\t\t\t\tlong_info = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":115,"col":5,"offset":2866},"end":{"line":115,"col":16,"offset":2877},"extra":{"metavars":{"$NARROW":{"start":{"line":115,"col":5,"offset":2866},"end":{"line":115,"col":12,"offset":2873},"abstract_content":"numeric"},"$LARGE":{"start":{"line":115,"col":15,"offset":2876},"end":{"line":115,"col":16,"offset":2877},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"10f09659174bfb43b819fa55a09b5d4ecd949015a45e43b9b512174d63b8f93f32ddd520421bbdba0dad31308b5b3bb7de1ce818ed0d73b586bf7582b96d7e68_0","lines":"\t\t\t\tnumeric = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":124,"col":13,"offset":3033},"end":{"line":124,"col":25,"offset":3045},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"e46b0bc1efdec2ebb158ee361098c227ff765e7031076e879c4b4ecafd58b4536c7b3d295c3b6327e66a20dd577aaa2d68b6abcfcfbff238d8cee52c674ee5db_0","lines":"\t\t\t\ttable = atoi(optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":127,"col":5,"offset":3075},"end":{"line":127,"col":19,"offset":3089},"extra":{"metavars":{"$NARROW":{"start":{"line":127,"col":5,"offset":3075},"end":{"line":127,"col":15,"offset":3085},"abstract_content":"funcs_only"},"$LARGE":{"start":{"line":127,"col":18,"offset":3088},"end":{"line":127,"col":19,"offset":3089},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3a5055ba99667ac17e5f99be6da4bc1b20e81b90aaee8179611bd6949e4e9319d1be0993069bee9e57417c71fd99b6e38636bd20e23d7b368cd2be3e28758931_0","lines":"\t\t\t\tfuncs_only = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":130,"col":5,"offset":3119},"end":{"line":130,"col":18,"offset":3132},"extra":{"metavars":{"$NARROW":{"start":{"line":130,"col":5,"offset":3119},"end":{"line":130,"col":14,"offset":3128},"abstract_content":"keys_only"},"$LARGE":{"start":{"line":130,"col":17,"offset":3131},"end":{"line":130,"col":18,"offset":3132},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c26ccd509202547654ccd8d36c6163d1cd91f22fd044e6f351954798165b0c26936ea6f0de299d5bbf794f3ea859e1beee39621764ea12d6862cad1971f8d68b_0","lines":"\t\t\t\tkeys_only = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":133,"col":5,"offset":3162},"end":{"line":133,"col":18,"offset":3175},"extra":{"metavars":{"$NARROW":{"start":{"line":133,"col":5,"offset":3162},"end":{"line":133,"col":14,"offset":3171},"abstract_content":"diac_only"},"$LARGE":{"start":{"line":133,"col":17,"offset":3174},"end":{"line":133,"col":18,"offset":3175},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e38287a1831968e631c03cef3dcdf9f9ea4d4a6463b92a599b80fadcf4743aff7ac1cd35abeb948049278508072150f0e4e06a190d4b39a5d98d9a3f2c9b192d_0","lines":"\t\t\t\tdiac_only = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":140,"col":6,"offset":3316},"end":{"line":141,"col":21,"offset":3406},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_4","lines":"\t\t\t\t\tfprintf(stderr, _(\"unknown charset %s - ignoring charset request\\n\"),\n\t\t\t\t\t        optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":162,"col":3,"offset":3818},"end":{"line":163,"col":20,"offset":3897},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_5","lines":"\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","start":{"line":178,"col":4,"offset":4159},"end":{"line":179,"col":20,"offset":4246},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e9ad4485a027e8d62c13d3d3b16e179a144d71f78f2271c2bae9271db6233af8d4da0170ca714109f7288a659b02100b8abb550180291423f1901065649dc46_6","lines":"\t\t\tprintf(_(\"Symbols recognized by %s:\\n(numeric value, symbol)\\n\\n\"),\n\t\t\t       progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":21,"col":2,"offset":368},"end":{"line":30,"col":46,"offset":828},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b8484c3a6c106b8dce99fb8c24d2d273c809541b290136f5b86dbab9e6c1848a147b1e013c9aef19cf187e6d350b73a0204a951161ea263858edf88ce3e1cdbb_0","lines":"\tfprintf(stderr, _(\"%s version %s\\n\"\n\t                  \"\\n\"\n\t                  \"Usage: %s [options]\\n\"\n\t                  \"\\n\"\n\t                  \"Valid options are:\\n\"\n\t                  \"\\n\"\n\t                  \"\t-h --help            display this help text\\n\"\n\t                  \"\t-V --version         display program version\\n\"\n\t                  \"\t-n --next-available  display number of next unallocated VT\\n\"),\n\t        progname, PACKAGE_VERSION, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":46,"col":2,"offset":1167},"end":{"line":46,"col":23,"offset":1188},"extra":{"metavars":{"$FUN":{"start":{"line":46,"col":2,"offset":1167},"end":{"line":46,"col":11,"offset":1176},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"802707f5a90bfa65e9a14c88a67ef374569f8d275e170766678840427cf54b1c42dedf64e289d7ee3a7713a88db5bc8ba5aa8d2f390946c7f35005d3e5c311d5_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":50,"col":15,"offset":1274},"end":{"line":50,"col":19,"offset":1278},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"859ccb90a8ae87632792694bbdcd43bfc762a47a6db179ce7c1c988b7562d6792cdb8cc6cc387157275c6b545c79c172528f411b97226a9e3bd48af726358f8d_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":51,"col":14,"offset":1297},"end":{"line":51,"col":61,"offset":1344},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":51,"col":14,"offset":1297},"end":{"line":51,"col":25,"offset":1308},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68854fee6104a63f39f6dc26c8b3e29190acb1b619abfdb50f5edbfbfed3460d49cefecd8517fa860caa69032694241adf3988e8117f199b7927d7f814c26215_0","lines":"\twhile ((c = getopt_long(argc, argv, \"Vhn\", long_opts, NULL)) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":51,"col":32,"offset":1315},"end":{"line":51,"col":36,"offset":1319},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"859ccb90a8ae87632792694bbdcd43bfc762a47a6db179ce7c1c988b7562d6792cdb8cc6cc387157275c6b545c79c172528f411b97226a9e3bd48af726358f8d_1","lines":"\twhile ((c = getopt_long(argc, argv, \"Vhn\", long_opts, NULL)) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","start":{"line":52,"col":11,"offset":1366},"end":{"line":52,"col":12,"offset":1367},"extra":{"metavars":{"$VAR":{"start":{"line":52,"col":11,"offset":1366},"end":{"line":52,"col":12,"offset":1367},"abstract_content":"c","propagated_value":{"svalue_start":{"line":51,"col":14,"offset":1297},"svalue_end":{"line":51,"col":61,"offset":1344},"svalue_abstract_content":"getopt_long(argc argv\"Vhn\"long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a1903eb1f061441024b6b91b284e2495632f5671cfb933cff2dfb473e92eaff99f1006708caca5b901c52eccc1240c1388967f019c872060ace7b36125f72dc7_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":36,"col":2,"offset":575},"end":{"line":36,"col":9,"offset":582},"extra":{"metavars":{"$NARROW":{"start":{"line":36,"col":2,"offset":575},"end":{"line":36,"col":5,"offset":578},"abstract_content":"arg"},"$LARGE":{"start":{"line":36,"col":8,"offset":581},"end":{"line":36,"col":9,"offset":582},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"266e458eae57649067e42e9e85dc8a7fcd59327dfcc56266f4faf143ce12a31439b89dd956bbe608832ad73b80f2ca19ff337f351af2fbcc7988d476565993d1_0","lines":"\targ = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":49,"col":7,"offset":873},"end":{"line":49,"col":25,"offset":891},"extra":{"metavars":{"$FUN":{"start":{"line":49,"col":7,"offset":873},"end":{"line":49,"col":11,"offset":877},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0672d3fd138de3c50a09bafa525dadd37cd66ad9d7e8d6f32200860b83b9e4c2e2ea7ee7996752f3d041d2cf746b6376a11ac0bc221d7294a7bbf1e6e664193d_0","lines":"\tfd = open(fnam, O_RDWR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":51,"col":8,"offset":913},"end":{"line":51,"col":28,"offset":933},"extra":{"metavars":{"$FUN":{"start":{"line":51,"col":8,"offset":913},"end":{"line":51,"col":12,"offset":917},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0672d3fd138de3c50a09bafa525dadd37cd66ad9d7e8d6f32200860b83b9e4c2e2ea7ee7996752f3d041d2cf746b6376a11ac0bc221d7294a7bbf1e6e664193d_1","lines":"\t\tfd = open(fnam, O_WRONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":53,"col":8,"offset":955},"end":{"line":53,"col":28,"offset":975},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":8,"offset":955},"end":{"line":53,"col":12,"offset":959},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0672d3fd138de3c50a09bafa525dadd37cd66ad9d7e8d6f32200860b83b9e4c2e2ea7ee7996752f3d041d2cf746b6376a11ac0bc221d7294a7bbf1e6e664193d_2","lines":"\t\tfd = open(fnam, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":69,"col":3,"offset":1176},"end":{"line":69,"col":49,"offset":1222},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"beb800bcb3e1f39546e510e138283ece840334a97d297051ed5b5698c6ad550f353926ddb9352a51558269f2ff79f60a8277773591eef207717d70271415d571_0","lines":"\t\tfprintf(stderr, _(\"Couldn't open %s\\n\"), fnam);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":85,"col":2,"offset":1451},"end":{"line":86,"col":73,"offset":1539},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"beb800bcb3e1f39546e510e138283ece840334a97d297051ed5b5698c6ad550f353926ddb9352a51558269f2ff79f60a8277773591eef207717d70271415d571_1","lines":"\tfprintf(stderr,\n\t        _(\"Couldn't get a file descriptor referring to the console\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-return","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":107,"col":1,"offset":1886},"end":{"line":107,"col":13,"offset":1898},"extra":{"metavars":{"$TYPE":{"start":{"line":106,"col":1,"offset":1882},"end":{"line":106,"col":4,"offset":1885},"abstract_content":"int"},"$FUN":{"start":{"line":107,"col":1,"offset":1886},"end":{"line":107,"col":13,"offset":1898},"abstract_content":"getfd_keymap"},"$ARG":{"start":{"line":107,"col":14,"offset":1899},"end":{"line":107,"col":18,"offset":1903},"abstract_content":"void"}},"message":"A non-void function does not have a return statement. Hence, its return value can be considered undefined.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/393","https://cwe.mitre.org/data/definitions/394"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce5b9c38be0f593541befb76e6505aad2811965dd418fad76e3e7dd4d0cf488c35566e4ca2cbd895e197752fc995d4c4db892589fca0d9f985a4da7e8a7230fb_0","lines":"getfd_keymap(void) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":133,"col":3,"offset":2426},"end":{"line":133,"col":57,"offset":2480},"extra":{"metavars":{"$FUN":{"start":{"line":133,"col":3,"offset":2426},"end":{"line":133,"col":11,"offset":2434},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6199507b364748f68fe926fb51e109f132d36b9dc23a4ed9297d8556936179d76daa943a621bb5f4db417cdb7a41b499bf3a14094e2bc7269160c87dffd680d3_0","lines":"\t\tsnprintf(ttyname + sizeof(\"/dev/tty\") - 1, 3, \"%d\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":133,"col":3,"offset":2426},"end":{"line":133,"col":57,"offset":2480},"extra":{"metavars":{"$BUF":{"start":{"line":133,"col":12,"offset":2435},"end":{"line":133,"col":44,"offset":2467},"abstract_content":"ttyname+sizeof\"/dev/tty\"-1"},"$LEN":{"start":{"line":133,"col":46,"offset":2469},"end":{"line":133,"col":47,"offset":2470},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b1512561bb96d14fbf73158c4f8e47082f36aa0922d5d2ba7abfaf4de73fc5e75b20cfeeb9f7e30192ef84bdc39d368d3bf50d6d496538c19fde4a297147a5fa_0","lines":"\t\tsnprintf(ttyname + sizeof(\"/dev/tty\") - 1, 3, \"%d\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","start":{"line":138,"col":2,"offset":2550},"end":{"line":139,"col":66,"offset":2631},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"beb800bcb3e1f39546e510e138283ece840334a97d297051ed5b5698c6ad550f353926ddb9352a51558269f2ff79f60a8277773591eef207717d70271415d571_2","lines":"\tfprintf(stderr,\n\t\t_(\"Couldn't get a file descriptor referring to the console\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":22,"col":2,"offset":323},"end":{"line":22,"col":44,"offset":365},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfb5b079a7d5e497a0673943e328cc514500ee830523a8ca0b8b299b68dd3cf394dda88520870a25b18bebaba34e012f92b0cd408437146fd5ec3a42ae59df25_0","lines":"\tfprintf(stderr, _(\"usage: getkeycodes\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":32,"col":15,"offset":493},"end":{"line":32,"col":19,"offset":497},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1decd06c0bfb1945fe01cfb50adad26edfb46f8ed9b92387f49a1325a81dbbe56a82c9726138ce9b02f6870229cd698147b9873fa05f81a4d98c5746d948e25f_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":34,"col":2,"offset":505},"end":{"line":34,"col":23,"offset":526},"extra":{"metavars":{"$FUN":{"start":{"line":34,"col":2,"offset":505},"end":{"line":34,"col":11,"offset":514},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9996ff129de8580ab90b33b191b63e991ed9ebb4c96fa124d1faf1467a131b00d301070f3b937199ef8a7da75624604a8d3a3bf264803031322b128e83884baf_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":38,"col":27,"offset":624},"end":{"line":38,"col":31,"offset":628},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1decd06c0bfb1945fe01cfb50adad26edfb46f8ed9b92387f49a1325a81dbbe56a82c9726138ce9b02f6870229cd698147b9873fa05f81a4d98c5746d948e25f_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":51,"col":3,"offset":957},"end":{"line":51,"col":11,"offset":965},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":51,"col":3,"offset":957},"end":{"line":51,"col":6,"offset":960},"abstract_content":"sc0"},"$SIGNED":{"start":{"line":51,"col":9,"offset":963},"end":{"line":51,"col":11,"offset":965},"abstract_content":"89"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b80d3f7ea17030810b3f7cdd4e37acc44905cdcd5f0af9f65d3711941902fbaf7fe1d3c08407f5f31ed1268b5d02aa291111e487f2fa8dfda10daff7daea9288_0","lines":"\t\tsc0 = 89;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":53,"col":8,"offset":982},"end":{"line":53,"col":15,"offset":989},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":53,"col":8,"offset":982},"end":{"line":53,"col":11,"offset":985},"abstract_content":"sc0"},"$SIGNED":{"start":{"line":53,"col":14,"offset":988},"end":{"line":53,"col":15,"offset":989},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7ea0538d7e6a5339a4a2885e42ec089151707eeb5775eb7467742524690b2b6631b6a8c212265ab7b93d3c8f75cc7ed601a472c87235e440f3be556ce13e12fb_0","lines":"\t\tfor (sc0 = 1; sc0 <= 88; sc0++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":60,"col":2,"offset":1124},"end":{"line":60,"col":63,"offset":1185},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfb5b079a7d5e497a0673943e328cc514500ee830523a8ca0b8b299b68dd3cf394dda88520870a25b18bebaba34e012f92b0cd408437146fd5ec3a42ae59df25_1","lines":"\tprintf(_(\"Plain scancodes xx (hex) versus keycodes (dec)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":63,"col":3,"offset":1208},"end":{"line":64,"col":62,"offset":1296},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfb5b079a7d5e497a0673943e328cc514500ee830523a8ca0b8b299b68dd3cf394dda88520870a25b18bebaba34e012f92b0cd408437146fd5ec3a42ae59df25_2","lines":"\t\tprintf(_(\"0 is an error; \"\n\t\t         \"for 1-88 (0x01-0x58) scancode equals keycode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":66,"col":3,"offset":1323},"end":{"line":67,"col":27,"offset":1411},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfb5b079a7d5e497a0673943e328cc514500ee830523a8ca0b8b299b68dd3cf394dda88520870a25b18bebaba34e012f92b0cd408437146fd5ec3a42ae59df25_3","lines":"\t\tprintf(_(\"for 1-%d (0x01-0x%02x) scancode equals keycode\\n\"),\n\t\t       sc0 - 1, sc0 - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":70,"col":7,"offset":1423},"end":{"line":70,"col":21,"offset":1437},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":7,"offset":1423},"end":{"line":70,"col":9,"offset":1425},"abstract_content":"sc"},"$SIGNED":{"start":{"line":70,"col":20,"offset":1436},"end":{"line":70,"col":21,"offset":1437},"abstract_content":"7"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e8d86b98a95eca436ae2303295b91a2c9d613d08dc8747ae5c5391102a0524d15cf964d00e50603f4206aa123f2652f0d2b0f5c0fd803a090dc4c201d854240f_0","lines":"\tfor (sc = (sc0 & ~7); sc < 256; sc++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":72,"col":4,"offset":1478},"end":{"line":72,"col":52,"offset":1526},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfb5b079a7d5e497a0673943e328cc514500ee830523a8ca0b8b299b68dd3cf394dda88520870a25b18bebaba34e012f92b0cd408437146fd5ec3a42ae59df25_4","lines":"\t\t\tprintf(_(\"\\n\\nEscaped scancodes e0 xx (hex)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":75,"col":5,"offset":1570},"end":{"line":75,"col":30,"offset":1595},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":14,"offset":13},"abstract_content":"\"\\n 0x%02x: \""},"$FMT":{"start":{"line":75,"col":12,"offset":1577},"end":{"line":75,"col":25,"offset":1590},"abstract_content":"\"\\n 0x%02x: \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2536e65b11164cc8eae78d44802586097cd1280e2ef08466939764cdc5d011902c5debd4b114aea7286a635beef961eb6e24c9f3cf62f05b0aa6777fdebb915e_0","lines":"\t\t\t\tprintf(\"\\n 0x%02x: \", sc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","start":{"line":77,"col":5,"offset":1609},"end":{"line":77,"col":36,"offset":1640},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":14,"offset":13},"abstract_content":"\"\\ne0 %02x: \""},"$FMT":{"start":{"line":77,"col":12,"offset":1616},"end":{"line":77,"col":25,"offset":1629},"abstract_content":"\"\\ne0 %02x: \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5b66e897659951d72f32d7a292216ee4f037ba438b51512011f4a34f65626602a4fb98e6c8f9fafce94d2b2c76fedb906bd53925cd7ee9b035ece80cbbd06f28_0","lines":"\t\t\t\tprintf(\"\\ne0 %02x: \", sc - 128);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":33,"col":2,"offset":663},"end":{"line":33,"col":66,"offset":727},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6f2ae2bf9b19890a83c889e53b068d392d94d692d6dc31517094bce60e163d05dc3daed87507fcfd23bc2cd2a81ce6a87e65de16f72f12292cad2f25f97cdabb_0","lines":"\tfprintf(stderr, _(\"Usage:\\n\\t%s [-s] [-C console]\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":46,"col":15,"offset":947},"end":{"line":46,"col":19,"offset":951},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96a52ff08d05a5ac2380099c689d4752cede60b4a6c4def3882eab07396d2e4e3aa0641f683b87cf317e5f2d6210ed03212b5646bf6e32b1fa35cffc717eac25_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":48,"col":2,"offset":959},"end":{"line":48,"col":23,"offset":980},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":2,"offset":959},"end":{"line":48,"col":11,"offset":968},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"10405051f84d276a58014d29dd4b50c3feed90aed1dd25973dfe6fc708bb9e47d20a0c41c7d8bab3913a607c71c36c2df55d7fe19e7d1cbd6979edd3b3448da7_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":53,"col":15,"offset":1084},"end":{"line":53,"col":19,"offset":1088},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96a52ff08d05a5ac2380099c689d4752cede60b4a6c4def3882eab07396d2e4e3aa0641f683b87cf317e5f2d6210ed03212b5646bf6e32b1fa35cffc717eac25_1","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":53,"col":41,"offset":1110},"end":{"line":53,"col":45,"offset":1114},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96a52ff08d05a5ac2380099c689d4752cede60b4a6c4def3882eab07396d2e4e3aa0641f683b87cf317e5f2d6210ed03212b5646bf6e32b1fa35cffc717eac25_2","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":56,"col":14,"offset":1176},"end":{"line":56,"col":39,"offset":1201},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":56,"col":14,"offset":1176},"end":{"line":56,"col":20,"offset":1182},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"49b4b2ca0aadf5735a0266654b20eb10d4b5455742548f8d913ace9084e7e5c41d582c1bdfc67813a042cef39723389818f9e7685632ef9bec05e260f9be1b48_0","lines":"\twhile ((c = getopt(argc, argv, \"sC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":56,"col":27,"offset":1189},"end":{"line":56,"col":31,"offset":1193},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96a52ff08d05a5ac2380099c689d4752cede60b4a6c4def3882eab07396d2e4e3aa0641f683b87cf317e5f2d6210ed03212b5646bf6e32b1fa35cffc717eac25_3","lines":"\twhile ((c = getopt(argc, argv, \"sC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":85,"col":4,"offset":1817},"end":{"line":85,"col":55,"offset":1868},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":17,"offset":16},"abstract_content":"\"0x%03x\\tU+%04x\""},"$FMT":{"start":{"line":85,"col":11,"offset":1824},"end":{"line":85,"col":27,"offset":1840},"abstract_content":"\"0x%03x\\tU+%04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ed74dea6fa20dfc4efacf591328053c41020dbdbc42cabe250f5d9e6372bb5ee776afd5261f9eac530776330f59466419e60bd07ad434d17551842905af054d_0","lines":"\t\t\tprintf(\"0x%03x\\tU+%04x\", fp, ud.entries[i].unicode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":88,"col":5,"offset":1950},"end":{"line":88,"col":47,"offset":1992},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\" U+%04x\""},"$FMT":{"start":{"line":88,"col":12,"offset":1957},"end":{"line":88,"col":21,"offset":1966},"abstract_content":"\" U+%04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b3b9b133301bb7b8dc8890f71bf75bb41d25abbf58226e32f2d4ceac1945f1587c83978cc67ac2020a38193923629aeb5ad16ee09feb480940efad62771f71dd_0","lines":"\t\t\t\tprintf(\" U+%04x\", ud.entries[++i].unicode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":94,"col":4,"offset":2121},"end":{"line":94,"col":75,"offset":2192},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":94,"col":4,"offset":2121},"end":{"line":94,"col":13,"offset":2130},"abstract_content":"mb_length"},"$SIGNED":{"start":{"line":94,"col":64,"offset":2181},"end":{"line":94,"col":65,"offset":2182},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"385c672e4c36a93ff1efce10e1a64a2eb786dc1da719c766faddfe7a6c2c928f2ade2cf7b0fdb1f4205da5e0f9c5b7984f63a366eb6c358314da83d95a4f5915_0","lines":"\t\t\tmb_length                           = wctomb(mb, ud.entries[i].unicode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","start":{"line":101,"col":4,"offset":2348},"end":{"line":103,"col":37,"offset":2451},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":26,"offset":25},"abstract_content":"\"0x%03x\\tU+%04x\\t# %s \\n\""},"$FMT":{"start":{"line":101,"col":11,"offset":2355},"end":{"line":101,"col":36,"offset":2380},"abstract_content":"\"0x%03x\\tU+%04x\\t# %s \\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a072ca9217a082cab9990365bd226db40c32bb20118ca3ce3ad500de8c84e29ea17bd47262f14d74df6cf2c457a83dcc14d9cad42aac73b77549b44da10af6a_0","lines":"\t\t\tprintf(\"0x%03x\\tU+%04x\\t# %s \\n\",\n\t\t\t       ud.entries[i].fontpos,\n\t\t\t       ud.entries[i].unicode, mb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_error.c","start":{"line":23,"col":2,"offset":369},"end":{"line":23,"col":27,"offset":394},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfcc4fd7cf2555b38361e627a7fb6e1f4dc13ac713718781235a25b59058c8cd26434fdbab8113afd277a85f3a1c737cfeb764e2690130008f3c70e8153ed176_0","lines":"\tvfprintf(stderr, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_error.c","start":{"line":41,"col":2,"offset":710},"end":{"line":41,"col":27,"offset":735},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cfcc4fd7cf2555b38361e627a7fb6e1f4dc13ac713718781235a25b59058c8cd26434fdbab8113afd277a85f3a1c737cfeb764e2690130008f3c70e8153ed176_1","lines":"\tvfprintf(stderr, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":24,"col":2,"offset":501},"end":{"line":24,"col":72,"offset":571},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_0","lines":"\tfprintf(stderr, _(\"usage: kbd_mode [-a|-u|-k|-s] [-f] [-C device]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":33,"col":4,"offset":682},"end":{"line":33,"col":66,"offset":744},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_1","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in raw (scancode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":36,"col":4,"offset":779},"end":{"line":36,"col":71,"offset":846},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_2","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in mediumraw (keycode) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":39,"col":4,"offset":877},"end":{"line":39,"col":65,"offset":938},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_3","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in xlate (8-bit) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":42,"col":4,"offset":971},"end":{"line":42,"col":67,"offset":1034},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_4","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in Unicode (UTF-8) mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":45,"col":4,"offset":1060},"end":{"line":45,"col":64,"offset":1120},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_5","lines":"\t\t\tfprintf(stream, _(\"The keyboard is in some unknown mode\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":54,"col":15,"offset":1255},"end":{"line":54,"col":19,"offset":1259},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7f7084d1250ff4b1efe8fc04025c2466fbffe3138c5878ada807e73169b219c7177858e4b348d51defddad33092ec8d4ce0e9389d46a921e3331d6f8874b9e09_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":56,"col":2,"offset":1267},"end":{"line":56,"col":23,"offset":1288},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":2,"offset":1267},"end":{"line":56,"col":11,"offset":1276},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d41dc879aefe6a8ad35d72e88be7ea2012b765be1e9a3c24116455a9528f85622ba160bb78077b4cea0c7f30e734cea72b7a98d3090d34ba56f063b7e6d33f39_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":60,"col":27,"offset":1386},"end":{"line":60,"col":31,"offset":1390},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7f7084d1250ff4b1efe8fc04025c2466fbffe3138c5878ada807e73169b219c7177858e4b348d51defddad33092ec8d4ce0e9389d46a921e3331d6f8874b9e09_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":63,"col":14,"offset":1444},"end":{"line":63,"col":43,"offset":1473},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":63,"col":14,"offset":1444},"end":{"line":63,"col":20,"offset":1450},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"816639ed519ae8218d119af87d8a421eec4a854ac6614f8566fc618240859946d6eab5166d4b5f48a022da970ea8fb74d13e9a89269104b5cf110792bc9c5d02_0","lines":"\twhile ((c = getopt(argc, argv, \"auskfC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":63,"col":27,"offset":1457},"end":{"line":63,"col":31,"offset":1461},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7f7084d1250ff4b1efe8fc04025c2466fbffe3138c5878ada807e73169b219c7177858e4b348d51defddad33092ec8d4ce0e9389d46a921e3331d6f8874b9e09_2","lines":"\twhile ((c = getopt(argc, argv, \"auskfC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","start":{"line":127,"col":4,"offset":2686},"end":{"line":128,"col":69,"offset":2815},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f303a5522a42ddadcf6035e791f36561bddc304c3d776247413897fc2513f2f7ac1bf44d338dfb1d22760da2f4e4bd110409bad7f2615c8c678b63dde0381cf1_6","lines":"\t\t\tfprintf(stderr, _(\"Changing to the requested mode may make \"\n\t\t\t\t\"your keyboard unusable, please use -f to force the change.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":20,"col":2,"offset":351},"end":{"line":28,"col":19,"offset":825},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9e941a51ffb15ad4850f03bbb91ae683275ed3c926e27b458998bc0d9a195f024809debff9f901456971b7a68c03006f63e21c9635563d603752373c16964c29_0","lines":"\tfprintf(stderr,\n\t        _(\"Usage: %1$s [-C DEVICE] getmode [text|graphics]\\n\"\n\t          \"   or: %1$s [-C DEVICE] gkbmode [raw|xlate|mediumraw|unicode]\\n\"\n\t          \"   or: %1$s [-C DEVICE] gkbmeta [metabit|escprefix]\\n\"\n\t          \"   or: %1$s [-C DEVICE] gkbled  [scrolllock|numlock|capslock]\\n\"\n\t          \"Other options:\\n\"\n\t          \"   -h                   print this usage message\\n\"\n\t          \"   -V                   print version number\\n\"),\n\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":49,"col":15,"offset":1136},"end":{"line":49,"col":19,"offset":1140},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff75daeb4abeea8ed434de3aa758747e771f0836091506200b2eaa9ef3e001c38dfa23b371e46bb0bdee0f818609df378e72f8cc2fd0aec1deaad3b9a4a695e3_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":51,"col":2,"offset":1148},"end":{"line":51,"col":23,"offset":1169},"extra":{"metavars":{"$FUN":{"start":{"line":51,"col":2,"offset":1148},"end":{"line":51,"col":11,"offset":1157},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"197989c6ee3e60953880e3e079a2bdf62103fe1de726c84732002ec84c5ac6f51918c8a2dda50d818e6c1f0d19759e1068ba7d7db17f6512f522e2ab32d36e35_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":55,"col":14,"offset":1254},"end":{"line":55,"col":40,"offset":1280},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":55,"col":14,"offset":1254},"end":{"line":55,"col":20,"offset":1260},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fb5e2043e6fc484bb43f2b03e5430f376ee32645892ad3c11203c35dd4cf9a791a1af341282aa6c73edae4be27eb339df4f906e72666b56c786906e2175ec1fd_0","lines":"\twhile ((c = getopt(argc, argv, \"C:hV\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":55,"col":27,"offset":1267},"end":{"line":55,"col":31,"offset":1271},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff75daeb4abeea8ed434de3aa758747e771f0836091506200b2eaa9ef3e001c38dfa23b371e46bb0bdee0f818609df378e72f8cc2fd0aec1deaad3b9a4a695e3_1","lines":"\twhile ((c = getopt(argc, argv, \"C:hV\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":56,"col":11,"offset":1302},"end":{"line":56,"col":12,"offset":1303},"extra":{"metavars":{"$VAR":{"start":{"line":56,"col":11,"offset":1302},"end":{"line":56,"col":12,"offset":1303},"abstract_content":"c","propagated_value":{"svalue_start":{"line":55,"col":14,"offset":1254},"svalue_end":{"line":55,"col":40,"offset":1280},"svalue_abstract_content":"getopt(argc argv\"C:hV\")"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"93838dde40b870d14b9222718ba570609838aa3c71ee25f4c353ca03e1866d8be94232dace0325c5fc0ca8a7573f9cb3cac96486cecd029227497c528a03f039_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":75,"col":11,"offset":1639},"end":{"line":75,"col":15,"offset":1643},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff75daeb4abeea8ed434de3aa758747e771f0836091506200b2eaa9ef3e001c38dfa23b371e46bb0bdee0f818609df378e72f8cc2fd0aec1deaad3b9a4a695e3_2","lines":"\taction = argv[optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":78,"col":11,"offset":1686},"end":{"line":78,"col":15,"offset":1690},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff75daeb4abeea8ed434de3aa758747e771f0836091506200b2eaa9ef3e001c38dfa23b371e46bb0bdee0f818609df378e72f8cc2fd0aec1deaad3b9a4a695e3_3","lines":"\t\tvalue = argv[optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":87,"col":11,"offset":1973},"end":{"line":87,"col":15,"offset":1977},"extra":{"metavars":{"$VAR":{"start":{"line":87,"col":11,"offset":1973},"end":{"line":87,"col":15,"offset":1977},"abstract_content":"mode"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"05bb3113c93275c47ca234a3f49bf542abf39672d0a669a6d9aad5b95be85a0841c7c84c0fcd7b3e6898e24bcb277af6995dadb52b5b29c5f8b5b14cac859bcd_0","lines":"\t\tswitch (mode) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":100,"col":11,"offset":2252},"end":{"line":100,"col":15,"offset":2256},"extra":{"metavars":{"$VAR":{"start":{"line":100,"col":11,"offset":2252},"end":{"line":100,"col":15,"offset":2256},"abstract_content":"mode"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"05bb3113c93275c47ca234a3f49bf542abf39672d0a669a6d9aad5b95be85a0841c7c84c0fcd7b3e6898e24bcb277af6995dadb52b5b29c5f8b5b14cac859bcd_1","lines":"\t\tswitch (mode) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":119,"col":11,"offset":2641},"end":{"line":119,"col":15,"offset":2645},"extra":{"metavars":{"$VAR":{"start":{"line":119,"col":11,"offset":2641},"end":{"line":119,"col":15,"offset":2645},"abstract_content":"mode"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"05bb3113c93275c47ca234a3f49bf542abf39672d0a669a6d9aad5b95be85a0841c7c84c0fcd7b3e6898e24bcb277af6995dadb52b5b29c5f8b5b14cac859bcd_2","lines":"\t\tswitch (mode) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","start":{"line":135,"col":4,"offset":2957},"end":{"line":138,"col":23,"offset":3164},"extra":{"metavars":{"$EXPR1":{"start":{"line":135,"col":10,"offset":2963},"end":{"line":135,"col":14,"offset":2967},"abstract_content":"mode","propagated_value":{"svalue_start":{"line":132,"col":11,"offset":2924},"svalue_end":{"line":132,"col":22,"offset":2935},"svalue_abstract_content":"flags&0x7"}},"$EXPR2":{"start":{"line":135,"col":17,"offset":2970},"end":{"line":135,"col":24,"offset":2977},"abstract_content":"LED_SCR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56b238b970f0dc928cac67a7121ab6707844f79bea614156fb0ec214c21d1640c615196d1978aaf9b4828e75c9da70a466a1beb433044fd16f8e4424e1e2eb63_0","lines":"\t\t\tif (((mode & LED_SCR) && !strcasecmp(value, \"scrolllock\")) ||\n\t\t\t    ((mode & LED_NUM) && !strcasecmp(value, \"numlock\")) ||\n\t\t\t    ((mode & LED_CAP) && !strcasecmp(value, \"capslock\")))\n\t\t\t\trc = EXIT_SUCCESS;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":157,"col":3,"offset":4840},"end":{"line":158,"col":31,"offset":4932},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7de520e7e334e4b6eccd733d08679fbfff04e7362d9741ac043e60db6f3fbefedae7b88b9736fe6a315164446b396fad72ffb745ddd9157ce07cffbab67a8795_0","lines":"\t\tprintf(_(\"Typematic Rate set to %.1f cps (delay = %d ms)\\n\"),\n\t\t       rate, kbdrep_s.delay);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":175,"col":3,"offset":5294},"end":{"line":176,"col":31,"offset":5386},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7de520e7e334e4b6eccd733d08679fbfff04e7362d9741ac043e60db6f3fbefedae7b88b9736fe6a315164446b396fad72ffb745ddd9157ce07cffbab67a8795_1","lines":"\t\tprintf(_(\"Typematic Rate set to %.1f cps (delay = %d ms)\\n\"),\n\t\t       rate, kbdrep_s.delay);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":194,"col":7,"offset":5669},"end":{"line":194,"col":33,"offset":5695},"extra":{"metavars":{"$FUN":{"start":{"line":194,"col":7,"offset":5669},"end":{"line":194,"col":11,"offset":5673},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2945b6968dd4d91b5d1e7a9ab0c39353c6fe62e6359cda323b09fe1d4442e69e0c5010b13dcf23075e9906b2767e878f263757e7da88515e04974a8121c288a_0","lines":"\tfd = open(\"/dev/kbd\", O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":244,"col":15,"offset":6814},"end":{"line":244,"col":19,"offset":6818},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e59a7ec2e3785859d32dece727880377939a9bebb6155f0e0c56319f1479ae0d6399d1596fd33c120fe807676f98de6152a6d218c128340bb623864959f17b1c_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":246,"col":2,"offset":6826},"end":{"line":246,"col":23,"offset":6847},"extra":{"metavars":{"$FUN":{"start":{"line":246,"col":2,"offset":6826},"end":{"line":246,"col":11,"offset":6835},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ec1c6191b4a5ae35c508aeb4b738f7d4473171380666602e0fecb2bd1945926fe78eb97d4abd3c7be7e87c1152b96a5cca62d5ea0f00fc0fea63d10749adf5e1_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":251,"col":15,"offset":6951},"end":{"line":251,"col":19,"offset":6955},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e59a7ec2e3785859d32dece727880377939a9bebb6155f0e0c56319f1479ae0d6399d1596fd33c120fe807676f98de6152a6d218c128340bb623864959f17b1c_1","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":251,"col":41,"offset":6977},"end":{"line":251,"col":45,"offset":6981},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e59a7ec2e3785859d32dece727880377939a9bebb6155f0e0c56319f1479ae0d6399d1596fd33c120fe807676f98de6152a6d218c128340bb623864959f17b1c_2","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":254,"col":14,"offset":7043},"end":{"line":254,"col":41,"offset":7070},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":254,"col":14,"offset":7043},"end":{"line":254,"col":20,"offset":7049},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6e0f45c51c59882237694a6ccd0bc641ff9d7a922ac2491ec3e3ab2e167381dd6dfd4177939ae191d6d1552a22a9579ef57da0c6b28b1bac3cec6629594e231c_0","lines":"\twhile ((c = getopt(argc, argv, \"r:d:s\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":254,"col":27,"offset":7056},"end":{"line":254,"col":31,"offset":7060},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e59a7ec2e3785859d32dece727880377939a9bebb6155f0e0c56319f1479ae0d6399d1596fd33c120fe807676f98de6152a6d218c128340bb623864959f17b1c_3","lines":"\twhile ((c = getopt(argc, argv, \"r:d:s\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":257,"col":12,"offset":7121},"end":{"line":257,"col":24,"offset":7133},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"fdba8e9fad2560244a23cf2d45f67272f66897f550e43f0477db1672162ce670e071a57abee22c063b0cc3fde7cd57a6c32b57ab249f1d60a21c7df01c1c5501_0","lines":"\t\t\t\trate = atof(optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":260,"col":13,"offset":7171},"end":{"line":260,"col":25,"offset":7183},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"fdba8e9fad2560244a23cf2d45f67272f66897f550e43f0477db1672162ce670e071a57abee22c063b0cc3fde7cd57a6c32b57ab249f1d60a21c7df01c1c5501_1","lines":"\t\t\t\tdelay = atoi(optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":266,"col":5,"offset":7252},"end":{"line":267,"col":78,"offset":7345},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7de520e7e334e4b6eccd733d08679fbfff04e7362d9741ac043e60db6f3fbefedae7b88b9736fe6a315164446b396fad72ffb745ddd9157ce07cffbab67a8795_2","lines":"\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"Usage: kbdrate [-V | --version] [-s] [-r rate] [-d delay]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":280,"col":7,"offset":7550},"end":{"line":280,"col":12,"offset":7555},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":280,"col":7,"offset":7550},"end":{"line":280,"col":8,"offset":7551},"abstract_content":"i"},"$SIGNED":{"start":{"line":280,"col":11,"offset":7554},"end":{"line":280,"col":12,"offset":7555},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"20a319951f0f8b4a82b319859f980441e76fef9d3cbec983be01836fb32f3457e4e10d6e5a5023f97b3ff48b6ce751777cf752207408f0c6df91f81dcad5bc34_0","lines":"\tfor (i = 0; i < RATE_COUNT; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":287,"col":7,"offset":7669},"end":{"line":287,"col":12,"offset":7674},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":287,"col":7,"offset":7669},"end":{"line":287,"col":8,"offset":7670},"abstract_content":"i"},"$SIGNED":{"start":{"line":287,"col":11,"offset":7673},"end":{"line":287,"col":12,"offset":7674},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"20a319951f0f8b4a82b319859f980441e76fef9d3cbec983be01836fb32f3457e4e10d6e5a5023f97b3ff48b6ce751777cf752207408f0c6df91f81dcad5bc34_1","lines":"\tfor (i = 0; i < DELAY_COUNT; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":294,"col":12,"offset":7796},"end":{"line":294,"col":37,"offset":7821},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":12,"offset":7796},"end":{"line":294,"col":16,"offset":7800},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2945b6968dd4d91b5d1e7a9ab0c39353c6fe62e6359cda323b09fe1d4442e69e0c5010b13dcf23075e9906b2767e878f263757e7da88515e04974a8121c288a_1","lines":"\tif ((fd = open(\"/dev/port\", O_RDWR)) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":298,"col":2,"offset":7897},"end":{"line":298,"col":33,"offset":7928},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"8295345e813b26a9cd54a33d16773bddb26d64f0b44605177326a2cf2316789fa0bc38463ce5edb4631b44134de3566fe242f59d57de48a1edefea4a717b1f31_0","lines":"\tsignal(SIGALRM, sigalrmhandler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":303,"col":7,"offset":7976},"end":{"line":303,"col":25,"offset":7994},"extra":{"metavars":{"$FUN":{"start":{"line":303,"col":7,"offset":7976},"end":{"line":303,"col":11,"offset":7980},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f194898e845e003174ed63de0f7d887c402132846a91f0a3a16d174b4d0b12d1a22f3c6aa88a1fa47f86fca76119dc4c3bf205df54f22ca03962d9b548d5314e_0","lines":"\t\tif (read(fd, &data, 1) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":303,"col":7,"offset":7976},"end":{"line":303,"col":25,"offset":7994},"extra":{"metavars":{"$FD":{"start":{"line":303,"col":12,"offset":7981},"end":{"line":303,"col":14,"offset":7983},"abstract_content":"fd","propagated_value":{"svalue_start":{"line":294,"col":12,"offset":7796},"svalue_end":{"line":294,"col":37,"offset":7821},"svalue_abstract_content":"open(\"/dev/port\"O_RDWR)"}},"$BUF":{"start":{"line":303,"col":16,"offset":7985},"end":{"line":303,"col":21,"offset":7990},"abstract_content":"&data"},"$LEN":{"start":{"line":303,"col":23,"offset":7992},"end":{"line":303,"col":24,"offset":7993},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"620fb7af7f18991333afc07010ee3fc0ca95c6776213e30492bfbe8820121597969ddc56062c2512f61e9455f062608852cdb5404257872d26e5e4121ad013dd_0","lines":"\t\tif (read(fd, &data, 1) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":309,"col":2,"offset":8113},"end":{"line":309,"col":13,"offset":8124},"extra":{"metavars":{"$NARROW":{"start":{"line":309,"col":2,"offset":8113},"end":{"line":309,"col":6,"offset":8117},"abstract_content":"data"},"$LARGE":{"start":{"line":309,"col":9,"offset":8120},"end":{"line":309,"col":13,"offset":8124},"abstract_content":"0xf3"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95e07dd6a06aba4596c6634eb44034a9a2b3872ba4a7e2c0f7b415f0b2bd083cf6ba5dda169f64c233ad377a1c7f412efcb03f86ccbb25a076fa4d141cabb13a_0","lines":"\tdata = 0xf3; /* set typematic rate */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":316,"col":7,"offset":8266},"end":{"line":316,"col":25,"offset":8284},"extra":{"metavars":{"$FUN":{"start":{"line":316,"col":7,"offset":8266},"end":{"line":316,"col":11,"offset":8270},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f194898e845e003174ed63de0f7d887c402132846a91f0a3a16d174b4d0b12d1a22f3c6aa88a1fa47f86fca76119dc4c3bf205df54f22ca03962d9b548d5314e_1","lines":"\t\tif (read(fd, &data, 1) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":316,"col":7,"offset":8266},"end":{"line":316,"col":25,"offset":8284},"extra":{"metavars":{"$FD":{"start":{"line":316,"col":12,"offset":8271},"end":{"line":316,"col":14,"offset":8273},"abstract_content":"fd"},"$BUF":{"start":{"line":316,"col":16,"offset":8275},"end":{"line":316,"col":21,"offset":8280},"abstract_content":"&data"},"$LEN":{"start":{"line":316,"col":23,"offset":8282},"end":{"line":316,"col":24,"offset":8283},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"620fb7af7f18991333afc07010ee3fc0ca95c6776213e30492bfbe8820121597969ddc56062c2512f61e9455f062608852cdb5404257872d26e5e4121ad013dd_1","lines":"\t\tif (read(fd, &data, 1) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":332,"col":3,"offset":8536},"end":{"line":334,"col":44,"offset":8684},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7de520e7e334e4b6eccd733d08679fbfff04e7362d9741ac043e60db6f3fbefedae7b88b9736fe6a315164446b396fad72ffb745ddd9157ce07cffbab67a8795_3","lines":"\t\tprintf(_(\"Typematic Rate set to %.1f cps (delay = %d ms)\\n\"),\n\t\t       valid_rates[value & 0x1f] / 10.0,\n\t\t       valid_delays[(value & 0x60) >> 5]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":97,"col":3,"offset":2067},"end":{"line":97,"col":61,"offset":2125},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"663a31cc8a0c713616672594d3959a5eee57f097e4f61f64270295b023bda05bef97eeeddf170578bc845807ed5480bf8423ce50337b11bdfdcc93467b580ab3_0","lines":"\t\tfprintf(stderr, _(\"bug: getfont called with count<256\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":101,"col":3,"offset":2158},"end":{"line":101,"col":65,"offset":2220},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"663a31cc8a0c713616672594d3959a5eee57f097e4f61f64270295b023bda05bef97eeeddf170578bc845807ed5480bf8423ce50337b11bdfdcc93467b580ab3_1","lines":"\t\tfprintf(stderr, _(\"bug: getfont using GIO_FONT needs buf.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":155,"col":26,"offset":3382},"end":{"line":155,"col":41,"offset":3397},"extra":{"metavars":{"$FUN":{"start":{"line":155,"col":26,"offset":3382},"end":{"line":155,"col":32,"offset":3388},"abstract_content":"malloc"},"$X":{"start":{"line":155,"col":33,"offset":3389},"end":{"line":155,"col":35,"offset":3391},"abstract_content":"32"},"$Y":{"start":{"line":155,"col":38,"offset":3394},"end":{"line":155,"col":40,"offset":3396},"abstract_content":"ct"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85212b2f0edc928bc8a5a9f8a8d7541f44d2744fc2016be8aad9a31151dbb6b7d21bfe8a1f4a2ac026776a9f55dac69153be4f88b6c825769a0e81e3796d89ce_0","lines":"\t\tunsigned char *mybuf = malloc(32 * ct);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":155,"col":26,"offset":3382},"end":{"line":155,"col":41,"offset":3397},"extra":{"metavars":{"$FUN":{"start":{"line":155,"col":26,"offset":3382},"end":{"line":155,"col":32,"offset":3388},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ceb3960ddea074e46711fcffedf044bb1d76f8e337f40cf056a1b877227fc1bd78c779c11d54bee6fb26f0706fa456bbd26db6d78e4e03bba79ab2a04027187b_0","lines":"\t\tunsigned char *mybuf = malloc(32 * ct);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":158,"col":4,"offset":3419},"end":{"line":158,"col":55,"offset":3470},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"663a31cc8a0c713616672594d3959a5eee57f097e4f61f64270295b023bda05bef97eeeddf170578bc845807ed5480bf8423ce50337b11bdfdcc93467b580ab3_2","lines":"\t\t\tfprintf(stderr, _(\"%s: out of memory\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":162,"col":3,"offset":3521},"end":{"line":162,"col":33,"offset":3551},"extra":{"metavars":{"$FUN":{"start":{"line":162,"col":3,"offset":3521},"end":{"line":162,"col":9,"offset":3527},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c64d49bad4723710ab6761df777c8f4ef794408db44ee832fef3cdda6973c37e578f4be132d2aaf6bb6540cc4155de334412322ec262d7f5e05c931ef2385501_0","lines":"\t\tmemcpy(mybuf, buf, 32 * count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":179,"col":3,"offset":3922},"end":{"line":179,"col":91,"offset":4010},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":37,"offset":36},"abstract_content":"\"%s: putfont: %d,%dx%d:failed: %d\\n\""},"$ARG1":{"start":{"line":179,"col":11,"offset":3930},"end":{"line":179,"col":17,"offset":3936},"abstract_content":"stderr"},"$FMT":{"start":{"line":179,"col":19,"offset":3938},"end":{"line":179,"col":55,"offset":3974},"abstract_content":"\"%s: putfont: %d,%dx%d:failed: %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"36d759e5625b37c979e8cf3019d3a4d070b688dc9d9b3d2022160f567025f7fc6bd99fe39f9832e110c8f02f72babc88938a4514911fce34f70aa22e57302e67_0","lines":"\t\tfprintf(stderr, \"%s: putfont: %d,%dx%d:failed: %d\\n\", progname, count, width, height, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","start":{"line":188,"col":3,"offset":4199},"end":{"line":188,"col":93,"offset":4289},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":39,"offset":38},"abstract_content":"\"%s: putfont: %d,%dx%d:  failed: %d\\n\""},"$ARG1":{"start":{"line":188,"col":11,"offset":4207},"end":{"line":188,"col":17,"offset":4213},"abstract_content":"stderr"},"$FMT":{"start":{"line":188,"col":19,"offset":4215},"end":{"line":188,"col":57,"offset":4253},"abstract_content":"\"%s: putfont: %d,%dx%d:  failed: %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"501a813e9de748f268280982111bbb85285cf3b98753ef7557bdc0c8a35aa77c96a33bb03b3305550de2923a1f24c6016765610530c3fb36c39c74d3eade3452_0","lines":"\t\tfprintf(stderr, \"%s: putfont: %d,%dx%d:  failed: %d\\n\", progname, count, width, height, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":150,"col":7,"offset":4104},"end":{"line":150,"col":42,"offset":4139},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":7,"offset":4104},"end":{"line":150,"col":13,"offset":4110},"abstract_content":"malloc"},"$X":{"start":{"line":150,"col":14,"offset":4111},"end":{"line":150,"col":16,"offset":4113},"abstract_content":"ct","propagated_value":{"svalue_start":{"line":148,"col":16,"offset":4051},"svalue_end":{"line":148,"col":27,"offset":4062},"svalue_abstract_content":"ud.entry_ct"}},"$Y":{"start":{"line":150,"col":19,"offset":4116},"end":{"line":150,"col":41,"offset":4138},"abstract_content":"sizeof(struct unipair)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2832a7fd37b7da934d53c5cf32bc923aafd1bed4b86830a2396bf8993209ee2d90ecde93f77fd6a8ece8b166b9c53984385b90fbda2b25e992db21ff4cf12e09_0","lines":"\t\t    malloc(ct * sizeof(struct unipair));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":150,"col":7,"offset":4104},"end":{"line":150,"col":42,"offset":4139},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":7,"offset":4104},"end":{"line":150,"col":13,"offset":4110},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b04de4a13dc09bff59bdef1b2a5a807305b8354d6c68e22a01933ab5ff75edbedba8051c766823484b0c7919c08294a7fe7962aca0deb80c9a15edc20ddbe180_0","lines":"\t\t    malloc(ct * sizeof(struct unipair));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":152,"col":4,"offset":4172},"end":{"line":152,"col":55,"offset":4223},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14d400fbcbe11ab215c8c88ba05d3a4af196c85ca710ca5f9a119a23af86d9605d29d7ce173474f304cde83253571af57109cd35ac6c3f84672544dcfa184300_0","lines":"\t\t\tfprintf(stderr, _(\"%s: out of memory\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":160,"col":4,"offset":4350},"end":{"line":162,"col":28,"offset":4448},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14d400fbcbe11ab215c8c88ba05d3a4af196c85ca710ca5f9a119a23af86d9605d29d7ce173474f304cde83253571af57109cd35ac6c3f84672544dcfa184300_1","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"strange... ct changed from %d to %d\\n\"),\n\t\t\t        ct, ud.entry_ct);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":186,"col":4,"offset":4936},"end":{"line":188,"col":52,"offset":5062},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14d400fbcbe11ab215c8c88ba05d3a4af196c85ca710ca5f9a119a23af86d9605d29d7ce173474f304cde83253571af57109cd35ac6c3f84672544dcfa184300_2","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"It seems this kernel is older than 1.1.92\\n\"\n\t\t\t          \"No Unicode mapping table loaded.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":18,"col":13,"offset":297},"end":{"line":18,"col":31,"offset":315},"extra":{"metavars":{"$FUN":{"start":{"line":18,"col":13,"offset":297},"end":{"line":18,"col":19,"offset":303},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1916ce62896d41789ad26c9c6ca0dd43ad27a40f8101fb4a8b0d0d085e501df29504a1a98c439c7264b00cbe8ba5caa7eb6d3b9599fab6b84f8cf4a1641bcb89_0","lines":"\ta->array = calloc(size, memb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":32,"col":2,"offset":479},"end":{"line":32,"col":17,"offset":494},"extra":{"metavars":{"$PTR":{"start":{"line":32,"col":7,"offset":484},"end":{"line":32,"col":15,"offset":492},"abstract_content":"a->->array"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3b52a91f637ab11699efafb824b8576dc1703ecadca1873b1234a15607bf1f0f20912d12b37161c521fd99dd48dde7cc84b80d4ca768fad4358e74117c83b899_0","lines":"\tfree(a->array);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":59,"col":7,"offset":864},"end":{"line":59,"col":12,"offset":869},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":59,"col":7,"offset":864},"end":{"line":59,"col":8,"offset":865},"abstract_content":"k"},"$SIGNED":{"start":{"line":59,"col":11,"offset":868},"end":{"line":59,"col":12,"offset":869},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"495116d7586922d1557a46b79cbfa6fa3c3a85a54c13857a21342a975f95f7c59d50c8508037e0c35b180d196bc2ebd384be3e47ef4fa1334f371a50a9b38c53_0","lines":"\tfor (k = 0; k < a->memb; k++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":94,"col":15,"offset":1367},"end":{"line":94,"col":51,"offset":1403},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":15,"offset":1367},"end":{"line":94,"col":22,"offset":1374},"abstract_content":"realloc"},"$ARG1":{"start":{"line":94,"col":23,"offset":1375},"end":{"line":94,"col":31,"offset":1383},"abstract_content":"a->->array"},"$X":{"start":{"line":94,"col":33,"offset":1385},"end":{"line":94,"col":40,"offset":1392},"abstract_content":"a->->memb"},"$Y":{"start":{"line":94,"col":44,"offset":1396},"end":{"line":94,"col":49,"offset":1401},"abstract_content":"i+1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"57ec5ed46ddf103a02cd0a9c49c8f771afa25d833097c499a27af3ccacc36a2325e16e0adbeb8f8132d489a3ee2fba115f6c1bc5a887570279cf50d92b91af89_0","lines":"\t\tvoid *tmp = realloc(a->array, a->memb * (i + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":94,"col":15,"offset":1367},"end":{"line":94,"col":51,"offset":1403},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":15,"offset":1367},"end":{"line":94,"col":22,"offset":1374},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a8a791db8cc82ab31d8526464f80f09769838f1a70491c28f0c6c1dbc57610262e65f4d3ab2f6574a08e8fb21c5a3cbd5495e9f54047f23992b595ef8fe5d2f3_0","lines":"\t\tvoid *tmp = realloc(a->array, a->memb * (i + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":108,"col":6,"offset":1639},"end":{"line":108,"col":30,"offset":1663},"extra":{"metavars":{"$NARROW":{"start":{"line":108,"col":6,"offset":1639},"end":{"line":108,"col":9,"offset":1642},"abstract_content":"ret"},"$LARGE":{"start":{"line":108,"col":28,"offset":1661},"end":{"line":108,"col":29,"offset":1662},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8d66b8275c8b1d656f0ecc99b2dc60802d92a1e98f58ff8fd9b40bce0fd1ce1f36fa960df86ee279ad4921963331f24e878bd935410444fc02ba129365c6b8cb_0","lines":"\tint ret = array_resize(a, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":108,"col":6,"offset":1639},"end":{"line":108,"col":30,"offset":1663},"extra":{"metavars":{"$SIGNED":{"start":{"line":108,"col":6,"offset":1639},"end":{"line":108,"col":9,"offset":1642},"abstract_content":"ret"},"$UNSIGNED":{"start":{"line":108,"col":28,"offset":1661},"end":{"line":108,"col":29,"offset":1662},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ad72c88c89f0d77d8af4f745ca6e4bcab2f8cf72a2a9c9ab33ce77bc92dd27f9595b48c031fb3a33da2d22569e32820fbd689094679b913f705a5c3dfdc736af_0","lines":"\tint ret = array_resize(a, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":113,"col":2,"offset":1696},"end":{"line":113,"col":46,"offset":1740},"extra":{"metavars":{"$FUN":{"start":{"line":113,"col":2,"offset":1696},"end":{"line":113,"col":8,"offset":1702},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fb27428f228aa66d3ea46fd26345c7b00e2c21f2178b038c0eafa4bf666de31f618b8b0d2bd1775fa29995fd426caf0563d0ac0664c2080933a1d742510bbe0_0","lines":"\tmemcpy(a->array + (a->memb * i), e, a->memb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","start":{"line":139,"col":2,"offset":2108},"end":{"line":139,"col":53,"offset":2159},"extra":{"metavars":{"$FUN":{"start":{"line":139,"col":2,"offset":2108},"end":{"line":139,"col":8,"offset":2114},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fb27428f228aa66d3ea46fd26345c7b00e2c21f2178b038c0eafa4bf666de31f618b8b0d2bd1775fa29995fd426caf0563d0ac0664c2080933a1d742510bbe0_1","lines":"\tmemcpy(a->array + (a->memb * a->count), e, a->memb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":71,"col":4,"offset":1345},"end":{"line":71,"col":48,"offset":1389},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":4,"offset":1345},"end":{"line":71,"col":12,"offset":1353},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9dd4db8ebafb916dd5ee64922306f635f79bff5296ea0edd5967866e11cf8eeaba6c6e935e48b1afe07ffa493426338caf70b90e8608772507fe3e059618cbfc_0","lines":"\t\t\tsnprintf(buf, sizeof(buf), \"L:%d\", priority);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":76,"col":2,"offset":1487},"end":{"line":76,"col":28,"offset":1513},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"2bea502696d00080f07b2e7fd34fd7e6df13e82319fc7b28182d7ee07cd8157eff19d787b0b26f9bfde511f7b62d8842760290058a0d703aca1392af2b6732fb_0","lines":"\tvfprintf(fp, format, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":138,"col":8,"offset":2494},"end":{"line":138,"col":39,"offset":2525},"extra":{"metavars":{"$FUN":{"start":{"line":138,"col":8,"offset":2494},"end":{"line":138,"col":14,"offset":2500},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"96b18c625e21e001711e92b1a113faa70d80f643e1adf1ec1bcc420145029aafbc2b9913efa79868e1eb9541ce9430c919f91e50f3c47ca6f6c148971286cde4_0","lines":"\tptr = malloc(sizeof(struct lk_array));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":144,"col":2,"offset":2590},"end":{"line":144,"col":34,"offset":2622},"extra":{"metavars":{"$SIGNED":{"start":{"line":144,"col":2,"offset":2590},"end":{"line":144,"col":4,"offset":2592},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":144,"col":26,"offset":2614},"end":{"line":144,"col":30,"offset":2618},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7a5f7783d1524a71179f90054786cdebb56fd9edaa0dba084ebe982c8e06821c0e2559c85b488ae87544206299703b50913c7f1f2ffa87dbd42229c15d58a2df_0","lines":"\trc = lk_array_init(ptr, size, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":160,"col":8,"offset":2808},"end":{"line":160,"col":37,"offset":2837},"extra":{"metavars":{"$FUN":{"start":{"line":160,"col":8,"offset":2808},"end":{"line":160,"col":14,"offset":2814},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"96b18c625e21e001711e92b1a113faa70d80f643e1adf1ec1bcc420145029aafbc2b9913efa79868e1eb9541ce9430c919f91e50f3c47ca6f6c148971286cde4_1","lines":"\tctx = malloc(sizeof(struct lk_ctx));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":189,"col":8,"offset":3448},"end":{"line":189,"col":13,"offset":3453},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":189,"col":8,"offset":3448},"end":{"line":189,"col":9,"offset":3449},"abstract_content":"i"},"$SIGNED":{"start":{"line":189,"col":12,"offset":3452},"end":{"line":189,"col":13,"offset":3453},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45323029ec6550c5b54b92b27d989d96c0980749acca483df22e572dfe73730ad433a29e40053875136fc35dd6a2c0f3e280b83ba4d3ffa4a35fae7ff2aa72e1_0","lines":"\t\tfor (i = 0; i < ctx->keymap->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":197,"col":4,"offset":3609},"end":{"line":197,"col":14,"offset":3619},"extra":{"metavars":{"$PTR":{"start":{"line":197,"col":9,"offset":3614},"end":{"line":197,"col":12,"offset":3617},"abstract_content":"map"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7dc7e9f5c7725bc1ed43b37654d7606592e785edc2858d03dcc2c924103c6bdafddcd1370be3a555d43175173f1175b5f87138e3356e1123c29229896f1d2c56_0","lines":"\t\t\tfree(map);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":200,"col":3,"offset":3656},"end":{"line":200,"col":21,"offset":3674},"extra":{"metavars":{"$PTR":{"start":{"line":200,"col":8,"offset":3661},"end":{"line":200,"col":19,"offset":3672},"abstract_content":"ctx->->keymap"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e69272d63942212cc3dcfc5d7b4b9a9dfd326fac90bceb6fea27015fb8cdc92a4a56176147b8a96ce3cd15c580143e416cfa6db5d516aa90704d711bb6c4efe8_0","lines":"\t\tfree(ctx->keymap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":206,"col":8,"offset":3733},"end":{"line":206,"col":13,"offset":3738},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":206,"col":8,"offset":3733},"end":{"line":206,"col":9,"offset":3734},"abstract_content":"i"},"$SIGNED":{"start":{"line":206,"col":12,"offset":3737},"end":{"line":206,"col":13,"offset":3738},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45323029ec6550c5b54b92b27d989d96c0980749acca483df22e572dfe73730ad433a29e40053875136fc35dd6a2c0f3e280b83ba4d3ffa4a35fae7ff2aa72e1_1","lines":"\t\tfor (i = 0; i < ctx->func_table->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":213,"col":4,"offset":3868},"end":{"line":213,"col":14,"offset":3878},"extra":{"metavars":{"$PTR":{"start":{"line":213,"col":9,"offset":3873},"end":{"line":213,"col":12,"offset":3876},"abstract_content":"ptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3685490dc731e3735b3ac77cbafff60c7985d6a9683e2425b2474dfb4bde687fcd91adafd3683945674f88e7ee7247142b9605a76dba2cac97167f8c6de5269_0","lines":"\t\t\tfree(ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":216,"col":3,"offset":3919},"end":{"line":216,"col":25,"offset":3941},"extra":{"metavars":{"$PTR":{"start":{"line":216,"col":8,"offset":3924},"end":{"line":216,"col":23,"offset":3939},"abstract_content":"ctx->->func_table"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4a19c051479165325f18705647f11bcc694a07c20c6ca2f6885d9ebb8b692076e82b66dc665948ba161faf4b3fbaa8f4533de800b693ae2e33228a0c411afbb_0","lines":"\t\tfree(ctx->func_table);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":222,"col":8,"offset":4006},"end":{"line":222,"col":13,"offset":4011},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":222,"col":8,"offset":4006},"end":{"line":222,"col":9,"offset":4007},"abstract_content":"i"},"$SIGNED":{"start":{"line":222,"col":12,"offset":4010},"end":{"line":222,"col":13,"offset":4011},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45323029ec6550c5b54b92b27d989d96c0980749acca483df22e572dfe73730ad433a29e40053875136fc35dd6a2c0f3e280b83ba4d3ffa4a35fae7ff2aa72e1_2","lines":"\t\tfor (i = 0; i < ctx->accent_table->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":229,"col":4,"offset":4156},"end":{"line":229,"col":14,"offset":4166},"extra":{"metavars":{"$PTR":{"start":{"line":229,"col":9,"offset":4161},"end":{"line":229,"col":12,"offset":4164},"abstract_content":"ptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3685490dc731e3735b3ac77cbafff60c7985d6a9683e2425b2474dfb4bde687fcd91adafd3683945674f88e7ee7247142b9605a76dba2cac97167f8c6de5269_1","lines":"\t\t\tfree(ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":232,"col":3,"offset":4209},"end":{"line":232,"col":27,"offset":4233},"extra":{"metavars":{"$PTR":{"start":{"line":232,"col":8,"offset":4214},"end":{"line":232,"col":25,"offset":4231},"abstract_content":"ctx->->accent_table"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c742e54c18225a735381f364fc5ce8665bc6bca299c2ff637bd27fe8f73603b42ffae75c43bd568840a5a6452cf313ecdae2fdb82b92ef2e8aa51a0b73cfe0cc_0","lines":"\t\tfree(ctx->accent_table);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":239,"col":3,"offset":4331},"end":{"line":239,"col":27,"offset":4355},"extra":{"metavars":{"$PTR":{"start":{"line":239,"col":8,"offset":4336},"end":{"line":239,"col":25,"offset":4353},"abstract_content":"ctx->->key_constant"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8930feeb31f0994f0cb2ca01424a4357b67ae3d72cac9681a8315976fcc5f271d679588b2dff1d2ebef8839d72ee2021f3b28188f12679ea0a80d7861ec6f3f8_0","lines":"\t\tfree(ctx->key_constant);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":245,"col":3,"offset":4444},"end":{"line":245,"col":23,"offset":4464},"extra":{"metavars":{"$PTR":{"start":{"line":245,"col":8,"offset":4449},"end":{"line":245,"col":21,"offset":4462},"abstract_content":"ctx->->key_line"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7eb98e5ea7493ff6c0c65907934bcfd6d103bf2ff83a9c3dd244db4e6c7a20145819740829c4b7dc06e27597433ccea949ca43a8e134c234ce64634e65c35c3f_0","lines":"\t\tfree(ctx->key_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","start":{"line":48,"col":8,"offset":981},"end":{"line":48,"col":41,"offset":1014},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":8,"offset":981},"end":{"line":48,"col":14,"offset":987},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbb571b073ce0831765d3ab4f4a91b5a6ee5b29fdc4d208b51fad1fa2a9bb1ddc17ebf2cb08a9161ce8b5d0640eb20f6f09758b917a50610d7facb2c693effd5_0","lines":"\tptr = malloc(sizeof(struct lk_kbdiacr));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","start":{"line":67,"col":8,"offset":1334},"end":{"line":67,"col":41,"offset":1367},"extra":{"metavars":{"$FUN":{"start":{"line":67,"col":8,"offset":1334},"end":{"line":67,"col":14,"offset":1340},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbb571b073ce0831765d3ab4f4a91b5a6ee5b29fdc4d208b51fad1fa2a9bb1ddc17ebf2cb08a9161ce8b5d0640eb20f6f09758b917a50610d7facb2c693effd5_1","lines":"\tptr = malloc(sizeof(struct lk_kbdiacr));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","start":{"line":85,"col":2,"offset":1644},"end":{"line":85,"col":47,"offset":1689},"extra":{"metavars":{"$NARROW":{"start":{"line":85,"col":2,"offset":1644},"end":{"line":85,"col":4,"offset":1646},"abstract_content":"rc"},"$LARGE":{"start":{"line":85,"col":41,"offset":1683},"end":{"line":85,"col":46,"offset":1688},"abstract_content":"index"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"257d417bd0533d594d746affe3221b3002b4eda04c7e770dab0f8242e5422c08afe04f578d832b8bc99ed8915b72afdaf8a9dbcdb354427dd90e0657bf16a1ce_0","lines":"\trc = lk_array_unset(ctx->accent_table, index);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","start":{"line":85,"col":2,"offset":1644},"end":{"line":85,"col":47,"offset":1689},"extra":{"metavars":{"$SIGNED":{"start":{"line":85,"col":2,"offset":1644},"end":{"line":85,"col":4,"offset":1646},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":85,"col":41,"offset":1683},"end":{"line":85,"col":46,"offset":1688},"abstract_content":"index"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ae10d926274435889d38a238088146c2cc830afc744a59d2acedea6b5bf3d6aeff0e89d0c5c01f4a76bb744626f988a638cf970d82a349183f0a8a0edda43bd4_0","lines":"\trc = lk_array_unset(ctx->accent_table, index);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","start":{"line":99,"col":2,"offset":1940},"end":{"line":100,"col":26,"offset":2006},"extra":{"metavars":{"$EXPR1":{"start":{"line":99,"col":6,"offset":1944},"end":{"line":99,"col":16,"offset":1954},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":99,"col":19,"offset":1957},"end":{"line":99,"col":41,"offset":1979},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6fd5dbfa846e10164bbfe3b8ead3983c0219d31d63df6dd57cb4b34782e8f1a4ba18613065ebd47a26a126a2552b3b43f938e41b6d422bf32fd7a0150a18b5b4_0","lines":"\tif (ctx->flags & LK_FLAG_PREFER_UNICODE)\n\t\tdirection = TO_UNICODE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":62,"col":7,"offset":1484},"end":{"line":62,"col":12,"offset":1489},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":62,"col":7,"offset":1484},"end":{"line":62,"col":8,"offset":1485},"abstract_content":"i"},"$SIGNED":{"start":{"line":62,"col":11,"offset":1488},"end":{"line":62,"col":12,"offset":1489},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_0","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":64,"col":3,"offset":1533},"end":{"line":64,"col":31,"offset":1561},"extra":{"metavars":{"$NARROW":{"start":{"line":64,"col":3,"offset":1533},"end":{"line":64,"col":7,"offset":1537},"abstract_content":"flag"},"$LARGE":{"start":{"line":64,"col":29,"offset":1559},"end":{"line":64,"col":30,"offset":1560},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db1a908c9c113cc8d933bd3e8fa4939223fd36533680308d9655ddf1f84a2c48f8d987aedde75f6834db698462c7e8094cd8f4226f2d310975c6e67c080533ad_0","lines":"\t\tflag = lk_map_exists(ctx, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":70,"col":7,"offset":1635},"end":{"line":70,"col":12,"offset":1640},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":7,"offset":1635},"end":{"line":70,"col":8,"offset":1636},"abstract_content":"i"},"$SIGNED":{"start":{"line":70,"col":11,"offset":1639},"end":{"line":70,"col":12,"offset":1640},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_1","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":74,"col":8,"offset":1720},"end":{"line":74,"col":13,"offset":1725},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":74,"col":8,"offset":1720},"end":{"line":74,"col":9,"offset":1721},"abstract_content":"j"},"$SIGNED":{"start":{"line":74,"col":12,"offset":1724},"end":{"line":74,"col":13,"offset":1725},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_0","lines":"\t\tfor (j = 0; j < NR_KEYS / 2; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":103,"col":3,"offset":2183},"end":{"line":107,"col":4,"offset":2275},"extra":{"metavars":{"$EXPR1":{"start":{"line":103,"col":7,"offset":2187},"end":{"line":103,"col":15,"offset":2195},"abstract_content":"modifier"},"$EXPR2":{"start":{"line":103,"col":19,"offset":2199},"end":{"line":103,"col":25,"offset":2205},"abstract_content":"1<<i"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"511c6adb95a20e6387534a17e54240532aa5635d3149eebc7dd781cbe3ea2a8ab8f1b97c920ef8f713950bc7a7d614bc6133dbdc0a599a79bdd9807c47a837a6_0","lines":"\t\tif (modifier & (1 << i)) {\n\t\t\tif (buf[0])\n\t\t\t\tstrcat(buf, \"_\");\n\t\t\tstrcat(buf, mods[i]);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":105,"col":5,"offset":2229},"end":{"line":105,"col":21,"offset":2245},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":5,"offset":2229},"end":{"line":105,"col":11,"offset":2235},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"81901b81c7ab64c442707780201798a19b3fac859957ea8edb5c64a03e58bc5ae1a5db994e5914a69977bb7776affa03b3e3e493190b68056fbdcd5ae7bcd63f_0","lines":"\t\t\t\tstrcat(buf, \"_\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2bd1139cb061a2c3f8295baeddc90da4ec848d3d05e8a771319a1295124dd6c9a19a8d3e83c0e5ed014d65e23dbbe10a5297594e32d0c7a42a3052ca0507b242_0","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":10,"offset":2256},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"81901b81c7ab64c442707780201798a19b3fac859957ea8edb5c64a03e58bc5ae1a5db994e5914a69977bb7776affa03b3e3e493190b68056fbdcd5ae7bcd63f_1","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":24,"offset":2270},"extra":{"metavars":{"$TYPE":{"start":{"line":96,"col":9,"offset":2086},"end":{"line":96,"col":13,"offset":2090},"abstract_content":"char"},"$LEN":{"start":{"line":96,"col":18,"offset":2095},"end":{"line":96,"col":20,"offset":2097},"abstract_content":"60"},"$FUN":{"start":{"line":106,"col":4,"offset":2250},"end":{"line":106,"col":10,"offset":2256},"abstract_content":"strcat"},"$BUF":{"start":{"line":106,"col":11,"offset":2257},"end":{"line":106,"col":14,"offset":2260},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5c3a441a0e7f7b68f784bd9c6d0767432eaabe99c8972b23c6a469a0740e806f3e2a2512718f03a1ad433c5f6c3d2ab66fb3ae718a7153d1c6d78d33ea910743_0","lines":"\t\t\tstrcat(buf, mods[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":108,"col":2,"offset":2277},"end":{"line":108,"col":13,"offset":2288},"extra":{"metavars":{"$TYPE":{"start":{"line":96,"col":9,"offset":2086},"end":{"line":96,"col":13,"offset":2090},"abstract_content":"char"},"$LEN":{"start":{"line":96,"col":18,"offset":2095},"end":{"line":96,"col":20,"offset":2097},"abstract_content":"60"},"$PTR":{"start":{"line":108,"col":9,"offset":2284},"end":{"line":108,"col":12,"offset":2287},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bb37382b22e4791b2d90f1c04c03a1704f02888dfff635e7e1c0ab38d790b5a7a4d3a2f8af5a89542a82b3c78401f5dd12947848bdb707ca86172b64eee0a566_0","lines":"\treturn buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":118,"col":15,"offset":2456},"end":{"line":118,"col":34,"offset":2475},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":118,"col":15,"offset":2456},"end":{"line":118,"col":30,"offset":2471},"abstract_content":"func_buf_offset"},"$SIGNED":{"start":{"line":118,"col":33,"offset":2474},"end":{"line":118,"col":34,"offset":2475},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba4f3dbaa5f8fc3ed6e86b7e40b8c85f62951777d02f1a6c0609d10ce515dae5534bfbcb454e2097e8a0569315dbbd549ad841a824606917d32b89e362149258_0","lines":"\tunsigned int func_buf_offset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":131,"col":7,"offset":2867},"end":{"line":131,"col":12,"offset":2872},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":131,"col":7,"offset":2867},"end":{"line":131,"col":8,"offset":2868},"abstract_content":"i"},"$SIGNED":{"start":{"line":131,"col":11,"offset":2871},"end":{"line":131,"col":12,"offset":2872},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_2","lines":"\tfor (i = 0; i < MAX_NR_KEYMAPS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":135,"col":4,"offset":2971},"end":{"line":135,"col":68,"offset":3035},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":37,"offset":36},"abstract_content":"\"unsigned short %s_map[NR_KEYS] = {\""},"$ARG1":{"start":{"line":135,"col":12,"offset":2979},"end":{"line":135,"col":14,"offset":2981},"abstract_content":"fd"},"$FMT":{"start":{"line":135,"col":16,"offset":2983},"end":{"line":135,"col":52,"offset":3019},"abstract_content":"\"unsigned short %s_map[NR_KEYS] = {\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b9c631c408dea30f4d49a560dfb1cfeedfd3b1a656eebca76db225877db14e8cb9cafdbd175ca4cd83bfdc5dd4f9a63c43a69fecf0227f3e109c8db404df87d2_0","lines":"\t\t\tfprintf(fd, \"unsigned short %s_map[NR_KEYS] = {\", mk_mapname(i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":139,"col":5,"offset":3118},"end":{"line":139,"col":55,"offset":3168},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"\\t0x%04x,\""},"$ARG1":{"start":{"line":139,"col":13,"offset":3126},"end":{"line":139,"col":15,"offset":3128},"abstract_content":"fd"},"$FMT":{"start":{"line":139,"col":17,"offset":3130},"end":{"line":139,"col":28,"offset":3141},"abstract_content":"\"\\t0x%04x,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"570e3d4dd4317543bff52daff37cf873a3763c13c0b41cbbf0bbbc291ba6f9893f731199537f14c578c54bdc83dfcae7915b74f873ab4face77bde952cc05867_0","lines":"\t\t\t\tfprintf(fd, \"\\t0x%04x,\", U(lk_get_key(ctx, i, j)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":144,"col":7,"offset":3214},"end":{"line":144,"col":32,"offset":3239},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":144,"col":7,"offset":3214},"end":{"line":144,"col":11,"offset":3218},"abstract_content":"imax"},"$SIGNED":{"start":{"line":144,"col":31,"offset":3238},"end":{"line":144,"col":32,"offset":3239},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4bd513001ccbe14e6e3b5cdb8f70b56d5888783389922aaa7f66c49bcc705300e4d89f9f31628e57933abe9614043e3c0d6641cfe20e482d8e061342a6676b16_0","lines":"\tfor (imax = MAX_NR_KEYMAPS - 1; imax > 0; imax--)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":148,"col":7,"offset":3361},"end":{"line":148,"col":12,"offset":3366},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":148,"col":7,"offset":3361},"end":{"line":148,"col":8,"offset":3362},"abstract_content":"i"},"$SIGNED":{"start":{"line":148,"col":11,"offset":3365},"end":{"line":148,"col":12,"offset":3366},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_3","lines":"\tfor (i = 0; i <= imax; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":151,"col":4,"offset":3457},"end":{"line":151,"col":41,"offset":3494},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s_map,\""},"$ARG1":{"start":{"line":151,"col":12,"offset":3465},"end":{"line":151,"col":14,"offset":3467},"abstract_content":"fd"},"$FMT":{"start":{"line":151,"col":16,"offset":3469},"end":{"line":151,"col":25,"offset":3478},"abstract_content":"\"%s_map,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3392693e1c2662188d65f59ea72199ae04f7bd588744ee5d17bce4bb9581538343011a9123b8eb0ff550939c7a526f53cde52d0ee851847ca0bdf0dd8ad31aac_0","lines":"\t\t\tfprintf(fd, \"%s_map,\", mk_mapname(i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":172,"col":7,"offset":4220},"end":{"line":172,"col":12,"offset":4225},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":172,"col":7,"offset":4220},"end":{"line":172,"col":8,"offset":4221},"abstract_content":"i"},"$SIGNED":{"start":{"line":172,"col":11,"offset":4224},"end":{"line":172,"col":12,"offset":4225},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_4","lines":"\tfor (i = 0; i < maxfunc; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":184,"col":23,"offset":4501},"end":{"line":184,"col":33,"offset":4511},"extra":{"metavars":{"$TYPE":{"start":{"line":173,"col":3,"offset":4249},"end":{"line":173,"col":7,"offset":4253},"abstract_content":"char"},"$PTR2":{"start":{"line":184,"col":23,"offset":4501},"end":{"line":184,"col":26,"offset":4504},"abstract_content":"ptr"},"$PTR1":{"start":{"line":184,"col":29,"offset":4507},"end":{"line":184,"col":33,"offset":4511},"abstract_content":"func"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c37b7a914011e0eca64b752f1dcb2e24bdae78ef6f647ef02ff5416c0e4f7a3365815115effc8741acea465fdaacf3ffefb68a4b30f720c728982a15f07f7d93_0","lines":"\t\tfunc_buf_offset += (ptr - func + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":197,"col":7,"offset":4825},"end":{"line":197,"col":12,"offset":4830},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":197,"col":7,"offset":4825},"end":{"line":197,"col":8,"offset":4826},"abstract_content":"i"},"$SIGNED":{"start":{"line":197,"col":11,"offset":4829},"end":{"line":197,"col":12,"offset":4830},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_5","lines":"\tfor (i = 0; i < maxfunc; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":207,"col":2,"offset":5067},"end":{"line":238,"col":3,"offset":5945},"extra":{"metavars":{"$EXPR1":{"start":{"line":207,"col":6,"offset":5071},"end":{"line":207,"col":16,"offset":5081},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":207,"col":19,"offset":5084},"end":{"line":207,"col":41,"offset":5106},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2ee095188da342be1a6797eb33f174793560da3d6f37533bfc46c8f0575f094df49e301acfdcb669c6eb8635c809b654016e180cf0ddc1de9e3892bb4256b5e_0","lines":"\tif (ctx->flags & LK_FLAG_PREFER_UNICODE) {\n\t\tfprintf(fd, \"\\nstruct kbdiacruc accent_table[MAX_DIACR] = {\\n\");\n\t\tfor (i = 0; i < ctx->accent_table->count; i++) {\n\t\t\tkddiac = lk_array_get_ptr(ctx->accent_table, i);\n\n\t\t\tfprintf(fd, \"\\t{\");\n\t\t\toutchar(fd, kddiac->diacr, 1);\n\t\t\toutchar(fd, kddiac->base, 1);\n\t\t\tfprintf(fd, \"0x%04x},\", kddiac->result);\n\t\t\tif (i % 2)\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t}\n\t\tif (i % 2)\n\t\t\tfprintf(fd, \"\\n\");\n\t\tfprintf(fd, \"};\\n\\n\");\n\t} else {\n\t\tfprintf(fd, \"\\nstruct kbdiacr accent_table[MAX_DIACR] = {\\n\");\n\t\tfor (i = 0; i < ctx->accent_table->count; i++) {\n\t\t\tkddiac = lk_array_get_ptr(ctx->accent_table, i);\n\n\t\t\tfprintf(fd, \"\\t{\");\n\t\t\toutchar(fd, kddiac->diacr, 1);\n\t\t\toutchar(fd, kddiac->base, 1);\n\t\t\toutchar(fd, kddiac->result, 0);\n\t\t\tfprintf(fd, \"},\");\n\t\t\tif (i % 2)\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t}\n\t\tif (i % 2)\n\t\t\tfprintf(fd, \"\\n\");\n\t\tfprintf(fd, \"};\\n\\n\");\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":209,"col":8,"offset":5184},"end":{"line":209,"col":13,"offset":5189},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":209,"col":8,"offset":5184},"end":{"line":209,"col":9,"offset":5185},"abstract_content":"i"},"$SIGNED":{"start":{"line":209,"col":12,"offset":5188},"end":{"line":209,"col":13,"offset":5189},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_6","lines":"\t\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":215,"col":4,"offset":5374},"end":{"line":215,"col":43,"offset":5413},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"0x%04x},\""},"$ARG1":{"start":{"line":215,"col":12,"offset":5382},"end":{"line":215,"col":14,"offset":5384},"abstract_content":"fd"},"$FMT":{"start":{"line":215,"col":16,"offset":5386},"end":{"line":215,"col":26,"offset":5396},"abstract_content":"\"0x%04x},\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd5087f838c57b1ba3fa140859f8ef7cde45fe90e399fba4a701bcd2343a4f2f00dfa127651701c72f5358d6290f20efb3d30a9029ae3432f1da2e953b878b76_0","lines":"\t\t\tfprintf(fd, \"0x%04x},\", kddiac->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":224,"col":8,"offset":5598},"end":{"line":224,"col":13,"offset":5603},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":224,"col":8,"offset":5598},"end":{"line":224,"col":9,"offset":5599},"abstract_content":"i"},"$SIGNED":{"start":{"line":224,"col":12,"offset":5602},"end":{"line":224,"col":13,"offset":5603},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_7","lines":"\t\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":249,"col":7,"offset":6168},"end":{"line":249,"col":12,"offset":6173},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":249,"col":7,"offset":6168},"end":{"line":249,"col":8,"offset":6169},"abstract_content":"i"},"$SIGNED":{"start":{"line":249,"col":11,"offset":6172},"end":{"line":249,"col":12,"offset":6173},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_8","lines":"\tfor (i = 0; i < ctx->func_table->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":278,"col":7,"offset":6763},"end":{"line":278,"col":12,"offset":6768},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":278,"col":7,"offset":6763},"end":{"line":278,"col":8,"offset":6764},"abstract_content":"i"},"$SIGNED":{"start":{"line":278,"col":11,"offset":6767},"end":{"line":278,"col":12,"offset":6768},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_9","lines":"\tfor (i = 0; i < ctx->accent_table->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":288,"col":3,"offset":7011},"end":{"line":309,"col":4,"offset":7533},"extra":{"metavars":{"$EXPR1":{"start":{"line":288,"col":7,"offset":7015},"end":{"line":288,"col":17,"offset":7025},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":288,"col":20,"offset":7028},"end":{"line":288,"col":42,"offset":7050},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2ee095188da342be1a6797eb33f174793560da3d6f37533bfc46c8f0575f094df49e301acfdcb669c6eb8635c809b654016e180cf0ddc1de9e3892bb4256b5e_1","lines":"\t\tif (ctx->flags & LK_FLAG_PREFER_UNICODE) {\n\t\t\tksym = codetoksym(ctx, ptr->result ^ 0xf000);\n\t\t\tif (ksym) {\n\t\t\t\tfprintf(fd, \" to %s\\n\", ksym);\n\t\t\t} else {\n\t\t\t\tfprintf(fd, \" to U+%04x\\n\", ptr->result);\n\t\t\t}\n\t\t} else\n#endif\n\t\t    if (ptr->result > 0xff) {\n\t\t\t// impossible case?\n\t\t\tfprintf(fd, \" to 0x%x\\n\", ptr->result);\n\t\t} else {\n\t\t\tksym = codetoksym(ctx, ptr->result);\n\t\t\tif (ksym) {\n\t\t\t\tfprintf(fd, \" to %s\\n\", ksym);\n\t\t\t} else {\n\t\t\t\tfprintf(fd, \" to \");\n\t\t\t\tdumpchar(fd, ptr->result, 0);\n\t\t\t\tfprintf(fd, \"\\n\");\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":293,"col":5,"offset":7169},"end":{"line":293,"col":45,"offset":7209},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":15,"offset":14},"abstract_content":"\" to U+%04x\\n\""},"$ARG1":{"start":{"line":293,"col":13,"offset":7177},"end":{"line":293,"col":15,"offset":7179},"abstract_content":"fd"},"$FMT":{"start":{"line":293,"col":17,"offset":7181},"end":{"line":293,"col":31,"offset":7195},"abstract_content":"\" to U+%04x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f47ee38ab0374e0efcc4cd86817df3f8af53bd78da6f582da7d6831668858a4855aa4834cfd36dd133893ce5bcf30b3c9c59b516a7aaa83636ca4142a7e6d52b_0","lines":"\t\t\t\tfprintf(fd, \" to U+%04x\\n\", ptr->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":299,"col":4,"offset":7290},"end":{"line":299,"col":42,"offset":7328},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\" to 0x%x\\n\""},"$ARG1":{"start":{"line":299,"col":12,"offset":7298},"end":{"line":299,"col":14,"offset":7300},"abstract_content":"fd"},"$FMT":{"start":{"line":299,"col":16,"offset":7302},"end":{"line":299,"col":28,"offset":7314},"abstract_content":"\" to 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2e345ca2b3a232f1f285b0bea88be8b48ee40446899c48f6607724fc0744a61b7f8086b27306aba24e5cab70a71c8626543b47d33fef97025415cc1e324d7f3_0","lines":"\t\t\tfprintf(fd, \" to 0x%x\\n\", ptr->result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":317,"col":2,"offset":7625},"end":{"line":317,"col":19,"offset":7642},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":317,"col":2,"offset":7625},"end":{"line":317,"col":3,"offset":7626},"abstract_content":"i"},"$SIGNED":{"start":{"line":317,"col":6,"offset":7629},"end":{"line":317,"col":7,"offset":7630},"abstract_content":"n","propagated_value":{"svalue_start":{"line":317,"col":18,"offset":7641},"svalue_end":{"line":317,"col":19,"offset":7642},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5615588e1002762073ae865e4cc42d6abf257a63f903220f70e37cbc81d807393416f7513ed7f03683c6052fbdb4eedefda161cea9070d24ce6cece5a6cccc69_0","lines":"\ti = n = m = s = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":321,"col":7,"offset":7677},"end":{"line":321,"col":12,"offset":7682},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":321,"col":7,"offset":7677},"end":{"line":321,"col":8,"offset":7678},"abstract_content":"i"},"$SIGNED":{"start":{"line":321,"col":11,"offset":7681},"end":{"line":321,"col":12,"offset":7682},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78f6a0f4e44368d49c497a75aee8ba782ea47f363702dd45e56df451fd353afeb354928bbd5e16f24a01ddaec5fbee97d14aece4265173e5c7540c8a355eaefd_10","lines":"\tfor (i = 0; i < ctx->keymap->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":322,"col":3,"offset":7717},"end":{"line":323,"col":13,"offset":7791},"extra":{"metavars":{"$EXPR1":{"start":{"line":322,"col":7,"offset":7721},"end":{"line":322,"col":20,"offset":7734},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":322,"col":23,"offset":7737},"end":{"line":322,"col":43,"offset":7757},"abstract_content":"LK_KEYWORD_ALTISMETA"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8d3437876c079b551971814eae64ad40a9dc0450cb8e49004047a4b706130d20728f6c4eb4e5fb63b2f3bf663cbfe4f115d9b101c3ecc7ee13dc9049ed0ae7a0_0","lines":"\t\tif (ctx->keywords & LK_KEYWORD_ALTISMETA && i == (i | M_ALT))\n\t\t\tcontinue;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":14,"offset":8043},"extra":{"metavars":{"$NARROW":{"start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":6,"offset":8035},"abstract_content":"n"},"$LARGE":{"start":{"line":336,"col":9,"offset":8038},"end":{"line":336,"col":10,"offset":8039},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5d5d7298b00e84642d6c0258224bcc30c5362edd5f4908ba7350bdd685470476eb47aaf449948cb89de71c97c5775e78d5fef0f935ea9aa52e00a88ce22fe991_0","lines":"\t\t\t\tn = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":14,"offset":8043},"extra":{"metavars":{"$SIGNED":{"start":{"line":336,"col":5,"offset":8034},"end":{"line":336,"col":6,"offset":8035},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":336,"col":9,"offset":8038},"end":{"line":336,"col":10,"offset":8039},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5615588e1002762073ae865e4cc42d6abf257a63f903220f70e37cbc81d807393416f7513ed7f03683c6052fbdb4eedefda161cea9070d24ce6cece5a6cccc69_1","lines":"\t\t\t\tn = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":21,"offset":8065},"extra":{"metavars":{"$NARROW":{"start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":5,"offset":8049},"abstract_content":"m"},"$LARGE":{"start":{"line":337,"col":16,"offset":8060},"end":{"line":337,"col":17,"offset":8061},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7991821bb52461e1a1fdf19f687dea623fc1f16137a3983989e3c11667ff047702ce3edb2f3f687b746c3fdde1c816111e7f660f95d8878b642a69b6c6401a52_0","lines":"\t\t\tm         = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":21,"offset":8065},"extra":{"metavars":{"$SIGNED":{"start":{"line":337,"col":4,"offset":8048},"end":{"line":337,"col":5,"offset":8049},"abstract_content":"m"},"$UNSIGNED":{"start":{"line":337,"col":16,"offset":8060},"end":{"line":337,"col":17,"offset":8061},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bfb6027ef2fd782378dd0858337cc7bd64b44b4c464867783d51403ba54a4118797c6f52d4e0215a38d361686f973ada622271ee9f34b1e494fde4d09543c742_0","lines":"\t\t\tm         = i + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":357,"col":4,"offset":8359},"end":{"line":358,"col":36,"offset":8419},"extra":{"metavars":{"$EXPR1":{"start":{"line":357,"col":8,"offset":8363},"end":{"line":357,"col":9,"offset":8364},"abstract_content":"x"},"$EXPR2":{"start":{"line":357,"col":13,"offset":8368},"end":{"line":357,"col":26,"offset":8381},"abstract_content":"1<<mod->->bit"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9fe32a09e75f738084906b1626d26e15b181f6c83d87d185bfab1a023dbb503d393c132b16f2cbd930ec240d730759c3cba287d88316b876d2bcd810f3f94592_0","lines":"\t\t\tif (x & (1 << mod->bit))\n\t\t\t\tfprintf(fd, \"%s\\t\", mod->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":374,"col":2,"offset":8625},"end":{"line":374,"col":16,"offset":8639},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":374,"col":2,"offset":8625},"end":{"line":374,"col":3,"offset":8626},"abstract_content":"t"},"$SIGNED":{"start":{"line":374,"col":11,"offset":8634},"end":{"line":374,"col":15,"offset":8638},"abstract_content":"code"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d5df532a533d241c641f0f0266bcb71018d9bb56424cbc8f352f39f345042ae93305d3b820d398bdc5ad96d76d9a842daa015cfe9aa89b5636e55399c3aca2c5_0","lines":"\tt = KTYP(code);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":375,"col":2,"offset":8642},"end":{"line":375,"col":16,"offset":8656},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":375,"col":2,"offset":8642},"end":{"line":375,"col":3,"offset":8643},"abstract_content":"v"},"$SIGNED":{"start":{"line":375,"col":11,"offset":8651},"end":{"line":375,"col":15,"offset":8655},"abstract_content":"code"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c6b93b198637cb51142cc4b90d5c7fe42333a453377db3784e9d600ea4a15a2327a19ce23541d484ebc175c9d6d6f9e049775c942409bf9f8b2acf430753d238_0","lines":"\tv = KVAL(code);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":380,"col":4,"offset":8774},"end":{"line":380,"col":50,"offset":8820},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":19,"offset":18},"abstract_content":"\"U+%04x          \""},"$ARG1":{"start":{"line":380,"col":12,"offset":8782},"end":{"line":380,"col":14,"offset":8784},"abstract_content":"fd"},"$FMT":{"start":{"line":380,"col":16,"offset":8786},"end":{"line":380,"col":34,"offset":8804},"abstract_content":"\"U+%04x          \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef983cf01b34529b3f78337d80bad81fa7006dd4e02441abba1f1de2f8b2f9720296eef82e3d9aedc4fc8eb894e069dd2ed43d19c6cd2f16e12d3ef65e9cb7bb_0","lines":"\t\t\tfprintf(fd, \"U+%04x          \", code ^ 0xf000);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":389,"col":2,"offset":8919},"end":{"line":402,"col":59,"offset":9544},"extra":{"metavars":{"$EXPR1":{"start":{"line":390,"col":7,"offset":8958},"end":{"line":390,"col":8,"offset":8959},"abstract_content":"p"},"$EXPR2":{"start":{"line":390,"col":11,"offset":8962},"end":{"line":390,"col":32,"offset":8983},"abstract_content":"codetoksym(ctx code)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c706e453d857179c8426a6ff4a29170361a75e794cff64029cebbd77de9adcef71e372eab6c967cd55ba3c016a68829e83aeace718aec9bb32908dc442b8a80_0","lines":"\tif (!numeric && t == KT_LATIN &&\n\t    (p = codetoksym(ctx, code)))\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t < syms_size && v < get_sym_size(ctx, t) &&\n\t         (p = get_sym(ctx, t, v))[0])\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse if (!numeric && t == KT_DEAD2 && v < 256 && v < get_sym_size(ctx, KT_LATIN) &&\n\t\t (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tprintf(\"dead2_%-10s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":392,"col":7,"offset":9029},"end":{"line":402,"col":59,"offset":9544},"extra":{"metavars":{"$EXPR1":{"start":{"line":393,"col":12,"offset":9101},"end":{"line":393,"col":13,"offset":9102},"abstract_content":"p"},"$EXPR2":{"start":{"line":393,"col":16,"offset":9105},"end":{"line":393,"col":34,"offset":9123},"abstract_content":"get_sym(ctx t v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2a757bd6b6cfcadb48646db6234a5ffc34016201424059f0dd0af479c3518477ef5adf17c2229efc702a7203e33d666697b4628719919939dd7c55c9b7099984_0","lines":"\telse if (!numeric && t < syms_size && v < get_sym_size(ctx, t) &&\n\t         (p = get_sym(ctx, t, v))[0])\n\t\tfprintf(fd, \"%-*s\", 16 - plus, p);\n\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse if (!numeric && t == KT_DEAD2 && v < 256 && v < get_sym_size(ctx, KT_LATIN) &&\n\t\t (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tprintf(\"dead2_%-10s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":395,"col":7,"offset":9172},"end":{"line":402,"col":59,"offset":9544},"extra":{"metavars":{"$EXPR1":{"start":{"line":396,"col":12,"offset":9261},"end":{"line":396,"col":13,"offset":9262},"abstract_content":"p"},"$EXPR2":{"start":{"line":396,"col":16,"offset":9265},"end":{"line":396,"col":41,"offset":9290},"abstract_content":"get_sym(ctx KT_LATIN v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d83e441f392a8248f7be628df886566976f3edf718fe58cbf6762112869f6728fa1dfd2b3a5efcaa738f03770fc25924a375d7fb2907c8038aa14dc62f1c7da6_0","lines":"\telse if (!numeric && t == KT_META && v < 128 && v < get_sym_size(ctx, KT_LATIN) &&\n\t         (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tfprintf(fd, \"Meta_%-11s\", p);\n\telse if (!numeric && t == KT_DEAD2 && v < 256 && v < get_sym_size(ctx, KT_LATIN) &&\n\t\t (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tprintf(\"dead2_%-10s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":398,"col":7,"offset":9334},"end":{"line":402,"col":59,"offset":9544},"extra":{"metavars":{"$EXPR1":{"start":{"line":399,"col":5,"offset":9417},"end":{"line":399,"col":6,"offset":9418},"abstract_content":"p"},"$EXPR2":{"start":{"line":399,"col":9,"offset":9421},"end":{"line":399,"col":34,"offset":9446},"abstract_content":"get_sym(ctx KT_LATIN v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d83e441f392a8248f7be628df886566976f3edf718fe58cbf6762112869f6728fa1dfd2b3a5efcaa738f03770fc25924a375d7fb2907c8038aa14dc62f1c7da6_1","lines":"\telse if (!numeric && t == KT_DEAD2 && v < 256 && v < get_sym_size(ctx, KT_LATIN) &&\n\t\t (p = get_sym(ctx, KT_LATIN, v))[0])\n\t\tprintf(\"dead2_%-10s\", p);\n\telse\n\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":402,"col":3,"offset":9488},"end":{"line":402,"col":58,"offset":9543},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"\"0x%04x         %s\""},"$ARG1":{"start":{"line":402,"col":11,"offset":9496},"end":{"line":402,"col":13,"offset":9498},"abstract_content":"fd"},"$FMT":{"start":{"line":402,"col":15,"offset":9500},"end":{"line":402,"col":34,"offset":9519},"abstract_content":"\"0x%04x         %s\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8466ade0a3f480b9321aff67424ebd545a156f3f918cfaaa4ff0633c612875cd70a5fe69626d0de51a18ee4177f42ce624b6d76c51ae2354407cfc937d932a00_0","lines":"\t\tfprintf(fd, \"0x%04x         %s\", code, plus ? \"\" : \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":434,"col":7,"offset":10266},"end":{"line":434,"col":12,"offset":10271},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":434,"col":7,"offset":10266},"end":{"line":434,"col":8,"offset":10267},"abstract_content":"j"},"$SIGNED":{"start":{"line":434,"col":11,"offset":10270},"end":{"line":434,"col":12,"offset":10271},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_1","lines":"\tfor (j = 0; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":440,"col":8,"offset":10428},"end":{"line":440,"col":13,"offset":10433},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":440,"col":8,"offset":10428},"end":{"line":440,"col":9,"offset":10429},"abstract_content":"i"},"$SIGNED":{"start":{"line":440,"col":12,"offset":10432},"end":{"line":440,"col":13,"offset":10433},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"840dbb144e41783e3caf5ddcfdf137336fe2f7a557e8e1f27f51f299b39dabe25648fc154674e8ef8a720f4cf99619f4f13cd6cffaea0f653cc200b8029b3be6_0","lines":"\t\tfor (i = 1; i < NR_KEYS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":443,"col":4,"offset":10484},"end":{"line":443,"col":32,"offset":10512},"extra":{"metavars":{"$NARROW":{"start":{"line":443,"col":4,"offset":10484},"end":{"line":443,"col":8,"offset":10488},"abstract_content":"buf0"},"$LARGE":{"start":{"line":443,"col":27,"offset":10507},"end":{"line":443,"col":28,"offset":10508},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c244d8b9752fd52b2194a571df9406ac3f2eaf8216510d957bfcea7d19abc89b0beed31f119e7702dc8be782dd8be22dffccb5bace23f59db729c714474a0ede_0","lines":"\t\t\tbuf0 = lk_get_key(ctx, j, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":443,"col":4,"offset":10484},"end":{"line":443,"col":32,"offset":10512},"extra":{"metavars":{"$SIGNED":{"start":{"line":443,"col":4,"offset":10484},"end":{"line":443,"col":8,"offset":10488},"abstract_content":"buf0"},"$UNSIGNED":{"start":{"line":443,"col":27,"offset":10507},"end":{"line":443,"col":28,"offset":10508},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"686f175b3903eed7f9dfde2fbb4dfe59bd3360efc1bcced573ba1aaf3e15cfed50cc5a1b9ac72772e31058b42523ed3a72478589ddcac2ef46753c43d0f18581_0","lines":"\t\t\tbuf0 = lk_get_key(ctx, j, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":451,"col":5,"offset":10643},"end":{"line":453,"col":20,"offset":10732},"extra":{"metavars":{"$NARROW":{"start":{"line":451,"col":5,"offset":10643},"end":{"line":451,"col":9,"offset":10647},"abstract_content":"buf1"},"$LARGE":{"start":{"line":451,"col":31,"offset":10669},"end":{"line":451,"col":33,"offset":10671},"abstract_content":"ja"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54ee0c5e1e806c1b5804d79bbf549d1042fe4ee38363559212dd6e0e4b85494b30c87f744bbd47273e64f00712a7f7847d67ed7627effa34cd3c8e9c07496400_0","lines":"\t\t\t\tbuf1 = lk_map_exists(ctx, ja)\n\t\t\t\t           ? lk_get_key(ctx, ja, i)\n\t\t\t\t           : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":451,"col":5,"offset":10643},"end":{"line":453,"col":20,"offset":10732},"extra":{"metavars":{"$SIGNED":{"start":{"line":451,"col":5,"offset":10643},"end":{"line":451,"col":9,"offset":10647},"abstract_content":"buf1"},"$UNSIGNED":{"start":{"line":451,"col":31,"offset":10669},"end":{"line":451,"col":33,"offset":10671},"abstract_content":"ja"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"70791fc801eb010a2019c85d251bb779e5dc3ee253277514a2858e229fd35f1f32d4c2e9fa573cfe391d4c54dcdc5c35ca6b4252195a4c60d24208f4de359920_0","lines":"\t\t\t\tbuf1 = lk_map_exists(ctx, ja)\n\t\t\t\t           ? lk_get_key(ctx, ja, i)\n\t\t\t\t           : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":466,"col":7,"offset":10903},"end":{"line":466,"col":12,"offset":10908},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":466,"col":7,"offset":10903},"end":{"line":466,"col":8,"offset":10904},"abstract_content":"i"},"$SIGNED":{"start":{"line":466,"col":11,"offset":10907},"end":{"line":466,"col":12,"offset":10908},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"840dbb144e41783e3caf5ddcfdf137336fe2f7a557e8e1f27f51f299b39dabe25648fc154674e8ef8a720f4cf99619f4f13cd6cffaea0f653cc200b8029b3be6_1","lines":"\tfor (i = 1; i < NR_KEYS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":469,"col":8,"offset":10955},"end":{"line":469,"col":13,"offset":10960},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":469,"col":8,"offset":10955},"end":{"line":469,"col":9,"offset":10956},"abstract_content":"j"},"$SIGNED":{"start":{"line":469,"col":12,"offset":10959},"end":{"line":469,"col":13,"offset":10960},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_2","lines":"\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":485,"col":9,"offset":11266},"end":{"line":485,"col":14,"offset":11271},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":485,"col":9,"offset":11266},"end":{"line":485,"col":10,"offset":11267},"abstract_content":"j"},"$SIGNED":{"start":{"line":485,"col":13,"offset":11270},"end":{"line":485,"col":14,"offset":11271},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_3","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":495,"col":9,"offset":11466},"end":{"line":495,"col":14,"offset":11471},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":495,"col":9,"offset":11466},"end":{"line":495,"col":10,"offset":11467},"abstract_content":"j"},"$SIGNED":{"start":{"line":495,"col":13,"offset":11470},"end":{"line":495,"col":14,"offset":11471},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_4","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":506,"col":3,"offset":11672},"end":{"line":506,"col":52,"offset":11721},"extra":{"metavars":{"$EXPR1":{"start":{"line":506,"col":15,"offset":11684},"end":{"line":506,"col":18,"offset":11687},"abstract_content":"typ","propagated_value":{"svalue_start":{"line":504,"col":14,"offset":11629},"svalue_end":{"line":504,"col":26,"offset":11641},"svalue_abstract_content":"KTYP(buf[0])"}},"$EXPR2":{"start":{"line":506,"col":22,"offset":11691},"end":{"line":506,"col":30,"offset":11699},"abstract_content":"KT_LATIN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9e188bf9e2585bc33de011779c9071c665f8a322976293ab7fd3dcbb0f6d6d68282a25f72fef0c899c6e812565f085ea75292be5da8126bc47a3e214d9778a29_0","lines":"\t\tislatin  = (typ == KT_LATIN || typ == KT_LETTER);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":519,"col":9,"offset":12026},"end":{"line":519,"col":23,"offset":12040},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":519,"col":9,"offset":12026},"end":{"line":519,"col":10,"offset":12027},"abstract_content":"j"},"$SIGNED":{"start":{"line":519,"col":22,"offset":12039},"end":{"line":519,"col":23,"offset":12040},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b20712cc40c7793d8e79d25f79a3232c665165de93ede3903019638c613e3e37bf83c0fcabdaedf7701b060cfa930e640c9ce29759a8e91966baed9b0060ac02_0","lines":"\t\t\tfor (j          = 4; j < 8; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":522,"col":9,"offset":12101},"end":{"line":522,"col":23,"offset":12115},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":522,"col":9,"offset":12101},"end":{"line":522,"col":10,"offset":12102},"abstract_content":"j"},"$SIGNED":{"start":{"line":522,"col":22,"offset":12114},"end":{"line":522,"col":23,"offset":12115},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e1f11bce4dda94514ebcb6bc4260e778a607ace302610ce6e2db38b797d2b3ac548eca311f08022807da02371329e885a4ce2d3f413472205f3c3452e08d7382_0","lines":"\t\t\tfor (j          = 8; j < 16; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":525,"col":9,"offset":12184},"end":{"line":525,"col":14,"offset":12189},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":525,"col":9,"offset":12184},"end":{"line":525,"col":10,"offset":12185},"abstract_content":"j"},"$SIGNED":{"start":{"line":525,"col":13,"offset":12188},"end":{"line":525,"col":14,"offset":12189},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_5","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":535,"col":8,"offset":12401},"end":{"line":535,"col":24,"offset":12417},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":535,"col":8,"offset":12401},"end":{"line":535,"col":9,"offset":12402},"abstract_content":"j"},"$SIGNED":{"start":{"line":535,"col":23,"offset":12416},"end":{"line":535,"col":24,"offset":12417},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_6","lines":"\t\tfor (j            = 0; j < keymapnr; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":539,"col":9,"offset":12486},"end":{"line":539,"col":14,"offset":12491},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":539,"col":9,"offset":12486},"end":{"line":539,"col":10,"offset":12487},"abstract_content":"j"},"$SIGNED":{"start":{"line":539,"col":13,"offset":12490},"end":{"line":539,"col":14,"offset":12491},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_7","lines":"\t\t\tfor (j = 0; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":545,"col":7,"offset":12743},"end":{"line":545,"col":52,"offset":12788},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5ddc5e5972fed4f67c9d819fb7294997a3d1797678660ca62caa1391450c0d789613192869c6263f6d25e128f2e81f00fef06ee958274df22e12f4259034f676_0","lines":"\t\t\t\t\t\tfprintf(stderr, _(\"impossible: not meta?\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":563,"col":4,"offset":13234},"end":{"line":563,"col":19,"offset":13249},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":563,"col":4,"offset":13234},"end":{"line":563,"col":7,"offset":13237},"abstract_content":"bad"},"$SIGNED":{"start":{"line":563,"col":10,"offset":13240},"end":{"line":563,"col":15,"offset":13245},"abstract_content":"count","propagated_value":{"svalue_start":{"line":563,"col":18,"offset":13248},"svalue_end":{"line":563,"col":19,"offset":13249},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"492bde0f283ab0a87b1ab25c6c5d62768119a067cc8fb1b906dfcde1a303c802dfacd85534b140ac31dd42a3f27e1b8d65fca24665d449eb47d196dfd34d890d_0","lines":"\t\t\tbad = count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":563,"col":10,"offset":13240},"end":{"line":563,"col":19,"offset":13249},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":563,"col":10,"offset":13240},"end":{"line":563,"col":15,"offset":13245},"abstract_content":"count","propagated_value":{"svalue_start":{"line":563,"col":18,"offset":13248},"svalue_end":{"line":563,"col":19,"offset":13249},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":563,"col":18,"offset":13248},"end":{"line":563,"col":19,"offset":13249},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f839ca39f1ef2bbba3a84c8055a4865f3a35deeae9fa592da50213f3853a1357dbfb317df6f7e2bd4ca157ca67c33ae0e2d384d38c22271f5d7bf2edf0d42066_0","lines":"\t\t\tbad = count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":565,"col":9,"offset":13260},"end":{"line":565,"col":14,"offset":13265},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":565,"col":9,"offset":13260},"end":{"line":565,"col":10,"offset":13261},"abstract_content":"j"},"$SIGNED":{"start":{"line":565,"col":13,"offset":13264},"end":{"line":565,"col":14,"offset":13265},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78dc348e3755ec285d74824f78cb1c3deb62f8eb8dcc1637a63fa706fb9774697f05ee3b038363fa7fab2ba75e4e3f3e798d9d87641c44be8e51d26332a0bd37_0","lines":"\t\t\tfor (j = 1; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":582,"col":10,"offset":13565},"end":{"line":582,"col":15,"offset":13570},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":582,"col":10,"offset":13565},"end":{"line":582,"col":11,"offset":13566},"abstract_content":"j"},"$SIGNED":{"start":{"line":582,"col":14,"offset":13569},"end":{"line":582,"col":15,"offset":13570},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78dc348e3755ec285d74824f78cb1c3deb62f8eb8dcc1637a63fa706fb9774697f05ee3b038363fa7fab2ba75e4e3f3e798d9d87641c44be8e51d26332a0bd37_1","lines":"\t\t\t\tfor (j = 1; j < keymapnr; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":588,"col":10,"offset":13720},"end":{"line":588,"col":15,"offset":13725},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":588,"col":10,"offset":13720},"end":{"line":588,"col":11,"offset":13721},"abstract_content":"j"},"$SIGNED":{"start":{"line":588,"col":14,"offset":13724},"end":{"line":588,"col":15,"offset":13725},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aa2024c25d15fb82f637c8cce6cd5623a5ffed737f424efc378bb06fcd2b21c47a4cdcdab657f34029701e1e3ebf06ae10bbffcc58d0925b90d2fc249b4cc77d_8","lines":"\t\t\t\tfor (j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":41,"col":13,"offset":712},"end":{"line":41,"col":63,"offset":762},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":13,"offset":712},"end":{"line":41,"col":19,"offset":718},"abstract_content":"malloc"},"$X":{"start":{"line":41,"col":20,"offset":719},"end":{"line":41,"col":58,"offset":757},"abstract_content":"strlen(dc->->cmd)+strlen(fp->->pathname)"},"$Y":{"start":{"line":41,"col":61,"offset":760},"end":{"line":41,"col":62,"offset":761},"abstract_content":"2"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9dcc23d2e304954ac92326d2c92ff75301efb4b9ace867c3fb6bd002e2af6af7d4c9381afa0345829340838e7e03ac0794a96b3d361f86c7875c3f518523c72b_0","lines":"\tpipe_cmd = malloc(strlen(dc->cmd) + strlen(fp->pathname) + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":41,"col":13,"offset":712},"end":{"line":41,"col":63,"offset":762},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":13,"offset":712},"end":{"line":41,"col":19,"offset":718},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1962ac7ea51535dc6abc75ca14fb927b815796ee5af1ee69cca57dfc6b1423afdc1d8d4cf7ca8e8efba1c071b5bd38413a918917df7df5e1a0ddd9056fbb9cd5_0","lines":"\tpipe_cmd = malloc(strlen(dc->cmd) + strlen(fp->pathname) + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":45,"col":2,"offset":802},"end":{"line":45,"col":51,"offset":851},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%s %s\""},"$BUF":{"start":{"line":45,"col":10,"offset":810},"end":{"line":45,"col":18,"offset":818},"abstract_content":"pipe_cmd"},"$FMT":{"start":{"line":45,"col":20,"offset":820},"end":{"line":45,"col":27,"offset":827},"abstract_content":"\"%s %s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"4dc6ec45af1156e306fff5d79ae9d67655c5233cfcb985c84843169cffaf1d64ffbba44c3b111512c9cfd64fcbb04a862f336de648761a5335b4a37f71da9148_0","lines":"\tsprintf(pipe_cmd, \"%s %s\", dc->cmd, fp->pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":45,"col":2,"offset":802},"end":{"line":45,"col":51,"offset":851},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":2,"offset":802},"end":{"line":45,"col":9,"offset":809},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a158edb624e3a6e4a38784152c721d50f13eb0749cd021ff6aa360c18fb4377243d2a0f732e7c521ad4c14d6e6b988bf31b0470f18342a32b8f834a64139e233_0","lines":"\tsprintf(pipe_cmd, \"%s %s\", dc->cmd, fp->pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-command-injection","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":47,"col":13,"offset":866},"end":{"line":47,"col":33,"offset":886},"extra":{"metavars":{},"message":"The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/78","https://cwe.mitre.org/data/definitions/88","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"9dab856c1bfb41131f6163f648cb43143e27039b0e379786f611b0bd136b34407904c79a65d2b0b3b49b43e63ab394b1b71b7cb5ba4d3b8a0c8586e393261522_0","lines":"\tfp->fd   = popen(pipe_cmd, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":47,"col":13,"offset":866},"end":{"line":47,"col":33,"offset":886},"extra":{"metavars":{"$FUN":{"start":{"line":47,"col":13,"offset":866},"end":{"line":47,"col":18,"offset":871},"abstract_content":"popen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fb3e8d433f4a18dfa2cdba41d0c863e5bcaa8fac517ef41af494793e256fd87b2927419216f1d15fdd7d454c54eb26b6fc76fa9bb4cffdf8cbe5007fbed7c576_0","lines":"\tfp->fd   = popen(pipe_cmd, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":66,"col":6,"offset":1186},"end":{"line":66,"col":29,"offset":1209},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_0","lines":"\tif (stat(fp->pathname, &st) == -1 || !S_ISREG(st.st_mode) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":66,"col":6,"offset":1186},"end":{"line":66,"col":29,"offset":1209},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":6,"offset":1186},"end":{"line":66,"col":10,"offset":1190},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f0f1c739d0645f20ce53fb5a083820870c5c27cef1a57adc7d29cdc0a03dc2158deae7d010a6664baae51339e07288c520cd17b8f9ce689894c235679ef06ef_0","lines":"\tif (stat(fp->pathname, &st) == -1 || !S_ISREG(st.st_mode) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":67,"col":6,"offset":1248},"end":{"line":67,"col":32,"offset":1274},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_1","lines":"\t    access(fp->pathname, R_OK) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":67,"col":6,"offset":1248},"end":{"line":67,"col":32,"offset":1274},"extra":{"metavars":{"$FUN":{"start":{"line":67,"col":6,"offset":1248},"end":{"line":67,"col":12,"offset":1254},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb65491dc226c1f93c379c7eafe1e20f1b7e5b593b13de93e4adf851498f8df32fe94b18220eb9a21e2336a8a1050ab6e9ec267775c863098d888d531787f4f4_0","lines":"\t    access(fp->pathname, R_OK) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":74,"col":12,"offset":1430},"end":{"line":74,"col":29,"offset":1447},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":12,"offset":1430},"end":{"line":74,"col":21,"offset":1439},"abstract_content":"pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"675480b6071280d405f3bf05fa981daa423a2379f7beedc2a0606a15802079bad4f8e5b9662ee294177c2d51550c9385688d9c7d9a1bd149d58b2b4c28942491_0","lines":"\t\t\t\treturn pipe_open(dc, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":77,"col":13,"offset":1468},"end":{"line":77,"col":37,"offset":1492},"extra":{"metavars":{"$FUN":{"start":{"line":77,"col":13,"offset":1468},"end":{"line":77,"col":18,"offset":1473},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2759ae9ee7d34502907a4eb7bfdb8f51c96d02f2af28c147df8b0687a0ba80bf2194cd854aee093aea69086f4f63ae10eafb9bf6dee2320b0f5c66228b2cb7e1_0","lines":"\tfp->fd   = fopen(fp->pathname, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":101,"col":3,"offset":1873},"end":{"line":101,"col":31,"offset":1901},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":101,"col":3,"offset":1873},"end":{"line":101,"col":9,"offset":1879},"abstract_content":"sp_len"},"$SIGNED":{"start":{"line":101,"col":28,"offset":1898},"end":{"line":101,"col":29,"offset":1899},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3f82b1aa2d791f7b6c1bba69bba91056e97a790ad8ebecb3e7bebb38f24559bbe6a2d4952b193dfa0ed832d58e71f44fd3c89aee7e567dca3cd2997b71431ba_0","lines":"\t\tsp_len = strlen(suffixes[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":106,"col":3,"offset":1972},"end":{"line":106,"col":51,"offset":2020},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"\"%s%s\""},"$BUF":{"start":{"line":106,"col":11,"offset":1980},"end":{"line":106,"col":23,"offset":1992},"abstract_content":"fp->->pathname"},"$FMT":{"start":{"line":106,"col":25,"offset":1994},"end":{"line":106,"col":31,"offset":2000},"abstract_content":"\"%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b703edb01293b439e1131848f931b315f9bcfd00178f80907fa9b12617acb83b5fde023bea92095877632eb658dfcb09e8e045d00c1de27098f95c2a6ceb8b94_0","lines":"\t\tsprintf(fp->pathname, \"%s%s\", fnam, suffixes[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":106,"col":3,"offset":1972},"end":{"line":106,"col":51,"offset":2020},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":3,"offset":1972},"end":{"line":106,"col":10,"offset":1979},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a158edb624e3a6e4a38784152c721d50f13eb0749cd021ff6aa360c18fb4377243d2a0f732e7c521ad4c14d6e6b988bf31b0470f18342a32b8f834a64139e233_1","lines":"\t\tsprintf(fp->pathname, \"%s%s\", fnam, suffixes[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":108,"col":7,"offset":2029},"end":{"line":108,"col":30,"offset":2052},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_2","lines":"\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && (fp->fd = fopen(fp->pathname, \"r\")) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":108,"col":7,"offset":2029},"end":{"line":108,"col":30,"offset":2052},"extra":{"metavars":{"$FUN":{"start":{"line":108,"col":7,"offset":2029},"end":{"line":108,"col":11,"offset":2033},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f0f1c739d0645f20ce53fb5a083820870c5c27cef1a57adc7d29cdc0a03dc2158deae7d010a6664baae51339e07288c520cd17b8f9ce689894c235679ef06ef_1","lines":"\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && (fp->fd = fopen(fp->pathname, \"r\")) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":108,"col":72,"offset":2094},"end":{"line":108,"col":96,"offset":2118},"extra":{"metavars":{"$FUN":{"start":{"line":108,"col":72,"offset":2094},"end":{"line":108,"col":77,"offset":2099},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2759ae9ee7d34502907a4eb7bfdb8f51c96d02f2af28c147df8b0687a0ba80bf2194cd854aee093aea69086f4f63ae10eafb9bf6dee2320b0f5c66228b2cb7e1_1","lines":"\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && (fp->fd = fopen(fp->pathname, \"r\")) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":115,"col":4,"offset":2280},"end":{"line":115,"col":63,"offset":2339},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"%s%s%s\""},"$BUF":{"start":{"line":115,"col":12,"offset":2288},"end":{"line":115,"col":24,"offset":2300},"abstract_content":"fp->->pathname"},"$FMT":{"start":{"line":115,"col":26,"offset":2302},"end":{"line":115,"col":34,"offset":2310},"abstract_content":"\"%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"7c9884a7cbb5ee9b0caf000b7ffe0bd05c50d361a7dcb24e4cf7ccb26eac84c5c5938d8ffb1941833c2ade205bef00bae690dfc68c231a1178dc702dde015777_0","lines":"\t\t\tsprintf(fp->pathname, \"%s%s%s\", fnam, suffixes[i], dc->ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":115,"col":4,"offset":2280},"end":{"line":115,"col":63,"offset":2339},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":4,"offset":2280},"end":{"line":115,"col":11,"offset":2287},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a158edb624e3a6e4a38784152c721d50f13eb0749cd021ff6aa360c18fb4377243d2a0f732e7c521ad4c14d6e6b988bf31b0470f18342a32b8f834a64139e233_2","lines":"\t\t\tsprintf(fp->pathname, \"%s%s%s\", fnam, suffixes[i], dc->ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":117,"col":8,"offset":2349},"end":{"line":117,"col":31,"offset":2372},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_3","lines":"\t\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && access(fp->pathname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":117,"col":8,"offset":2349},"end":{"line":117,"col":31,"offset":2372},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":8,"offset":2349},"end":{"line":117,"col":12,"offset":2353},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f0f1c739d0645f20ce53fb5a083820870c5c27cef1a57adc7d29cdc0a03dc2158deae7d010a6664baae51339e07288c520cd17b8f9ce689894c235679ef06ef_2","lines":"\t\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && access(fp->pathname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":117,"col":63,"offset":2404},"end":{"line":117,"col":89,"offset":2430},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_4","lines":"\t\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && access(fp->pathname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":117,"col":63,"offset":2404},"end":{"line":117,"col":89,"offset":2430},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":63,"offset":2404},"end":{"line":117,"col":69,"offset":2410},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb65491dc226c1f93c379c7eafe1e20f1b7e5b593b13de93e4adf851498f8df32fe94b18220eb9a21e2336a8a1050ab6e9ec267775c863098d888d531787f4f4_1","lines":"\t\t\tif (stat(fp->pathname, &st) == 0 && S_ISREG(st.st_mode) && access(fp->pathname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":118,"col":12,"offset":2448},"end":{"line":118,"col":29,"offset":2465},"extra":{"metavars":{"$FUN":{"start":{"line":118,"col":12,"offset":2448},"end":{"line":118,"col":21,"offset":2457},"abstract_content":"pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"675480b6071280d405f3bf05fa981daa423a2379f7beedc2a0606a15802079bad4f8e5b9662ee294177c2d51550c9385688d9c7d9a1bd149d58b2b4c28942491_1","lines":"\t\t\t\treturn pipe_open(dc, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":146,"col":29,"offset":2945},"end":{"line":146,"col":38,"offset":2954},"extra":{"metavars":{"$PTR1":{"start":{"line":146,"col":29,"offset":2945},"end":{"line":146,"col":31,"offset":2947},"abstract_content":"ff","propagated_value":{"svalue_start":{"line":145,"col":12,"offset":2887},"svalue_end":{"line":145,"col":29,"offset":2904},"svalue_abstract_content":"strchr(fnam'/')"}},"$PTR2":{"start":{"line":146,"col":34,"offset":2950},"end":{"line":146,"col":38,"offset":2954},"abstract_content":"fnam"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"634b089ba35d65cd2697d23ff7050cc644aad2065e4c96901c7b68d491c8955463d5460a9891a9b726956e9190d8e16976bba48e91602f1c9154f9ec76fdc381_0","lines":"\t\tif ((fdir = strndup(fnam, ff - fnam)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":171,"col":3,"offset":3498},"end":{"line":171,"col":49,"offset":3544},"extra":{"metavars":{"$EXPR1":{"start":{"line":171,"col":18,"offset":3513},"end":{"line":171,"col":42,"offset":3537},"abstract_content":"strcmp(de->->d_name fdir)"},"$EXPR2":{"start":{"line":171,"col":46,"offset":3541},"end":{"line":171,"col":47,"offset":3542},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"80d308efba35aecc0703580c3dbb10ee1157e6f0f8f76f0f734a25b603320dc54935e5f611bd9e0b6bdaee7b027dc0fff2a0cd5c291c5aee42670d4125fcb124_0","lines":"\t\tokdir = (ff && strcmp(de->d_name, fdir) == 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":176,"col":13,"offset":3614},"end":{"line":176,"col":40,"offset":3641},"extra":{"metavars":{"$FUN":{"start":{"line":176,"col":13,"offset":3614},"end":{"line":176,"col":19,"offset":3620},"abstract_content":"malloc"},"$X":{"start":{"line":176,"col":20,"offset":3621},"end":{"line":176,"col":35,"offset":3636},"abstract_content":"dir_len+d_len"},"$Y":{"start":{"line":176,"col":38,"offset":3639},"end":{"line":176,"col":39,"offset":3640},"abstract_content":"2"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bec1ea7ad2fd731c560f4a06e6effcf898dfdb2503183d5ae5e12fbbd1b6532d425fd796baa4db08fbe93a1ae1a1d42b5cf559d95e1c20d991d853b9012508e0_0","lines":"\t\t\tif ((a = malloc(dir_len + d_len + 2)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":176,"col":13,"offset":3614},"end":{"line":176,"col":40,"offset":3641},"extra":{"metavars":{"$FUN":{"start":{"line":176,"col":13,"offset":3614},"end":{"line":176,"col":19,"offset":3620},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1962ac7ea51535dc6abc75ca14fb927b815796ee5af1ee69cca57dfc6b1423afdc1d8d4cf7ca8e8efba1c071b5bd38413a918917df7df5e1a0ddd9056fbb9cd5_1","lines":"\t\t\tif ((a = malloc(dir_len + d_len + 2)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":179,"col":4,"offset":3674},"end":{"line":179,"col":40,"offset":3710},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%s/%s\""},"$BUF":{"start":{"line":179,"col":12,"offset":3682},"end":{"line":179,"col":13,"offset":3683},"abstract_content":"a","propagated_value":{"svalue_start":{"line":176,"col":13,"offset":3614},"svalue_end":{"line":176,"col":40,"offset":3641},"svalue_abstract_content":"malloc(dir_len+d_len+2)"}},"$FMT":{"start":{"line":179,"col":15,"offset":3685},"end":{"line":179,"col":22,"offset":3692},"abstract_content":"\"%s/%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"670c451fb1a32b73903bbe849b565ca28d2b3f062200c3cb9db1b675a52ff17bc0325a6dce8a52e64f3e38f9f814ba45ba5138d5fa3ea8d1efa0cded44f49f0e_0","lines":"\t\t\tsprintf(a, \"%s/%s\", dir, de->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":179,"col":4,"offset":3674},"end":{"line":179,"col":40,"offset":3710},"extra":{"metavars":{"$FUN":{"start":{"line":179,"col":4,"offset":3674},"end":{"line":179,"col":11,"offset":3681},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a158edb624e3a6e4a38784152c721d50f13eb0749cd021ff6aa360c18fb4377243d2a0f732e7c521ad4c14d6e6b988bf31b0470f18342a32b8f834a64139e233_3","lines":"\t\t\tsprintf(a, \"%s/%s\", dir, de->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":181,"col":8,"offset":3720},"end":{"line":181,"col":20,"offset":3732},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_5","lines":"\t\t\tif (stat(a, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":181,"col":8,"offset":3720},"end":{"line":181,"col":20,"offset":3732},"extra":{"metavars":{"$FUN":{"start":{"line":181,"col":8,"offset":3720},"end":{"line":181,"col":12,"offset":3724},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f0f1c739d0645f20ce53fb5a083820870c5c27cef1a57adc7d29cdc0a03dc2158deae7d010a6664baae51339e07288c520cd17b8f9ce689894c235679ef06ef_3","lines":"\t\t\tif (stat(a, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":189,"col":6,"offset":3934},"end":{"line":189,"col":14,"offset":3942},"extra":{"metavars":{"$PTR":{"start":{"line":189,"col":11,"offset":3939},"end":{"line":189,"col":12,"offset":3940},"abstract_content":"a","propagated_value":{"svalue_start":{"line":176,"col":13,"offset":3614},"svalue_end":{"line":176,"col":40,"offset":3641},"svalue_abstract_content":"malloc(dir_len+d_len+2)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92e8fedcd41a0f46004b42081bbf84036ff16420df18c7b197214a3043004af2c33ad280cd9a1900ab85f8e6a5cb5500e27de6a0ba519714e91331cf0b83e49c_0","lines":"\t\t\t\t\tfree(a);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":193,"col":4,"offset":3976},"end":{"line":193,"col":12,"offset":3984},"extra":{"metavars":{"$PTR":{"start":{"line":193,"col":9,"offset":3981},"end":{"line":193,"col":10,"offset":3982},"abstract_content":"a","propagated_value":{"svalue_start":{"line":176,"col":13,"offset":3614},"svalue_end":{"line":176,"col":40,"offset":3641},"svalue_abstract_content":"malloc(dir_len+d_len+2)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92e8fedcd41a0f46004b42081bbf84036ff16420df18c7b197214a3043004af2c33ad280cd9a1900ab85f8e6a5cb5500e27de6a0ba519714e91331cf0b83e49c_1","lines":"\t\t\tfree(a);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":211,"col":3,"offset":4217},"end":{"line":211,"col":50,"offset":4264},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%s/%s\""},"$BUF":{"start":{"line":211,"col":11,"offset":4225},"end":{"line":211,"col":23,"offset":4237},"abstract_content":"fp->->pathname"},"$FMT":{"start":{"line":211,"col":25,"offset":4239},"end":{"line":211,"col":32,"offset":4246},"abstract_content":"\"%s/%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"80f68dab85309f2f962cacbeb546eda9ed5075bcfe406f9d72770572c42b89152ed3de0dacf2bd05064f2a2f7fe406407131883d3a764750bfde47e2f93fc74f_0","lines":"\t\tsprintf(fp->pathname, \"%s/%s\", dir, de->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":211,"col":3,"offset":4217},"end":{"line":211,"col":50,"offset":4264},"extra":{"metavars":{"$FUN":{"start":{"line":211,"col":3,"offset":4217},"end":{"line":211,"col":10,"offset":4224},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a158edb624e3a6e4a38784152c721d50f13eb0749cd021ff6aa360c18fb4377243d2a0f732e7c521ad4c14d6e6b988bf31b0470f18342a32b8f834a64139e233_4","lines":"\t\tsprintf(fp->pathname, \"%s/%s\", dir, de->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":212,"col":7,"offset":4272},"end":{"line":212,"col":30,"offset":4295},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"85e82472e796160ce66e1b499102a0ca121b6e7d686fc9dbb2f20119906145462267831862d03c6a9fc7f0c069bd36f6b749f7cba5b80d1b3d74feb891e7c8d7_6","lines":"\t\tif (stat(fp->pathname, &st) != 0 || !S_ISREG(st.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":212,"col":7,"offset":4272},"end":{"line":212,"col":30,"offset":4295},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":7,"offset":4272},"end":{"line":212,"col":11,"offset":4276},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f0f1c739d0645f20ce53fb5a083820870c5c27cef1a57adc7d29cdc0a03dc2158deae7d010a6664baae51339e07288c520cd17b8f9ce689894c235679ef06ef_4","lines":"\t\tif (stat(fp->pathname, &st) != 0 || !S_ISREG(st.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":221,"col":10,"offset":4508},"end":{"line":221,"col":29,"offset":4527},"extra":{"metavars":{"$FUN":{"start":{"line":221,"col":10,"offset":4508},"end":{"line":221,"col":25,"offset":4523},"abstract_content":"maybe_pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"390573b923c270c67bc43c7e03faee8d88c3ab08d56e1382017738c1c089a0151035f68348c482509357aa842b482f876dd0564486a502181d245a71ed00f2ed_0","lines":"\t\t\t\trc = maybe_pipe_open(fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":225,"col":4,"offset":4556},"end":{"line":225,"col":22,"offset":4574},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":225,"col":4,"offset":4556},"end":{"line":225,"col":5,"offset":4557},"abstract_content":"l"},"$SIGNED":{"start":{"line":225,"col":19,"offset":4571},"end":{"line":225,"col":20,"offset":4572},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c1a80296ee969649327354cca4186ba3bdaae2e1b3301ee13e6d57f3b0ba4667c717118cacdc9cb1c5faa9071aa7ad3270693f7450cd75592db57e79afd5eaa9_0","lines":"\t\t\tl = strlen(suf[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":229,"col":12,"offset":4708},"end":{"line":229,"col":29,"offset":4725},"extra":{"metavars":{"$FUN":{"start":{"line":229,"col":12,"offset":4708},"end":{"line":229,"col":21,"offset":4717},"abstract_content":"pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"675480b6071280d405f3bf05fa981daa423a2379f7beedc2a0606a15802079bad4f8e5b9662ee294177c2d51550c9385688d9c7d9a1bd149d58b2b4c28942491_2","lines":"\t\t\t\t\t\trc = pipe_open(dc, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":244,"col":3,"offset":4890},"end":{"line":244,"col":14,"offset":4901},"extra":{"metavars":{"$PTR":{"start":{"line":244,"col":8,"offset":4895},"end":{"line":244,"col":12,"offset":4899},"abstract_content":"fdir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a77c3408b7346813b764d6f78c1aba2d3f46414837a6b66e12d557710ec278c353a47957bf75452717ad9b496b3e8fa11455a69adfab18bbbb52efc354baceb_0","lines":"\t\tfree(fdir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":258,"col":2,"offset":5151},"end":{"line":258,"col":28,"offset":5177},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0fc8dd807dd2ab8e49db353e8b0a693c450488ae4c2e8501280a063617f342b9e3d0bfd97a6e9eba69c1efe34c3d5cc21955f0eef052068e3a920a27e3fef3c6_0","lines":"\tstrcpy(fp->pathname, fnam);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":258,"col":2,"offset":5151},"end":{"line":258,"col":28,"offset":5177},"extra":{"metavars":{"$FUN":{"start":{"line":258,"col":2,"offset":5151},"end":{"line":258,"col":8,"offset":5157},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e6c1f6249484d2ef2b06832a4aae503165cd37fb27537666b2d0b050e1975250e654c8dc269823248045772a4ddd077a5f9511b02372311b697727f65cca416f_0","lines":"\tstrcpy(fp->pathname, fnam);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":260,"col":7,"offset":5186},"end":{"line":260,"col":26,"offset":5205},"extra":{"metavars":{"$FUN":{"start":{"line":260,"col":7,"offset":5186},"end":{"line":260,"col":22,"offset":5201},"abstract_content":"maybe_pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"390573b923c270c67bc43c7e03faee8d88c3ab08d56e1382017738c1c089a0151035f68348c482509357aa842b482f876dd0564486a502181d245a71ed00f2ed_1","lines":"\tif (!maybe_pipe_open(fp))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":283,"col":4,"offset":5774},"end":{"line":283,"col":33,"offset":5803},"extra":{"metavars":{"$RET":{"start":{"line":283,"col":4,"offset":5774},"end":{"line":283,"col":7,"offset":5777},"abstract_content":"dir"},"$FUN":{"start":{"line":283,"col":10,"offset":5780},"end":{"line":283,"col":17,"offset":5787},"abstract_content":"strndup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d68ad276a663a1cec20164adce934d0613c9bc7ad34b64672b3df9864e747bbc7627112ea0ee42e7429cd52f352b8086039509e67ccf0690f7c94e5dd15ec6d2_0","lines":"\t\t\tdir = strndup(dirpath[i], dl);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":285,"col":4,"offset":5815},"end":{"line":285,"col":21,"offset":5832},"extra":{"metavars":{"$RET":{"start":{"line":285,"col":4,"offset":5815},"end":{"line":285,"col":7,"offset":5818},"abstract_content":"dir"},"$FUN":{"start":{"line":285,"col":10,"offset":5821},"end":{"line":285,"col":16,"offset":5827},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"074341f6774c329e997f223fbe660b38e23628a0ee1d07a85fec1723f0fc8c14d2e61891778806b26b2529c913531ef07737fa20c1e516f6bb21d33a05ce32a0_0","lines":"\t\t\tdir = strdup(\".\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":291,"col":3,"offset":5929},"end":{"line":291,"col":13,"offset":5939},"extra":{"metavars":{"$PTR":{"start":{"line":291,"col":8,"offset":5934},"end":{"line":291,"col":11,"offset":5937},"abstract_content":"dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fa5187fe642c553a8b7dc0c8e62d836fd02f6f2b5b10d9b96e605ab2607cb57347de3b95de0f6ff4a2241014234aa1b68adc29bf27cd7187b1592f90fb7c9032_0","lines":"\t\tfree(dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":304,"col":7,"offset":6049},"end":{"line":304,"col":31,"offset":6073},"extra":{"metavars":{"$FUN":{"start":{"line":304,"col":7,"offset":6049},"end":{"line":304,"col":13,"offset":6055},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1962ac7ea51535dc6abc75ca14fb927b815796ee5af1ee69cca57dfc6b1423afdc1d8d4cf7ca8e8efba1c071b5bd38413a918917df7df5e1a0ddd9056fbb9cd5_2","lines":"\tfp = malloc(sizeof(lkfile_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":308,"col":2,"offset":6102},"end":{"line":308,"col":32,"offset":6132},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0fc8dd807dd2ab8e49db353e8b0a693c450488ae4c2e8501280a063617f342b9e3d0bfd97a6e9eba69c1efe34c3d5cc21955f0eef052068e3a920a27e3fef3c6_1","lines":"\tstrcpy(fp->pathname, filename);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":308,"col":2,"offset":6102},"end":{"line":308,"col":32,"offset":6132},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":2,"offset":6102},"end":{"line":308,"col":8,"offset":6108},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e6c1f6249484d2ef2b06832a4aae503165cd37fb27537666b2d0b050e1975250e654c8dc269823248045772a4ddd077a5f9511b02372311b697727f65cca416f_1","lines":"\tstrcpy(fp->pathname, filename);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","start":{"line":310,"col":6,"offset":6140},"end":{"line":310,"col":25,"offset":6159},"extra":{"metavars":{"$FUN":{"start":{"line":310,"col":6,"offset":6140},"end":{"line":310,"col":21,"offset":6155},"abstract_content":"maybe_pipe_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"390573b923c270c67bc43c7e03faee8d88c3ab08d56e1382017738c1c089a0151035f68348c482509357aa842b482f876dd0564486a502181d245a71ed00f2ed_2","lines":"\tif (maybe_pipe_open(fp) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/func.c","start":{"line":36,"col":2,"offset":712},"end":{"line":36,"col":60,"offset":770},"extra":{"metavars":{"$FUN":{"start":{"line":36,"col":2,"offset":712},"end":{"line":36,"col":9,"offset":719},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"952ba30725c1f07929ce574db80f12e4531de48442787d1d32f5fa980bf8a9ea6379128f24895948086c5be3b46b5d1e4f85acf82ec6da87dd6e0f09add37c9f_0","lines":"\tstrncpy((char *)kbs->kb_string, s, sizeof(kbs->kb_string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/func.c","start":{"line":48,"col":3,"offset":971},"end":{"line":48,"col":11,"offset":979},"extra":{"metavars":{"$PTR":{"start":{"line":48,"col":8,"offset":976},"end":{"line":48,"col":9,"offset":977},"abstract_content":"s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4537082466e4577b365b4cf5eac8a3bbefc5ffc4f7683c83cb05b8fb20b61650be4b85074043aee92d264f3132cda30c26e40dc0414dc79c864c472602ce58c8_0","lines":"\t\tfree(s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kernel.c","start":{"line":95,"col":7,"offset":1830},"end":{"line":95,"col":12,"offset":1835},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":95,"col":7,"offset":1830},"end":{"line":95,"col":8,"offset":1831},"abstract_content":"i"},"$SIGNED":{"start":{"line":95,"col":11,"offset":1834},"end":{"line":95,"col":12,"offset":1835},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0581e964029e48434d4e9994ffff0ed9c897387346d55654e966bb806e468d4169e8f696483abb01de747c4505b94766075f8f6b16db92d44b745f4e50ed0cfb_0","lines":"\tfor (i = 0; i < kd.kb_cnt; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":56,"col":9,"offset":928},"end":{"line":56,"col":40,"offset":959},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":9,"offset":928},"end":{"line":56,"col":15,"offset":934},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"17c3ff0ed37648e38f04156f488966e3b66a425ed3177afbe826f00091318e2272ef7fd25add7facaa724d9d935cff154fd5300086f36f1bfba23cba54505802_0","lines":"\tkeys = malloc(sizeof(struct lk_array));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":117,"col":15,"offset":2125},"end":{"line":117,"col":33,"offset":2143},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":117,"col":15,"offset":2125},"end":{"line":117,"col":19,"offset":2129},"abstract_content":"code"},"$SIGNED":{"start":{"line":117,"col":22,"offset":2132},"end":{"line":117,"col":29,"offset":2139},"abstract_content":"keycode"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"65859a5e0908805ddb4e84fdc49f5b8a20d9ff11bb0bcc47afef55935f5ecd992e0b644dc34265a1be73a4e4a3b001345e5fcab781bdacb28d8e10a208f87def_0","lines":"\tunsigned int code = keycode + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":128,"col":3,"offset":2428},"end":{"line":132,"col":4,"offset":2567},"extra":{"metavars":{"$EXPR1":{"start":{"line":128,"col":7,"offset":2432},"end":{"line":128,"col":20,"offset":2445},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":128,"col":23,"offset":2448},"end":{"line":128,"col":41,"offset":2466},"abstract_content":"LK_KEYWORD_KEYMAPS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d4105f8392df24f3bc8624fa3c33c8911806f9fa37aee4741eac20c3dc740d8765e221cdce9c94c7516fa1d3346c7ee4f33e6780e08f944499c6af6e93a3430_0","lines":"\t\tif (ctx->keywords & LK_KEYWORD_KEYMAPS) {\n\t\t\tERR(ctx, _(\"adding map %d violates explicit keymaps line\"),\n\t\t\t    k_table);\n\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":138,"col":2,"offset":2624},"end":{"line":140,"col":12,"offset":2745},"extra":{"metavars":{"$EXPR1":{"start":{"line":138,"col":7,"offset":2629},"end":{"line":138,"col":20,"offset":2642},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":138,"col":23,"offset":2645},"end":{"line":138,"col":43,"offset":2665},"abstract_content":"LK_KEYWORD_ALTISMETA"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"814387ca4e10d9d808de0c705cd5bc9921a010aec39d572138cbb7b6bf566115fd52acd686dc7c8f8862df4ca457d1b086b744842b41180e80a611dc12b30c54_0","lines":"\tif ((ctx->keywords & LK_KEYWORD_ALTISMETA) && keycode == K_HOLE &&\n\t    lk_key_exists(ctx, k_table, k_index))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":150,"col":2,"offset":2935},"end":{"line":162,"col":3,"offset":3367},"extra":{"metavars":{"$EXPR1":{"start":{"line":150,"col":6,"offset":2939},"end":{"line":150,"col":19,"offset":2952},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":150,"col":22,"offset":2955},"end":{"line":150,"col":42,"offset":2975},"abstract_content":"LK_KEYWORD_ALTISMETA"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"814387ca4e10d9d808de0c705cd5bc9921a010aec39d572138cbb7b6bf566115fd52acd686dc7c8f8862df4ca457d1b086b744842b41180e80a611dc12b30c54_1","lines":"\tif (ctx->keywords & LK_KEYWORD_ALTISMETA) {\n\t\tunsigned int alttable = k_table | M_ALT;\n\t\tint type              = KTYP(keycode);\n\t\tint val               = KVAL(keycode);\n\n\t\tif (alttable != k_table && lk_map_exists(ctx, alttable) &&\n\t\t    !lk_key_exists(ctx, alttable, k_index) &&\n\t\t    (type == KT_LATIN || type == KT_LETTER) &&\n\t\t    val < 128) {\n\t\t\tif (lk_add_key(ctx, alttable, k_index, K(KT_META, val)) < 0)\n\t\t\t\treturn -1;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":184,"col":8,"offset":3786},"end":{"line":184,"col":22,"offset":3800},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":184,"col":8,"offset":3786},"end":{"line":184,"col":9,"offset":3787},"abstract_content":"j"},"$SIGNED":{"start":{"line":184,"col":21,"offset":3799},"end":{"line":184,"col":22,"offset":3800},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e686a8479d51bfae05f844db92aa7a707f6bf18125e18bd385e43691951f679d4dc8629780f3ed270525ea59e5d3b1d98837b082220f06740ad98e920d0ceddc_0","lines":"\t\tfor (j          = 4; j < 8; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":187,"col":8,"offset":3859},"end":{"line":187,"col":22,"offset":3873},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":187,"col":8,"offset":3859},"end":{"line":187,"col":9,"offset":3860},"abstract_content":"j"},"$SIGNED":{"start":{"line":187,"col":21,"offset":3872},"end":{"line":187,"col":22,"offset":3873},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"730d90f212d8b1bf59c1fe35f14162cb61f9f7e31ad2e7f3d73260954a816bd4f2a7068510b40b950569c37129a32c8352fe27b443657ba7a095ccd73ae6dd0b_0","lines":"\t\tfor (j          = 8; j < 16; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":190,"col":8,"offset":3940},"end":{"line":190,"col":13,"offset":3945},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":190,"col":8,"offset":3940},"end":{"line":190,"col":9,"offset":3941},"abstract_content":"j"},"$SIGNED":{"start":{"line":190,"col":12,"offset":3944},"end":{"line":190,"col":13,"offset":3945},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d449bc3f031eab2446e1a7b51031a3cc9db0a16276502d542e4558757b8a0b452fd70c91891c3e1a1e1cf638376a282c8aea5f4ff65761afebaf5966dc52c03a_0","lines":"\t\tfor (j = 0; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":204,"col":8,"offset":4242},"end":{"line":204,"col":13,"offset":4247},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":204,"col":8,"offset":4242},"end":{"line":204,"col":9,"offset":4243},"abstract_content":"j"},"$SIGNED":{"start":{"line":204,"col":12,"offset":4246},"end":{"line":204,"col":13,"offset":4247},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b61c15bfeb489a4b8c88f4f026ae2797d6506c400d494c909bbfdc35850b199d7403d85f0466c985e4e6f3861dd62024ad8574d4ab5b9e50e2b842fa2027f492_0","lines":"\t\tfor (j = 1; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":220,"col":18,"offset":4509},"end":{"line":220,"col":24,"offset":4515},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":220,"col":18,"offset":4509},"end":{"line":220,"col":20,"offset":4511},"abstract_content":"r0"},"$SIGNED":{"start":{"line":220,"col":23,"offset":4514},"end":{"line":220,"col":24,"offset":4515},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0fde634f04b39166d5c2007a02bed7df9be1d3258d6a15a5457a8c9f3957b0a4888c145106f2e765bc7a58ca0c61d2a87b2cdde8483d52619105396dd5a2d037_0","lines":"\tunsigned int i, r0 = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":222,"col":2,"offset":4519},"end":{"line":225,"col":3,"offset":4633},"extra":{"metavars":{"$EXPR1":{"start":{"line":222,"col":6,"offset":4523},"end":{"line":222,"col":19,"offset":4536},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":222,"col":22,"offset":4539},"end":{"line":222,"col":40,"offset":4557},"abstract_content":"LK_KEYWORD_KEYMAPS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d4105f8392df24f3bc8624fa3c33c8911806f9fa37aee4741eac20c3dc740d8765e221cdce9c94c7516fa1d3346c7ee4f33e6780e08f944499c6af6e93a3430_1","lines":"\tif (ctx->keywords & LK_KEYWORD_KEYMAPS) {\n\t\twhile (r0 < ctx->keymap->total && !lk_map_exists(ctx, r0))\n\t\t\tr0++;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","start":{"line":227,"col":7,"offset":4641},"end":{"line":227,"col":12,"offset":4646},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":227,"col":7,"offset":4641},"end":{"line":227,"col":8,"offset":4642},"abstract_content":"i"},"$SIGNED":{"start":{"line":227,"col":11,"offset":4645},"end":{"line":227,"col":12,"offset":4646},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"651928b3908794f76e3d17b8085885b94012999dbc731274764f5f961cd96244d06e80562a253bee865674fb1c1771cf67077e8184de206a7d7d445eef75d06a_0","lines":"\tfor (i = 0; i < ctx->key_constant->total; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":60,"col":20,"offset":1337},"end":{"line":60,"col":69,"offset":1386},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":60,"col":20,"offset":1337},"end":{"line":60,"col":28,"offset":1345},"abstract_content":"syn_size"},"$SIGNED":{"start":{"line":60,"col":67,"offset":1384},"end":{"line":60,"col":68,"offset":1385},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9377d7c41740c1dd037eff978ff3a05b583f248d5731c2edf76b06c789d3fbc44822cc5ad9920e600e2acdc03800123407efb9e6bacad810b0e4f50dee437f5c_0","lines":"const unsigned int syn_size  = sizeof(synonyms) / sizeof(synonyms[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":87,"col":27,"offset":2261},"end":{"line":87,"col":80,"offset":2314},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":87,"col":27,"offset":2261},"end":{"line":87,"col":40,"offset":2274},"abstract_content":"charsets_size"},"$SIGNED":{"start":{"line":87,"col":78,"offset":2312},"end":{"line":87,"col":79,"offset":2313},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c1ae293b4ad71587ef3f6655bc1f24d35bcdd46a769667adfa7fbb43de418338a16b82aaf424c8cc036b07914befaff36249e95aa79d56f85ad3ded06523ea0d_0","lines":"static const unsigned int charsets_size = sizeof(charsets) / sizeof(charsets[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":97,"col":7,"offset":2481},"end":{"line":97,"col":12,"offset":2486},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":97,"col":7,"offset":2481},"end":{"line":97,"col":8,"offset":2482},"abstract_content":"j"},"$SIGNED":{"start":{"line":97,"col":11,"offset":2485},"end":{"line":97,"col":12,"offset":2486},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85973d9573adaccdf3d62ea5c44f465eb508b7f493bfd5c92f767c3fce38d196ba174fc6b70624ba77202c714d26a6d22d7116d03a42505da0e1a2203f529852_0","lines":"\tfor (j = 0; j < sizeof(mm) / sizeof(mm[0]); j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":22,"offset":2616},"extra":{"metavars":{"$NARROW":{"start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":6,"offset":2600},"abstract_content":"lth"},"$LARGE":{"start":{"line":102,"col":19,"offset":2613},"end":{"line":102,"col":20,"offset":2614},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f896aab5b7b8ee2ddb9d0eb6037fac45a025c7105940730b26a0e1a6cef71697041169c766d3fada2362e2910764f44b112e422da915a4b624a571e7b6c2b8f_0","lines":"\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":22,"offset":2616},"extra":{"metavars":{"$SIGNED":{"start":{"line":102,"col":3,"offset":2597},"end":{"line":102,"col":6,"offset":2600},"abstract_content":"lth"},"$UNSIGNED":{"start":{"line":102,"col":19,"offset":2613},"end":{"line":102,"col":20,"offset":2614},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"088cf6187533deb7f3a916e131abf34e55b08ca59747c2ad7e47a8c4a0b499ea7cf558c0984d885792ef985c61b0d58c1d8eed65a17ab479aeca5f4b9e8a4593_0","lines":"\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":103,"col":8,"offset":2625},"end":{"line":103,"col":13,"offset":2630},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":103,"col":8,"offset":2625},"end":{"line":103,"col":9,"offset":2626},"abstract_content":"i"},"$SIGNED":{"start":{"line":103,"col":12,"offset":2629},"end":{"line":103,"col":13,"offset":2630},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"07e1f865a2836ab8bd0608868f822a2af057a5837720df76cccd5ed75bc6b3f23774cc3d1644f2fa09b24984a0fc8e679254b192692448f03394522178fb08f2_0","lines":"\t\tfor (i = 1; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":112,"col":7,"offset":2832},"end":{"line":112,"col":12,"offset":2837},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":112,"col":7,"offset":2832},"end":{"line":112,"col":8,"offset":2833},"abstract_content":"i"},"$SIGNED":{"start":{"line":112,"col":11,"offset":2836},"end":{"line":112,"col":12,"offset":2837},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_0","lines":"\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":113,"col":8,"offset":2872},"end":{"line":113,"col":13,"offset":2877},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":113,"col":8,"offset":2872},"end":{"line":113,"col":9,"offset":2873},"abstract_content":"j"},"$SIGNED":{"start":{"line":113,"col":12,"offset":2876},"end":{"line":113,"col":13,"offset":2877},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85973d9573adaccdf3d62ea5c44f465eb508b7f493bfd5c92f767c3fce38d196ba174fc6b70624ba77202c714d26a6d22d7116d03a42505da0e1a2203f529852_1","lines":"\t\tfor (j = 0; j < sizeof(mm) / sizeof(mm[0]); j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":23,"offset":2940},"extra":{"metavars":{"$NARROW":{"start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":7,"offset":2924},"abstract_content":"lth"},"$LARGE":{"start":{"line":114,"col":20,"offset":2937},"end":{"line":114,"col":21,"offset":2938},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f896aab5b7b8ee2ddb9d0eb6037fac45a025c7105940730b26a0e1a6cef71697041169c766d3fada2362e2910764f44b112e422da915a4b624a571e7b6c2b8f_1","lines":"\t\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":23,"offset":2940},"extra":{"metavars":{"$SIGNED":{"start":{"line":114,"col":4,"offset":2921},"end":{"line":114,"col":7,"offset":2924},"abstract_content":"lth"},"$UNSIGNED":{"start":{"line":114,"col":20,"offset":2937},"end":{"line":114,"col":21,"offset":2938},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"088cf6187533deb7f3a916e131abf34e55b08ca59747c2ad7e47a8c4a0b499ea7cf558c0984d885792ef985c61b0d58c1d8eed65a17ab479aeca5f4b9e8a4593_1","lines":"\t\t\tlth = strlen(mm[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":137,"col":7,"offset":3325},"end":{"line":137,"col":12,"offset":3330},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":137,"col":7,"offset":3325},"end":{"line":137,"col":8,"offset":3326},"abstract_content":"i"},"$SIGNED":{"start":{"line":137,"col":11,"offset":3329},"end":{"line":137,"col":12,"offset":3330},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_1","lines":"\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":147,"col":1,"offset":3477},"end":{"line":147,"col":13,"offset":3489},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":1,"offset":3477},"end":{"line":147,"col":13,"offset":3489},"abstract_content":"get_sym_size"},"$SIGNED":{"start":{"line":151,"col":10,"offset":3632},"end":{"line":151,"col":11,"offset":3633},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4ad67c4e0f3323d95ea7f2b0b12a37f93e6e1a3f248cd8a7d65b578a186a40676a37cd9a8455cc76bd01aaa002f551d8ac865911de3a9b25d2d8c4647103d83a_0","lines":"get_sym_size(struct lk_ctx *ctx, unsigned int ktype)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":216,"col":8,"offset":4869},"end":{"line":216,"col":13,"offset":4874},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":216,"col":8,"offset":4869},"end":{"line":216,"col":9,"offset":4870},"abstract_content":"i"},"$SIGNED":{"start":{"line":216,"col":12,"offset":4873},"end":{"line":216,"col":13,"offset":4874},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_2","lines":"\t\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":31,"offset":4981},"extra":{"metavars":{"$NARROW":{"start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":11,"offset":4961},"abstract_content":"j"},"$LARGE":{"start":{"line":219,"col":23,"offset":4973},"end":{"line":219,"col":24,"offset":4974},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3208a8017593900f05c0e47e322c277e73fbd985a0e752a5dd6e50aedbe70697745090e4ad2db9f31ce4b6eebb36c81cdcc73369ee279cb4e7d22f0187a1041c_0","lines":"\t\t\t\tfor (j = charsets[i].start; j < 256; j++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":31,"offset":4981},"extra":{"metavars":{"$SIGNED":{"start":{"line":219,"col":10,"offset":4960},"end":{"line":219,"col":11,"offset":4961},"abstract_content":"j"},"$UNSIGNED":{"start":{"line":219,"col":23,"offset":4973},"end":{"line":219,"col":24,"offset":4974},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f166292458016dc5de2a0acc8ba3ad3569cf877d78ef9aad4c4e8a5caa3ddf7a47652b8873dc73012f668ba67d7983bb109e0cbf51522e2d0de54d76950197dd_0","lines":"\t\t\t\tfor (j = charsets[i].start; j < 256; j++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":251,"col":2,"offset":5427},"end":{"line":251,"col":44,"offset":5469},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":251,"col":2,"offset":5427},"end":{"line":251,"col":5,"offset":5430},"abstract_content":"max"},"$SIGNED":{"start":{"line":251,"col":9,"offset":5434},"end":{"line":251,"col":18,"offset":5443},"abstract_content":"direction"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"add8f7f9ac752d57bbebdfa44782e742d6ce85bb6b505e30fd5f816c4dbed235cef12e8e3fea815a70f6db3231957b0e36e1c0215ba8208d082bdd078a3bb186_0","lines":"\tmax = (direction == TO_UNICODE ? 128 : 256); // TODO(dmage): is 256 valid for ethiopic charset?","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":258,"col":2,"offset":5657},"end":{"line":258,"col":60,"offset":5715},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":258,"col":2,"offset":5657},"end":{"line":258,"col":5,"offset":5660},"abstract_content":"max"},"$SIGNED":{"start":{"line":258,"col":9,"offset":5664},"end":{"line":258,"col":18,"offset":5673},"abstract_content":"direction"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"add8f7f9ac752d57bbebdfa44782e742d6ce85bb6b505e30fd5f816c4dbed235cef12e8e3fea815a70f6db3231957b0e36e1c0215ba8208d082bdd078a3bb186_1","lines":"\tmax = (direction == TO_UNICODE ? 128 : syms[KT_LATIN].size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":260,"col":7,"offset":5725},"end":{"line":260,"col":12,"offset":5730},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":260,"col":7,"offset":5725},"end":{"line":260,"col":8,"offset":5726},"abstract_content":"i"},"$SIGNED":{"start":{"line":260,"col":11,"offset":5729},"end":{"line":260,"col":12,"offset":5730},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_3","lines":"\tfor (i = 0; i < max; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":304,"col":7,"offset":6651},"end":{"line":304,"col":12,"offset":6656},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":304,"col":7,"offset":6651},"end":{"line":304,"col":8,"offset":6652},"abstract_content":"i"},"$SIGNED":{"start":{"line":304,"col":11,"offset":6655},"end":{"line":304,"col":12,"offset":6656},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"07e1f865a2836ab8bd0608868f822a2af057a5837720df76cccd5ed75bc6b3f23774cc3d1644f2fa09b24984a0fc8e679254b192692448f03394522178fb08f2_1","lines":"\tfor (i = 1; i < syms_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":305,"col":8,"offset":6687},"end":{"line":305,"col":13,"offset":6692},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":305,"col":8,"offset":6687},"end":{"line":305,"col":9,"offset":6688},"abstract_content":"j"},"$SIGNED":{"start":{"line":305,"col":12,"offset":6691},"end":{"line":305,"col":13,"offset":6692},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85973d9573adaccdf3d62ea5c44f465eb508b7f493bfd5c92f767c3fce38d196ba174fc6b70624ba77202c714d26a6d22d7116d03a42505da0e1a2203f529852_2","lines":"\t\tfor (j = 0; j < syms[i].size; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":311,"col":7,"offset":6792},"end":{"line":311,"col":12,"offset":6797},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":311,"col":7,"offset":6792},"end":{"line":311,"col":8,"offset":6793},"abstract_content":"i"},"$SIGNED":{"start":{"line":311,"col":11,"offset":6796},"end":{"line":311,"col":12,"offset":6797},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_4","lines":"\tfor (i = 0; i < syn_size; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":326,"col":8,"offset":7231},"end":{"line":326,"col":13,"offset":7236},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":326,"col":8,"offset":7231},"end":{"line":326,"col":9,"offset":7232},"abstract_content":"i"},"$SIGNED":{"start":{"line":326,"col":12,"offset":7235},"end":{"line":326,"col":13,"offset":7236},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_5","lines":"\t\tfor (i = 0; i < charsets_size; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":345,"col":8,"offset":7786},"end":{"line":345,"col":13,"offset":7791},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":345,"col":8,"offset":7786},"end":{"line":345,"col":9,"offset":7787},"abstract_content":"i"},"$SIGNED":{"start":{"line":345,"col":12,"offset":7790},"end":{"line":345,"col":13,"offset":7791},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_6","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":351,"col":8,"offset":7948},"end":{"line":351,"col":13,"offset":7953},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":351,"col":8,"offset":7948},"end":{"line":351,"col":9,"offset":7949},"abstract_content":"i"},"$SIGNED":{"start":{"line":351,"col":12,"offset":7952},"end":{"line":351,"col":13,"offset":7953},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_7","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":357,"col":8,"offset":8115},"end":{"line":357,"col":13,"offset":8120},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":357,"col":8,"offset":8115},"end":{"line":357,"col":9,"offset":8116},"abstract_content":"i"},"$SIGNED":{"start":{"line":357,"col":12,"offset":8119},"end":{"line":357,"col":13,"offset":8120},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_8","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":363,"col":8,"offset":8277},"end":{"line":363,"col":13,"offset":8282},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":363,"col":8,"offset":8277},"end":{"line":363,"col":9,"offset":8278},"abstract_content":"i"},"$SIGNED":{"start":{"line":363,"col":12,"offset":8281},"end":{"line":363,"col":13,"offset":8282},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_9","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":369,"col":8,"offset":8439},"end":{"line":369,"col":13,"offset":8444},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":369,"col":8,"offset":8439},"end":{"line":369,"col":9,"offset":8440},"abstract_content":"i"},"$SIGNED":{"start":{"line":369,"col":12,"offset":8443},"end":{"line":369,"col":13,"offset":8444},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eef30192be3bc9766cc1da9eb2341be08d1224cf1e2dc72f6e118549435e0ea2c68fd2c2d8590a4f0146599e1f4e16bf591b2f3432bd44ff6ef282eed6ad96df_10","lines":"\t\tfor (i = 0; i < 256 - 160; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":389,"col":2,"offset":8861},"end":{"line":389,"col":51,"offset":8910},"extra":{"metavars":{"$EXPR1":{"start":{"line":389,"col":26,"offset":8885},"end":{"line":389,"col":35,"offset":8894},"abstract_content":"direction"},"$EXPR2":{"start":{"line":389,"col":39,"offset":8898},"end":{"line":389,"col":49,"offset":8908},"abstract_content":"TO_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b5b221884fdb1ab671b762be646778d682d382ebb1cc5a1a2faf0fd43054475ace458c1f0cc4487b89af964e3093468b0eda0fe28377b4f7847d1d1e8e2e664b_0","lines":"\tint unicode_forced   = (direction == TO_UNICODE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","start":{"line":434,"col":2,"offset":10209},"end":{"line":441,"col":43,"offset":10549},"extra":{"metavars":{"$EXPR1":{"start":{"line":434,"col":35,"offset":10242},"end":{"line":434,"col":45,"offset":10252},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":434,"col":48,"offset":10255},"end":{"line":434,"col":70,"offset":10277},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7f077cef62fd95ce3b80cb14724da02dc49e129ac55620c6d6c464dd93c72f5e53f126b10b1dabafc38b69fc4624520b86fe40c03e1da2f2925e848495de760_0","lines":"\tif (KTYP(code) == KT_LATIN && (!(ctx->flags & LK_FLAG_PREFER_UNICODE) || code < 0x80))\n\t\treturn K(KT_LETTER, KVAL(code));\n\telse if ((code ^ 0xf000) < 0x100)\n\t\t/* Unicode Latin-1 Supplement */\n\t\t/* a bit dirty to use KT_LETTER here, but it should work */\n\t\treturn K(KT_LETTER, code ^ 0xf000);\n\telse\n\t\treturn convert_code(ctx, code, TO_AUTO);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":259,"col":4,"offset":6188},"end":{"line":260,"col":26,"offset":6260},"extra":{"metavars":{"$FUN":{"start":{"line":259,"col":4,"offset":6188},"end":{"line":259,"col":11,"offset":6195},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7d4b3883513c30fb5ec01b8503ec701b66e233fff22ab2124ecaa9829c20d002c5bc825ff478d90d2d7cea99e0f2dae15a84316eff3ed5c7f59e57644dd2fbb6_0","lines":"\t\t\tstrncpy((char *)ke.kb_string, stringvalues[i],\n\t\t\t\tsizeof(ke.kb_string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1033,"col":17,"offset":33483},"end":{"line":1033,"col":23,"offset":33489},"extra":{"metavars":{"$VAR":{"start":{"line":1033,"col":17,"offset":33483},"end":{"line":1033,"col":23,"offset":33489},"abstract_content":"*++yyp"},"$VAL1":{"start":{"line":1039,"col":16,"offset":33598},"end":{"line":1039,"col":20,"offset":33602},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":1049,"col":16,"offset":33838},"end":{"line":1049,"col":19,"offset":33841},"abstract_content":"'\"'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b128bcd116316514d9fdd09c3a8edf63b9a10025113bb2766f400d1dbe95968f9410546c8d4c631590d6cf38886c9bd30fe74275b1e5f489efa8103d7e059b31_0","lines":"        switch (*++yyp)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1060,"col":10,"offset":34023},"end":{"line":1060,"col":33,"offset":34046},"extra":{"metavars":{"$FUN":{"start":{"line":1060,"col":10,"offset":34023},"end":{"line":1060,"col":18,"offset":34031},"abstract_content":"yystpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78bc6f83f670c5526e8263660202e86ca48ed1e6dc034d4972cea0576dc3bc14a5a88ab76317ea2f7e2263a57381a78454e25872aeb133e5ff4d9afdfed16e2c_0","lines":"  return yystpcpy (yyres, yystr) - yyres;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1147,"col":11,"offset":37857},"end":{"line":1147,"col":18,"offset":37864},"extra":{"metavars":{"$VAR":{"start":{"line":1147,"col":11,"offset":37857},"end":{"line":1147,"col":18,"offset":37864},"abstract_content":"yycount"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5334a0608183e00b1e777b6e97825af243ad8f3751f3a08380660f4b43a60e0a7eafea2808acc74b7bd2f04cf1b167e1d4228bd79011d2b7e796449b2fe0d858_0","lines":"  switch (yycount)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1312,"col":25,"offset":42300},"end":{"line":1312,"col":37,"offset":42312},"extra":{"metavars":{"$TYPE":{"start":{"line":1255,"col":5,"offset":40745},"end":{"line":1255,"col":17,"offset":40757},"abstract_content":"yytype_int16"},"$PTR2":{"start":{"line":1312,"col":25,"offset":42300},"end":{"line":1312,"col":30,"offset":42305},"abstract_content":"yyssp"},"$PTR1":{"start":{"line":1312,"col":33,"offset":42308},"end":{"line":1312,"col":37,"offset":42312},"abstract_content":"yyss"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a697f86e630d7dafd5ea285d8fbb24035e0590cf1bb27b01749546862a98f66186f68d2a7b05c17a8dc58ccf36a43d8ceca622908d4a11909279d87b9d629d35_0","lines":"      YYSIZE_T yysize = yyssp - yyss + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1487,"col":5,"offset":47101},"end":{"line":1489,"col":43,"offset":47252},"extra":{"metavars":{"$EXPR1":{"start":{"line":1487,"col":9,"offset":47105},"end":{"line":1487,"col":19,"offset":47115},"abstract_content":"ctx->->flags"},"$EXPR2":{"start":{"line":1487,"col":22,"offset":47118},"end":{"line":1487,"col":44,"offset":47140},"abstract_content":"LK_FLAG_PREFER_UNICODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ab8b97b875f7d8d5bb5784884bc7c26808a4a3c3e9c13730194a928bc2f02d2c9cb581450e9b1c57fb6cad1f642f426285ec4cb7d859b6784c5e253892aece1_0","lines":"\t\t\t\tif (ctx->flags & LK_FLAG_PREFER_UNICODE &&\n\t\t\t\t    !strcasecmp((char *) (yyvsp[-1].str).data, \"iso-8859-1\"))\n\t\t\t\t\tctx->flags ^= LK_FLAG_PREFER_UNICODE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1571,"col":5,"offset":48927},"end":{"line":1573,"col":34,"offset":49034},"extra":{"metavars":{"$FUN":{"start":{"line":1571,"col":5,"offset":48927},"end":{"line":1571,"col":12,"offset":48934},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7d4b3883513c30fb5ec01b8503ec701b66e233fff22ab2124ecaa9829c20d002c5bc825ff478d90d2d7cea99e0f2dae15a84316eff3ed5c7f59e57644dd2fbb6_1","lines":"\t\t\t\tstrncpy((char *) ke.kb_string,\n\t\t\t\t        (char *) (yyvsp[-1].str).data,\n\t\t\t\t        sizeof(ke.kb_string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1629,"col":11,"offset":50245},"end":{"line":1629,"col":18,"offset":50252},"extra":{"metavars":{"$NARROW":{"start":{"line":1629,"col":11,"offset":50245},"end":{"line":1629,"col":14,"offset":50248},"abstract_content":"one"},"$LARGE":{"start":{"line":1629,"col":17,"offset":50251},"end":{"line":1629,"col":18,"offset":50252},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"895183f217b926c755a4f5921dbef8fe9b655d8440df895fed741546eefc9cd3db4b4f08624696bbb805a96d70c23ea89e8ae959446205cb1837c38f19f71df4_0","lines":"\t\t\t\t\tchar one = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1638,"col":11,"offset":50635},"end":{"line":1638,"col":16,"offset":50640},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1638,"col":11,"offset":50635},"end":{"line":1638,"col":12,"offset":50636},"abstract_content":"j"},"$SIGNED":{"start":{"line":1638,"col":15,"offset":50639},"end":{"line":1638,"col":16,"offset":50640},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5b0086fd6770cedffb1fb7b028c8a94c3d01b94867bf0ceac8f5eafb65aea1adc5aaca80c6d2201b7f0c29e902fbf5ac5f8c79b716c7ca98c6069e880a64ec3b_0","lines":"\t\t\t\t\tfor (j = 0; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1647,"col":5,"offset":50810},"end":{"line":1680,"col":6,"offset":51601},"extra":{"metavars":{"$EXPR1":{"start":{"line":1647,"col":9,"offset":50814},"end":{"line":1647,"col":22,"offset":50827},"abstract_content":"ctx->->keywords"},"$EXPR2":{"start":{"line":1647,"col":25,"offset":50830},"end":{"line":1647,"col":43,"offset":50848},"abstract_content":"LK_KEYWORD_KEYMAPS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"081aef67a2554555f2f250b42c2d25bd62288c16bd6793056ca6567bf86dbb2d932847123c3ab1ba535481bcf95a384907e0de3aeb5d5c971284d45b16fef06f_0","lines":"\t\t\t\tif (ctx->keywords & LK_KEYWORD_KEYMAPS) {\n\t\t\t\t\ti = 0;\n\n\t\t\t\t\tfor (j = 0; j < ctx->keymap->total; j++) {\n\t\t\t\t\t\tif (!lk_map_exists(ctx, j))\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tif (ctx->key_line->count != 1 || i == 0) {\n\t\t\t\t\t\t\tkeycode = K_HOLE;\n\n\t\t\t\t\t\t\tif (i < ctx->key_line->count) {\n\t\t\t\t\t\t\t\tval = lk_array_get(ctx->key_line, i);\n\t\t\t\t\t\t\t\tkeycode = *val;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (lk_add_key(ctx, j, (yyvsp[-3].num), keycode) < 0)\n\t\t\t\t\t\t\t\tYYERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < ctx->key_line->count) {\n\t\t\t\t\t\tERR(ctx, _(\"too many (%d) entries on one line\"),\n\t\t\t\t\t\t\tctx->key_line->count);\n\t\t\t\t\t\tYYERROR;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0; i < ctx->key_line->count; i++) {\n\t\t\t\t\t\tval = lk_array_get(ctx->key_line, i);\n\n\t\t\t\t\t\tif (lk_add_key(ctx, i, (yyvsp[-3].num), *val) < 0)\n\t\t\t\t\t\t\tYYERROR;\n\t\t\t\t\t}\n\t\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1648,"col":6,"offset":50857},"end":{"line":1648,"col":11,"offset":50862},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1648,"col":6,"offset":50857},"end":{"line":1648,"col":7,"offset":50858},"abstract_content":"i"},"$SIGNED":{"start":{"line":1648,"col":10,"offset":50861},"end":{"line":1648,"col":11,"offset":50862},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1039c5b70aaac945df41c04cc03bcc8a15bb34c2cd873fd77c46d8b946ce6cb0b15bf3be7a8b54ddf759bc7d04fbbe727514ba28ce5352187d34b5a579c3d698_0","lines":"\t\t\t\t\ti = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1650,"col":11,"offset":50875},"end":{"line":1650,"col":16,"offset":50880},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1650,"col":11,"offset":50875},"end":{"line":1650,"col":12,"offset":50876},"abstract_content":"j"},"$SIGNED":{"start":{"line":1650,"col":15,"offset":50879},"end":{"line":1650,"col":16,"offset":50880},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5b0086fd6770cedffb1fb7b028c8a94c3d01b94867bf0ceac8f5eafb65aea1adc5aaca80c6d2201b7f0c29e902fbf5ac5f8c79b716c7ca98c6069e880a64ec3b_1","lines":"\t\t\t\t\tfor (j = 0; j < ctx->keymap->total; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1674,"col":11,"offset":51431},"end":{"line":1674,"col":16,"offset":51436},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1674,"col":11,"offset":51431},"end":{"line":1674,"col":12,"offset":51432},"abstract_content":"i"},"$SIGNED":{"start":{"line":1674,"col":15,"offset":51435},"end":{"line":1674,"col":16,"offset":51436},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1039c5b70aaac945df41c04cc03bcc8a15bb34c2cd873fd77c46d8b946ce6cb0b15bf3be7a8b54ddf759bc7d04fbbe727514ba28ce5352187d34b5a579c3d698_1","lines":"\t\t\t\t\tfor (i = 0; i < ctx->key_line->count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":95,"col":2,"offset":1806},"end":{"line":96,"col":22,"offset":1899},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_0","lines":"\tfprintf(fd, _(\"keycode range supported by kernel:           1 - %d\\n\"),\n\t        NR_KEYS - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":97,"col":2,"offset":1902},"end":{"line":98,"col":25,"offset":1998},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_1","lines":"\tfprintf(fd, _(\"max number of actions bindable to a key:         %d\\n\"),\n\t        MAX_NR_KEYMAPS);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":99,"col":2,"offset":2001},"end":{"line":100,"col":37,"offset":2109},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_2","lines":"\tfprintf(fd, _(\"number of keymaps in actual use:                 %u\\n\"),\n\t        (unsigned int)info.keymaps);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":102,"col":2,"offset":2113},"end":{"line":103,"col":45,"offset":2211},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_3","lines":"\tfprintf(fd, _(\"of which %u dynamically allocated\\n\"),\n\t        (unsigned int)info.keymaps_alloced);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":105,"col":2,"offset":2215},"end":{"line":105,"col":65,"offset":2278},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_4","lines":"\tfprintf(fd, _(\"ranges of action codes supported by kernel:\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":108,"col":3,"offset":2341},"end":{"line":109,"col":50,"offset":2424},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":21,"offset":20},"abstract_content":"\"\t0x%04x - 0x%04x\\n\""},"$ARG1":{"start":{"line":108,"col":11,"offset":2349},"end":{"line":108,"col":13,"offset":2351},"abstract_content":"fd"},"$FMT":{"start":{"line":108,"col":15,"offset":2353},"end":{"line":108,"col":35,"offset":2373},"abstract_content":"\"\t0x%04x - 0x%04x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b4ad8d5e72c17d68b6e1d4a00b09455de03d91996cc2bbd00bbdb444f0fbf9687664e38b883d94c1cce271fccbda098ece10a31aec3f49d2ff4c95542ddf7c8b_0","lines":"\t\tfprintf(fd, \"\t0x%04x - 0x%04x\\n\",\n\t\t        K(i, 0), K(i, maximum_val(console, i)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":111,"col":2,"offset":2428},"end":{"line":112,"col":22,"offset":2517},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_5","lines":"\tfprintf(fd, _(\"number of function keys supported by kernel: %d\\n\"),\n\t        MAX_NR_FUNC);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":113,"col":2,"offset":2520},"end":{"line":114,"col":20,"offset":2593},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_6","lines":"\tfprintf(fd, _(\"max nr of compose definitions: %d\\n\"),\n\t        MAX_DIACR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":115,"col":2,"offset":2596},"end":{"line":116,"col":38,"offset":2697},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_7","lines":"\tfprintf(fd, _(\"nr of compose definitions in actual use: %u\\n\"),\n\t        (unsigned int)info.composes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":125,"col":7,"offset":2816},"end":{"line":125,"col":12,"offset":2821},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":125,"col":7,"offset":2816},"end":{"line":125,"col":8,"offset":2817},"abstract_content":"t"},"$SIGNED":{"start":{"line":125,"col":11,"offset":2820},"end":{"line":125,"col":12,"offset":2821},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"755b35aec77f6f8b0a00a534cc332133fbc41b70ee5a0beb6a6ea5a45f3e713d4e2973c4c15aabccb981611025fa783f8c9849c7721ce00ad29ad64d5051956e_0","lines":"\tfor (t = 0; t < syms_size; t++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":127,"col":9,"offset":2883},"end":{"line":127,"col":14,"offset":2888},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":127,"col":9,"offset":2883},"end":{"line":127,"col":10,"offset":2884},"abstract_content":"v"},"$SIGNED":{"start":{"line":127,"col":13,"offset":2887},"end":{"line":127,"col":14,"offset":2888},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d2bb93accbbf67625a034ae0a0e416d69b3126ad82a34879e4f4b3c210bcba3e0ebcd7e6e25e521565d1e817866ec391e0524e42b3ab399018dc2b9058e9caf9_0","lines":"\t\t\tfor (v = 0; v < get_sym_size(ctx, t); v++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":128,"col":5,"offset":2927},"end":{"line":129,"col":46,"offset":3005},"extra":{"metavars":{"$EXPR1":{"start":{"line":128,"col":10,"offset":2932},"end":{"line":128,"col":11,"offset":2933},"abstract_content":"p","propagated_value":{"svalue_start":{"line":128,"col":14,"offset":2936},"svalue_end":{"line":128,"col":32,"offset":2954},"svalue_abstract_content":"get_sym(ctx t v)"}},"$EXPR2":{"start":{"line":128,"col":14,"offset":2936},"end":{"line":128,"col":32,"offset":2954},"abstract_content":"get_sym(ctx t v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"29546d955131858d6cbed1123c8ffd88f7750ae755814ad1e11f86378a3808b952d7d8b2b3de9f8de638ca922b713a70a3458cb62ff426c470d69c0ec00daa69_0","lines":"\t\t\t\tif ((p = get_sym(ctx, t, v))[0])\n\t\t\t\t\tfprintf(fd, \"0x%04x\\t%s\\n\", K(t, v), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":129,"col":6,"offset":2965},"end":{"line":129,"col":45,"offset":3004},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":15,"offset":14},"abstract_content":"\"0x%04x\\t%s\\n\""},"$ARG1":{"start":{"line":129,"col":14,"offset":2973},"end":{"line":129,"col":16,"offset":2975},"abstract_content":"fd"},"$FMT":{"start":{"line":129,"col":18,"offset":2977},"end":{"line":129,"col":32,"offset":2991},"abstract_content":"\"0x%04x\\t%s\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aa513d19cac28bc8020f855be3c9853b8a3b53f1df13d9b42ef27d9db8d8e2640a86cea198eb582a63ff56dc20d9946982a086c63dfae690f7e0c3383ef6c2ac_0","lines":"\t\t\t\t\tfprintf(fd, \"0x%04x\\t%s\\n\", K(t, v), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":132,"col":9,"offset":3048},"end":{"line":132,"col":14,"offset":3053},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":132,"col":9,"offset":3048},"end":{"line":132,"col":10,"offset":3049},"abstract_content":"v"},"$SIGNED":{"start":{"line":132,"col":13,"offset":3052},"end":{"line":132,"col":14,"offset":3053},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d2bb93accbbf67625a034ae0a0e416d69b3126ad82a34879e4f4b3c210bcba3e0ebcd7e6e25e521565d1e817866ec391e0524e42b3ab399018dc2b9058e9caf9_1","lines":"\t\t\tfor (v = 0; v < get_sym_size(ctx, KT_LATIN) && v < 128; v++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":133,"col":5,"offset":3110},"end":{"line":134,"col":51,"offset":3200},"extra":{"metavars":{"$EXPR1":{"start":{"line":133,"col":10,"offset":3115},"end":{"line":133,"col":11,"offset":3116},"abstract_content":"p","propagated_value":{"svalue_start":{"line":133,"col":14,"offset":3119},"svalue_end":{"line":133,"col":39,"offset":3144},"svalue_abstract_content":"get_sym(ctx KT_LATIN v)"}},"$EXPR2":{"start":{"line":133,"col":14,"offset":3119},"end":{"line":133,"col":39,"offset":3144},"abstract_content":"get_sym(ctx KT_LATIN v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7a8ff5c1715fd89fab5f763d6b6acda9190aeb5d417e216d28e849deed7c7f50bfe41f82771ed0bbf81c4f9ecad763591c20ed3eb429e669456f0187bad5b65_0","lines":"\t\t\t\tif ((p = get_sym(ctx, KT_LATIN, v))[0])\n\t\t\t\t\tfprintf(fd, \"0x%04x\\tMeta_%s\\n\", K(t, v), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":134,"col":6,"offset":3155},"end":{"line":134,"col":50,"offset":3199},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"\"0x%04x\\tMeta_%s\\n\""},"$ARG1":{"start":{"line":134,"col":14,"offset":3163},"end":{"line":134,"col":16,"offset":3165},"abstract_content":"fd"},"$FMT":{"start":{"line":134,"col":18,"offset":3167},"end":{"line":134,"col":37,"offset":3186},"abstract_content":"\"0x%04x\\tMeta_%s\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f7e5484e4ea562c678a02a3156502b5756b257366653bdc197ddc7a04e78713cfc5078851b690f1482ded204dcc84325dcd0ea6e2860ccb3abf96a46c856c237_0","lines":"\t\t\t\t\tfprintf(fd, \"0x%04x\\tMeta_%s\\n\", K(t, v), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":139,"col":2,"offset":3215},"end":{"line":139,"col":64,"offset":3277},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_8","lines":"\tfprintf(fd, _(\"\\nThe following synonyms are recognized:\\n\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":141,"col":7,"offset":3286},"end":{"line":141,"col":12,"offset":3291},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":141,"col":7,"offset":3286},"end":{"line":141,"col":8,"offset":3287},"abstract_content":"t"},"$SIGNED":{"start":{"line":141,"col":11,"offset":3290},"end":{"line":141,"col":12,"offset":3291},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"755b35aec77f6f8b0a00a534cc332133fbc41b70ee5a0beb6a6ea5a45f3e713d4e2973c4c15aabccb981611025fa783f8c9849c7721ce00ad29ad64d5051956e_1","lines":"\tfor (t = 0; t < syn_size; t++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":142,"col":3,"offset":3316},"end":{"line":143,"col":58,"offset":3406},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_9","lines":"\t\tfprintf(fd, _(\"%-15s for %s\\n\"),\n\t\t        synonyms[t].synonym, synonyms[t].official_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","start":{"line":146,"col":2,"offset":3413},"end":{"line":146,"col":75,"offset":3486},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ecfd3d0e973bf1100b67742a1d19bb86cdca267e5993ff14385a76d2f3862852d9a3ec0177ecd5e9ae96204b9fb0f7c99b8a97a0784e1136b4bd636cbdfbfec_10","lines":"\tfprintf(fd, _(\"\\nRecognized modifier names and their column numbers:\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":37,"col":2,"offset":915},"end":{"line":57,"col":44,"offset":2135},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_0","lines":"\tfprintf(stderr, _(\"loadkeys version %s\\n\"\n\t                  \"\\n\"\n\t                  \"Usage: %s [option...] [mapfile...]\\n\"\n\t                  \"\\n\"\n\t                  \"Valid options are:\\n\"\n\t                  \"\\n\"\n\t                  \"  -a --ascii         force conversion to ASCII\\n\"\n\t                  \"  -b --bkeymap       output a binary keymap to stdout\\n\"\n\t                  \"  -c --clearcompose  clear kernel compose table\\n\"\n\t                  \"  -C --console=file\\n\"\n\t                  \"                     the console device to be used\\n\"\n\t                  \"  -d --default       load \\\"%s\\\"\\n\"\n\t                  \"  -h --help          display this help text\\n\"\n\t                  \"  -m --mktable       output a \\\"defkeymap.c\\\" to stdout\\n\"\n\t                  \"  -p --parse         search and parse keymap without action\\n\"\n\t                  \"  -q --quiet         suppress all normal output\\n\"\n\t                  \"  -s --clearstrings  clear kernel string table\\n\"\n\t                  \"  -u --unicode       force conversion to Unicode\\n\"\n\t                  \"  -v --verbose       report the changes\\n\"\n\t                  \"  -V --version       print version number\\n\"),\n\t        PACKAGE_VERSION, progname, DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":113,"col":2,"offset":3380},"end":{"line":113,"col":23,"offset":3401},"extra":{"metavars":{"$FUN":{"start":{"line":113,"col":2,"offset":3380},"end":{"line":113,"col":11,"offset":3389},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fcfd06baebaff9cf2a7cb512a801fed8ff1d468194315bfbfd4ace0241ec1c66f77a873b8bd70af35d3d1eb6cfd2d11a899dd028b1215af5f28cfe002825d2b5_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":117,"col":26,"offset":3498},"end":{"line":117,"col":30,"offset":3502},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_0","lines":"\tprogname = set_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":124,"col":14,"offset":3579},"end":{"line":124,"col":66,"offset":3631},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":12,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":124,"col":14,"offset":3579},"end":{"line":124,"col":25,"offset":3590},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db4a42dbdab745efa65ac7000853c8c8b4f0c4b1388b8971187337190503cfdb5fd92cd6963662456ed6479627bed587b0deb99756e0fc1e2fb68864655ff3ca_0","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":124,"col":32,"offset":3597},"end":{"line":124,"col":36,"offset":3601},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_1","lines":"\twhile ((c = getopt_long(argc, argv, short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":125,"col":11,"offset":3652},"end":{"line":125,"col":12,"offset":3653},"extra":{"metavars":{"$VAR":{"start":{"line":125,"col":11,"offset":3652},"end":{"line":125,"col":12,"offset":3653},"abstract_content":"c","propagated_value":{"svalue_start":{"line":124,"col":14,"offset":3579},"svalue_end":{"line":124,"col":66,"offset":3631},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5061e7921c894defaf8923bc4cdd3bb841e6520c8bcea8d733caaa4fc523f7e8d75c7d6ddb6c3eca11739581612db6668ddf76e4670530888b8b463ee4008fc2_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":162,"col":5,"offset":4315},"end":{"line":162,"col":65,"offset":4375},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_1","lines":"\t\t\t\tfprintf(stdout, _(\"%s from %s\\n\"), progname, PACKAGE_STRING);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":170,"col":2,"offset":4438},"end":{"line":175,"col":3,"offset":4622},"extra":{"metavars":{"$EXPR1":{"start":{"line":170,"col":7,"offset":4443},"end":{"line":170,"col":14,"offset":4450},"abstract_content":"options"},"$EXPR2":{"start":{"line":170,"col":17,"offset":4453},"end":{"line":170,"col":22,"offset":4458},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5342d8051832a3f71ea8d416756abd1ff66258fba57cf362a422932cb32542618e0bba88a2d4159fba3947db72519f2fef719c45ac1bed17a5c1cb7caf98e7ca_0","lines":"\tif ((options & OPT_U) && (options & OPT_A)) {\n\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);\n\t\texit(EXIT_FAILURE);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":171,"col":3,"offset":4486},"end":{"line":173,"col":20,"offset":4596},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_2","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: Options --unicode and --ascii are mutually exclusive\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":177,"col":2,"offset":4625},"end":{"line":209,"col":3,"offset":5730},"extra":{"metavars":{"$EXPR1":{"start":{"line":177,"col":8,"offset":4631},"end":{"line":177,"col":15,"offset":4638},"abstract_content":"options"},"$EXPR2":{"start":{"line":177,"col":18,"offset":4641},"end":{"line":177,"col":23,"offset":4646},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6ab8bb4df94564cd5cf51390e5b51f1d663d82f3096353bfceb1b1eeaa42b67b52f68b5dec9b4b7df136f08cad2c026bca5c86a5866fcb63bccf3d71655ec5ff_0","lines":"\tif (!(options & OPT_M) && !(options & OPT_B)) {\n\t\t/* get console */\n\t\tif ((fd = console ? getfd(console) : getfd_keymap()) < 0)\n\t\t\tkbd_error(EXIT_FAILURE, 0, _(\"Couldn't get a file descriptor referring to the console\"));\n\n\t\t/* check whether the keyboard is in Unicode mode */\n\t\tif (ioctl(fd, KDGKBMODE, &kbd_mode) ||\n\t\t    ioctl(fd, KDGETMODE, &kd_mode)) {\n\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif (kbd_mode == K_UNICODE) {\n\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}\n\n\t\t\t/* reset -u option if keyboard is in K_UNICODE anyway */\n\t\t\tflags ^= LK_FLAG_UNICODE_MODE;\n\n\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":185,"col":4,"offset":4985},"end":{"line":186,"col":21,"offset":5065},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_3","lines":"\t\t\tfprintf(stderr, _(\"%s: error reading keyboard mode: %m\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":191,"col":4,"offset":5129},"end":{"line":198,"col":5,"offset":5389},"extra":{"metavars":{"$EXPR1":{"start":{"line":191,"col":8,"offset":5133},"end":{"line":191,"col":15,"offset":5140},"abstract_content":"options"},"$EXPR2":{"start":{"line":191,"col":18,"offset":5143},"end":{"line":191,"col":23,"offset":5148},"abstract_content":"OPT_A"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b117932b42efeee2b32c355df3f28338c7add53bb3a0bbfabf180d3ab157fac295e51eacf9c27b252752cba5f81e95b58b4268253a15cb818ec3f1fb1a0a0cfa_0","lines":"\t\t\tif (options & OPT_A) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);\n\t\t\t} else {\n\t\t\t\tflags |= LK_FLAG_PREFER_UNICODE;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":192,"col":5,"offset":5156},"end":{"line":195,"col":22,"offset":5334},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_4","lines":"\t\t\t\tfprintf(stderr,\n\t\t\t\t        _(\"%s: warning: loading non-Unicode keymap on Unicode console\\n\"\n\t\t\t\t          \"    (perhaps you want to do `kbd_mode -a'?)\\n\"),\n\t\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":203,"col":10,"offset":5495},"end":{"line":208,"col":4,"offset":5727},"extra":{"metavars":{"$EXPR1":{"start":{"line":203,"col":14,"offset":5499},"end":{"line":203,"col":21,"offset":5506},"abstract_content":"options"},"$EXPR2":{"start":{"line":203,"col":24,"offset":5509},"end":{"line":203,"col":29,"offset":5514},"abstract_content":"OPT_U"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5342d8051832a3f71ea8d416756abd1ff66258fba57cf362a422932cb32542618e0bba88a2d4159fba3947db72519f2fef719c45ac1bed17a5c1cb7caf98e7ca_1","lines":"\t\t} else if (options & OPT_U && kd_mode != KD_GRAPHICS) {\n\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":204,"col":4,"offset":5547},"end":{"line":207,"col":21,"offset":5722},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_5","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: warning: loading Unicode keymap on non-Unicode console\\n\"\n\t\t\t          \"    (perhaps you want to do `kbd_mode -u'?)\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":214,"col":12,"offset":5799},"end":{"line":214,"col":42,"offset":5829},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":214,"col":12,"offset":5799},"end":{"line":214,"col":18,"offset":5805},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54a3178b8d14399f87e70910b00e03be19c9da1949c9c65c8899c4edfbda8e9dfb79f63d5b7f3b10a7ec53b7c13c0053647b094a8e7e6fc4f14177374c954468_0","lines":"\tif ((ev = getenv(\"LOADKEYS_KEYMAP_PATH\")) != NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":219,"col":2,"offset":5893},"end":{"line":236,"col":3,"offset":6301},"extra":{"metavars":{"$EXPR1":{"start":{"line":219,"col":6,"offset":5897},"end":{"line":219,"col":13,"offset":5904},"abstract_content":"options"},"$EXPR2":{"start":{"line":219,"col":16,"offset":5907},"end":{"line":219,"col":21,"offset":5912},"abstract_content":"OPT_D"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bb1953fe16f559981afdf88bb8d191064cad01821f5a7f25b820bb4f3c5bd8694330a099c55e5aa2c8e6a5d4a589856b2232d7918d5c1431c4c33d48b7b2913b_0","lines":"\tif (options & OPT_D) {\n\t\t/* first read default map - search starts in . */\n\n\t\tif (lk_findfile(DEFMAP, dirpath, suffixes, &f)) {\n\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\n\t} else if (optind == argc) {\n\t\tf.fd = stdin;\n\t\tstrcpy(f.pathname, \"<stdin>\");\n\n\t\tif ((rc = lk_parse_keymap(ctx, &f)) == -1)\n\t\t\tgoto fail;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":223,"col":4,"offset":6024},"end":{"line":223,"col":50,"offset":6070},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_6","lines":"\t\t\tfprintf(stderr, _(\"Cannot find %s\\n\"), DEFMAP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":232,"col":3,"offset":6208},"end":{"line":232,"col":32,"offset":6237},"extra":{"metavars":{"$FUN":{"start":{"line":232,"col":3,"offset":6208},"end":{"line":232,"col":9,"offset":6214},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8542d8715e242d7edb381b155847e59fe02544ae7db7295ece84ffdefa89c1b3423d908d26089a1d55f73d0a10fab6d36ec6e38e09dc86464b254097c635cbf7_0","lines":"\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":238,"col":19,"offset":6321},"end":{"line":238,"col":23,"offset":6325},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_2","lines":"\tfor (i = optind; argv[i]; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":239,"col":15,"offset":6351},"end":{"line":239,"col":19,"offset":6355},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_3","lines":"\t\tif (!strcmp(argv[i], \"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":241,"col":4,"offset":6388},"end":{"line":241,"col":33,"offset":6417},"extra":{"metavars":{"$FUN":{"start":{"line":241,"col":4,"offset":6388},"end":{"line":241,"col":10,"offset":6394},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8542d8715e242d7edb381b155847e59fe02544ae7db7295ece84ffdefa89c1b3423d908d26089a1d55f73d0a10fab6d36ec6e38e09dc86464b254097c635cbf7_1","lines":"\t\t\tstrcpy(f.pathname, \"<stdin>\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":243,"col":26,"offset":6445},"end":{"line":243,"col":30,"offset":6449},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_4","lines":"\t\t} else if (lk_findfile(argv[i], dirpath, suffixes, &f)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":247,"col":16,"offset":6565},"end":{"line":247,"col":20,"offset":6569},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_5","lines":"\t\t\tfor (j = 0; argv[i][j]; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":248,"col":34,"offset":6615},"end":{"line":248,"col":38,"offset":6619},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_6","lines":"\t\t\t\tif (!isalpha((unsigned char) argv[i][j]) &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":249,"col":34,"offset":6663},"end":{"line":249,"col":38,"offset":6667},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_7","lines":"\t\t\t\t    !isdigit((unsigned char) argv[i][j]) &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":252,"col":25,"offset":6780},"end":{"line":252,"col":29,"offset":6784},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_8","lines":"\t\t\t\t    !strchr(\"-/_:\", argv[i][j]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":255,"col":9,"offset":6814},"end":{"line":255,"col":13,"offset":6818},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_9","lines":"\t\t\tif (!argv[i][j]) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":261,"col":5,"offset":6913},"end":{"line":261,"col":29,"offset":6937},"extra":{"metavars":{"$RET":{"start":{"line":261,"col":5,"offset":6913},"end":{"line":261,"col":11,"offset":6919},"abstract_content":"layout"},"$FUN":{"start":{"line":261,"col":14,"offset":6922},"end":{"line":261,"col":20,"offset":6928},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a92162894a29c3f627b3c0775985563ae7a84ebb2e0f2e6c1b7eda795dd4377d08bbb1cacfa6635f87e90f9b5608382caba6172d815f16821bda918c701fd471_0","lines":"\t\t\t\tlayout = strdup(argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":261,"col":21,"offset":6929},"end":{"line":261,"col":25,"offset":6933},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_10","lines":"\t\t\t\tlayout = strdup(argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":273,"col":12,"offset":7214},"end":{"line":273,"col":28,"offset":7230},"extra":{"metavars":{"$FUN":{"start":{"line":273,"col":12,"offset":7214},"end":{"line":273,"col":19,"offset":7221},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f5325cafaf5172f5aeae680637e263c6464f7388f2cb6ef5bf62d03f6c05297c9595afa6b719e85c4fc1b279a73665061b837063e2d52eccfdf9d94544e82df6_0","lines":"\t\t\t\t\tcmd = xmalloc(cmdsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":274,"col":6,"offset":7237},"end":{"line":275,"col":23,"offset":7302},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":29,"offset":28},"abstract_content":"\"ckbcomp -model pc105 %s %s\""},"$BUF":{"start":{"line":274,"col":14,"offset":7245},"end":{"line":274,"col":17,"offset":7248},"abstract_content":"cmd","propagated_value":{"svalue_start":{"line":273,"col":12,"offset":7214},"svalue_end":{"line":273,"col":28,"offset":7230},"svalue_abstract_content":"xmalloc(cmdsize)"}},"$FMT":{"start":{"line":274,"col":19,"offset":7250},"end":{"line":274,"col":47,"offset":7278},"abstract_content":"\"ckbcomp -model pc105 %s %s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"987329a95c4bc2d4a2754a9ff3ca557203944e656f2280faa83d1ba7ec89ced5cf30ba0a52dfbd1132d0333005b1aaa3c6f3b186b1d01b38684c8fa0ccd317ed_0","lines":"\t\t\t\t\tsprintf(cmd, \"ckbcomp -model pc105 %s %s\",\n\t\t\t\t\t\tlayout, variant);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":274,"col":6,"offset":7237},"end":{"line":275,"col":23,"offset":7302},"extra":{"metavars":{"$FUN":{"start":{"line":274,"col":6,"offset":7237},"end":{"line":274,"col":13,"offset":7244},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"50eab50d04b5703648f7633d44a655ecd8fae485874d8299676899de26c77f1551a9ca6fe4889c9dbfdfafc5211d120d8dd58c187da021d2e895bbf326cb4055_0","lines":"\t\t\t\t\tsprintf(cmd, \"ckbcomp -model pc105 %s %s\",\n\t\t\t\t\t\tlayout, variant);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":277,"col":12,"offset":7328},"end":{"line":277,"col":28,"offset":7344},"extra":{"metavars":{"$FUN":{"start":{"line":277,"col":12,"offset":7328},"end":{"line":277,"col":19,"offset":7335},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f5325cafaf5172f5aeae680637e263c6464f7388f2cb6ef5bf62d03f6c05297c9595afa6b719e85c4fc1b279a73665061b837063e2d52eccfdf9d94544e82df6_1","lines":"\t\t\t\t\tcmd = xmalloc(cmdsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":278,"col":6,"offset":7351},"end":{"line":279,"col":14,"offset":7404},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":26,"offset":25},"abstract_content":"\"ckbcomp -model pc105 %s\""},"$BUF":{"start":{"line":278,"col":14,"offset":7359},"end":{"line":278,"col":17,"offset":7362},"abstract_content":"cmd","propagated_value":{"svalue_start":{"line":277,"col":12,"offset":7328},"svalue_end":{"line":277,"col":28,"offset":7344},"svalue_abstract_content":"xmalloc(cmdsize)"}},"$FMT":{"start":{"line":278,"col":19,"offset":7364},"end":{"line":278,"col":44,"offset":7389},"abstract_content":"\"ckbcomp -model pc105 %s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2b3451d7a0aeede8be8e6821b1f4699a90bea0f1e3258aec7a99b98f881b8d4ceba1cec70fe0b822d093bef8cc0e0308755eb56d8f6721556b3e14e9792eb9c8_0","lines":"\t\t\t\t\tsprintf(cmd, \"ckbcomp -model pc105 %s\",\n\t\t\t\t\t\tlayout);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":278,"col":6,"offset":7351},"end":{"line":279,"col":14,"offset":7404},"extra":{"metavars":{"$FUN":{"start":{"line":278,"col":6,"offset":7351},"end":{"line":278,"col":13,"offset":7358},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"50eab50d04b5703648f7633d44a655ecd8fae485874d8299676899de26c77f1551a9ca6fe4889c9dbfdfafc5211d120d8dd58c187da021d2e895bbf326cb4055_1","lines":"\t\t\t\t\tsprintf(cmd, \"ckbcomp -model pc105 %s\",\n\t\t\t\t\t\tlayout);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-command-injection","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":281,"col":12,"offset":7423},"end":{"line":281,"col":27,"offset":7438},"extra":{"metavars":{},"message":"The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/78","https://cwe.mitre.org/data/definitions/88","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ce44c0ed53c2bfcd5dabf92587404ed184143cd62102740a7682cf39553a06617c9160a962ff4869a0f3d6b2f5e2c5188efabcd555085379e805db708e320e72_0","lines":"\t\t\t\tf.fd = popen(cmd, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":281,"col":12,"offset":7423},"end":{"line":281,"col":27,"offset":7438},"extra":{"metavars":{"$FUN":{"start":{"line":281,"col":12,"offset":7423},"end":{"line":281,"col":17,"offset":7428},"abstract_content":"popen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"88cc4d344c61a20d7abf8cb2344a52740d26cea21bc1b075a0f69cfdc5fec5e744644c276b160601834297fb240c2502fa5d8dc6fc2a0c7f53468594bc0039b7_0","lines":"\t\t\t\tf.fd = popen(cmd, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":283,"col":5,"offset":7460},"end":{"line":283,"col":15,"offset":7470},"extra":{"metavars":{"$PTR":{"start":{"line":283,"col":10,"offset":7465},"end":{"line":283,"col":13,"offset":7468},"abstract_content":"cmd"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2e596016aec144fe4da8d64667872ad89e821504c368fac2651243f5944aa956d33cf09dd83343d763bcb6a5fa2f62708b96b96f448bba8ed12b61cfff82f17a_0","lines":"\t\t\t\tfree(cmd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":284,"col":5,"offset":7475},"end":{"line":284,"col":19,"offset":7489},"extra":{"metavars":{"$PTR":{"start":{"line":284,"col":10,"offset":7480},"end":{"line":284,"col":17,"offset":7487},"abstract_content":"variant"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a8cc26e5c445762d12d5311af133b3c55e4c0939f0089b8b218ff79badf4f92e99bf854414797fe8b4a3a8b53bd36972f1431322110ca84472351b9186c9b618_0","lines":"\t\t\t\tfree(variant);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":287,"col":5,"offset":7524},"end":{"line":288,"col":14,"offset":7581},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"afe640d04acbdb9c702fef8dcddf4a5339087092bfecef437b109a7c0190427bdeb1c5035e7fa938ce45ed5ec6514b2bc06d3ab90044d48a80ecff9a6cd82cfe_7","lines":"\t\t\t\tfprintf(stderr, _(\"cannot open file %s\\n\"),\n\t\t\t\t\targv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":288,"col":6,"offset":7573},"end":{"line":288,"col":10,"offset":7577},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"25b4aa78bdcfb7ae4b3eab29cb495734925a7d6d482e23113325e042c2e7b481cdccd8e315fad65606b2c9f5c8562aa4f52ef04a3c9fb31926a5251e9509e322_11","lines":"\t\t\t\t\targv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":297,"col":2,"offset":7672},"end":{"line":305,"col":3,"offset":7890},"extra":{"metavars":{"$EXPR1":{"start":{"line":297,"col":8,"offset":7678},"end":{"line":297,"col":15,"offset":7685},"abstract_content":"options"},"$EXPR2":{"start":{"line":297,"col":18,"offset":7688},"end":{"line":297,"col":23,"offset":7693},"abstract_content":"OPT_P"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a7efe7d66987eb017313c597f7310aa729b2a7cd56b254bf338b89f1e1e6fa28bf211b96b0de0082865f18302d290ddce06b4cc17706bbe89a35c61d08a5cdba_0","lines":"\tif (!(options & OPT_P)) {\n\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":298,"col":3,"offset":7700},"end":{"line":304,"col":4,"offset":7887},"extra":{"metavars":{"$EXPR1":{"start":{"line":298,"col":7,"offset":7704},"end":{"line":298,"col":14,"offset":7711},"abstract_content":"options"},"$EXPR2":{"start":{"line":298,"col":17,"offset":7714},"end":{"line":298,"col":22,"offset":7719},"abstract_content":"OPT_B"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"812e19cb37c3edf7acc7e0e99c742b74251f4741d1f86873d77f870dbb9e889230b6c01d8aacde97f7801085d439329819f3d0ebb53db45da757ba779a917000_0","lines":"\t\tif (options & OPT_B) {\n\t\t\trc = lk_dump_bkeymap(ctx, stdout);\n\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","start":{"line":300,"col":10,"offset":7770},"end":{"line":304,"col":4,"offset":7887},"extra":{"metavars":{"$EXPR1":{"start":{"line":300,"col":14,"offset":7774},"end":{"line":300,"col":21,"offset":7781},"abstract_content":"options"},"$EXPR2":{"start":{"line":300,"col":24,"offset":7784},"end":{"line":300,"col":29,"offset":7789},"abstract_content":"OPT_M"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6ab8bb4df94564cd5cf51390e5b51f1d663d82f3096353bfceb1b1eeaa42b67b52f68b5dec9b4b7df136f08cad2c026bca5c86a5866fcb63bccf3d71655ec5ff_1","lines":"\t\t} else if (options & OPT_M) {\n\t\t\trc = lk_dump_ctable(ctx, stdout);\n\t\t} else {\n\t\t\trc = lk_load_keymap(ctx, fd, kbd_mode);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":45,"col":2,"offset":825},"end":{"line":46,"col":67,"offset":907},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_0","lines":"\tfprintf(stderr,\n\t        _(\"Usage:\\n\\t%s [-C console] [-o map.orig]\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":57,"col":15,"offset":1058},"end":{"line":57,"col":19,"offset":1062},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5576918deedb2c16136f488d31101ce3b2f373642f35deed0a258bea996cbf90f5f3d3b8c48c284b2ab17f05b07d3e4af4bc4daa2f17557721d4f6afd6bac353_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":59,"col":2,"offset":1070},"end":{"line":59,"col":23,"offset":1091},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":2,"offset":1070},"end":{"line":59,"col":11,"offset":1079},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2b4e51deebe2a982bb197cce348f117138ae666798c0aeb07137758971d78c48b7d1e1e1c2491aeab5b4ca565b97a6dffdd7a7dce1fca8b4013cf1ca6350bcc8_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":64,"col":15,"offset":1195},"end":{"line":64,"col":19,"offset":1199},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5576918deedb2c16136f488d31101ce3b2f373642f35deed0a258bea996cbf90f5f3d3b8c48c284b2ab17f05b07d3e4af4bc4daa2f17557721d4f6afd6bac353_1","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":64,"col":41,"offset":1221},"end":{"line":64,"col":45,"offset":1225},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5576918deedb2c16136f488d31101ce3b2f373642f35deed0a258bea996cbf90f5f3d3b8c48c284b2ab17f05b07d3e4af4bc4daa2f17557721d4f6afd6bac353_2","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":67,"col":14,"offset":1287},"end":{"line":67,"col":40,"offset":1313},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":67,"col":14,"offset":1287},"end":{"line":67,"col":20,"offset":1293},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5aef8b3262fe89d5679cc8fb4c1c877b7f34308a4a4f5fd6f37a5ea3e022f3ffef3af4bc7817a32800c1156831f7b8e677518de80b2a0628e33b5804ddf074d5_0","lines":"\twhile ((c = getopt(argc, argv, \"C:o:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":67,"col":27,"offset":1300},"end":{"line":67,"col":31,"offset":1304},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5576918deedb2c16136f488d31101ce3b2f373642f35deed0a258bea996cbf90f5f3d3b8c48c284b2ab17f05b07d3e4af4bc4daa2f17557721d4f6afd6bac353_3","lines":"\twhile ((c = getopt(argc, argv, \"C:o:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":93,"col":12,"offset":1779},"end":{"line":93,"col":16,"offset":1783},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5576918deedb2c16136f488d31101ce3b2f373642f35deed0a258bea996cbf90f5f3d3b8c48c284b2ab17f05b07d3e4af4bc4daa2f17557721d4f6afd6bac353_4","lines":"\t\tinfnam = argv[optind];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":146,"col":10,"offset":2815},"end":{"line":146,"col":40,"offset":2845},"extra":{"metavars":{"$FUN":{"start":{"line":146,"col":10,"offset":2815},"end":{"line":146,"col":18,"offset":2823},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9595918f2929c3a6e3434d93b6d74e227f19616be37d865cef8a5be4cac5153d4ab8d7c38098c35928f59b7c15235293d846575310f13220bdaa276a8393a5b8_0","lines":"\t\tlist = xrealloc((char *)list, listsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":182,"col":3,"offset":3454},"end":{"line":182,"col":53,"offset":3504},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_1","lines":"\t\tfprintf(stderr, _(\"Bad input line: %s\\n\"), buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":193,"col":4,"offset":3651},"end":{"line":193,"col":54,"offset":3701},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_2","lines":"\t\t\tfprintf(stderr, _(\"Bad input line: %s\\n\"), buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":201,"col":3,"offset":3794},"end":{"line":203,"col":24,"offset":3899},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_3","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: Glyph number (0x%x) larger than font length\\n\"),\n\t\t        tblname, fp0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":206,"col":2,"offset":3925},"end":{"line":211,"col":3,"offset":4080},"extra":{"metavars":{"$EXPR1":{"start":{"line":206,"col":14,"offset":3937},"end":{"line":206,"col":32,"offset":3955},"abstract_content":"fp1<fp0||fp1>"},"$EXPR2":{"start":{"line":206,"col":34,"offset":3957},"end":{"line":206,"col":41,"offset":3964},"abstract_content":"fontlen"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d9d3a742735e764cc5eed54c14cc7f1c460b38aaa466cf0df41e7fd8b859423ad267592cf0d405deeed1cafeaa5dbdda24685a90937bb0f5d28dc30cd1852dc_0","lines":"\tif (fp1 && (fp1 < fp0 || fp1 >= fontlen)) {\n\t\tfprintf(stderr,\n\t\t        _(\"%s: Bad end of range (0x%x)\\n\"),\n\t\t        tblname, fp1);\n\t\texit(EX_DATAERR);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":207,"col":3,"offset":3971},"end":{"line":209,"col":24,"offset":4056},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_4","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: Bad end of range (0x%x)\\n\"),\n\t\t        tblname, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":237,"col":4,"offset":4597},"end":{"line":240,"col":30,"offset":4746},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_5","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: Bad Unicode range corresponding to \"\n\t\t\t          \"font position range 0x%x-0x%x\\n\"),\n\t\t\t        tblname, fp0, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":244,"col":4,"offset":4808},"end":{"line":247,"col":40,"offset":4982},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_6","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: Unicode range U+%x-U+%x not of the same\"\n\t\t\t          \" length as font position range 0x%x-0x%x\\n\"),\n\t\t\t        tblname, un0, un1, fp0, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":264,"col":3,"offset":5303},"end":{"line":265,"col":22,"offset":5379},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_7","lines":"\t\tfprintf(stderr, _(\"%s: trailing junk (%s) ignored\\n\"),\n\t\t        tblname, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":280,"col":3,"offset":5593},"end":{"line":280,"col":63,"offset":5653},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_8","lines":"\t\tprintf(_(\"Loading unicode map from file %s\\n\"), fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":282,"col":9,"offset":5664},"end":{"line":282,"col":45,"offset":5700},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":282,"col":9,"offset":5664},"end":{"line":282,"col":14,"offset":5669},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b1dcac66df37fdb69f7fc504697f963960c34af515a446ce06023974a4c46d15c11147133e83c4250749f34c9fe5d039a5546e590cc1d9a9da9764eea0303276_0","lines":"\twhile (fgets(buffer, sizeof(buffer), fp.fd) != NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":286,"col":4,"offset":5778},"end":{"line":287,"col":30,"offset":5862},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_9","lines":"\t\t\tfprintf(stderr, _(\"%s: %s: Warning: line too long\\n\"),\n\t\t\t        progname, tblname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":295,"col":3,"offset":5950},"end":{"line":298,"col":20,"offset":6091},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_10","lines":"\t\tfprintf(stderr,\n\t\t        _(\"%s: not loading empty unimap\\n\"\n\t\t          \"(if you insist: use option -f to override)\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":331,"col":13,"offset":6654},"end":{"line":331,"col":30,"offset":6671},"extra":{"metavars":{"$FUN":{"start":{"line":331,"col":13,"offset":6654},"end":{"line":331,"col":18,"offset":6659},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"39e07820be1de7dfda9f7a08340d50843643a5fc7519d68a77cb0f6334d4f4a55b15e00d83a3b7e568442ead9110c29e19a35f8f06878421664e39e55914adfa_0","lines":"\tif ((fpo = fopen(oufil, \"w\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":340,"col":3,"offset":6837},"end":{"line":340,"col":75,"offset":6909},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":19,"offset":18},"abstract_content":"\"0x%02x\\tU+%04x\\n\""},"$ARG1":{"start":{"line":340,"col":11,"offset":6845},"end":{"line":340,"col":14,"offset":6848},"abstract_content":"fpo"},"$FMT":{"start":{"line":340,"col":16,"offset":6850},"end":{"line":340,"col":34,"offset":6868},"abstract_content":"\"0x%02x\\tU+%04x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e9813c9b5062a14a96a041a16bb3141ab23b0dbc75d94bbe049c27ea8899763e993fb4e6805c96035bf945a6f4f0b6718376147f61b99f9a38e4a69f4925d33e_0","lines":"\t\tfprintf(fpo, \"0x%02x\\tU+%04x\\n\", unilist[i].fontpos, unilist[i].unicode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":344,"col":3,"offset":6942},"end":{"line":344,"col":50,"offset":6989},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_11","lines":"\t\tprintf(_(\"Saved unicode map on `%s'\\n\"), oufil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":367,"col":4,"offset":7462},"end":{"line":367,"col":30,"offset":7488},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"\\nchar %03x: \""},"$FMT":{"start":{"line":367,"col":11,"offset":7469},"end":{"line":367,"col":26,"offset":7484},"abstract_content":"\"\\nchar %03x: \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"23c619266b9b3d0029fd7c25eeba06e9558cd27738684385df9a48426b6d21bc2fc3680f2e54293c8e3230ecd18a5da4c358de258c299a438451bd6cfd1f2989_0","lines":"\t\t\tprintf(\"\\nchar %03x: \", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":371,"col":6,"offset":7590},"end":{"line":371,"col":41,"offset":7625},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%04x \""},"$FMT":{"start":{"line":371,"col":13,"offset":7597},"end":{"line":371,"col":20,"offset":7604},"abstract_content":"\"%04x \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fd5cf24f93a658570f5d68c72c37943ee41b0c6c1a3fb26d97e0e454c1b2876f88afa8624010bac4ec19ceabd89eb9e69fa0caac6ed73fe4be4cfc0bee968871_0","lines":"\t\t\t\t\tprintf(\"%04x \", unilist[j].unicode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","start":{"line":380,"col":3,"offset":7761},"end":{"line":380,"col":38,"offset":7796},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"81cafb62d6710f85220c5d8688e4a763d466b5f6eaf92a07717f572bd935e66874da67fba64a7a350db86f3f3cf9fe85b39018adfde4e7bded8620d742395712_12","lines":"\t\tprintf(_(\"Appended Unicode map\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":44,"col":15,"offset":884},"end":{"line":44,"col":19,"offset":888},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":46,"col":2,"offset":896},"end":{"line":46,"col":23,"offset":917},"extra":{"metavars":{"$FUN":{"start":{"line":46,"col":2,"offset":896},"end":{"line":46,"col":11,"offset":905},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e11bd575371b4abaed76ef2166f3969cc715c3806b126d40e1dbef86b0d9cdcd4bbc12f26c0cd6b2d93db72ff956934ddc9e32ae2e67d283ad0e037e2b8e10cf_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":50,"col":27,"offset":1015},"end":{"line":50,"col":31,"offset":1019},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":53,"col":26,"offset":1085},"end":{"line":53,"col":30,"offset":1089},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_2","lines":"\tif (argc > 1 && !strcmp(argv[1], \"-v\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":56,"col":3,"offset":1130},"end":{"line":56,"col":7,"offset":1134},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_3","lines":"\t\targv++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":62,"col":27,"offset":1290},"end":{"line":62,"col":31,"offset":1294},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_4","lines":"\tif (argc >= 3 && !strcmp(argv[1], \"-o\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":63,"col":18,"offset":1325},"end":{"line":63,"col":22,"offset":1329},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_5","lines":"\t\tsaveoldmap(fd, argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":65,"col":3,"offset":1350},"end":{"line":65,"col":7,"offset":1354},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_6","lines":"\t\targv += 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":71,"col":3,"offset":1425},"end":{"line":72,"col":20,"offset":1511},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_0","lines":"\t\tfprintf(stderr, _(\"usage: %s [-V] [-v] [-o map.orig] map-file\\n\"),\n\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":75,"col":17,"offset":1554},"end":{"line":75,"col":21,"offset":1558},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ba4662ac42ed8a73e4dd76207963cfa63dbb20df8b9820c697e54eecd09d6316dfbf8c8b1781d441def033d916bf4d600bb1030b11c4cccc68e97e98a741a03_7","lines":"\tloadnewmap(fd, argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":101,"col":9,"offset":2287},"end":{"line":101,"col":46,"offset":2324},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":101,"col":9,"offset":2287},"end":{"line":101,"col":14,"offset":2292},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0817cbbc60f2125c6363716622c8eab0c83e41a2b9dbb86728396ac07de2fc0f0dfe938378d30bf1984beb35ea712acfb081337f714ec9915cba368aa666d5d8_0","lines":"\twhile (fgets(buffer, sizeof(buffer) - 1, fp)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":105,"col":16,"offset":2397},"end":{"line":105,"col":39,"offset":2420},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":16,"offset":2397},"end":{"line":105,"col":22,"offset":2403},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e162735e3fde613283c979f704d2699cefc1c5ce098de5193dc8f8ebc4032b6ba87da30cc431b15d5102b2fdc2718028f3d447ee932ea5fb34a76b9dc2d3aebd_0","lines":"\t\tp          = strtok(buffer, \" \\t\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":107,"col":8,"offset":2453},"end":{"line":107,"col":30,"offset":2475},"extra":{"metavars":{"$FUN":{"start":{"line":107,"col":8,"offset":2453},"end":{"line":107,"col":14,"offset":2459},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e162735e3fde613283c979f704d2699cefc1c5ce098de5193dc8f8ebc4032b6ba87da30cc431b15d5102b2fdc2718028f3d447ee932ea5fb34a76b9dc2d3aebd_1","lines":"\t\t\tq = strtok(NULL, \" \\t\\n#\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":138,"col":3,"offset":2985},"end":{"line":139,"col":16,"offset":3059},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_1","lines":"\t\tfprintf(stderr, _(\"mapscrn: cannot open map file _%s_\\n\"),\n\t\t        mfil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":142,"col":6,"offset":3080},"end":{"line":142,"col":31,"offset":3105},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"94c0c63bd915d1f874e8ccba76caa98cd572bff250b2663c3fef708d61c1be69fce4ec4f9573e7dfb88f15a91fe533397a3893a00264f70af1dfdcb4a37f4267_0","lines":"\tif (stat(fp.pathname, &stbuf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":142,"col":6,"offset":3080},"end":{"line":142,"col":31,"offset":3105},"extra":{"metavars":{"$FUN":{"start":{"line":142,"col":6,"offset":3080},"end":{"line":142,"col":10,"offset":3084},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f69ac7a12cdfd6a0678042b11f38e8f7c0a4288969aa254d2e4614fcabb0dce032224a4de0c1a343b91eee2485942069f04a826be2a54bd741d90817c626432d_0","lines":"\tif (stat(fp.pathname, &stbuf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":144,"col":3,"offset":3134},"end":{"line":144,"col":45,"offset":3176},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_2","lines":"\t\tfprintf(stderr, _(\"Cannot stat map file\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":149,"col":4,"offset":3243},"end":{"line":151,"col":23,"offset":3349},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_3","lines":"\t\t\tprintf(_(\"Loading binary direct-to-font screen map \"\n\t\t\t         \"from file %s\\n\"),\n\t\t\t       fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":152,"col":7,"offset":3357},"end":{"line":152,"col":36,"offset":3386},"extra":{"metavars":{"$FUN":{"start":{"line":152,"col":7,"offset":3357},"end":{"line":152,"col":12,"offset":3362},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3e2ff9f0347704ba5fc96fa89391e720169aba3f4c59d2913921564ce9cd1734d138e1ed29565f54c5d082f6e717e363595154593c835d276409bc334cd0e6fd_0","lines":"\t\tif (fread(buf, E_TABSZ, 1, fp.fd) != 1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":153,"col":4,"offset":3398},"end":{"line":155,"col":24,"offset":3489},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_4","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"Error reading map from file `%s'\\n\"),\n\t\t\t        fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":160,"col":4,"offset":3569},"end":{"line":162,"col":23,"offset":3668},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_5","lines":"\t\t\tprintf(_(\"Loading binary unicode screen map \"\n\t\t\t         \"from file %s\\n\"),\n\t\t\t       fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":163,"col":7,"offset":3676},"end":{"line":163,"col":41,"offset":3710},"extra":{"metavars":{"$FUN":{"start":{"line":163,"col":7,"offset":3676},"end":{"line":163,"col":12,"offset":3681},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3e2ff9f0347704ba5fc96fa89391e720169aba3f4c59d2913921564ce9cd1734d138e1ed29565f54c5d082f6e717e363595154593c835d276409bc334cd0e6fd_1","lines":"\t\tif (fread(ubuf, 2 * E_TABSZ, 1, fp.fd) != 1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":164,"col":4,"offset":3722},"end":{"line":166,"col":24,"offset":3813},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_6","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"Error reading map from file `%s'\\n\"),\n\t\t\t        fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":172,"col":4,"offset":3868},"end":{"line":173,"col":23,"offset":3946},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_7","lines":"\t\t\tprintf(_(\"Loading symbolic screen map from file %s\\n\"),\n\t\t\t       fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":175,"col":4,"offset":4000},"end":{"line":178,"col":32,"offset":4128},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_8","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"Error parsing symbolic map \"\n\t\t\t          \"from `%s', line %d\\n\"),\n\t\t\t        fp.pathname, lineno);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":224,"col":9,"offset":4898},"end":{"line":224,"col":32,"offset":4921},"extra":{"metavars":{"$FUN":{"start":{"line":224,"col":9,"offset":4898},"end":{"line":224,"col":15,"offset":4904},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0241871dac478ae5b7809055fc36260c1d9c5096623876e169e5a401ccbddf2fe15bbc09721fff787816b2275c180c0d0cd99d8d8d243c64545fb45ba8904bd_0","lines":"\t\t(void)sscanf(s + 2, \"%x\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":224,"col":9,"offset":4898},"end":{"line":224,"col":32,"offset":4921},"extra":{"metavars":{"$FUN":{"start":{"line":224,"col":9,"offset":4898},"end":{"line":224,"col":15,"offset":4904},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c89c2736197a7261f0531ed1648067990f3467eea05fdf9fa4dde9429b989ec86de75f725bdb9b8aa9a09df5839a75b6434475f86b2a283b623fa9e043ec68b3_0","lines":"\t\t(void)sscanf(s + 2, \"%x\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":228,"col":9,"offset":5005},"end":{"line":228,"col":28,"offset":5024},"extra":{"metavars":{"$FUN":{"start":{"line":228,"col":9,"offset":5005},"end":{"line":228,"col":15,"offset":5011},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0241871dac478ae5b7809055fc36260c1d9c5096623876e169e5a401ccbddf2fe15bbc09721fff787816b2275c180c0d0cd99d8d8d243c64545fb45ba8904bd_1","lines":"\t\t(void)sscanf(s, \"%o\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":228,"col":9,"offset":5005},"end":{"line":228,"col":28,"offset":5024},"extra":{"metavars":{"$FUN":{"start":{"line":228,"col":9,"offset":5005},"end":{"line":228,"col":15,"offset":5011},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c89c2736197a7261f0531ed1648067990f3467eea05fdf9fa4dde9429b989ec86de75f725bdb9b8aa9a09df5839a75b6434475f86b2a283b623fa9e043ec68b3_1","lines":"\t\t(void)sscanf(s, \"%o\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":231,"col":9,"offset":5083},"end":{"line":231,"col":28,"offset":5102},"extra":{"metavars":{"$FUN":{"start":{"line":231,"col":9,"offset":5083},"end":{"line":231,"col":15,"offset":5089},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0241871dac478ae5b7809055fc36260c1d9c5096623876e169e5a401ccbddf2fe15bbc09721fff787816b2275c180c0d0cd99d8d8d243c64545fb45ba8904bd_2","lines":"\t\t(void)sscanf(s, \"%d\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":231,"col":9,"offset":5083},"end":{"line":231,"col":28,"offset":5102},"extra":{"metavars":{"$FUN":{"start":{"line":231,"col":9,"offset":5083},"end":{"line":231,"col":15,"offset":5089},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c89c2736197a7261f0531ed1648067990f3467eea05fdf9fa4dde9429b989ec86de75f725bdb9b8aa9a09df5839a75b6434475f86b2a283b623fa9e043ec68b3_2","lines":"\t\t(void)sscanf(s, \"%d\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":235,"col":9,"offset":5229},"end":{"line":235,"col":32,"offset":5252},"extra":{"metavars":{"$FUN":{"start":{"line":235,"col":9,"offset":5229},"end":{"line":235,"col":15,"offset":5235},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0241871dac478ae5b7809055fc36260c1d9c5096623876e169e5a401ccbddf2fe15bbc09721fff787816b2275c180c0d0cd99d8d8d243c64545fb45ba8904bd_3","lines":"\t\t(void)sscanf(s + 2, \"%x\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":235,"col":9,"offset":5229},"end":{"line":235,"col":32,"offset":5252},"extra":{"metavars":{"$FUN":{"start":{"line":235,"col":9,"offset":5229},"end":{"line":235,"col":15,"offset":5235},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c89c2736197a7261f0531ed1648067990f3467eea05fdf9fa4dde9429b989ec86de75f725bdb9b8aa9a09df5839a75b6434475f86b2a283b623fa9e043ec68b3_3","lines":"\t\t(void)sscanf(s + 2, \"%x\", &i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":262,"col":12,"offset":5655},"end":{"line":262,"col":29,"offset":5672},"extra":{"metavars":{"$FUN":{"start":{"line":262,"col":12,"offset":5655},"end":{"line":262,"col":17,"offset":5660},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"161de018d8a1caa4b291ff9ccef8e1aa92325f5316e72f6698f1d291fe6190ce513015206564c8cbdfb957ce13e561a679b5c41a443af61c6e8fa5332e4dd9bb_0","lines":"\tif ((fp = fopen(omfil, \"w\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":281,"col":4,"offset":6033},"end":{"line":281,"col":53,"offset":6082},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_9","lines":"\t\t\tfprintf(stderr, _(\"Error writing map to file\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":286,"col":4,"offset":6175},"end":{"line":286,"col":53,"offset":6224},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_10","lines":"\t\t\tfprintf(stderr, _(\"Error writing map to file\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":290,"col":3,"offset":6254},"end":{"line":290,"col":50,"offset":6301},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_11","lines":"\t\tfprintf(stderr, _(\"Cannot read console map\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","start":{"line":296,"col":3,"offset":6347},"end":{"line":296,"col":49,"offset":6393},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a359e9489161c61f24160c1e92575f738ec5edeef4beb412500dbc1078a267e59d42fab3ee648529d4922abf60197bd70e346b231e8af819a445c4112f35d7eb_12","lines":"\t\tprintf(_(\"Saved screen map in `%s'\\n\"), omfil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":49,"col":2,"offset":835},"end":{"line":65,"col":18,"offset":1731},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"40850cfa313a878da701582c2970be8bdda6ff84646116bc0deff2e5fdc9615440f052c6f1b452b0be5a8b09c3a1161e10fd24d6a8904b9238129fda146ba26d_0","lines":"\tprintf(_(\"Usage: %s [OPTIONS] -- command\\n\"\n\t         \"\\n\"\n\t         \"This utility help you to start a program on a new virtual terminal (VT).\\n\"\n\t         \"\\n\"\n\t         \"Options:\\n\"\n\t         \"  -c, --console=NUM   use the given VT number;\\n\"\n\t         \"  -e, --exec          execute the command, without forking;\\n\"\n\t         \"  -f, --force         force opening a VT without checking;\\n\"\n\t         \"  -l, --login         make the command a login shell;\\n\"\n\t         \"  -u, --user          figure out the owner of the current VT;\\n\"\n\t         \"  -s, --switch        switch to the new VT;\\n\"\n\t         \"  -w, --wait          wait for command to complete;\\n\"\n\t         \"  -v, --verbose       print a message for each action;\\n\"\n\t         \"  -V, --version       print program version and exit;\\n\"\n\t         \"  -h, --help          output a brief help message.\\n\"\n\t         \"\\n\"),\n\t       progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":106,"col":2,"offset":2933},"end":{"line":107,"col":52,"offset":3014},"extra":{"metavars":{"$EXPR1":{"start":{"line":106,"col":8,"offset":2939},"end":{"line":106,"col":10,"offset":2941},"abstract_content":"dp","propagated_value":{"svalue_start":{"line":106,"col":13,"offset":2944},"svalue_end":{"line":106,"col":29,"offset":2960},"svalue_abstract_content":"opendir(\"/proc\")"}},"$EXPR2":{"start":{"line":106,"col":13,"offset":2944},"end":{"line":106,"col":29,"offset":2960},"abstract_content":"opendir(\"/proc\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0ed8cfe005d87d55b1f84a993fa16fb3d354d036db5e518ff0a4b758d8a73bf0caf67e23de6ec0435d9b4e6976464481e5e36f4d8f9403c2a84f885eff47ef3_0","lines":"\tif (!(dp = opendir(\"/proc\")))\n\t\tkbd_error(EXIT_FAILURE, errno, \"opendir(/proc)\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"40850cfa313a878da701582c2970be8bdda6ff84646116bc0deff2e5fdc9615440f052c6f1b452b0be5a8b09c3a1161e10fd24d6a8904b9238129fda146ba26d_1","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$BUF":{"start":{"line":111,"col":10,"offset":3089},"end":{"line":111,"col":18,"offset":3097},"abstract_content":"filename"},"$FMT":{"start":{"line":111,"col":20,"offset":3099},"end":{"line":111,"col":26,"offset":3105},"abstract_content":"VTNAME"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0a441405f6e0ecb38cf0ee33732fe1a9e54e52562266b15fff861b47d7ce65151ae5e94775550d5284e145489ff8344d130742270ccbcf5a137068ff89994aef_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$FUN":{"start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":9,"offset":3088},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"875340fe880f94f998f74e92d92b7390852eb18186b185becf831e34db46a189d16834fd6eeb88b9df85e73ea21b6244a3a9cc1a37ad2b4f90a01e4a3c94ceb7_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":34,"offset":3113},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":111,"col":2,"offset":3081},"end":{"line":111,"col":9,"offset":3088},"abstract_content":"sprintf"},"$BUF":{"start":{"line":111,"col":10,"offset":3089},"end":{"line":111,"col":18,"offset":3097},"abstract_content":"filename"},"$FMT":{"start":{"line":111,"col":20,"offset":3099},"end":{"line":111,"col":26,"offset":3105},"abstract_content":"VTNAME"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5b134fdf3d840fb4c94cb9ca028a7e28eb72b3259d7bf43869e4cb0968c38636afd466fa6e4a1db0a0fa98d1d2c8aadd1fa976671dc2f16fb2a2ba17c3b27e09_0","lines":"\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":26,"offset":3140},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7319cbd42d12261053a16f16ea40afb34c9f0ae66e83434026146c7a5a2cc38521880b7c61c55257f798bd03de0c02dc3ff8b4db34e3ad30b8a1bf7266224d0b_0","lines":"\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":26,"offset":3140},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":6,"offset":3120},"end":{"line":112,"col":10,"offset":3124},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbd1587358ba2a956c87786219b7368f3d272c1c9206b08dd5f7539ec16ecd6e44b69277a5a0adf39a89777712ef493b7e647a4c978ab45f9a19356e097f7b25_0","lines":"\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"40850cfa313a878da701582c2970be8bdda6ff84646116bc0deff2e5fdc9615440f052c6f1b452b0be5a8b09c3a1161e10fd24d6a8904b9238129fda146ba26d_2","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"VTNAME2"},"$BUF":{"start":{"line":114,"col":11,"offset":3175},"end":{"line":114,"col":19,"offset":3183},"abstract_content":"filename"},"$FMT":{"start":{"line":114,"col":21,"offset":3185},"end":{"line":114,"col":28,"offset":3192},"abstract_content":"VTNAME2"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"51f2b89c214217c641d77ce61ca4207d5282392ba2300c8c9dd511e0afef6b7859a487a26ad4c8a876c570eb0314b167d7ea60e405fe638cd7f3b00cc8c0a5ab_0","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":10,"offset":3174},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"875340fe880f94f998f74e92d92b7390852eb18186b185becf831e34db46a189d16834fd6eeb88b9df85e73ea21b6244a3a9cc1a37ad2b4f90a01e4a3c94ceb7_1","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":36,"offset":3200},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"VTNAME2"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":114,"col":3,"offset":3167},"end":{"line":114,"col":10,"offset":3174},"abstract_content":"sprintf"},"$BUF":{"start":{"line":114,"col":11,"offset":3175},"end":{"line":114,"col":19,"offset":3183},"abstract_content":"filename"},"$FMT":{"start":{"line":114,"col":21,"offset":3185},"end":{"line":114,"col":28,"offset":3192},"abstract_content":"VTNAME2"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"53486407609c1b3132a956bbda0d6b7827fb3357c7f6bdb182ab9f7e6a4207494fe51fbf5d94f28a9d097f6efec80f0d505ca14c880de754ab8c1a13dd406383_0","lines":"\t\tsprintf(filename, VTNAME2, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":27,"offset":3228},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7319cbd42d12261053a16f16ea40afb34c9f0ae66e83434026146c7a5a2cc38521880b7c61c55257f798bd03de0c02dc3ff8b4db34e3ad30b8a1bf7266224d0b_1","lines":"\t\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":27,"offset":3228},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":7,"offset":3208},"end":{"line":115,"col":11,"offset":3212},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbd1587358ba2a956c87786219b7368f3d272c1c9206b08dd5f7539ec16ecd6e44b69277a5a0adf39a89777712ef493b7e647a4c978ab45f9a19356e097f7b25_1","lines":"\t\tif (stat(filename, &buf)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"40850cfa313a878da701582c2970be8bdda6ff84646116bc0deff2e5fdc9615440f052c6f1b452b0be5a8b09c3a1161e10fd24d6a8904b9238129fda146ba26d_3","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$BUF":{"start":{"line":117,"col":12,"offset":3289},"end":{"line":117,"col":20,"offset":3297},"abstract_content":"filename"},"$FMT":{"start":{"line":117,"col":22,"offset":3299},"end":{"line":117,"col":28,"offset":3305},"abstract_content":"VTNAME"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0a441405f6e0ecb38cf0ee33732fe1a9e54e52562266b15fff861b47d7ce65151ae5e94775550d5284e145489ff8344d130742270ccbcf5a137068ff89994aef_1","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":11,"offset":3288},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"875340fe880f94f998f74e92d92b7390852eb18186b185becf831e34db46a189d16834fd6eeb88b9df85e73ea21b6244a3a9cc1a37ad2b4f90a01e4a3c94ceb7_2","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":36,"offset":3313},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"VTNAME"},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":117,"col":4,"offset":3281},"end":{"line":117,"col":11,"offset":3288},"abstract_content":"sprintf"},"$BUF":{"start":{"line":117,"col":12,"offset":3289},"end":{"line":117,"col":20,"offset":3297},"abstract_content":"filename"},"$FMT":{"start":{"line":117,"col":22,"offset":3299},"end":{"line":117,"col":28,"offset":3305},"abstract_content":"VTNAME"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5b134fdf3d840fb4c94cb9ca028a7e28eb72b3259d7bf43869e4cb0968c38636afd466fa6e4a1db0a0fa98d1d2c8aadd1fa976671dc2f16fb2a2ba17c3b27e09_1","lines":"\t\t\tsprintf(filename, VTNAME, curvt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":126,"col":2,"offset":3492},"end":{"line":127,"col":46,"offset":3575},"extra":{"metavars":{"$EXPR1":{"start":{"line":126,"col":8,"offset":3498},"end":{"line":126,"col":13,"offset":3503},"abstract_content":"pwnam","propagated_value":{"svalue_start":{"line":126,"col":16,"offset":3506},"svalue_end":{"line":126,"col":37,"offset":3527},"svalue_abstract_content":"getpwuid(console_uid)"}},"$EXPR2":{"start":{"line":126,"col":16,"offset":3506},"end":{"line":126,"col":37,"offset":3527},"abstract_content":"getpwuid(console_uid)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e4bd683e7cac778b5e62a4f33209eb24843c6ba6f1b4dfa131ec5f3d8af650dfbfdc410c04f166b1a3b6b96ea65280169f07459ae0304234fc7ae06e83a8a60c_0","lines":"\tif (!(pwnam = getpwuid(console_uid)))\n\t\tkbd_error(EXIT_FAILURE, errno, \"getpwuid\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"/proc/%s/fd/0\""},"$BUF":{"start":{"line":132,"col":11,"offset":3745},"end":{"line":132,"col":19,"offset":3753},"abstract_content":"filename"},"$FMT":{"start":{"line":132,"col":21,"offset":3755},"end":{"line":132,"col":36,"offset":3770},"abstract_content":"\"/proc/%s/fd/0\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e9c3ed08fc63d3022ad3c3da006c46213af10673e8dfbaff4c3a99152e8acbe818813b61f574415050d9283383f6f55244b1963c30103412eabf950e768bdd63_0","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":10,"offset":3744},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"875340fe880f94f998f74e92d92b7390852eb18186b185becf831e34db46a189d16834fd6eeb88b9df85e73ea21b6244a3a9cc1a37ad2b4f90a01e4a3c94ceb7_3","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":52,"offset":3786},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"/proc/%s/fd/0\""},"$TYPE":{"start":{"line":103,"col":2,"offset":2878},"end":{"line":103,"col":6,"offset":2882},"abstract_content":"char"},"$LEN":{"start":{"line":103,"col":16,"offset":2892},"end":{"line":103,"col":29,"offset":2905},"abstract_content":"NAME_MAX+12"},"$FUN":{"start":{"line":132,"col":3,"offset":3737},"end":{"line":132,"col":10,"offset":3744},"abstract_content":"sprintf"},"$BUF":{"start":{"line":132,"col":11,"offset":3745},"end":{"line":132,"col":19,"offset":3753},"abstract_content":"filename"},"$FMT":{"start":{"line":132,"col":21,"offset":3755},"end":{"line":132,"col":36,"offset":3770},"abstract_content":"\"/proc/%s/fd/0\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89270ab4c15ff2fa125c5d6cdf30ad94bce093527636262597f15aa38388ef1315976b0893f6d71cfc6f9b145e146689ff025e93f6c939f251b8f8a14fd236e0_0","lines":"\t\tsprintf(filename, \"/proc/%s/fd/0\", dentp->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":27,"offset":3815},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7319cbd42d12261053a16f16ea40afb34c9f0ae66e83434026146c7a5a2cc38521880b7c61c55257f798bd03de0c02dc3ff8b4db34e3ad30b8a1bf7266224d0b_2","lines":"\t\tif (stat(filename, &buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":27,"offset":3815},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":7,"offset":3795},"end":{"line":134,"col":11,"offset":3799},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbd1587358ba2a956c87786219b7368f3d272c1c9206b08dd5f7539ec16ecd6e44b69277a5a0adf39a89777712ef493b7e647a4c978ab45f9a19356e097f7b25_2","lines":"\t\tif (stat(filename, &buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":154,"col":12,"offset":4146},"end":{"line":154,"col":32,"offset":4166},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":12,"offset":4146},"end":{"line":154,"col":16,"offset":4150},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f241ad55602be7fa627cdbdabdd21a2d30dd26eb4ad1b42139379430016e405581362695d8b6f52dba13562909b3103ce6318f51ffc9f12d6bb185f576e178ee_0","lines":"\tif ((fd = open(vtname, O_RDWR)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":23,"col":13,"offset":460},"end":{"line":23,"col":26,"offset":473},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"604955adc7c59d64b079130315f59a5c912a0524d339efca00b8f15a3093e40708c80efd958bbb9a6e1e4e8cba90ee7f0be3fd9ae38fb94f992d68ea747838f8_0","lines":"\tpsftype  = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":23,"col":18,"offset":465},"end":{"line":23,"col":22,"offset":469},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f538c541f8791282b4909be939ed0db8fc32ce7a9f921b74787cb0df03107c21e4c55b627d86a2d753f1a4a578e37aec1c532539db94f44cbcb2c9c97e2a2035_0","lines":"\tpsftype  = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":24,"col":13,"offset":487},"end":{"line":24,"col":26,"offset":500},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"604955adc7c59d64b079130315f59a5c912a0524d339efca00b8f15a3093e40708c80efd958bbb9a6e1e4e8cba90ee7f0be3fd9ae38fb94f992d68ea747838f8_1","lines":"\tfontsize = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":24,"col":18,"offset":492},"end":{"line":24,"col":22,"offset":496},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f538c541f8791282b4909be939ed0db8fc32ce7a9f921b74787cb0df03107c21e4c55b627d86a2d753f1a4a578e37aec1c532539db94f44cbcb2c9c97e2a2035_1","lines":"\tfontsize = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":25,"col":13,"offset":514},"end":{"line":25,"col":26,"offset":527},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"604955adc7c59d64b079130315f59a5c912a0524d339efca00b8f15a3093e40708c80efd958bbb9a6e1e4e8cba90ee7f0be3fd9ae38fb94f992d68ea747838f8_2","lines":"\tcharsize = atoi(argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":25,"col":18,"offset":519},"end":{"line":25,"col":22,"offset":523},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f538c541f8791282b4909be939ed0db8fc32ce7a9f921b74787cb0df03107c21e4c55b627d86a2d753f1a4a578e37aec1c532539db94f44cbcb2c9c97e2a2035_2","lines":"\tcharsize = atoi(argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":26,"col":13,"offset":541},"end":{"line":26,"col":26,"offset":554},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"604955adc7c59d64b079130315f59a5c912a0524d339efca00b8f15a3093e40708c80efd958bbb9a6e1e4e8cba90ee7f0be3fd9ae38fb94f992d68ea747838f8_3","lines":"\thastable = atoi(argv[4]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","start":{"line":26,"col":18,"offset":546},"end":{"line":26,"col":22,"offset":550},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f538c541f8791282b4909be939ed0db8fc32ce7a9f921b74787cb0df03107c21e4c55b627d86a2d753f1a4a578e37aec1c532539db94f44cbcb2c9c97e2a2035_3","lines":"\thastable = atoi(argv[4]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":25,"col":19,"offset":419},"end":{"line":25,"col":55,"offset":455},"extra":{"metavars":{"$FUN":{"start":{"line":25,"col":19,"offset":419},"end":{"line":25,"col":26,"offset":426},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"721b15a572d78c207b5321467fce600e4b54814110bd04fc726fd1546c19f4ab11c6f67d20aeca137d36f893bddd6672f2914700455e615b9dffeba6054d2e72_0","lines":"\tul             = xmalloc(sizeof(struct unicode_list));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":26,"col":19,"offset":475},"end":{"line":26,"col":54,"offset":510},"extra":{"metavars":{"$FUN":{"start":{"line":26,"col":19,"offset":475},"end":{"line":26,"col":26,"offset":482},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"721b15a572d78c207b5321467fce600e4b54814110bd04fc726fd1546c19f4ab11c6f67d20aeca137d36f893bddd6672f2914700455e615b9dffeba6054d2e72_1","lines":"\tus             = xmalloc(sizeof(struct unicode_seq));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":47,"col":16,"offset":922},"end":{"line":47,"col":51,"offset":957},"extra":{"metavars":{"$FUN":{"start":{"line":47,"col":16,"offset":922},"end":{"line":47,"col":23,"offset":929},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"721b15a572d78c207b5321467fce600e4b54814110bd04fc726fd1546c19f4ab11c6f67d20aeca137d36f893bddd6672f2914700455e615b9dffeba6054d2e72_2","lines":"\tus          = xmalloc(sizeof(struct unicode_seq));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":77,"col":3,"offset":1507},"end":{"line":77,"col":31,"offset":1535},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_0","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":106,"col":3,"offset":2067},"end":{"line":106,"col":31,"offset":2095},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_1","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":137,"col":4,"offset":2586},"end":{"line":137,"col":32,"offset":2614},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_2","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":195,"col":9,"offset":4302},"end":{"line":195,"col":24,"offset":4317},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":195,"col":9,"offset":4302},"end":{"line":195,"col":20,"offset":4313},"abstract_content":"inputbuflth"},"$SIGNED":{"start":{"line":195,"col":23,"offset":4316},"end":{"line":195,"col":24,"offset":4317},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"936e24248ba7c906efc12fb97a8d636a81f39466f6bcccb9ff95f4b481b2df9e8399596043f8b753a143a13a0a58588a05ac54e9aea49e3c78931709722dc8c2_0","lines":"\tsize_t inputbuflth = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":205,"col":3,"offset":4573},"end":{"line":205,"col":32,"offset":4602},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":205,"col":3,"offset":4573},"end":{"line":205,"col":14,"offset":4584},"abstract_content":"inputbuflth"},"$SIGNED":{"start":{"line":205,"col":31,"offset":4601},"end":{"line":205,"col":32,"offset":4602},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6b220a74d72cab0f4f595ba7dccd06117fc4cdb3b73592425ba10b5d85a5ca27d4326735cd7202c3f97a0e89c4339bcc262375887a1b8fe85c8cdb013cb7bd6d_0","lines":"\t\tinputbuflth = MAXFONTSIZE / 4; /* random */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":206,"col":17,"offset":4633},"end":{"line":206,"col":37,"offset":4653},"extra":{"metavars":{"$FUN":{"start":{"line":206,"col":17,"offset":4633},"end":{"line":206,"col":24,"offset":4640},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"721b15a572d78c207b5321467fce600e4b54814110bd04fc726fd1546c19f4ab11c6f67d20aeca137d36f893bddd6672f2914700455e615b9dffeba6054d2e72_3","lines":"\t\tinputbuf    = xmalloc(inputbuflth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":207,"col":3,"offset":4657},"end":{"line":207,"col":18,"offset":4672},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":207,"col":3,"offset":4657},"end":{"line":207,"col":4,"offset":4658},"abstract_content":"n"},"$SIGNED":{"start":{"line":207,"col":17,"offset":4671},"end":{"line":207,"col":18,"offset":4672},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e5fca144454f8dbc61a0b2b6ff51f5882fda3d5058897e706e9ea4ca553271ff942b18f4fb6b379af06e936515ffe4d5443279c89877508bf1813203d6f6d96d_0","lines":"\t\tn           = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":212,"col":16,"offset":4753},"end":{"line":212,"col":47,"offset":4784},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":16,"offset":4753},"end":{"line":212,"col":24,"offset":4761},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"abdd6b2ea868470977144a655f681218f9d2acf290d9b3d281f357aeeacaba8f0f3e138a17098dc9ec07c9b61b81818d7ab98dd5dad5503ede193366c2f15fa3_0","lines":"\t\t\t\tinputbuf = xrealloc(inputbuf, inputbuflth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":214,"col":9,"offset":4799},"end":{"line":214,"col":55,"offset":4845},"extra":{"metavars":{"$FUN":{"start":{"line":214,"col":9,"offset":4799},"end":{"line":214,"col":14,"offset":4804},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e6d51a42be0761bff84a4533ec278365d73d1126933395c71671ab006d0bab482db50d32ebeb5d7e0b1190171b19a10fe66cd216d1b2f034f7e4c6c7702a8b20_0","lines":"\t\t\tn += fread(inputbuf + n, 1, inputbuflth - n, fontf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":214,"col":9,"offset":4799},"end":{"line":214,"col":55,"offset":4845},"extra":{"metavars":{"$PTR":{"start":{"line":214,"col":15,"offset":4805},"end":{"line":214,"col":27,"offset":4817},"abstract_content":"inputbuf+n"},"$LEN":{"start":{"line":214,"col":29,"offset":4819},"end":{"line":214,"col":30,"offset":4820},"abstract_content":"1"},"$NITEMS":{"start":{"line":214,"col":32,"offset":4822},"end":{"line":214,"col":47,"offset":4837},"abstract_content":"inputbuflth-n"},"$FS":{"start":{"line":214,"col":49,"offset":4839},"end":{"line":214,"col":54,"offset":4844},"abstract_content":"fontf"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"72a47b3996e52053629a81f582322b0c934b1bb3dcdd69b04b5b92d0015ccd62b2e88213177c6d9974fc60403866d823a6ed35d5c1e3ebd740251a7c06b1aafc_0","lines":"\t\t\tn += fread(inputbuf + n, 1, inputbuflth - n, fontf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":217,"col":5,"offset":4924},"end":{"line":217,"col":33,"offset":4952},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_3","lines":"\t\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":231,"col":4,"offset":5199},"end":{"line":231,"col":32,"offset":5227},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_4","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":246,"col":4,"offset":5596},"end":{"line":246,"col":46,"offset":5638},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_5","lines":"\t\t\tfprintf(stderr, u, progname, psfhdr->mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":249,"col":3,"offset":5667},"end":{"line":249,"col":57,"offset":5721},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":249,"col":3,"offset":5667},"end":{"line":249,"col":10,"offset":5674},"abstract_content":"fontlen"},"$SIGNED":{"start":{"line":249,"col":17,"offset":5681},"end":{"line":249,"col":57,"offset":5721},"abstract_content":"psfhdr->->mode&PSF1_MODE512 512 256"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"48ee7618e533821840c2888972fb6c5316de51aa1c18ab3bedbe50b6d4e56e3c9eb3d8742a5a8983c7f52142cb018fd75fad9cf7fe18baabd9e016bde19b3885_0","lines":"\t\tfontlen   = ((psfhdr->mode & PSF1_MODE512) ? 512 : 256);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":253,"col":3,"offset":5868},"end":{"line":253,"col":16,"offset":5881},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":253,"col":3,"offset":5868},"end":{"line":253,"col":12,"offset":5877},"abstract_content":"fontwidth"},"$SIGNED":{"start":{"line":253,"col":15,"offset":5880},"end":{"line":253,"col":16,"offset":5881},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6471d402577de9f29f22f56586c3fb97d019e14e220fbecce14d89247d392466ff04d46b37fa63d92d4910682b8416a57944ed6c42d639d601912bb34b2a83ae_0","lines":"\t\tfontwidth = 8;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":254,"col":3,"offset":5885},"end":{"line":254,"col":16,"offset":5898},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":254,"col":3,"offset":5885},"end":{"line":254,"col":7,"offset":5889},"abstract_content":"utf8"},"$SIGNED":{"start":{"line":254,"col":15,"offset":5897},"end":{"line":254,"col":16,"offset":5898},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"052e1ab5d2df2cca9a413894f6037d26b87aea35a1c1101a83a2f99cd3429f4b5a9a313c386db17fefe3a53adec797b5143876d533a6a4a2182506c5f70d5b6c_0","lines":"\t\tutf8      = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":260,"col":3,"offset":6055},"end":{"line":260,"col":56,"offset":6108},"extra":{"metavars":{"$FUN":{"start":{"line":260,"col":3,"offset":6055},"end":{"line":260,"col":9,"offset":6061},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"289ed42f9402d247b5459da5b378d1a41f92aa979c0b2ee7051eae3b8334b7ea9626e0e289b94f08006081027ddab5f2d145c4169424c82a3e00dda5aa777f1c_0","lines":"\t\tmemcpy(&psfhdr, inputbuf, sizeof(struct psf2_header));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":264,"col":4,"offset":6210},"end":{"line":264,"col":48,"offset":6254},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_6","lines":"\t\t\tfprintf(stderr, u, progname, psfhdr.version);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":270,"col":3,"offset":6467},"end":{"line":270,"col":46,"offset":6510},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":270,"col":3,"offset":6467},"end":{"line":270,"col":11,"offset":6475},"abstract_content":"hastable"},"$SIGNED":{"start":{"line":270,"col":16,"offset":6480},"end":{"line":270,"col":21,"offset":6485},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2c8b7be27ae500211e8de8368b45bf767886b3c1fdb8d2fd75d7e103fcb94f482fbc23d18fddd30644977685d539468c320de368830cb6d21c97f623945bcbc5_0","lines":"\t\thastable  = (flags & PSF2_HAS_UNICODE_TABLE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":273,"col":3,"offset":6640},"end":{"line":273,"col":16,"offset":6653},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":273,"col":3,"offset":6640},"end":{"line":273,"col":7,"offset":6644},"abstract_content":"utf8"},"$SIGNED":{"start":{"line":273,"col":15,"offset":6652},"end":{"line":273,"col":16,"offset":6653},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eae9d003199b7291e3069b3e2dbfc0568c9e9b2b7e02a08c5ec024649223061bb04bd6940117bc2845d55bf836100e7fe561f45f9b8b350262382ac25bb13810_0","lines":"\t\tutf8      = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":280,"col":3,"offset":6805},"end":{"line":280,"col":31,"offset":6833},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_7","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":285,"col":3,"offset":6933},"end":{"line":285,"col":31,"offset":6961},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_8","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":291,"col":3,"offset":7135},"end":{"line":291,"col":41,"offset":7173},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_9","lines":"\t\tfprintf(stderr, u, progname, inputlth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":307,"col":18,"offset":7480},"end":{"line":308,"col":78,"offset":7581},"extra":{"metavars":{"$FUN":{"start":{"line":307,"col":18,"offset":7480},"end":{"line":307,"col":26,"offset":7488},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"abdd6b2ea868470977144a655f681218f9d2acf290d9b3d281f357aeeacaba8f0f3e138a17098dc9ec07c9b61b81818d7ab98dd5dad5503ede193366c2f15fa3_1","lines":"\t*uclistheadsp = xrealloc(*uclistheadsp,\n\t                         (fontpos0 + fontlen) * sizeof(struct unicode_list));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":316,"col":8,"offset":7719},"end":{"line":316,"col":13,"offset":7724},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":316,"col":8,"offset":7719},"end":{"line":316,"col":9,"offset":7720},"abstract_content":"i"},"$SIGNED":{"start":{"line":316,"col":12,"offset":7723},"end":{"line":316,"col":13,"offset":7724},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"76e19574cb21a5aa2d8e8991cce8877be6008ce624079a8dc59b91e7e398c30301f6136759e4e2120e7c44c900a2adc1bd0b94e2c634ae5703dd546d876c788d_0","lines":"\t\tfor (i = 0; i < fontlen; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":317,"col":4,"offset":7749},"end":{"line":317,"col":20,"offset":7765},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":317,"col":4,"offset":7749},"end":{"line":317,"col":5,"offset":7750},"abstract_content":"k"},"$SIGNED":{"start":{"line":317,"col":8,"offset":7753},"end":{"line":317,"col":16,"offset":7761},"abstract_content":"fontpos0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb1960a14573bea3004c58c621e1057297409947efcb8706bf7691fcf0065026981c82362005770ba5df900aff390a51b5ab35805cf0ec9bbb1a449248caacf5_0","lines":"\t\t\tk = fontpos0 + i;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":323,"col":4,"offset":7932},"end":{"line":323,"col":32,"offset":7960},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_10","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":327,"col":8,"offset":8004},"end":{"line":327,"col":13,"offset":8009},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":327,"col":8,"offset":8004},"end":{"line":327,"col":9,"offset":8005},"abstract_content":"i"},"$SIGNED":{"start":{"line":327,"col":12,"offset":8008},"end":{"line":327,"col":13,"offset":8009},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"76e19574cb21a5aa2d8e8991cce8877be6008ce624079a8dc59b91e7e398c30301f6136759e4e2120e7c44c900a2adc1bd0b94e2c634ae5703dd546d876c788d_1","lines":"\t\tfor (i = 0; i < fontlen; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":328,"col":4,"offset":8034},"end":{"line":328,"col":20,"offset":8050},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":328,"col":4,"offset":8034},"end":{"line":328,"col":5,"offset":8035},"abstract_content":"k"},"$SIGNED":{"start":{"line":328,"col":8,"offset":8038},"end":{"line":328,"col":16,"offset":8046},"abstract_content":"fontpos0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb1960a14573bea3004c58c621e1057297409947efcb8706bf7691fcf0065026981c82362005770ba5df900aff390a51b5ab35805cf0ec9bbb1a449248caacf5_1","lines":"\t\t\tk = fontpos0 + i;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":360,"col":2,"offset":8532},"end":{"line":363,"col":3,"offset":8634},"extra":{"metavars":{"$EXPR1":{"start":{"line":360,"col":6,"offset":8536},"end":{"line":360,"col":8,"offset":8538},"abstract_content":"uc"},"$EXPR2":{"start":{"line":360,"col":11,"offset":8541},"end":{"line":360,"col":22,"offset":8552},"abstract_content":"~0x7fffffff"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0164ad9aaac72b954c33e775eedc08aa11f3d716d131580141c8bd4c887eb01f55beca1cc6c677be332749e7bce0211c7b0837e9c5cf661f9af2a803f03a101a_0","lines":"\tif (uc & ~0x7fffffff) {\n\t\tfprintf(stderr, _(\"appendunicode: illegal unicode %u\\n\"), uc);\n\t\texit(1);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":361,"col":3,"offset":8558},"end":{"line":361,"col":64,"offset":8619},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_11","lines":"\t\tfprintf(stderr, _(\"appendunicode: illegal unicode %u\\n\"), uc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":387,"col":4,"offset":9076},"end":{"line":387,"col":29,"offset":9101},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%02x \""},"$FMT":{"start":{"line":387,"col":11,"offset":9083},"end":{"line":387,"col":18,"offset":9090},"abstract_content":"\"%02x \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b59a625334531d3c42896143e460a6ca2ffc0fa21b9bc8bbd5890bb3080f4ddec43d43a6a8d11ed84d42a1d9a9337f5456d811d5b73732316fecad3d81dc9e02_0","lines":"\t\t\tprintf(\"%02x \", out[n++]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":400,"col":18,"offset":9335},"end":{"line":400,"col":59,"offset":9376},"extra":{"metavars":{"$NARROW":{"start":{"line":400,"col":18,"offset":9335},"end":{"line":400,"col":19,"offset":9336},"abstract_content":"u"},"$LARGE":{"start":{"line":400,"col":23,"offset":9340},"end":{"line":400,"col":26,"offset":9343},"abstract_content":"seq"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b3f74643f37fcc09b4ee7165f7026232f4c10cc70bf29899cb56e6cecfc08d44101aa07fba4eda482609eed8d4636305ad4f5aef5698b94a88e83966d212fb9b_0","lines":"\t\tunsigned short u = (seq ? PSF1_STARTSEQ : PSF1_SEPARATOR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":424,"col":3,"offset":9852},"end":{"line":425,"col":37,"offset":9914},"extra":{"metavars":{"$EXPR1":{"start":{"line":424,"col":7,"offset":9856},"end":{"line":424,"col":12,"offset":9861},"abstract_content":"flags"},"$EXPR2":{"start":{"line":424,"col":15,"offset":9864},"end":{"line":424,"col":27,"offset":9876},"abstract_content":"WPSFH_HASTAB"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b1df251448cdc0580f7a74b03e70edac72ac98b897dc011c0654fc0f57df39c92d6cae25710ea542c433155ba28306c9e5162a817f02b18fefccfad89b12b2be_0","lines":"\t\tif (flags & WPSFH_HASTAB)\n\t\t\tflags2 |= PSF2_HAS_UNICODE_TABLE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":446,"col":3,"offset":10596},"end":{"line":449,"col":30,"offset":10714},"extra":{"metavars":{"$EXPR1":{"start":{"line":446,"col":7,"offset":10600},"end":{"line":446,"col":12,"offset":10605},"abstract_content":"flags"},"$EXPR2":{"start":{"line":446,"col":15,"offset":10608},"end":{"line":446,"col":27,"offset":10620},"abstract_content":"WPSFH_HASSEQ"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1d973fbeb83ea47ef9afa939d1e455e72e6053c6f69e51986827786e07d898bc565455ebcd634ed8085aeedd100b9ad64dc47321f1edf5c74be72d23b81d4fff_0","lines":"\t\tif (flags & WPSFH_HASSEQ)\n\t\t\th.mode |= PSF1_MODEHASSEQ;\n\t\telse if (flags & WPSFH_HASTAB)\n\t\t\th.mode |= PSF1_MODEHASTAB;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":448,"col":8,"offset":10659},"end":{"line":449,"col":30,"offset":10714},"extra":{"metavars":{"$EXPR1":{"start":{"line":448,"col":12,"offset":10663},"end":{"line":448,"col":17,"offset":10668},"abstract_content":"flags"},"$EXPR2":{"start":{"line":448,"col":20,"offset":10671},"end":{"line":448,"col":32,"offset":10683},"abstract_content":"WPSFH_HASTAB"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b1df251448cdc0580f7a74b03e70edac72ac98b897dc011c0654fc0f57df39c92d6cae25710ea542c433155ba28306c9e5162a817f02b18fefccfad89b12b2be_1","lines":"\t\telse if (flags & WPSFH_HASTAB)\n\t\t\th.mode |= PSF1_MODEHASTAB;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":455,"col":3,"offset":10810},"end":{"line":455,"col":54,"offset":10861},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_12","lines":"\t\tfprintf(stderr, _(\"Cannot write font file header\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":477,"col":2,"offset":11354},"end":{"line":477,"col":24,"offset":11376},"extra":{"metavars":{"$EXPR1":{"start":{"line":477,"col":10,"offset":11362},"end":{"line":477,"col":17,"offset":11369},"abstract_content":"psftype"},"$EXPR2":{"start":{"line":477,"col":21,"offset":11373},"end":{"line":477,"col":22,"offset":11374},"abstract_content":"2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c61ee17f1c379dc52bbee8deb328ddd47840d945d243cc8ccbdffce5d604642354c2c99bb8569867452e7381e43b74822733671a750c67406b820a87d15b162_0","lines":"\tutf8 = (psftype == 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":480,"col":3,"offset":11442},"end":{"line":480,"col":47,"offset":11486},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06df7d3e43e1a45ca6d26286bae70ffb2e9ac6659de17cc8c1dbd96e7f52b4b1c19e2bb465bad5895088c64db93e04ca05f6be7c5ca3e5a4cc2a1dd58547c450_13","lines":"\t\tfprintf(stderr, _(\"Cannot write font file\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","start":{"line":489,"col":8,"offset":11700},"end":{"line":489,"col":13,"offset":11705},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":489,"col":8,"offset":11700},"end":{"line":489,"col":9,"offset":11701},"abstract_content":"i"},"$SIGNED":{"start":{"line":489,"col":12,"offset":11704},"end":{"line":489,"col":13,"offset":11705},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"76e19574cb21a5aa2d8e8991cce8877be6008ce624079a8dc59b91e7e398c30301f6136759e4e2120e7c44c900a2adc1bd0b94e2c634ae5703dd546d876c788d_2","lines":"\t\tfor (i = 0; i < fontlen; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":62,"col":30,"offset":1499},"end":{"line":62,"col":66,"offset":1535},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":30,"offset":1499},"end":{"line":62,"col":37,"offset":1506},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e638a581dece5e9beab386c117fee3bcc61cf39d985ae6a54d59c85febc3608f306375459a9c2ed5f5f7cb0b78f7f36159841611d71a5557a31efbb0501ab5cb_0","lines":"\tul                        = xmalloc(sizeof(struct unicode_list));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":63,"col":30,"offset":1566},"end":{"line":63,"col":65,"offset":1601},"extra":{"metavars":{"$FUN":{"start":{"line":63,"col":30,"offset":1566},"end":{"line":63,"col":37,"offset":1573},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e638a581dece5e9beab386c117fee3bcc61cf39d985ae6a54d59c85febc3608f306375459a9c2ed5f5f7cb0b78f7f36159841611d71a5557a31efbb0501ab5cb_1","lines":"\tus                        = xmalloc(sizeof(struct unicode_seq));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":81,"col":19,"offset":2063},"end":{"line":81,"col":54,"offset":2098},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":19,"offset":2063},"end":{"line":81,"col":26,"offset":2070},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e638a581dece5e9beab386c117fee3bcc61cf39d985ae6a54d59c85febc3608f306375459a9c2ed5f5f7cb0b78f7f36159841611d71a5557a31efbb0501ab5cb_2","lines":"\tus             = xmalloc(sizeof(struct unicode_seq));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":115,"col":3,"offset":2722},"end":{"line":115,"col":31,"offset":2750},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_0","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":129,"col":3,"offset":2948},"end":{"line":129,"col":36,"offset":2981},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_1","lines":"\t\tfprintf(stderr, u, progname, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":139,"col":4,"offset":3132},"end":{"line":139,"col":37,"offset":3165},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_2","lines":"\t\t\tfprintf(stderr, u, progname, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":148,"col":3,"offset":3320},"end":{"line":148,"col":36,"offset":3353},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_3","lines":"\t\tfprintf(stderr, u, progname, fp0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":151,"col":2,"offset":3379},"end":{"line":155,"col":3,"offset":3531},"extra":{"metavars":{"$EXPR1":{"start":{"line":151,"col":14,"offset":3391},"end":{"line":151,"col":32,"offset":3409},"abstract_content":"fp1<fp0||fp1>"},"$EXPR2":{"start":{"line":151,"col":34,"offset":3411},"end":{"line":151,"col":41,"offset":3418},"abstract_content":"fontlen"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bb0851a120e019bc6608861799874baf91b0f8f0b4c314918dd95627591dfe9846fea896470baa471c72a6378400a92e346dfec777465deecc7163dcbbe28194_0","lines":"\tif (fp1 && (fp1 < fp0 || fp1 >= fontlen)) {\n\t\tchar *u = _(\"%s: Bad end of range (0x%lx)\\n\");\n\t\tfprintf(stderr, u, progname, fp1);\n\t\texit(EX_DATAERR);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":153,"col":3,"offset":3474},"end":{"line":153,"col":36,"offset":3507},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_4","lines":"\t\tfprintf(stderr, u, progname, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":163,"col":9,"offset":3718},"end":{"line":163,"col":16,"offset":3725},"extra":{"metavars":{"$NARROW":{"start":{"line":163,"col":9,"offset":3718},"end":{"line":163,"col":10,"offset":3719},"abstract_content":"i"},"$LARGE":{"start":{"line":163,"col":13,"offset":3722},"end":{"line":163,"col":16,"offset":3725},"abstract_content":"fp0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"57771dcd9428de7d9750ba6ef51ee6b7c639752e3580aa5b608e3181616d119e29c693786b53f24743b5be4fb2f88207adb925109d692b794f05d055fbb1e67e_0","lines":"\t\t\tfor (i = fp0; i <= fp1; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":174,"col":5,"offset":4016},"end":{"line":174,"col":33,"offset":4044},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_5","lines":"\t\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":183,"col":5,"offset":4268},"end":{"line":183,"col":43,"offset":4306},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_6","lines":"\t\t\t\tfprintf(stderr, u, progname, fp0, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":190,"col":5,"offset":4516},"end":{"line":191,"col":32,"offset":4576},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_7","lines":"\t\t\t\tfprintf(stderr, u, progname,\n\t\t\t\t        un0, un1, fp0, fp1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":194,"col":9,"offset":4613},"end":{"line":194,"col":16,"offset":4620},"extra":{"metavars":{"$NARROW":{"start":{"line":194,"col":9,"offset":4613},"end":{"line":194,"col":10,"offset":4614},"abstract_content":"i"},"$LARGE":{"start":{"line":194,"col":13,"offset":4617},"end":{"line":194,"col":16,"offset":4620},"abstract_content":"fp0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"57771dcd9428de7d9750ba6ef51ee6b7c639752e3580aa5b608e3181616d119e29c693786b53f24743b5be4fb2f88207adb925109d692b794f05d055fbb1e67e_1","lines":"\t\t\tfor (i = fp0; i <= fp1; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":209,"col":4,"offset":4992},"end":{"line":209,"col":35,"offset":5023},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_8","lines":"\t\t\tfprintf(stderr, u, progname, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":221,"col":19,"offset":5188},"end":{"line":222,"col":66,"offset":5277},"extra":{"metavars":{"$FUN":{"start":{"line":221,"col":19,"offset":5188},"end":{"line":221,"col":27,"offset":5196},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f38ceefe8d67281417bebd540a40be859be7baf7fa01c8c7b99c703ed3b22c6de480f86379b91fca99dca7c255fd9275219049409da23287feb783bf4f64ee0_0","lines":"\t\t*uclistheadsp = xrealloc(*uclistheadsp,\n\t\t                         fontlen * sizeof(struct unicode_list));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":229,"col":10,"offset":5481},"end":{"line":229,"col":39,"offset":5510},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":229,"col":10,"offset":5481},"end":{"line":229,"col":15,"offset":5486},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"07b68b8a488d59eccd919604d81b5df882aa15cffc9af4aa23e5f46cec6693febb31c12a940bf98bca8f148a59983584d0c80ae20ef219c735bc8304f7055280_0","lines":"\t\twhile (fgets(buf, sizeof(buf), itab) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":246,"col":15,"offset":5847},"end":{"line":246,"col":19,"offset":5851},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":248,"col":2,"offset":5859},"end":{"line":248,"col":23,"offset":5880},"extra":{"metavars":{"$FUN":{"start":{"line":248,"col":2,"offset":5859},"end":{"line":248,"col":11,"offset":5868},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2dd210ea338febc7b0d3fc920ae723b3bc909e8c532b587e6222252bb80548d7146e17992fda74718746c1acd4ae0c36bb5dd237f9489f82d16edc65fb3c39aa_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":252,"col":27,"offset":5978},"end":{"line":252,"col":31,"offset":5982},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":264,"col":4,"offset":6368},"end":{"line":264,"col":32,"offset":6396},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_9","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":267,"col":12,"offset":6432},"end":{"line":267,"col":16,"offset":6436},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_2","lines":"\t\tifname = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":268,"col":12,"offset":6452},"end":{"line":268,"col":16,"offset":6456},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_3","lines":"\t\titname = argv[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":269,"col":12,"offset":6472},"end":{"line":269,"col":16,"offset":6476},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_4","lines":"\t\tofname = argv[3];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":273,"col":4,"offset":6614},"end":{"line":273,"col":32,"offset":6642},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_10","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":276,"col":12,"offset":6678},"end":{"line":276,"col":16,"offset":6682},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_5","lines":"\t\tifname = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":277,"col":26,"offset":6712},"end":{"line":277,"col":30,"offset":6716},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_6","lines":"\t\totname = (argc == 3) ? argv[2] : \"-\";","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":282,"col":4,"offset":6911},"end":{"line":282,"col":32,"offset":6939},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_11","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":285,"col":13,"offset":6976},"end":{"line":285,"col":17,"offset":6980},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_7","lines":"\t\tifname  = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":286,"col":13,"offset":6997},"end":{"line":286,"col":17,"offset":7001},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_8","lines":"\t\tofname  = argv[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":290,"col":17,"offset":7078},"end":{"line":290,"col":21,"offset":7082},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_9","lines":"\t\t\tif ((!strcmp(argv[i], \"-i\") || !strcmp(argv[i], \"-if\")) && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":290,"col":43,"offset":7104},"end":{"line":290,"col":47,"offset":7108},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_10","lines":"\t\t\tif ((!strcmp(argv[i], \"-i\") || !strcmp(argv[i], \"-if\")) && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":291,"col":14,"offset":7151},"end":{"line":291,"col":18,"offset":7155},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_11","lines":"\t\t\t\tifname = argv[++i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":292,"col":22,"offset":7183},"end":{"line":292,"col":26,"offset":7187},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_12","lines":"\t\t\telse if ((!strcmp(argv[i], \"-o\") || !strcmp(argv[i], \"-of\")) && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":292,"col":48,"offset":7209},"end":{"line":292,"col":52,"offset":7213},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_13","lines":"\t\t\telse if ((!strcmp(argv[i], \"-o\") || !strcmp(argv[i], \"-of\")) && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":293,"col":14,"offset":7256},"end":{"line":293,"col":18,"offset":7260},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_14","lines":"\t\t\t\tofname = argv[++i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":294,"col":21,"offset":7287},"end":{"line":294,"col":25,"offset":7291},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_15","lines":"\t\t\telse if (!strcmp(argv[i], \"-it\") && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":295,"col":14,"offset":7333},"end":{"line":295,"col":18,"offset":7337},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_16","lines":"\t\t\t\titname = argv[++i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":296,"col":21,"offset":7364},"end":{"line":296,"col":25,"offset":7368},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_17","lines":"\t\t\telse if (!strcmp(argv[i], \"-ot\") && i < argc - 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":297,"col":14,"offset":7410},"end":{"line":297,"col":18,"offset":7414},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_18","lines":"\t\t\t\totname = argv[++i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":298,"col":21,"offset":7441},"end":{"line":298,"col":25,"offset":7445},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cca128ede18e7a79d818f99d4d70242a658ba74f4151942cb24b09ce32ed4dc6512a71161e96379ba04506e7dbf4f4c32b7b75b7eddad05983d976953eac53b1_19","lines":"\t\t\telse if (!strcmp(argv[i], \"-nt\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":306,"col":4,"offset":7644},"end":{"line":306,"col":32,"offset":7672},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_12","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":316,"col":10,"offset":7791},"end":{"line":316,"col":28,"offset":7809},"extra":{"metavars":{"$FUN":{"start":{"line":316,"col":10,"offset":7791},"end":{"line":316,"col":15,"offset":7796},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ccf5c0d3fe43fa25d8149299a62aa9244e50ab7eed3aa0fe2c4bbaf698cb915a98a359448556a0621402fe62903a8ccf007c7ce4768710e09b0c302a340e4e1_0","lines":"\t\tifil = fopen(ifname, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":323,"col":2,"offset":7875},"end":{"line":333,"col":3,"offset":8051},"extra":{"metavars":{"$COND":{"start":{"line":323,"col":6,"offset":7879},"end":{"line":323,"col":13,"offset":7886},"abstract_content":"!itname"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69aaa27b7696315510718dad2ebc96c8f93fc4b3565dee84872f367daefbaa564caab2c192b9e62aa0cf44848d594a0816ad3dd85c448634e5aadde6b0315d26_0","lines":"\tif (!itname)\n\t\t/* nothing */;\n\telse if (!strcmp(itname, \"-\"))\n\t\titab = stdin;\n\telse {\n\t\titab = fopen(itname, \"r\");\n\t\tif (!itab) {\n\t\t\tperror(itname);\n\t\t\texit(EX_NOINPUT);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":328,"col":10,"offset":7970},"end":{"line":328,"col":28,"offset":7988},"extra":{"metavars":{"$FUN":{"start":{"line":328,"col":10,"offset":7970},"end":{"line":328,"col":15,"offset":7975},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ccf5c0d3fe43fa25d8149299a62aa9244e50ab7eed3aa0fe2c4bbaf698cb915a98a359448556a0621402fe62903a8ccf007c7ce4768710e09b0c302a340e4e1_1","lines":"\t\titab = fopen(itname, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":337,"col":2,"offset":8106},"end":{"line":347,"col":3,"offset":8285},"extra":{"metavars":{"$COND":{"start":{"line":337,"col":6,"offset":8110},"end":{"line":337,"col":13,"offset":8117},"abstract_content":"!ofname"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"93128fbb317daa5122f5972d19c281205256ad8205a2c783c5c4a9b6e1126334a6bb7d79cb1b4dbf77da8773fdcf55b3a34dd871d0bdfe0971546a751c20f7cf_0","lines":"\tif (!ofname)\n\t\t/* nothing */;\n\telse if (!strcmp(ofname, \"-\"))\n\t\tofil = stdout;\n\telse {\n\t\tofil = fopen(ofname, \"w\");\n\t\tif (!ofil) {\n\t\t\tperror(ofname);\n\t\t\texit(EX_CANTCREAT);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":342,"col":10,"offset":8202},"end":{"line":342,"col":28,"offset":8220},"extra":{"metavars":{"$FUN":{"start":{"line":342,"col":10,"offset":8202},"end":{"line":342,"col":15,"offset":8207},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ccf5c0d3fe43fa25d8149299a62aa9244e50ab7eed3aa0fe2c4bbaf698cb915a98a359448556a0621402fe62903a8ccf007c7ce4768710e09b0c302a340e4e1_2","lines":"\t\tofil = fopen(ofname, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":349,"col":2,"offset":8288},"end":{"line":359,"col":3,"offset":8467},"extra":{"metavars":{"$COND":{"start":{"line":349,"col":6,"offset":8292},"end":{"line":349,"col":13,"offset":8299},"abstract_content":"!otname"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bdd5ae5fa01a97dce393e62a7091e8b4cdadbb41fcd795dd2a354a60d1b53f36c48df9bff4ed7d055ee990efc1d033549257097e6c125ed4453f40de2c7bcd10_0","lines":"\tif (!otname)\n\t\t/* nothing */;\n\telse if (!strcmp(otname, \"-\"))\n\t\totab = stdout;\n\telse {\n\t\totab = fopen(otname, \"w\");\n\t\tif (!otab) {\n\t\t\tperror(otname);\n\t\t\texit(EX_CANTCREAT);\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":354,"col":10,"offset":8384},"end":{"line":354,"col":28,"offset":8402},"extra":{"metavars":{"$FUN":{"start":{"line":354,"col":10,"offset":8384},"end":{"line":354,"col":15,"offset":8389},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ccf5c0d3fe43fa25d8149299a62aa9244e50ab7eed3aa0fe2c4bbaf698cb915a98a359448556a0621402fe62903a8ccf007c7ce4768710e09b0c302a340e4e1_3","lines":"\t\totab = fopen(otname, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":365,"col":3,"offset":8675},"end":{"line":365,"col":39,"offset":8711},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_13","lines":"\t\tfprintf(stderr, u, progname, ifname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":384,"col":3,"offset":9124},"end":{"line":384,"col":31,"offset":9152},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_14","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":400,"col":4,"offset":9416},"end":{"line":400,"col":32,"offset":9444},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"e5a25b0e0fc624b6d560c84b5e6499f0dcc8ab6ddca9f5f2242ca68b24c7aeb2e34ece2701ff01f9c0e3a5be252f5eca5f08072769a306c7a7ca9bb396ef82b4_15","lines":"\t\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":407,"col":4,"offset":9605},"end":{"line":407,"col":32,"offset":9633},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"0x%03x\\t\""},"$ARG1":{"start":{"line":407,"col":12,"offset":9613},"end":{"line":407,"col":16,"offset":9617},"abstract_content":"otab"},"$FMT":{"start":{"line":407,"col":18,"offset":9619},"end":{"line":407,"col":28,"offset":9629},"abstract_content":"\"0x%03x\\t\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"de30166821eb649b3b984c7b131fd83c7ee32d965c5e64cbf0b9d7d24e20a069b48eda0f5fea9c6637e763d33b97f9187018548eb2e2e226cb1775276afc140d_0","lines":"\t\t\tfprintf(otab, \"0x%03x\\t\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","start":{"line":413,"col":6,"offset":9734},"end":{"line":413,"col":44,"offset":9772},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"%sU+%04x\""},"$ARG1":{"start":{"line":413,"col":14,"offset":9742},"end":{"line":413,"col":18,"offset":9746},"abstract_content":"otab"},"$FMT":{"start":{"line":413,"col":20,"offset":9748},"end":{"line":413,"col":30,"offset":9758},"abstract_content":"\"%sU+%04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f6178f415d11a7b12335a8b07269c5ca7264a022ae13296e2286e6e1c9119fd18e88afde1da78fce6df2ec9ffe43137257158572f4c1b6794e126a013e51b03a_0","lines":"\t\t\t\t\tfprintf(otab, \"%sU+%04x\", sep, us->uc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":118,"col":15,"offset":3730},"end":{"line":118,"col":19,"offset":3734},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":120,"col":2,"offset":3742},"end":{"line":120,"col":23,"offset":3763},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":2,"offset":3742},"end":{"line":120,"col":11,"offset":3751},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f67bdf588bf60b26c0e614846ee4a320c75da6b87bbf5659db4546c187e3959f6dfe5999aa167a6c1d937f9716d08cd8526f8c5cdae3e202a238e15d54eec217_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":127,"col":27,"offset":3888},"end":{"line":127,"col":31,"offset":3892},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":131,"col":9,"offset":3973},"end":{"line":131,"col":22,"offset":3986},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6630e1db3fa326999652356848dd06a266ef1098247d09a887256c3cdec369c4c0beecceecd1b70a801a0910285f4103f373a151d8039d116181d107cd4a5dc5_0","lines":"\tcc   = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":131,"col":14,"offset":3978},"end":{"line":131,"col":18,"offset":3982},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_2","lines":"\tcc   = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":133,"col":26,"offset":4043},"end":{"line":133,"col":30,"offset":4047},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_3","lines":"\tif (argc == 3 && strcmp(argv[1], \"-lines\") == 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":135,"col":10,"offset":4103},"end":{"line":135,"col":23,"offset":4116},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6630e1db3fa326999652356848dd06a266ef1098247d09a887256c3cdec369c4c0beecceecd1b70a801a0910285f4103f373a151d8039d116181d107cd4a5dc5_1","lines":"\t\trr   = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":135,"col":15,"offset":4108},"end":{"line":135,"col":19,"offset":4112},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_4","lines":"\t\trr   = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":136,"col":38,"offset":4155},"end":{"line":136,"col":42,"offset":4159},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_5","lines":"\t} else if (argc == 2 && (p = strchr(argv[1], 'x')) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":137,"col":8,"offset":4183},"end":{"line":137,"col":19,"offset":4194},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6630e1db3fa326999652356848dd06a266ef1098247d09a887256c3cdec369c4c0beecceecd1b70a801a0910285f4103f373a151d8039d116181d107cd4a5dc5_2","lines":"\t\trr = atoi(p + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":139,"col":8,"offset":4224},"end":{"line":139,"col":21,"offset":4237},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6630e1db3fa326999652356848dd06a266ef1098247d09a887256c3cdec369c4c0beecceecd1b70a801a0910285f4103f373a151d8039d116181d107cd4a5dc5_3","lines":"\t\trr = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":139,"col":13,"offset":4229},"end":{"line":139,"col":17,"offset":4233},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5a5b1b1f520c8008359a084bf805cb6afcf0475a5d2bbea445ec5f5f56315b335a5a8f65d32312d804534fe3124f1de6dfa9a84ddb84291dc7222786a49d4a8b_6","lines":"\t\trr = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":145,"col":3,"offset":4342},"end":{"line":145,"col":35,"offset":4374},"extra":{"metavars":{"$FUN":{"start":{"line":145,"col":3,"offset":4342},"end":{"line":145,"col":10,"offset":4349},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce2256894b4316c17a9bf3fd89aecf3ebddae7224482b1d23a8dee86c312d2773f10111d7ce21ae731d3ec188b2fdbdbb6099c319fb940ea685164232e7be0dd_0","lines":"\t\tsprintf(infile, \"%dx%d\", cc, rr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":145,"col":3,"offset":4342},"end":{"line":145,"col":35,"offset":4374},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%dx%d\""},"$ARG1":{"start":{"line":145,"col":11,"offset":4350},"end":{"line":145,"col":17,"offset":4356},"abstract_content":"infile"},"$FMT":{"start":{"line":145,"col":19,"offset":4358},"end":{"line":145,"col":26,"offset":4365},"abstract_content":"\"%dx%d\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc9275a9afe4d78ba91fc15a1d253a9692c70670031dbe5c58877b89b774c1efb37186f21d41e5637975c063857a06995d8518b2ccf7de744e6b8dcd28c7822a_0","lines":"\t\tsprintf(infile, \"%dx%d\", cc, rr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":247,"col":3,"offset":7026},"end":{"line":248,"col":33,"offset":7122},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_0","lines":"\t\tprintf(_(\"Old mode: %dx%d  New mode: %dx%d\\n\"), winsize.ws_col,\n\t\t       winsize.ws_row, cc, rr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":249,"col":3,"offset":7126},"end":{"line":250,"col":51,"offset":7252},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_1","lines":"\t\tprintf(_(\"Old #scanlines: %d  New #scanlines: %d  Character height: %d\\n\"),\n\t\t       scanlines_old, scanlines_new, fontheight);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":255,"col":3,"offset":7334},"end":{"line":255,"col":55,"offset":7386},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":26,"offset":25},"abstract_content":"\"restoretextmode -r %s\\n\""},"$BUF":{"start":{"line":255,"col":11,"offset":7342},"end":{"line":255,"col":14,"offset":7345},"abstract_content":"cmd"},"$FMT":{"start":{"line":255,"col":16,"offset":7347},"end":{"line":255,"col":41,"offset":7372},"abstract_content":"\"restoretextmode -r %s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b7560e5a405b8497096763caf2b08268179501910b1534ba58b486a0b9487d7f2ccd77208ea01b8705f16cda64d35625a5a6971e421ee73a53a487ace2a25529_0","lines":"\t\tsprintf(cmd, \"restoretextmode -r %s\\n\", fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":255,"col":3,"offset":7334},"end":{"line":255,"col":55,"offset":7386},"extra":{"metavars":{"$FUN":{"start":{"line":255,"col":3,"offset":7334},"end":{"line":255,"col":10,"offset":7341},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce2256894b4316c17a9bf3fd89aecf3ebddae7224482b1d23a8dee86c312d2773f10111d7ce21ae731d3ec188b2fdbdbb6099c319fb940ea685164232e7be0dd_1","lines":"\t\tsprintf(cmd, \"restoretextmode -r %s\\n\", fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":255,"col":3,"offset":7334},"end":{"line":255,"col":55,"offset":7386},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":26,"offset":25},"abstract_content":"\"restoretextmode -r %s\\n\""},"$TYPE":{"start":{"line":114,"col":2,"offset":3644},"end":{"line":114,"col":6,"offset":3648},"abstract_content":"char"},"$LEN":{"start":{"line":114,"col":20,"offset":3662},"end":{"line":114,"col":22,"offset":3664},"abstract_content":"80"},"$FUN":{"start":{"line":255,"col":3,"offset":7334},"end":{"line":255,"col":10,"offset":7341},"abstract_content":"sprintf"},"$BUF":{"start":{"line":255,"col":11,"offset":7342},"end":{"line":255,"col":14,"offset":7345},"abstract_content":"cmd"},"$FMT":{"start":{"line":255,"col":16,"offset":7347},"end":{"line":255,"col":41,"offset":7372},"abstract_content":"\"restoretextmode -r %s\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"31d08760c527a78055f1c8faa473cfb63a2e8f5bf1b1fd6340d70f1493b63ba3b0c8aa2b2412f5556baa129198ce67142de34d1412f2978064739ede2fd82052_0","lines":"\t\tsprintf(cmd, \"restoretextmode -r %s\\n\", fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-command-injection","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":257,"col":7,"offset":7407},"end":{"line":257,"col":18,"offset":7418},"extra":{"metavars":{},"message":"The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/78","https://cwe.mitre.org/data/definitions/88","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"498bd6ba87df859890de130d3b31dc535e2e50ba7a05964b91b5b2cc574c97f4a30e1ef80bed75760db2c87f83d16795daf0d2e53536ac32b2a4e93e65d749a0_0","lines":"\t\tif (system(cmd)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":257,"col":7,"offset":7407},"end":{"line":257,"col":18,"offset":7418},"extra":{"metavars":{"$FUN":{"start":{"line":257,"col":7,"offset":7407},"end":{"line":257,"col":13,"offset":7413},"abstract_content":"system"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"975b7b1eb668f24d6b964fa2c19d1f285804f8062f8fc0e56205018727219b855ba297b3956a4f6ef58f8a5198909cbde3a97126ce5f84ea27f67e3fe7412779_0","lines":"\t\tif (system(cmd)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":260,"col":4,"offset":7470},"end":{"line":260,"col":68,"offset":7534},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_2","lines":"\t\t\tfprintf(stderr, _(\"resizecons: the command `%s' failed\\n\"), cmd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":275,"col":3,"offset":7808},"end":{"line":287,"col":4,"offset":8137},"extra":{"metavars":{"$EXPR1":{"start":{"line":275,"col":7,"offset":7812},"end":{"line":275,"col":21,"offset":7826},"abstract_content":"vtstat.v_state"},"$EXPR2":{"start":{"line":275,"col":25,"offset":7830},"end":{"line":275,"col":31,"offset":7836},"abstract_content":"1<<i"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"436564a3a3416f29670517217c635ef8f5e8886b5b7abb0e82294be6160ff69917c92cb796e292f464c3e30db1fd3ef6880377bc56a08f859e898097f726b03b_0","lines":"\t\tif (vtstat.v_state & (1 << i)) {\n\t\t\tsprintf(tty, \"/dev/tty%d\", i);\n\t\t\tfd = open(tty, O_RDONLY);\n\t\t\tif (fd < 0 && errno == ENOENT) {\n\t\t\t\tsprintf(tty, \"/dev/vc/%d\", i);\n\t\t\t\tfd = open(tty, O_RDONLY);\n\t\t\t}\n\t\t\tif (fd >= 0) {\n\t\t\t\tif (ioctl(fd, TIOCSWINSZ, &winsize))\n\t\t\t\t\tkbd_warning(errno, \"ioctl TIOCSWINSZ\");\n\t\t\t\tclose(fd);\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":276,"col":4,"offset":7844},"end":{"line":276,"col":33,"offset":7873},"extra":{"metavars":{"$FUN":{"start":{"line":276,"col":4,"offset":7844},"end":{"line":276,"col":11,"offset":7851},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce2256894b4316c17a9bf3fd89aecf3ebddae7224482b1d23a8dee86c312d2773f10111d7ce21ae731d3ec188b2fdbdbb6099c319fb940ea685164232e7be0dd_2","lines":"\t\t\tsprintf(tty, \"/dev/tty%d\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":277,"col":9,"offset":7883},"end":{"line":277,"col":28,"offset":7902},"extra":{"metavars":{"$FUN":{"start":{"line":277,"col":9,"offset":7883},"end":{"line":277,"col":13,"offset":7887},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e393f5f25ba85e0af5f7cc1875398296d7e5b81a77847e3a798306f060c6e3b3a29c65170f8d20d7ea9f3bf08a0e35a19161adcf1ce417dafc0942155cc4936_0","lines":"\t\t\tfd = open(tty, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":279,"col":5,"offset":7944},"end":{"line":279,"col":34,"offset":7973},"extra":{"metavars":{"$FUN":{"start":{"line":279,"col":5,"offset":7944},"end":{"line":279,"col":12,"offset":7951},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce2256894b4316c17a9bf3fd89aecf3ebddae7224482b1d23a8dee86c312d2773f10111d7ce21ae731d3ec188b2fdbdbb6099c319fb940ea685164232e7be0dd_3","lines":"\t\t\t\tsprintf(tty, \"/dev/vc/%d\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":280,"col":10,"offset":7984},"end":{"line":280,"col":29,"offset":8003},"extra":{"metavars":{"$FUN":{"start":{"line":280,"col":10,"offset":7984},"end":{"line":280,"col":14,"offset":7988},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e393f5f25ba85e0af5f7cc1875398296d7e5b81a77847e3a798306f060c6e3b3a29c65170f8d20d7ea9f3bf08a0e35a19161adcf1ce417dafc0942155cc4936_1","lines":"\t\t\t\tfd = open(tty, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":292,"col":15,"offset":8244},"end":{"line":292,"col":51,"offset":8280},"extra":{"metavars":{"$FUN":{"start":{"line":292,"col":15,"offset":8244},"end":{"line":292,"col":19,"offset":8248},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e393f5f25ba85e0af5f7cc1875398296d7e5b81a77847e3a798306f060c6e3b3a29c65170f8d20d7ea9f3bf08a0e35a19161adcf1ce417dafc0942155cc4936_2","lines":"    if ((fd = open(\"/tmp/selection.pid\", O_RDONLY)) >= 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":294,"col":10,"offset":8314},"end":{"line":294,"col":36,"offset":8340},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":10,"offset":8314},"end":{"line":294,"col":14,"offset":8318},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"637e2f64e2e13cebb720f0c3ed42cbdc5617c0805a5c9bc6bfc1ceeffa4b0a83cf45a38fa80136b41e286f91df8d0ebdd353d28a51ca27f73b452f72d875e4e0_0","lines":"\tint n = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":294,"col":10,"offset":8314},"end":{"line":294,"col":36,"offset":8340},"extra":{"metavars":{"$TYPE":{"start":{"line":293,"col":2,"offset":8291},"end":{"line":293,"col":6,"offset":8295},"abstract_content":"char"},"$LEN":{"start":{"line":293,"col":11,"offset":8300},"end":{"line":293,"col":13,"offset":8302},"abstract_content":"64"},"$FUN":{"start":{"line":294,"col":10,"offset":8314},"end":{"line":294,"col":14,"offset":8318},"abstract_content":"read"},"$ARG1":{"start":{"line":294,"col":15,"offset":8319},"end":{"line":294,"col":17,"offset":8321},"abstract_content":"fd","propagated_value":{"svalue_start":{"line":292,"col":15,"offset":8244},"svalue_end":{"line":292,"col":51,"offset":8280},"svalue_abstract_content":"open(\"/tmp/selection.pid\"O_RDONLY)"}},"$BUF":{"start":{"line":294,"col":19,"offset":8323},"end":{"line":294,"col":22,"offset":8326},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"30d0c1605056c7c0300273e200307507693a64b2f35d0473cd08db6dbfac99bc25c24f882314c333d58a42fb2937fb2056d3093013a792777df23f7f7541764d_0","lines":"\tint n = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":299,"col":12,"offset":8401},"end":{"line":299,"col":21,"offset":8410},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6630e1db3fa326999652356848dd06a266ef1098247d09a887256c3cdec369c4c0beecceecd1b70a801a0910285f4103f373a151d8039d116181d107cd4a5dc5_4","lines":"\t    pid = atoi(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":311,"col":10,"offset":8680},"end":{"line":311,"col":30,"offset":8700},"extra":{"metavars":{"$VAR":{"start":{"line":311,"col":10,"offset":8680},"end":{"line":311,"col":30,"offset":8700},"abstract_content":"vga_get_fontheight()"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f12644e9f4e98639b313dfb3dec023588a0341c40218d7047a9bdb83d1e059a73a4320102f799692f74cb3d63b6eecd9b6041934b6a937fc419383deee7ec3a3_0","lines":"\tswitch (vga_get_fontheight()) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":334,"col":2,"offset":9015},"end":{"line":334,"col":41,"offset":9054},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"setfont %s\""},"$BUF":{"start":{"line":334,"col":10,"offset":9023},"end":{"line":334,"col":13,"offset":9026},"abstract_content":"cmd"},"$FMT":{"start":{"line":334,"col":15,"offset":9028},"end":{"line":334,"col":27,"offset":9040},"abstract_content":"\"setfont %s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"bf59b7db42df48bf670da90a8fdae213b286d7128e87333a3c8d204975ca0e3c4d679bdf8b4c46394a85a8541c9d34cfbb46e130578c28fdbfaeb78482cf90cd_0","lines":"\tsprintf(cmd, \"setfont %s\", defaultfont);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":334,"col":2,"offset":9015},"end":{"line":334,"col":41,"offset":9054},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":2,"offset":9015},"end":{"line":334,"col":9,"offset":9022},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce2256894b4316c17a9bf3fd89aecf3ebddae7224482b1d23a8dee86c312d2773f10111d7ce21ae731d3ec188b2fdbdbb6099c319fb940ea685164232e7be0dd_4","lines":"\tsprintf(cmd, \"setfont %s\", defaultfont);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":334,"col":2,"offset":9015},"end":{"line":334,"col":41,"offset":9054},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"setfont %s\""},"$TYPE":{"start":{"line":114,"col":2,"offset":3644},"end":{"line":114,"col":6,"offset":3648},"abstract_content":"char"},"$LEN":{"start":{"line":114,"col":20,"offset":3662},"end":{"line":114,"col":22,"offset":3664},"abstract_content":"80"},"$FUN":{"start":{"line":334,"col":2,"offset":9015},"end":{"line":334,"col":9,"offset":9022},"abstract_content":"sprintf"},"$BUF":{"start":{"line":334,"col":10,"offset":9023},"end":{"line":334,"col":13,"offset":9026},"abstract_content":"cmd"},"$FMT":{"start":{"line":334,"col":15,"offset":9028},"end":{"line":334,"col":27,"offset":9040},"abstract_content":"\"setfont %s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"29243b0b6a4bdbbce3b4512467b36a423a13d77aa30848ce74d294345eadb16c6d631628a17b20f5cc906c93e085ac99934af830a7423d12c48aad8bcb4d4657_0","lines":"\tsprintf(cmd, \"setfont %s\", defaultfont);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-command-injection","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":336,"col":6,"offset":9073},"end":{"line":336,"col":17,"offset":9084},"extra":{"metavars":{},"message":"The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/78","https://cwe.mitre.org/data/definitions/88","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"498bd6ba87df859890de130d3b31dc535e2e50ba7a05964b91b5b2cc574c97f4a30e1ef80bed75760db2c87f83d16795daf0d2e53536ac32b2a4e93e65d749a0_1","lines":"\tif (system(cmd)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":336,"col":6,"offset":9073},"end":{"line":336,"col":17,"offset":9084},"extra":{"metavars":{"$FUN":{"start":{"line":336,"col":6,"offset":9073},"end":{"line":336,"col":12,"offset":9079},"abstract_content":"system"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"975b7b1eb668f24d6b964fa2c19d1f285804f8062f8fc0e56205018727219b855ba297b3956a4f6ef58f8a5198909cbde3a97126ce5f84ea27f67e3fe7412779_1","lines":"\tif (system(cmd)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":343,"col":2,"offset":9215},"end":{"line":345,"col":25,"offset":9360},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_3","lines":"\tfprintf(stderr, _(\"resizecons: don't forget to change TERM \"\n\t                  \"(maybe to con%dx%d or linux-%dx%d)\\n\"),\n\t        cc, rr, cc, rr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":346,"col":6,"offset":9367},"end":{"line":346,"col":21,"offset":9382},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":346,"col":6,"offset":9367},"end":{"line":346,"col":12,"offset":9373},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9aaa5c87b8091693210f5800083be8c63734b79fba8363a80cc16675ee28aca96becb1e4c5dd1a6c1a5bb680786e62606c28f820a333201c935cb8bfaede2c2e_0","lines":"\tif (getenv(\"LINES\") || getenv(\"COLUMNS\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":346,"col":25,"offset":9386},"end":{"line":346,"col":42,"offset":9403},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":346,"col":25,"offset":9386},"end":{"line":346,"col":31,"offset":9392},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9aaa5c87b8091693210f5800083be8c63734b79fba8363a80cc16675ee28aca96becb1e4c5dd1a6c1a5bb680786e62606c28f820a333201c935cb8bfaede2c2e_1","lines":"\tif (getenv(\"LINES\") || getenv(\"COLUMNS\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":356,"col":2,"offset":9571},"end":{"line":360,"col":37,"offset":9797},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_4","lines":"\tfprintf(stderr,\n\t        _(\"resizecons:\\n\"\n\t          \"call is:  resizecons COLSxROWS  or:  resizecons COLS ROWS\\n\"\n\t          \"or: resizecons -lines ROWS, with ROWS one of 25, 28, 30, 34,\"\n\t          \" 36, 40, 44, 50, 60\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","start":{"line":395,"col":3,"offset":10560},"end":{"line":396,"col":58,"offset":10633},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3755a65467f2132c0bded8316c4fd7852d622d6de43f3dda0079143c1dbf4c8b8ff350bf8805cadce6d5e4b0f7b30d2c3d6cdddfe968fb72459f22fb53da35df_5","lines":"\t\tfprintf(stderr,\n\t\t        _(\"resizecons: cannot get I/O permissions.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":42,"col":15,"offset":1015},"end":{"line":42,"col":19,"offset":1019},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e0f6d2ecfa65b0a3723c2210763fdf2a26bd610af435eeef2255a5381c7f5d28acfe92937dfdf0e6483bcf30a5d027c12aa2fd154dd7829df6f0dcc4682b4213_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":44,"col":2,"offset":1027},"end":{"line":44,"col":23,"offset":1048},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":2,"offset":1027},"end":{"line":44,"col":11,"offset":1036},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"70aa9809bf72a412873e56875c45bf9e7dfd5c1beefd15c5b47fda186255d0c1e123c91db373cf437f58d4c67dbb590c7da35bba53033a9914529be81d84d896_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":48,"col":27,"offset":1146},"end":{"line":48,"col":31,"offset":1150},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e0f6d2ecfa65b0a3723c2210763fdf2a26bd610af435eeef2255a5381c7f5d28acfe92937dfdf0e6483bcf30a5d027c12aa2fd154dd7829df6f0dcc4682b4213_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":52,"col":3,"offset":1210},"end":{"line":52,"col":48,"offset":1255},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9272152b66d040a14710a8a3475d002608aad22f7df9de6ea4ffc3e00ad83248e041874a9f6d4ada3c0012dd141369b2ada010586d87f499b7c94fed39544437_0","lines":"\t\tfprintf(stderr, _(\"usage: screendump [n]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":56,"col":23,"offset":1305},"end":{"line":56,"col":36,"offset":1318},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"7e3c3d3ced35230b58ad67d8a068729c7db881c71587c4d0355c05000882ea475d25d30e276f373ce74556413dcf7efaf1a1868dc74aba8e2ce19d06231b2041_0","lines":"\tcons = (argc == 2) ? atoi(argv[1]) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":56,"col":28,"offset":1310},"end":{"line":56,"col":32,"offset":1314},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e0f6d2ecfa65b0a3723c2210763fdf2a26bd610af435eeef2255a5381c7f5d28acfe92937dfdf0e6483bcf30a5d027c12aa2fd154dd7829df6f0dcc4682b4213_2","lines":"\tcons = (argc == 2) ? atoi(argv[1]) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":58,"col":2,"offset":1326},"end":{"line":58,"col":38,"offset":1362},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":2,"offset":1326},"end":{"line":58,"col":9,"offset":1333},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_0","lines":"\tsprintf(infile, \"/dev/vcsa%d\", cons);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":59,"col":7,"offset":1370},"end":{"line":59,"col":29,"offset":1392},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":7,"offset":1370},"end":{"line":59,"col":11,"offset":1374},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_0","lines":"\tfd = open(infile, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":61,"col":3,"offset":1443},"end":{"line":61,"col":31,"offset":1471},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":3,"offset":1443},"end":{"line":61,"col":10,"offset":1450},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_1","lines":"\t\tsprintf(infile, \"/dev/vcsa\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":62,"col":8,"offset":1480},"end":{"line":62,"col":30,"offset":1502},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":8,"offset":1480},"end":{"line":62,"col":12,"offset":1484},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_1","lines":"\t\tfd = open(infile, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":65,"col":3,"offset":1543},"end":{"line":65,"col":40,"offset":1580},"extra":{"metavars":{"$FUN":{"start":{"line":65,"col":3,"offset":1543},"end":{"line":65,"col":10,"offset":1550},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_2","lines":"\t\tsprintf(infile, \"/dev/vcs/a%d\", cons);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":66,"col":8,"offset":1589},"end":{"line":66,"col":30,"offset":1611},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":8,"offset":1589},"end":{"line":66,"col":12,"offset":1593},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_2","lines":"\t\tfd = open(infile, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":69,"col":3,"offset":1665},"end":{"line":69,"col":32,"offset":1694},"extra":{"metavars":{"$FUN":{"start":{"line":69,"col":3,"offset":1665},"end":{"line":69,"col":10,"offset":1672},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_3","lines":"\t\tsprintf(infile, \"/dev/vcs/a\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":70,"col":8,"offset":1703},"end":{"line":70,"col":30,"offset":1725},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":8,"offset":1703},"end":{"line":70,"col":12,"offset":1707},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_3","lines":"\t\tfd = open(infile, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":72,"col":16,"offset":1745},"end":{"line":72,"col":35,"offset":1764},"extra":{"metavars":{"$FUN":{"start":{"line":72,"col":16,"offset":1745},"end":{"line":72,"col":20,"offset":1749},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9861bc623ca8dbc47f57dc178a9f1f0dc9a592bbe723d9834fad2ba2ebcd4ef81cfce72c18af96ce8d921a98d2c8de158b81ffda161c94323ea27ae7161250ba_0","lines":"\tif (fd < 0 || read(fd, header, 4) != 4)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":72,"col":16,"offset":1745},"end":{"line":72,"col":35,"offset":1764},"extra":{"metavars":{"$FD":{"start":{"line":72,"col":21,"offset":1750},"end":{"line":72,"col":23,"offset":1752},"abstract_content":"fd"},"$BUF":{"start":{"line":72,"col":25,"offset":1754},"end":{"line":72,"col":31,"offset":1760},"abstract_content":"header"},"$LEN":{"start":{"line":72,"col":33,"offset":1762},"end":{"line":72,"col":34,"offset":1763},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dd141111f5cd77d07469a43f6851fc43adc3cd6393cc227aaef37fc697f2e8374eeb9f1374bbf2e753aa9dbd233328034a2af5aebeaab3357334c42d5cf45e4b_0","lines":"\tif (fd < 0 || read(fd, header, 4) != 4)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":74,"col":2,"offset":1790},"end":{"line":74,"col":18,"offset":1806},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":74,"col":2,"offset":1790},"end":{"line":74,"col":6,"offset":1794},"abstract_content":"rows"},"$SIGNED":{"start":{"line":74,"col":16,"offset":1804},"end":{"line":74,"col":17,"offset":1805},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e726237218ee120ad0eb7d48b902f63707cc7440dbec8c38e80c915fe917088cfa42a160bd441e7093327ec8276e04e1fa3d2aa23cc3ff91b898bafe6bd9d875_0","lines":"\trows = header[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":75,"col":2,"offset":1809},"end":{"line":75,"col":18,"offset":1825},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":75,"col":2,"offset":1809},"end":{"line":75,"col":6,"offset":1813},"abstract_content":"cols"},"$SIGNED":{"start":{"line":75,"col":16,"offset":1823},"end":{"line":75,"col":17,"offset":1824},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3f83c658c2539f86499b0bdd86fc9033b30cb02085ee4edbf7e8dce9eb1d423a9260e47c11059bdf0773c04ce7ba01f6b66bf1b3b24ac0c879e6fa6b10471350_0","lines":"\tcols = header[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":78,"col":11,"offset":1878},"end":{"line":78,"col":35,"offset":1902},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":11,"offset":1878},"end":{"line":78,"col":18,"offset":1885},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6861d18880867821afc07cf0fb9a4562264bf09029faed7d4692dfcf75e065670ff8a4dfb33d5dfdbc7ff6872315b9e477a7a17d89f39ae0560cf5aef72334a7_0","lines":"\tinbuf  = xmalloc(rows * cols * 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":79,"col":11,"offset":1914},"end":{"line":79,"col":37,"offset":1940},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":11,"offset":1914},"end":{"line":79,"col":18,"offset":1921},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6861d18880867821afc07cf0fb9a4562264bf09029faed7d4692dfcf75e065670ff8a4dfb33d5dfdbc7ff6872315b9e477a7a17d89f39ae0560cf5aef72334a7_1","lines":"\toutbuf = xmalloc(rows * (cols + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":81,"col":6,"offset":1948},"end":{"line":81,"col":38,"offset":1980},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":6,"offset":1948},"end":{"line":81,"col":10,"offset":1952},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9861bc623ca8dbc47f57dc178a9f1f0dc9a592bbe723d9834fad2ba2ebcd4ef81cfce72c18af96ce8d921a98d2c8de158b81ffda161c94323ea27ae7161250ba_1","lines":"\tif (read(fd, inbuf, rows * cols * 2) != (ssize_t)(rows * cols * 2)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":86,"col":7,"offset":2113},"end":{"line":86,"col":12,"offset":2118},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":7,"offset":2113},"end":{"line":86,"col":8,"offset":2114},"abstract_content":"i"},"$SIGNED":{"start":{"line":86,"col":11,"offset":2117},"end":{"line":86,"col":12,"offset":2118},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d029f4e7922ec083ab3bb788f710749b75bbd88d5505bf290a0b7861c2f9db67a8c4e724f77e6b2691a6605ba498646727364a9a35fac7447ec4ea19a8c92986_0","lines":"\tfor (i = 0; i < rows; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":87,"col":8,"offset":2144},"end":{"line":87,"col":13,"offset":2149},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":87,"col":8,"offset":2144},"end":{"line":87,"col":9,"offset":2145},"abstract_content":"j"},"$SIGNED":{"start":{"line":87,"col":12,"offset":2148},"end":{"line":87,"col":13,"offset":2149},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a7c30eb8648277497281cfc493c91d63a0b1345dc6ff763655fa4136d5a5df6095ddca3a849b58b918ce99b1ecc51b5b8b9061fa5292d5dfd32eec0b847cf08f_0","lines":"\t\tfor (j = 0; j < cols; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":102,"col":2,"offset":2371},"end":{"line":102,"col":38,"offset":2407},"extra":{"metavars":{"$FUN":{"start":{"line":102,"col":2,"offset":2371},"end":{"line":102,"col":9,"offset":2378},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_4","lines":"\tsprintf(consnam, \"/dev/tty%d\", cons);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":103,"col":7,"offset":2415},"end":{"line":103,"col":30,"offset":2438},"extra":{"metavars":{"$FUN":{"start":{"line":103,"col":7,"offset":2415},"end":{"line":103,"col":11,"offset":2419},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_4","lines":"\tfd = open(consnam, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":105,"col":3,"offset":2476},"end":{"line":105,"col":44,"offset":2517},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":3,"offset":2476},"end":{"line":105,"col":10,"offset":2483},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80ee2317825e6f30b0b2debb56e0dce1bd781022031a0dd7befd6c21b01561eac04731540887504ed610186f9c784fc91c4ef29bbca7f9393d2c9df29c8e7413_5","lines":"\t\tsprintf(devfsconsnam, \"/dev/vc/%d\", cons);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":106,"col":8,"offset":2526},"end":{"line":106,"col":36,"offset":2554},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":8,"offset":2526},"end":{"line":106,"col":12,"offset":2530},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a57945f725d39ef4c96f2540961092c4b4d6932d9a3edf3919f2e1a04c521e1abd61af1c1de358d2e2aede13b9a87e1b11b02248db51c03b49bda9ab0a02cb17_5","lines":"\t\tfd = open(devfsconsnam, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":119,"col":17,"offset":2750},"end":{"line":119,"col":53,"offset":2786},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":17,"offset":2750},"end":{"line":119,"col":24,"offset":2757},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6861d18880867821afc07cf0fb9a4562264bf09029faed7d4692dfcf75e065670ff8a4dfb33d5dfdbc7ff6872315b9e477a7a17d89f39ae0560cf5aef72334a7_2","lines":"\tscreenbuf    = xmalloc(2 + win.ws_row * win.ws_col);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":127,"col":6,"offset":2970},"end":{"line":128,"col":14,"offset":3046},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9272152b66d040a14710a8a3475d002608aad22f7df9de6ea4ffc3e00ad83248e041874a9f6d4ada3c0012dd141369b2ada010586d87f499b7c94fed39544437_1","lines":"\t    fprintf(stderr,_(\"couldn't read %s, and cannot ioctl dump\\n\"),\n\t\t    infile);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":138,"col":2,"offset":3292},"end":{"line":138,"col":21,"offset":3311},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":138,"col":2,"offset":3292},"end":{"line":138,"col":6,"offset":3296},"abstract_content":"rows"},"$SIGNED":{"start":{"line":138,"col":19,"offset":3309},"end":{"line":138,"col":20,"offset":3310},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e726237218ee120ad0eb7d48b902f63707cc7440dbec8c38e80c915fe917088cfa42a160bd441e7093327ec8276e04e1fa3d2aa23cc3ff91b898bafe6bd9d875_1","lines":"\trows = screenbuf[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":139,"col":2,"offset":3314},"end":{"line":139,"col":21,"offset":3333},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":139,"col":2,"offset":3314},"end":{"line":139,"col":6,"offset":3318},"abstract_content":"cols"},"$SIGNED":{"start":{"line":139,"col":19,"offset":3331},"end":{"line":139,"col":20,"offset":3332},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3f83c658c2539f86499b0bdd86fc9033b30cb02085ee4edbf7e8dce9eb1d423a9260e47c11059bdf0773c04ce7ba01f6b66bf1b3b24ac0c879e6fa6b10471350_1","lines":"\tcols = screenbuf[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":146,"col":11,"offset":3542},"end":{"line":146,"col":37,"offset":3568},"extra":{"metavars":{"$FUN":{"start":{"line":146,"col":11,"offset":3542},"end":{"line":146,"col":18,"offset":3549},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6861d18880867821afc07cf0fb9a4562264bf09029faed7d4692dfcf75e065670ff8a4dfb33d5dfdbc7ff6872315b9e477a7a17d89f39ae0560cf5aef72334a7_3","lines":"\toutbuf = xmalloc(rows * (cols + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":149,"col":7,"offset":3629},"end":{"line":149,"col":12,"offset":3634},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":149,"col":7,"offset":3629},"end":{"line":149,"col":8,"offset":3630},"abstract_content":"i"},"$SIGNED":{"start":{"line":149,"col":11,"offset":3633},"end":{"line":149,"col":12,"offset":3634},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d029f4e7922ec083ab3bb788f710749b75bbd88d5505bf290a0b7861c2f9db67a8c4e724f77e6b2691a6605ba498646727364a9a35fac7447ec4ea19a8c92986_1","lines":"\tfor (i = 0; i < rows; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":150,"col":8,"offset":3660},"end":{"line":150,"col":13,"offset":3665},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":150,"col":8,"offset":3660},"end":{"line":150,"col":9,"offset":3661},"abstract_content":"j"},"$SIGNED":{"start":{"line":150,"col":12,"offset":3664},"end":{"line":150,"col":13,"offset":3665},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a7c30eb8648277497281cfc493c91d63a0b1345dc6ff763655fa4136d5a5df6095ddca3a849b58b918ce99b1ecc51b5b8b9061fa5292d5dfd32eec0b847cf08f_1","lines":"\t\tfor (j = 0; j < cols; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":158,"col":23,"offset":3790},"end":{"line":158,"col":33,"offset":3800},"extra":{"metavars":{"$PTR1":{"start":{"line":158,"col":23,"offset":3790},"end":{"line":158,"col":24,"offset":3791},"abstract_content":"q"},"$PTR2":{"start":{"line":158,"col":27,"offset":3794},"end":{"line":158,"col":33,"offset":3800},"abstract_content":"outbuf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"df81257ade851e876f63e5d9026e0daa07a9ad3dc0eb4456aaee6a4028d2bb6681c5ef796967c82708ad302c38c9b20d003182babcd88a25fa7a689f613cfa90_0","lines":"\tif (write(1, outbuf, q - outbuf) != q - outbuf) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","start":{"line":158,"col":38,"offset":3805},"end":{"line":158,"col":48,"offset":3815},"extra":{"metavars":{"$PTR1":{"start":{"line":158,"col":38,"offset":3805},"end":{"line":158,"col":39,"offset":3806},"abstract_content":"q"},"$PTR2":{"start":{"line":158,"col":42,"offset":3809},"end":{"line":158,"col":48,"offset":3815},"abstract_content":"outbuf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"df81257ade851e876f63e5d9026e0daa07a9ad3dc0eb4456aaee6a4028d2bb6681c5ef796967c82708ad302c38c9b20d003182babcd88a25fa7a689f613cfa90_1","lines":"\tif (write(1, outbuf, q - outbuf) != q - outbuf) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":77,"col":2,"offset":2246},"end":{"line":101,"col":18,"offset":4104},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_0","lines":"\tfprintf(stderr, _(\n\t                    \"Usage: setfont [write-options] [-<N>] [newfont..] [-m consolemap] [-u unicodemap]\\n\"\n\t                    \"  write-options (take place before file loading):\\n\"\n\t                    \"    -o  <filename>  Write current font to <filename>\\n\"\n\t                    \"    -O  <filename>  Write current font and unicode map to <filename>\\n\"\n\t                    \"    -om <filename>  Write current consolemap to <filename>\\n\"\n\t                    \"    -ou <filename>  Write current unicodemap to <filename>\\n\"\n\t                    \"If no newfont and no -[o|O|om|ou|m|u] option is given,\\n\"\n\t                    \"a default font is loaded:\\n\"\n\t                    \"    setfont         Load font \\\"default[.gz]\\\"\\n\"\n\t                    \"    setfont -<N>    Load font \\\"default8x<N>[.gz]\\\"\\n\"\n\t                    \"The -<N> option selects a font from a codepage that contains three fonts:\\n\"\n\t                    \"    setfont -{8|14|16} codepage.cp[.gz]   Load 8x<N> font from codepage.cp\\n\"\n\t                    \"Explicitly (with -m or -u) or implicitly (in the fontfile) given mappings\\n\"\n\t                    \"will be loaded and, in the case of consolemaps, activated.\\n\"\n\t                    \"    -h<N>      (no space) Override font height.\\n\"\n\t                    \"    -m <fn>    Load console screen map.\\n\"\n\t                    \"    -u <fn>    Load font unicode map.\\n\"\n\t                    \"    -m none    Suppress loading and activation of a screen map.\\n\"\n\t                    \"    -u none    Suppress loading of a unicode map.\\n\"\n\t                    \"    -v         Be verbose.\\n\"\n\t                    \"    -C <cons>  Indicate console device to be used.\\n\"\n\t                    \"    -V         Print version and exit.\\n\"\n\t                    \"Files are loaded from the current directory or %s/*/.\\n\"),\n\t        DATADIR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":114,"col":15,"offset":4355},"end":{"line":114,"col":19,"offset":4359},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":116,"col":2,"offset":4367},"end":{"line":116,"col":23,"offset":4388},"extra":{"metavars":{"$FUN":{"start":{"line":116,"col":2,"offset":4367},"end":{"line":116,"col":11,"offset":4376},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a7079ce1d66a95ec4aa9ef200948a1b84ef68efc003b6295ed24ad6b5b1e262af2007e0e26a4bb752c261ca4f7891bdffcb0fefeddfc15fcfff8774c624ce2e8_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":129,"col":15,"offset":4690},"end":{"line":129,"col":19,"offset":4694},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_1","lines":"\t\tif (!strcmp(argv[i], \"-V\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":131,"col":22,"offset":4758},"end":{"line":131,"col":26,"offset":4762},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_2","lines":"\t\t} else if (!strcmp(argv[i], \"-v\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":133,"col":22,"offset":4811},"end":{"line":133,"col":26,"offset":4815},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_3","lines":"\t\t} else if (!strcmp(argv[i], \"-R\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":135,"col":22,"offset":4866},"end":{"line":135,"col":26,"offset":4870},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_4","lines":"\t\t} else if (!strcmp(argv[i], \"-C\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":138,"col":14,"offset":4941},"end":{"line":138,"col":18,"offset":4945},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_5","lines":"\t\t\tconsole = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":139,"col":22,"offset":4971},"end":{"line":139,"col":26,"offset":4975},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_6","lines":"\t\t} else if (!strcmp(argv[i], \"-O\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":142,"col":11,"offset":5040},"end":{"line":142,"col":15,"offset":5044},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_7","lines":"\t\t\tOfil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":143,"col":22,"offset":5070},"end":{"line":143,"col":26,"offset":5074},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_8","lines":"\t\t} else if (!strcmp(argv[i], \"-o\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":146,"col":11,"offset":5139},"end":{"line":146,"col":15,"offset":5143},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_9","lines":"\t\t\tofil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":147,"col":22,"offset":5169},"end":{"line":147,"col":26,"offset":5173},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_10","lines":"\t\t} else if (!strcmp(argv[i], \"-om\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":150,"col":12,"offset":5241},"end":{"line":150,"col":16,"offset":5245},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_11","lines":"\t\t\tomfil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":151,"col":22,"offset":5271},"end":{"line":151,"col":26,"offset":5275},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_12","lines":"\t\t} else if (!strcmp(argv[i], \"-ou\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":154,"col":12,"offset":5343},"end":{"line":154,"col":16,"offset":5347},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_13","lines":"\t\t\toufil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":155,"col":22,"offset":5373},"end":{"line":155,"col":26,"offset":5377},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_14","lines":"\t\t} else if (!strcmp(argv[i], \"-m\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":158,"col":16,"offset":5447},"end":{"line":158,"col":20,"offset":5451},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_15","lines":"\t\t\tif (!strcmp(argv[i], \"none\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":161,"col":12,"offset":5498},"end":{"line":161,"col":16,"offset":5502},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_16","lines":"\t\t\t\tmfil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":162,"col":22,"offset":5528},"end":{"line":162,"col":26,"offset":5532},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_17","lines":"\t\t} else if (!strcmp(argv[i], \"-u\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":165,"col":16,"offset":5602},"end":{"line":165,"col":20,"offset":5606},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_18","lines":"\t\t\tif (!strcmp(argv[i], \"none\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":168,"col":12,"offset":5653},"end":{"line":168,"col":16,"offset":5657},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_19","lines":"\t\t\t\tufil = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":169,"col":22,"offset":5683},"end":{"line":169,"col":26,"offset":5687},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_20","lines":"\t\t} else if (!strcmp(argv[i], \"-f\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":171,"col":23,"offset":5737},"end":{"line":171,"col":27,"offset":5741},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_21","lines":"\t\t} else if (!strncmp(argv[i], \"-h\", 2)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":172,"col":13,"offset":5770},"end":{"line":172,"col":30,"offset":5787},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"f577b0c93e0959c0200dbbe1b911dadde47cbeed97eafb7b2e0633a5ec354582a0cd93c23101dfa6e953218a6f654b153e5db572d6fa7404e8e3b65949a4876b_0","lines":"\t\t\thwunit = atoi(argv[i] + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":172,"col":18,"offset":5775},"end":{"line":172,"col":22,"offset":5779},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_22","lines":"\t\t\thwunit = atoi(argv[i] + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":175,"col":14,"offset":5850},"end":{"line":175,"col":18,"offset":5854},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_23","lines":"\t\t} else if (argv[i][0] == '-') {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":176,"col":12,"offset":5882},"end":{"line":176,"col":29,"offset":5899},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"f577b0c93e0959c0200dbbe1b911dadde47cbeed97eafb7b2e0633a5ec354582a0cd93c23101dfa6e953218a6f654b153e5db572d6fa7404e8e3b65949a4876b_1","lines":"\t\t\tiunit = atoi(argv[i] + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":176,"col":17,"offset":5887},"end":{"line":176,"col":21,"offset":5891},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_24","lines":"\t\t\tiunit = atoi(argv[i] + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":181,"col":5,"offset":5992},"end":{"line":181,"col":58,"offset":6045},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_1","lines":"\t\t\t\tfprintf(stderr, _(\"setfont: too many input files\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":184,"col":23,"offset":6094},"end":{"line":184,"col":27,"offset":6098},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"89c900a0b71b8e3e22e90f366dd04853bac358789bb156d8e8a4ec8c8ffa1d2c126ac8d5c19dd91c8b98166cb9114053e32a2d958dae9d144de10d5e4bf0b9a7_25","lines":"\t\t\tifiles[ifilct++] = argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":189,"col":3,"offset":6139},"end":{"line":190,"col":58,"offset":6264},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_2","lines":"\t\tfprintf(stderr, _(\"setfont: cannot both restore from character ROM\"\n\t\t                  \" and from file. Font unchanged.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":264,"col":3,"offset":7788},"end":{"line":264,"col":58,"offset":7843},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_3","lines":"\t\tfprintf(stderr, _(\"Bad character height %d\\n\"), height);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":268,"col":3,"offset":7902},"end":{"line":268,"col":56,"offset":7955},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_4","lines":"\t\tfprintf(stderr, _(\"Bad character width %d\\n\"), width);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":276,"col":11,"offset":8084},"end":{"line":276,"col":26,"offset":8099},"extra":{"metavars":{"$FUN":{"start":{"line":276,"col":11,"offset":8084},"end":{"line":276,"col":18,"offset":8091},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2409134909ff14265533db2a9fd6f666d7e3659f141b1898039c5ac70e8568cc5b09652d16af4226e53f2055e39ea05eb68147c1e8de04946bf36359ac3c6707_0","lines":"\tbuf    = xmalloc(buflen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":277,"col":2,"offset":8102},"end":{"line":277,"col":24,"offset":8124},"extra":{"metavars":{"$DST":{"start":{"line":277,"col":9,"offset":8109},"end":{"line":277,"col":12,"offset":8112},"abstract_content":"buf","propagated_value":{"svalue_start":{"line":276,"col":11,"offset":8084},"svalue_end":{"line":276,"col":26,"offset":8099},"svalue_abstract_content":"xmalloc(buflen)"}},"$CHAR":{"start":{"line":277,"col":14,"offset":8114},"end":{"line":277,"col":15,"offset":8115},"abstract_content":"0"},"$LEN":{"start":{"line":277,"col":17,"offset":8117},"end":{"line":277,"col":23,"offset":8123},"abstract_content":"buflen"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4afb859fc1ddfd83cbe0ec5be98ccb08ee5e98109811ff47fa961fd91639addad2e2900f592d12c8aa88f6500ce3cd8e546757f9fc36dd4492d26e381e6e81e0_0","lines":"\tmemset(buf, 0, buflen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":280,"col":3,"offset":8161},"end":{"line":280,"col":66,"offset":8224},"extra":{"metavars":{"$FUN":{"start":{"line":280,"col":3,"offset":8161},"end":{"line":280,"col":9,"offset":8167},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fd6b1b9bb38baf7ea3f477ddaaf4917f2dfa798f948c15f6dcafaa104324caf0047b68d2dee1e61c5419d3c9e78a0232de655eb311ab89b6e9bc9469a74e6d2e_0","lines":"\t\tmemcpy(buf + (i * kcharsize), inbuf + (i * charsize), charsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":280,"col":3,"offset":8161},"end":{"line":280,"col":66,"offset":8224},"extra":{"metavars":{"$DST":{"start":{"line":280,"col":10,"offset":8168},"end":{"line":280,"col":30,"offset":8188},"abstract_content":"buf+i*kcharsize"},"$SRC":{"start":{"line":280,"col":33,"offset":8191},"end":{"line":280,"col":54,"offset":8212},"abstract_content":"inbuf+i*charsize"},"$LEN":{"start":{"line":280,"col":57,"offset":8215},"end":{"line":280,"col":65,"offset":8223},"abstract_content":"charsize"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2687620407afd6f820d49b15f4e07bac4779b1139e29434573911f85266da6cfc8fa2ae25ec49671ebbba960ad86d9df74fc58b699391d5540f19552eeb95017_0","lines":"\t\tmemcpy(buf + (i * kcharsize), inbuf + (i * charsize), charsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":292,"col":4,"offset":8538},"end":{"line":294,"col":21,"offset":8626},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_5","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"%s: font position 32 is nonblank\\n\"),\n\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":295,"col":12,"offset":8639},"end":{"line":295,"col":22,"offset":8649},"extra":{"metavars":{"$VAR":{"start":{"line":295,"col":12,"offset":8639},"end":{"line":295,"col":22,"offset":8649},"abstract_content":"erase_mode"},"$VAL2":{"start":{"line":296,"col":10,"offset":8662},"end":{"line":296,"col":11,"offset":8663},"abstract_content":"3"},"$VAL1":{"start":{"line":303,"col":10,"offset":8871},"end":{"line":303,"col":11,"offset":8872},"abstract_content":"1"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8b8bf432566b2ff0255e27454f753703a0fcf3870184571ae94d1ede0888f1807e9a95af56eb50185672863127fc8785dc026cef03d950b6b24da3874d9118e8_0","lines":"\t\t\tswitch (erase_mode) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":295,"col":12,"offset":8639},"end":{"line":295,"col":22,"offset":8649},"extra":{"metavars":{"$VAR":{"start":{"line":295,"col":12,"offset":8639},"end":{"line":295,"col":22,"offset":8649},"abstract_content":"erase_mode"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a012aa5e3948e113f66c87e33a61f0203c603a72f4aa3ea05a507cc6674d85d127e89602a1e883f1fbad9b25b22de952970a393be1a527c48d043a9c51822833_0","lines":"\t\t\tswitch (erase_mode) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":301,"col":6,"offset":8802},"end":{"line":301,"col":52,"offset":8848},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_6","lines":"\t\t\t\t\tfprintf(stderr, _(\"%s: wiped it\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":304,"col":6,"offset":8879},"end":{"line":306,"col":23,"offset":8969},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_7","lines":"\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t        _(\"%s: background will look funny\\n\"),\n\t\t\t\t\t        progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":315,"col":4,"offset":9071},"end":{"line":316,"col":45,"offset":9170},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_8","lines":"\t\t\tprintf(_(\"Loading %d-char %dx%d font from file %s\\n\"),\n\t\t\t       fontsize, width, height, filename);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":318,"col":4,"offset":9204},"end":{"line":319,"col":35,"offset":9280},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_9","lines":"\t\t\tprintf(_(\"Loading %d-char %dx%d font\\n\"),\n\t\t\t       fontsize, width, height);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":321,"col":4,"offset":9306},"end":{"line":322,"col":53,"offset":9418},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_10","lines":"\t\t\tprintf(_(\"Loading %d-char %dx%d (%d) font from file %s\\n\"),\n\t\t\t       fontsize, width, height, hwunit, filename);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":324,"col":4,"offset":9430},"end":{"line":325,"col":43,"offset":9519},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_11","lines":"\t\t\tprintf(_(\"Loading %d-char %dx%d (%d) font\\n\"),\n\t\t\t       fontsize, width, height, hwunit);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":351,"col":7,"offset":9970},"end":{"line":351,"col":46,"offset":10009},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":7,"offset":9970},"end":{"line":351,"col":14,"offset":9977},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2409134909ff14265533db2a9fd6f666d7e3659f141b1898039c5ac70e8568cc5b09652d16af4226e53f2055e39ea05eb68147c1e8de04946bf36359ac3c6707_1","lines":"\tup = xmalloc(maxct * sizeof(struct unipair));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":355,"col":4,"offset":10089},"end":{"line":355,"col":27,"offset":10112},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"char %03x:\""},"$FMT":{"start":{"line":355,"col":11,"offset":10096},"end":{"line":355,"col":23,"offset":10108},"abstract_content":"\"char %03x:\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c417aa0e24a56af4eb8bac5c89ab6e01287c529964565173ceaa0487ee9e70a4216053a638f8fb1c49c469bf8c7883401fe966969c0834097f4750f203fe23a_0","lines":"\t\t\tprintf(\"char %03x:\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":363,"col":6,"offset":10255},"end":{"line":363,"col":29,"offset":10278},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\" %04x\""},"$FMT":{"start":{"line":363,"col":13,"offset":10262},"end":{"line":363,"col":20,"offset":10269},"abstract_content":"\" %04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"27f4d1d9170e8903761ffbdc1e936952bb12a71cf9417d0afdd6e15da9e227a5912e77f4fcdc48542e74ba053950024d07bc68708fd60a7a36131a6e832f3da1_0","lines":"\t\t\t\t\tprintf(\" %04x\", us->uc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":367,"col":6,"offset":10348},"end":{"line":367,"col":29,"offset":10371},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\" %04x\""},"$FMT":{"start":{"line":367,"col":13,"offset":10355},"end":{"line":367,"col":20,"offset":10362},"abstract_content":"\" %04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"27f4d1d9170e8903761ffbdc1e936952bb12a71cf9417d0afdd6e15da9e227a5912e77f4fcdc48542e74ba053950024d07bc68708fd60a7a36131a6e832f3da1_1","lines":"\t\t\t\t\tprintf(\" %04x\", us->uc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":381,"col":3,"offset":10574},"end":{"line":381,"col":31,"offset":10602},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_12","lines":"\t\tfprintf(stderr, u, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":386,"col":3,"offset":10645},"end":{"line":386,"col":50,"offset":10692},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_13","lines":"\t\tprintf(_(\"Loading Unicode mapping table...\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":422,"col":4,"offset":11558},"end":{"line":422,"col":58,"offset":11612},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_14","lines":"\t\t\tfprintf(stderr, _(\"Cannot open font file %s\\n\"), ifil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":433,"col":4,"offset":11894},"end":{"line":435,"col":24,"offset":12026},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_15","lines":"\t\t\tfprintf(stderr, _(\"When loading several fonts, all \"\n\t\t\t                  \"must be psf fonts - %s isn't\\n\"),\n\t\t\t        fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":443,"col":4,"offset":12230},"end":{"line":444,"col":48,"offset":12329},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_16","lines":"\t\t\tprintf(_(\"Read %d-char %dx%d font from file %s\\n\"),\n\t\t\t       fontsize, width, height, fp.pathname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":449,"col":4,"offset":12414},"end":{"line":450,"col":53,"offset":12519},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_17","lines":"\t\t\tfprintf(stderr, _(\"When loading several fonts, all \"\n\t\t\t                  \"must have the same height\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":456,"col":4,"offset":12623},"end":{"line":457,"col":52,"offset":12727},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_18","lines":"\t\t\tfprintf(stderr, _(\"When loading several fonts, all \"\n\t\t\t                  \"must have the same width\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":463,"col":16,"offset":12828},"end":{"line":463,"col":51,"offset":12863},"extra":{"metavars":{"$FUN":{"start":{"line":463,"col":16,"offset":12828},"end":{"line":463,"col":24,"offset":12836},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"699ac874a681a9e62b0faf577b31d53c8693c742a089ee3cede3930df6d7a81b98332b4d60a5b62f1e50768ed7c974e6331b6424f61cd36d6372106ef1906064_0","lines":"\t\tbigfontbuf = xrealloc(bigfontbuf, bigfontbuflth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":464,"col":3,"offset":12867},"end":{"line":465,"col":30,"offset":12944},"extra":{"metavars":{"$FUN":{"start":{"line":464,"col":3,"offset":12867},"end":{"line":464,"col":9,"offset":12873},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fd6b1b9bb38baf7ea3f477ddaaf4917f2dfa798f948c15f6dcafaa104324caf0047b68d2dee1e61c5419d3c9e78a0232de655eb311ab89b6e9bc9469a74e6d2e_1","lines":"\t\tmemcpy(bigfontbuf + bigfontbuflth - fontbuflth,\n\t\t       fontbuf, fontbuflth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":464,"col":3,"offset":12867},"end":{"line":465,"col":30,"offset":12944},"extra":{"metavars":{"$DST":{"start":{"line":464,"col":10,"offset":12874},"end":{"line":464,"col":49,"offset":12913},"abstract_content":"bigfontbuf+bigfontbuflth-fontbuflth"},"$SRC":{"start":{"line":465,"col":10,"offset":12924},"end":{"line":465,"col":17,"offset":12931},"abstract_content":"fontbuf","propagated_value":{"svalue_start":{"line":426,"col":21,"offset":11660},"svalue_end":{"line":426,"col":25,"offset":11664},"svalue_abstract_content":"NULL"}},"$LEN":{"start":{"line":465,"col":19,"offset":12933},"end":{"line":465,"col":29,"offset":12943},"abstract_content":"fontbuflth","propagated_value":{"svalue_start":{"line":427,"col":27,"offset":11692},"svalue_end":{"line":427,"col":28,"offset":11693},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"796212ffae944771b0a19f3e652a31f055f5fa536147f4824681b5d57be3e8c0a6c8909ae09342e68697d3a46c873d056186c8c212935d0f989049eaeeac5180_0","lines":"\t\tmemcpy(bigfontbuf + bigfontbuflth - fontbuflth,\n\t\t       fontbuf, fontbuflth);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":469,"col":2,"offset":13041},"end":{"line":469,"col":19,"offset":13058},"extra":{"metavars":{"$PTR":{"start":{"line":469,"col":7,"offset":13046},"end":{"line":469,"col":17,"offset":13056},"abstract_content":"bigfontbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"010dd6fc37ff4267383516d6b97c8fa0cc1a94e3d9027d8453de91e305082c8924fcb5476f6ba1e9310b4963742d3a832a970491321dedebc71ded32adace56a_0","lines":"\tfree(bigfontbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":493,"col":4,"offset":13574},"end":{"line":499,"col":5,"offset":13830},"extra":{"metavars":{"$EXPR1":{"start":{"line":493,"col":17,"offset":13587},"end":{"line":493,"col":21,"offset":13591},"abstract_content":"ifil","propagated_value":{"svalue_start":{"line":493,"col":24,"offset":13594},"svalue_end":{"line":493,"col":33,"offset":13603},"svalue_abstract_content":"\"default\""}},"$EXPR2":{"start":{"line":493,"col":24,"offset":13594},"end":{"line":493,"col":33,"offset":13603},"abstract_content":"\"default\""}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0f79ec3892987886d5f98c7d507eb58b0078e9a181c0f1294b3580c0b98ba4216f85c18eb06011cb48cbccbc52e902239249d06f27713ff2054c62f5ce77571_0","lines":"\t\t\tif (findfont(ifil = \"default\", &fp) &&\n\t\t\t    findfont(ifil = \"default8x16\", &fp) &&\n\t\t\t    findfont(ifil = \"default8x14\", &fp) &&\n\t\t\t    findfont(ifil = \"default8x8\", &fp)) {\n\t\t\t\tfprintf(stderr, _(\"Cannot find default font\\n\"));\n\t\t\t\texit(EX_NOINPUT);\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":497,"col":5,"offset":13754},"end":{"line":497,"col":53,"offset":13802},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_19","lines":"\t\t\t\tfprintf(stderr, _(\"Cannot find default font\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":501,"col":4,"offset":13845},"end":{"line":501,"col":42,"offset":13883},"extra":{"metavars":{"$FUN":{"start":{"line":501,"col":4,"offset":13845},"end":{"line":501,"col":11,"offset":13852},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"28bce7880650fd98660bae2b4e9a22fc7d8ffdc4945cb29f548ce58de821a6db48ba430a94db81d2b9f04cdd40efc3d6fa1aaa302bb81f320f76d6e7c18fe521_0","lines":"\t\t\tsprintf(defname, \"default8x%d\", iunit);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":502,"col":4,"offset":13888},"end":{"line":506,"col":5,"offset":14048},"extra":{"metavars":{"$EXPR1":{"start":{"line":502,"col":17,"offset":13901},"end":{"line":502,"col":21,"offset":13905},"abstract_content":"ifil","propagated_value":{"svalue_start":{"line":502,"col":24,"offset":13908},"svalue_end":{"line":502,"col":31,"offset":13915},"svalue_abstract_content":"defname"}},"$EXPR2":{"start":{"line":502,"col":24,"offset":13908},"end":{"line":502,"col":31,"offset":13915},"abstract_content":"defname"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"923e3ef80dd7c5287eb7a7259212a56716d0e3dd91d0916ba6751739ec22550f5a482b21308e0bce75e3c77239bbe44546e2acc794af1bced146ed8a8b6b53f2_0","lines":"\t\t\tif (findfont(ifil = defname, &fp) &&\n\t\t\t    findfont(ifil = \"default\", &fp)) {\n\t\t\t\tfprintf(stderr, _(\"Cannot find %s font\\n\"), ifil);\n\t\t\t\texit(EX_NOINPUT);\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":504,"col":5,"offset":13971},"end":{"line":504,"col":54,"offset":14020},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_20","lines":"\t\t\t\tfprintf(stderr, _(\"Cannot find %s font\\n\"), ifil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":510,"col":4,"offset":14095},"end":{"line":510,"col":58,"offset":14149},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_21","lines":"\t\t\tfprintf(stderr, _(\"Cannot open font file %s\\n\"), ifil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":516,"col":3,"offset":14200},"end":{"line":516,"col":44,"offset":14241},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_22","lines":"\t\tprintf(_(\"Reading font file %s\\n\"), ifil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":556,"col":6,"offset":15433},"end":{"line":557,"col":54,"offset":15502},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_23","lines":"\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t        _(\"No final newline in combine file\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":562,"col":6,"offset":15583},"end":{"line":563,"col":47,"offset":15645},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_24","lines":"\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t        _(\"Too many files to combine\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":587,"col":3,"offset":16313},"end":{"line":588,"col":48,"offset":16412},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_25","lines":"\t\tfprintf(stderr, _(\"Hmm - a font from restorefont? \"\n\t\t                  \"Using the first half.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":604,"col":4,"offset":16766},"end":{"line":604,"col":47,"offset":16809},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_26","lines":"\t\t\tfprintf(stderr, _(\"Bad input file size\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":625,"col":3,"offset":17188},"end":{"line":629,"col":45,"offset":17391},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_27","lines":"\t\tfprintf(stderr,\n\t\t        _(\"This file contains 3 fonts: 8x8, 8x14 and 8x16.\"\n\t\t          \" Please indicate\\n\"\n\t\t          \"using an option -8 or -14 or -16 \"\n\t\t          \"which one you want loaded.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":643,"col":4,"offset":17560},"end":{"line":645,"col":18,"offset":17691},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_28","lines":"\t\t\tfprintf(stderr, _(\"You asked for font size %d, \"\n\t\t\t                  \"but only 8, 14, 16 are possible here.\\n\"),\n\t\t\t        iunit);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":685,"col":4,"offset":18744},"end":{"line":685,"col":27,"offset":18767},"extra":{"metavars":{"$EXPR1":{"start":{"line":685,"col":13,"offset":18753},"end":{"line":685,"col":20,"offset":18760},"abstract_content":"psftype","propagated_value":{"svalue_start":{"line":678,"col":17,"offset":18595},"svalue_end":{"line":678,"col":18,"offset":18596},"svalue_abstract_content":"1"}},"$EXPR2":{"start":{"line":685,"col":24,"offset":18764},"end":{"line":685,"col":25,"offset":18765},"abstract_content":"2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fe39cf119122861cc667ec333f04056c2e9624a44e03957016b4d2be991913f101fc5dddcbce4ae44bc156098ffc6f25b0a96d38ecc8275f5ebae36915865445_0","lines":"\t\t\t*utf8 = (psftype == 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":689,"col":3,"offset":18794},"end":{"line":689,"col":48,"offset":18839},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_29","lines":"\t\tfprintf(stderr, _(\"Found nothing to save\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":693,"col":5,"offset":18947},"end":{"line":693,"col":49,"offset":18991},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_30","lines":"\t\t\t\tfprintf(stderr, _(\"Cannot write font file\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":698,"col":4,"offset":19042},"end":{"line":699,"col":35,"offset":19127},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"08df92da0d755391bd5baeb8bef4e35fb85d4d2a227855ab6c0155298793a65df4dbb784b8278939d342292632bbe06680988a5de5441f7ab00934649153cfb1_31","lines":"\t\t\tprintf(_(\"Saved %d-char %dx%d font file on %s\\n\"),\n\t\t\t       ct, width, height, ofil);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":712,"col":13,"offset":19238},"end":{"line":712,"col":29,"offset":19254},"extra":{"metavars":{"$FUN":{"start":{"line":712,"col":13,"offset":19238},"end":{"line":712,"col":18,"offset":19243},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b7765430804bf92daf594f39fb3e8184c0d7ffb50c2d25e907a255fda41be8d959331993e390c12bf4c4679aee5b66247dea00748619069e90208bcf78e1f131_0","lines":"\tif ((fpo = fopen(ofil, \"w\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","start":{"line":727,"col":13,"offset":19481},"end":{"line":727,"col":29,"offset":19497},"extra":{"metavars":{"$FUN":{"start":{"line":727,"col":13,"offset":19481},"end":{"line":727,"col":18,"offset":19486},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b7765430804bf92daf594f39fb3e8184c0d7ffb50c2d25e907a255fda41be8d959331993e390c12bf4c4679aee5b66247dea00748619069e90208bcf78e1f131_1","lines":"\tif ((fpo = fopen(Ofil, \"w\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":25,"col":2,"offset":501},"end":{"line":28,"col":62,"offset":731},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a18c4120c7bcff2a956ed84da6687e9fe105e3935f672d0bad29993e1932604a078f1ed19aa5990f36ffe7c99da845e5fae83835a5af19b9b960fecbb64646fe_0","lines":"\tfprintf(stderr, _(\n\t                    \"usage: setkeycode scancode keycode ...\\n\"\n\t                    \" (where scancode is either xx or e0xx, given in hexadecimal,\\n\"\n\t                    \"  and keycode is given in decimal)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":38,"col":15,"offset":847},"end":{"line":38,"col":19,"offset":851},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"11bc58b50946c48c6256fd996c4cad683339af78fe2417d818033e890e20cfe8f1331dc31bba6d1900d21661701c7049316ab5149293565d74486e2bb260f38f_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":40,"col":2,"offset":859},"end":{"line":40,"col":23,"offset":880},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":2,"offset":859},"end":{"line":40,"col":11,"offset":868},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"23c20a5029b0998160b6d89b405e68171e93a564654b0ceb3ec99220229e913e2b9564dc96ff493e8505b5784d2ef3b47ace44fa626b5bf00bbaf684fe7129d6_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":44,"col":27,"offset":978},"end":{"line":44,"col":31,"offset":982},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"11bc58b50946c48c6256fd996c4cad683339af78fe2417d818033e890e20cfe8f1331dc31bba6d1900d21661701c7049316ab5149293565d74486e2bb260f38f_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":54,"col":16,"offset":1250},"end":{"line":54,"col":29,"offset":1263},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"875a48d3ec24499a957952dea9729b1d515343c693f0fa12380239b5e8e9530beb43a3703a9749e0b79187e79f00d65036644026f383daee8c28cca88575da88_0","lines":"\t\ta.keycode  = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":54,"col":21,"offset":1255},"end":{"line":54,"col":25,"offset":1259},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"11bc58b50946c48c6256fd996c4cad683339af78fe2417d818033e890e20cfe8f1331dc31bba6d1900d21661701c7049316ab5149293565d74486e2bb260f38f_2","lines":"\t\ta.keycode  = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":55,"col":23,"offset":1287},"end":{"line":55,"col":27,"offset":1291},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"11bc58b50946c48c6256fd996c4cad683339af78fe2417d818033e890e20cfe8f1331dc31bba6d1900d21661701c7049316ab5149293565d74486e2bb260f38f_3","lines":"\t\ta.scancode = strtol(argv[1], &ep, 16);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","start":{"line":78,"col":3,"offset":2029},"end":{"line":78,"col":7,"offset":2033},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"11bc58b50946c48c6256fd996c4cad683339af78fe2417d818033e890e20cfe8f1331dc31bba6d1900d21661701c7049316ab5149293565d74486e2bb260f38f_4","lines":"\t\targv += 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":24,"col":2,"offset":535},"end":{"line":42,"col":11,"offset":1489},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_0","lines":"\tfprintf(stderr, _(\n\t                    \"Usage:\\n\"\n\t                    \"\tsetleds [-v] [-L] [-D] [-F] [[+|-][ num | caps | scroll %s]]\\n\"\n\t                    \"Thus,\\n\"\n\t                    \"\tsetleds +caps -num\\n\"\n\t                    \"will set CapsLock, clear NumLock and leave ScrollLock unchanged.\\n\"\n\t                    \"The settings before and after the change (if any) are reported\\n\"\n\t                    \"when the -v option is given or when no change is requested.\\n\"\n\t                    \"Normally, setleds influences the vt flag settings\\n\"\n\t                    \"(and these are usually reflected in the leds).\\n\"\n\t                    \"With -L, setleds only sets the leds, and leaves the flags alone.\\n\"\n\t                    \"With -D, setleds sets both the flags and the default flags, so\\n\"\n\t                    \"that a subsequent reset will not change the flags.\\n\"),\n#ifdef __sparc__\n\t        \"| compose \"\n#else\n\t        \"\"\n#endif\n\t        );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":161,"col":7,"offset":4084},"end":{"line":161,"col":19,"offset":4096},"extra":{"metavars":{"$NARROW":{"start":{"line":161,"col":7,"offset":4084},"end":{"line":161,"col":15,"offset":4092},"abstract_content":"osunleds"},"$LARGE":{"start":{"line":161,"col":18,"offset":4095},"end":{"line":161,"col":19,"offset":4096},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1629c0242dbf31ccdf7cdfa9ad2a8ea9ed7c015636aaf64c59dd19f57055830bad66f4b97d5e22b469d01d44de93fbb16182e4286577deb8905dbc11177032b9_0","lines":"\tchar osunleds = 0, nsunleds, nsunval, nsundef;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":165,"col":15,"offset":4169},"end":{"line":165,"col":19,"offset":4173},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":167,"col":2,"offset":4181},"end":{"line":167,"col":23,"offset":4202},"extra":{"metavars":{"$FUN":{"start":{"line":167,"col":2,"offset":4181},"end":{"line":167,"col":11,"offset":4190},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c4549b297d7ffab2648e4c224c39e88833509198aa45a9ebc5c6852937b2705a2400d0182c0e492f95ea56b6a2d7f7570d758ced32fc2d0349229e3b47bc65f7_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":171,"col":34,"offset":4307},"end":{"line":171,"col":38,"offset":4311},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_1","lines":"\tif (argc == 2 && (!strcmp(\"-V\", argv[1]) || !strcmp(\"--version\", argv[1])))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":171,"col":67,"offset":4340},"end":{"line":171,"col":71,"offset":4344},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_2","lines":"\tif (argc == 2 && (!strcmp(\"-V\", argv[1]) || !strcmp(\"--version\", argv[1])))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":175,"col":18,"offset":4414},"end":{"line":175,"col":44,"offset":4440},"extra":{"metavars":{"$FUN":{"start":{"line":175,"col":18,"offset":4414},"end":{"line":175,"col":22,"offset":4418},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ca0dba02064c307bba0a7078544d2862941c60c998eb2e1d342b644a1c060259628d9ef1699d2e2b9f01295bf49bdf522587a30aac346e83851738b1e331e71_0","lines":"\tif ((sunkbdfd = open(\"/dev/kbd\", O_RDONLY)) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":187,"col":21,"offset":4652},"end":{"line":187,"col":25,"offset":4656},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_3","lines":"\t\tif (!strcmp(\"-L\", argv[1]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":189,"col":26,"offset":4700},"end":{"line":189,"col":30,"offset":4704},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_4","lines":"\t\telse if (!strcmp(\"-D\", argv[1]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":191,"col":26,"offset":4748},"end":{"line":191,"col":30,"offset":4752},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_5","lines":"\t\telse if (!strcmp(\"-F\", argv[1]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":193,"col":26,"offset":4796},"end":{"line":193,"col":30,"offset":4800},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_6","lines":"\t\telse if (!strcmp(\"-v\", argv[1]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":198,"col":3,"offset":4851},"end":{"line":198,"col":7,"offset":4855},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_7","lines":"\t\targv++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":201,"col":2,"offset":4864},"end":{"line":201,"col":44,"offset":4906},"extra":{"metavars":{"$NARROW":{"start":{"line":201,"col":2,"offset":4864},"end":{"line":201,"col":11,"offset":4873},"abstract_content":"odefflags"},"$LARGE":{"start":{"line":201,"col":38,"offset":4900},"end":{"line":201,"col":39,"offset":4901},"abstract_content":"4"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"06e3ae08269264cceba6bfea624ca35ded6109ed1048ea95cd3eba7723ceed4be5ddeeb6c00a390e0efdcfd8218b3ce1a76ba8b639eaa6acd679687286d8f255_0","lines":"\todefflags = ndefflags = ((oflags >> 4) & 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":201,"col":14,"offset":4876},"end":{"line":201,"col":44,"offset":4906},"extra":{"metavars":{"$NARROW":{"start":{"line":201,"col":14,"offset":4876},"end":{"line":201,"col":23,"offset":4885},"abstract_content":"ndefflags","propagated_value":{"svalue_start":{"line":201,"col":28,"offset":4890},"svalue_end":{"line":201,"col":44,"offset":4906},"svalue_abstract_content":"oflags>>4&7"}},"$LARGE":{"start":{"line":201,"col":38,"offset":4900},"end":{"line":201,"col":39,"offset":4901},"abstract_content":"4"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5d74440b3b499db5f99584bf3744a48ad79ea9cdf759922e3c48a3cefe6fedffa194ce38b4068d0a394daabf606c46649406b362f7a4bc2babe14502a64d29a9_0","lines":"\todefflags = ndefflags = ((oflags >> 4) & 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":202,"col":2,"offset":4910},"end":{"line":202,"col":31,"offset":4939},"extra":{"metavars":{"$NARROW":{"start":{"line":202,"col":2,"offset":4910},"end":{"line":202,"col":8,"offset":4916},"abstract_content":"oflags"},"$LARGE":{"start":{"line":202,"col":30,"offset":4938},"end":{"line":202,"col":31,"offset":4939},"abstract_content":"7"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d612cc29f767651185b00c98a1bb6ecfa3939d0a956ec4e95add71247abfe946d29e0d912113f716fc551c28591d82c69278ed43284a2d660cc2b5cc6c780a9b_0","lines":"\toflags = nflags = (oflags & 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":202,"col":11,"offset":4919},"end":{"line":202,"col":31,"offset":4939},"extra":{"metavars":{"$NARROW":{"start":{"line":202,"col":11,"offset":4919},"end":{"line":202,"col":17,"offset":4925},"abstract_content":"nflags","propagated_value":{"svalue_start":{"line":202,"col":21,"offset":4929},"svalue_end":{"line":202,"col":31,"offset":4939},"svalue_abstract_content":"oflags&7"}},"$LARGE":{"start":{"line":202,"col":30,"offset":4938},"end":{"line":202,"col":31,"offset":4939},"abstract_content":"7"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1b01d9711bca709a1c9de2150b269f4ffc5c5c19a2aea39ed259e7fe3509c0011560c0e7904a2e2f586f908d559a3587180e7537e168d27b3fee1b4b89f4952c_0","lines":"\toflags = nflags = (oflags & 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":206,"col":4,"offset":4978},"end":{"line":206,"col":16,"offset":4990},"extra":{"metavars":{"$NARROW":{"start":{"line":206,"col":4,"offset":4978},"end":{"line":206,"col":9,"offset":4983},"abstract_content":"nleds"},"$LARGE":{"start":{"line":206,"col":12,"offset":4986},"end":{"line":206,"col":16,"offset":4990},"abstract_content":"0xff"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c986d889f04656f6bba0b215dfccf4021b7701ef099e00dbba08baa93e16b910daffcb4646f32990023bf466647c6919a1abf66cbb5961602e4d1e4ba4b03c5a_0","lines":"\t\t\tnleds = 0xff;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":216,"col":4,"offset":5220},"end":{"line":216,"col":41,"offset":5257},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_1","lines":"\t\t\tprintf(_(\"Current default flags:  \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":220,"col":4,"offset":5302},"end":{"line":220,"col":41,"offset":5339},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_2","lines":"\t\t\tprintf(_(\"Current flags:          \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":224,"col":4,"offset":5386},"end":{"line":224,"col":41,"offset":5423},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_3","lines":"\t\t\tprintf(_(\"Current leds:           \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":235,"col":2,"offset":5554},"end":{"line":235,"col":18,"offset":5570},"extra":{"metavars":{"$NARROW":{"start":{"line":235,"col":2,"offset":5554},"end":{"line":235,"col":6,"offset":5558},"abstract_content":"nval"},"$LARGE":{"start":{"line":235,"col":17,"offset":5569},"end":{"line":235,"col":18,"offset":5570},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d3479e0ad054b6909c625a58e3a2309937034e76bb9efbabc77d0acdb15fb9dc735d4980f193f88473341ca5e257eec1dc7481d0f5a32d88bf3bc838b13f204f_0","lines":"\tnval         = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":236,"col":2,"offset":5573},"end":{"line":236,"col":18,"offset":5589},"extra":{"metavars":{"$NARROW":{"start":{"line":236,"col":2,"offset":5573},"end":{"line":236,"col":6,"offset":5577},"abstract_content":"ndef"},"$LARGE":{"start":{"line":236,"col":17,"offset":5588},"end":{"line":236,"col":18,"offset":5589},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb5c57763c5db3c921ce5b999a65e3d705ddcea0c392224380864317c921a5ce1da571e7e9c7ea544c8775ffac1cf5deda1c3cad354c619152c288f74675cbe5_0","lines":"\tndef         = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":237,"col":2,"offset":5592},"end":{"line":237,"col":18,"offset":5608},"extra":{"metavars":{"$NARROW":{"start":{"line":237,"col":2,"offset":5592},"end":{"line":237,"col":9,"offset":5599},"abstract_content":"nsunval"},"$LARGE":{"start":{"line":237,"col":17,"offset":5607},"end":{"line":237,"col":18,"offset":5608},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9735194d79ab13310e9b5ab3c618cc979a48b756b94a278403b5d40d53760f16b33cfe9b6b069a36a542c4c44015dfc50fe2ec123f91f4ccd29fe5dab6c03c85_0","lines":"\tnsunval      = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":238,"col":2,"offset":5611},"end":{"line":238,"col":18,"offset":5627},"extra":{"metavars":{"$NARROW":{"start":{"line":238,"col":2,"offset":5611},"end":{"line":238,"col":9,"offset":5618},"abstract_content":"nsundef"},"$LARGE":{"start":{"line":238,"col":17,"offset":5626},"end":{"line":238,"col":18,"offset":5627},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ed70a1704c2cd01ae44bb98defbc72ac3cfa6b2ddfe8cc7ffe8aa1e93a8a1b9dcd5ba04811d1c1855fa7f48cbcd35ddbe9b9bd5874d0b110c551747053384c1_0","lines":"\tnsundef      = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":241,"col":13,"offset":5660},"end":{"line":241,"col":17,"offset":5664},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fac5476a8d07a19cfc4dbab7c2351b752b9144e6336874fd6381ad652c6509737040e08315296d941834f1c7e3b81fd69c20b85832d472c156f22209afbf7a46_8","lines":"\t\tap   = *++argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":242,"col":3,"offset":5668},"end":{"line":242,"col":11,"offset":5676},"extra":{"metavars":{"$NARROW":{"start":{"line":242,"col":3,"offset":5668},"end":{"line":242,"col":7,"offset":5672},"abstract_content":"sign"},"$LARGE":{"start":{"line":242,"col":10,"offset":5675},"end":{"line":242,"col":11,"offset":5676},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7cb22787dc4cbeb19a61275ed8f5c01e1d3507b20cc630c9221491faec28849ef53aaf3072e8f3eeeb3da3986dfbfb2c4623e23bbfd55347197c626ce985ebb5_0","lines":"\t\tsign = 1; /* by default: set */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":246,"col":4,"offset":5755},"end":{"line":246,"col":12,"offset":5763},"extra":{"metavars":{"$NARROW":{"start":{"line":246,"col":4,"offset":5755},"end":{"line":246,"col":8,"offset":5759},"abstract_content":"sign"},"$LARGE":{"start":{"line":246,"col":11,"offset":5762},"end":{"line":246,"col":12,"offset":5763},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"444a1915585f870ce1b55121c4cd66b8df02d44db9c70f4f1bbede8fe84b39fc63616eb89d234b27ad272673525768912d15bac7cb0f1a56618a6cfb5cf11057_0","lines":"\t\t\tsign = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":260,"col":3,"offset":6040},"end":{"line":260,"col":60,"offset":6097},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_4","lines":"\t\tfprintf(stderr, _(\"unrecognized argument: _%s_\\n\\n\"), ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":269,"col":4,"offset":6200},"end":{"line":269,"col":39,"offset":6235},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_5","lines":"\t\t\tprintf(_(\"Old default flags:    \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":271,"col":4,"offset":6262},"end":{"line":271,"col":39,"offset":6297},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_6","lines":"\t\t\tprintf(_(\"New default flags:    \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":278,"col":4,"offset":6399},"end":{"line":278,"col":39,"offset":6434},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_7","lines":"\t\t\tprintf(_(\"Old flags:            \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":280,"col":4,"offset":6463},"end":{"line":280,"col":39,"offset":6498},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_8","lines":"\t\t\tprintf(_(\"New flags:            \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":285,"col":3,"offset":6554},"end":{"line":287,"col":4,"offset":6663},"extra":{"metavars":{"$EXPR1":{"start":{"line":285,"col":27,"offset":6578},"end":{"line":285,"col":41,"offset":6592},"abstract_content":"ndefflags<<4"},"$EXPR2":{"start":{"line":285,"col":45,"offset":6596},"end":{"line":285,"col":51,"offset":6602},"abstract_content":"nflags"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9bbccfeb33a478352b9a61e6061ced58bfa7f90efc3b80bd28a40abbf246ce63eb2cf9de4060e1c6906b3a41510cfb0753ecba0bfb1981451d6115dc2495e79b_0","lines":"\t\tif (ioctl(0, KDSKBLED, (ndefflags << 4) | nflags)) {\n\t\t\tkbd_error(EXIT_FAILURE, errno, \"ioctl KDSKBLED\");\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":293,"col":5,"offset":6772},"end":{"line":293,"col":40,"offset":6807},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_9","lines":"\t\t\t\tprintf(_(\"Old leds:             \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":295,"col":5,"offset":6838},"end":{"line":295,"col":40,"offset":6873},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_10","lines":"\t\t\t\tprintf(_(\"New leds:             \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":302,"col":5,"offset":6999},"end":{"line":302,"col":40,"offset":7034},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_11","lines":"\t\t\t\tprintf(_(\"Old leds:             \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":304,"col":5,"offset":7059},"end":{"line":304,"col":40,"offset":7094},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9b6e3fefa86d4a0a56d79c857da013d2eedc367f7c63caf3801e66a32f5ee170b1a3cf8ff4f843d2caf8ceb7fcd868c29e7e6501be693d329d2c0e2c3b4df33b_12","lines":"\t\t\t\tprintf(_(\"New leds:             \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setlogcons.c","start":{"line":27,"col":2,"offset":420},"end":{"line":27,"col":23,"offset":441},"extra":{"metavars":{"$FUN":{"start":{"line":27,"col":2,"offset":420},"end":{"line":27,"col":11,"offset":429},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"84388dc2172fa9ed8e757ce2736ea5e7d04ac7a7d0b266dac977806eedf20cb50d1a6f4f1c37f5b510218b6bdd44eb7f699980a3d3c852575cbd79ad9d8beb4d_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setlogcons.c","start":{"line":32,"col":10,"offset":538},"end":{"line":32,"col":23,"offset":551},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"7c62eaab0e99f6ec9df803397584cb75196768290df5cec88ec3af9631c07f7b9fc490b124eb08324f95ac4f11d0f794197f42afaade8efba2474daccbdbf113_0","lines":"\t\tcons = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setlogcons.c","start":{"line":32,"col":15,"offset":543},"end":{"line":32,"col":19,"offset":547},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8624378e93920c9247fcaca6a5daed575d194bf1e4405d2eb887269b450d79d01b6f5c3ff1bba6d7f8a7e5f648889bb81524248754f9dd249c07538752550ccc_0","lines":"\t\tcons = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":23,"col":2,"offset":439},"end":{"line":29,"col":81,"offset":846},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c17578469d52262887c1df003ea4ec0ad2cdb987b62549dfb71768ee93256b0bc71a1c6776e445b8fb183118623cb439962b0b0fdbea235d48499c13db5f03d5_0","lines":"\tfprintf(stderr, _(\n\t                    \"Usage:\\n\"\n\t                    \"\tsetmetamode [ metabit | meta | bit | escprefix | esc | prefix ]\\n\"\n\t                    \"Each vt has his own copy of this bit. Use\\n\"\n\t                    \"\tsetmetamode [arg] < /dev/ttyn\\n\"\n\t                    \"to change the settings of another vt.\\n\"\n\t                    \"The setting before and after the change are reported.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":70,"col":15,"offset":1494},"end":{"line":70,"col":19,"offset":1498},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4ab6dc48694e63f42058e3e50ee5dfb32f2c689ac2dd0a1b0498fd8e8385ce6792ee08af74b9679b4e036517edc4ef1ea27d44095044babb2c2a1454f43a615e_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":72,"col":2,"offset":1506},"end":{"line":72,"col":23,"offset":1527},"extra":{"metavars":{"$FUN":{"start":{"line":72,"col":2,"offset":1506},"end":{"line":72,"col":11,"offset":1515},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"015ebcd9e6824cc38bb254b87db8974179d6e632a1bf994dc6facbfb7e7813c936e78f46d0cbff0ebe2a88b0993bcfdfc00fa8558f036bd3257c47aa665e146e_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":76,"col":27,"offset":1625},"end":{"line":76,"col":31,"offset":1629},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4ab6dc48694e63f42058e3e50ee5dfb32f2c689ac2dd0a1b0498fd8e8385ce6792ee08af74b9679b4e036517edc4ef1ea27d44095044babb2c2a1454f43a615e_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":89,"col":2,"offset":1923},"end":{"line":89,"col":11,"offset":1932},"extra":{"metavars":{"$NARROW":{"start":{"line":89,"col":2,"offset":1923},"end":{"line":89,"col":7,"offset":1928},"abstract_content":"nmeta"},"$LARGE":{"start":{"line":89,"col":10,"offset":1931},"end":{"line":89,"col":11,"offset":1932},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d94c9b6ed2dbc5b21c74f3e0944ac64e9889bdb47f9a2253e0445445c2989a9c951df27b9baa656fdcf31143fdd1db295a0bea2e7f7c76b252ce853193f7319f_0","lines":"\tnmeta = 0; /* make gcc happy */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":91,"col":15,"offset":2033},"end":{"line":91,"col":19,"offset":2037},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4ab6dc48694e63f42058e3e50ee5dfb32f2c689ac2dd0a1b0498fd8e8385ce6792ee08af74b9679b4e036517edc4ef1ea27d44095044babb2c2a1454f43a615e_2","lines":"\t\tif (!strcmp(argv[1], mp->name)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":96,"col":2,"offset":2096},"end":{"line":96,"col":64,"offset":2158},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c17578469d52262887c1df003ea4ec0ad2cdb987b62549dfb71768ee93256b0bc71a1c6776e445b8fb183118623cb439962b0b0fdbea235d48499c13db5f03d5_1","lines":"\tfprintf(stderr, _(\"unrecognized argument: _%s_\\n\\n\"), argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":96,"col":56,"offset":2150},"end":{"line":96,"col":60,"offset":2154},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4ab6dc48694e63f42058e3e50ee5dfb32f2c689ac2dd0a1b0498fd8e8385ce6792ee08af74b9679b4e036517edc4ef1ea27d44095044babb2c2a1454f43a615e_3","lines":"\tfprintf(stderr, _(\"unrecognized argument: _%s_\\n\\n\"), argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":100,"col":2,"offset":2177},"end":{"line":100,"col":29,"offset":2204},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c17578469d52262887c1df003ea4ec0ad2cdb987b62549dfb71768ee93256b0bc71a1c6776e445b8fb183118623cb439962b0b0fdbea235d48499c13db5f03d5_2","lines":"\tprintf(_(\"old state:    \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","start":{"line":105,"col":2,"offset":2314},"end":{"line":105,"col":29,"offset":2341},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c17578469d52262887c1df003ea4ec0ad2cdb987b62549dfb71768ee93256b0bc71a1c6776e445b8fb183118623cb439962b0b0fdbea235d48499c13db5f03d5_3","lines":"\tprintf(_(\"new state:    \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":17,"col":15,"offset":295},"end":{"line":17,"col":19,"offset":299},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff18197cd3404a563bc39fb052df4ca8c5517c6d9826c6aaff575fb0467a254640f2613eafa4ebf8b601959e9ceb5c3f6e54d37b229f84c3d27267331f0a5092_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":24,"col":10,"offset":424},"end":{"line":24,"col":23,"offset":437},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"c380e43bbc34648f50c4724156f3a0763c6e938997caa61690ba90298b6b92c69caca9dcdb48bf942801a6b35f71933b5640a50774f54987a1ff3fb34dacc81c_0","lines":"\tindx  = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":24,"col":15,"offset":429},"end":{"line":24,"col":19,"offset":433},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff18197cd3404a563bc39fb052df4ca8c5517c6d9826c6aaff575fb0467a254640f2613eafa4ebf8b601959e9ceb5c3f6e54d37b229f84c3d27267331f0a5092_1","lines":"\tindx  = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":25,"col":10,"offset":448},"end":{"line":25,"col":23,"offset":461},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"c380e43bbc34648f50c4724156f3a0763c6e938997caa61690ba90298b6b92c69caca9dcdb48bf942801a6b35f71933b5640a50774f54987a1ff3fb34dacc81c_1","lines":"\tred   = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":25,"col":15,"offset":453},"end":{"line":25,"col":19,"offset":457},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff18197cd3404a563bc39fb052df4ca8c5517c6d9826c6aaff575fb0467a254640f2613eafa4ebf8b601959e9ceb5c3f6e54d37b229f84c3d27267331f0a5092_2","lines":"\tred   = atoi(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":26,"col":10,"offset":472},"end":{"line":26,"col":23,"offset":485},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"c380e43bbc34648f50c4724156f3a0763c6e938997caa61690ba90298b6b92c69caca9dcdb48bf942801a6b35f71933b5640a50774f54987a1ff3fb34dacc81c_2","lines":"\tgreen = atoi(argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":26,"col":15,"offset":477},"end":{"line":26,"col":19,"offset":481},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff18197cd3404a563bc39fb052df4ca8c5517c6d9826c6aaff575fb0467a254640f2613eafa4ebf8b601959e9ceb5c3f6e54d37b229f84c3d27267331f0a5092_3","lines":"\tgreen = atoi(argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":27,"col":10,"offset":496},"end":{"line":27,"col":23,"offset":509},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"c380e43bbc34648f50c4724156f3a0763c6e938997caa61690ba90298b6b92c69caca9dcdb48bf942801a6b35f71933b5640a50774f54987a1ff3fb34dacc81c_3","lines":"\tblue  = atoi(argv[4]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","start":{"line":27,"col":15,"offset":501},"end":{"line":27,"col":19,"offset":505},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ff18197cd3404a563bc39fb052df4ca8c5517c6d9826c6aaff575fb0467a254640f2613eafa4ebf8b601959e9ceb5c3f6e54d37b229f84c3d27267331f0a5092_4","lines":"\tblue  = atoi(argv[4]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvesablank.c","start":{"line":24,"col":2,"offset":341},"end":{"line":24,"col":23,"offset":362},"extra":{"metavars":{"$FUN":{"start":{"line":24,"col":2,"offset":341},"end":{"line":24,"col":11,"offset":350},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"925dd613928b9e02efeaa2fa1efd0da7a81deced2a909b17c72f991b38eefd78650e873f83be0cbfd3c526e8ea4b8b23f1834d09a95cd38368147934ff2622d0_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvesablank.c","start":{"line":29,"col":3,"offset":454},"end":{"line":29,"col":62,"offset":513},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"69329472a33408e4cc3363f025858c4f986474eb56ce4dc5ce047657e49bb2ea2404a471a4a24017af8b731a672e5b12d5333fd3c2a86da6a7515e43b95f9021_0","lines":"\t\tfprintf(stderr, _(\"usage: %s\\n\"), \"setvesablank ON|on|off\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvesablank.c","start":{"line":36,"col":14,"offset":708},"end":{"line":36,"col":18,"offset":712},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"78932da737814aaf5ad4542fcb3f12baf2ca2e6f427317092f6e0e561cac7233810157b0ec14e95b5963b98f4c944b43221f5f9e04639eac0bec14e6cb0da78b_0","lines":"\tif (!strcmp(argv[1], \"on\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvesablank.c","start":{"line":38,"col":19,"offset":759},"end":{"line":38,"col":23,"offset":763},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"78932da737814aaf5ad4542fcb3f12baf2ca2e6f427317092f6e0e561cac7233810157b0ec14e95b5963b98f4c944b43221f5f9e04639eac0bec14e6cb0da78b_1","lines":"\telse if (!strcmp(argv[1], \"ON\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":43,"col":2,"offset":799},"end":{"line":59,"col":29,"offset":1437},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b57680affbd049761a4cf66089aea7818a2498f9dd101b000f3767042b37c565f9575ff550571769caca7b9d3a31101086b8d5e4bcd1c32f375110504d0c424_0","lines":"\tfprintf(stderr,\n\t        _(\"Usage: %s [-h] [-V]\\n\"\n\t          \"       %s vga|FILE|-\\n\"\n\t          \"\\n\"\n\t          \"If you use the FILE parameter, FILE should be exactly 3 lines of\\n\"\n\t          \"comma-separated decimal values for RED, GREEN, and BLUE.\\n\"\n\t          \"\\n\"\n\t          \"To seed a valid FILE:\\n\"\n\t          \"   cat /sys/module/vt/parameters/default_{red,grn,blu} > FILE\\n\"\n\t          \"\\n\"\n\t          \"and then edit the values in FILE.\\n\"\n\t          \"\\n\"\n\t          \"Other options:\\n\"\n\t          \"   -h     print this usage message\\n\"\n\t          \"   -V     print version number\\n\"\n\t          \"\\n\"),\n\t        progname, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":69,"col":7,"offset":1558},"end":{"line":69,"col":15,"offset":1566},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":69,"col":7,"offset":1558},"end":{"line":69,"col":11,"offset":1562},"abstract_content":"rows"},"$SIGNED":{"start":{"line":69,"col":14,"offset":1565},"end":{"line":69,"col":15,"offset":1566},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eba178799f4cf35f2476c6edcae98ad609c24b7e2430c4efae5809263bf9842ea5bd244bd59cd5d3c5bc352f2f95b35b53cdc4f26ffd566e2426e4599219f4ee_0","lines":"\tfor (rows = 0; rows < 3; rows++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":70,"col":8,"offset":1595},"end":{"line":70,"col":16,"offset":1603},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":8,"offset":1595},"end":{"line":70,"col":12,"offset":1599},"abstract_content":"cols"},"$SIGNED":{"start":{"line":70,"col":15,"offset":1602},"end":{"line":70,"col":16,"offset":1603},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7d7a553bf679316cd48e7b848e128978959997282d998e63e953ce50065886045d392eb49c6f31717a6a7417855914325bc4e0fa9d6af9abb3fb7dc598a6c892_0","lines":"\t\tfor (cols = 0; cols < 16; cols++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":71,"col":9,"offset":1634},"end":{"line":71,"col":35,"offset":1660},"extra":{"metavars":{"$NARROW":{"start":{"line":71,"col":9,"offset":1634},"end":{"line":71,"col":10,"offset":1635},"abstract_content":"c"},"$LARGE":{"start":{"line":71,"col":31,"offset":1656},"end":{"line":71,"col":34,"offset":1659},"abstract_content":"val"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"779f76ff64c563ddebbfe5358b102edb442843fcd415044be4f079d0ddff2f8aede5f62f07a51843b361496a3091f2fdef4ed612f0ecc3a4e1841cb4af1324ae_0","lines":"\t\t\tif ((c = fscanf(fd, \"%u\", &val)) != 1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":71,"col":9,"offset":1634},"end":{"line":71,"col":35,"offset":1660},"extra":{"metavars":{"$SIGNED":{"start":{"line":71,"col":9,"offset":1634},"end":{"line":71,"col":10,"offset":1635},"abstract_content":"c"},"$UNSIGNED":{"start":{"line":71,"col":31,"offset":1656},"end":{"line":71,"col":34,"offset":1659},"abstract_content":"val"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"37c5693557f7424b36c326c403aacfdde7405b41dac2451964ab85555db6e75ac97e36c47eab0bcad37b3e5b1a9f0dea5f596ceaf63cce83becb5b5d48745d78_0","lines":"\t\t\tif ((c = fscanf(fd, \"%u\", &val)) != 1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":71,"col":13,"offset":1638},"end":{"line":71,"col":35,"offset":1660},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":13,"offset":1638},"end":{"line":71,"col":19,"offset":1644},"abstract_content":"fscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9414b1f595dc8af4a65d2e08bd8091085b7920ec1875cf7eba68610f05c53a0cbbcbdfecf3aeff3d1badcdf4c4e73a8ca71be71fb08ee5f5567856c7d5d9996_0","lines":"\t\t\tif ((c = fscanf(fd, \"%u\", &val)) != 1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":81,"col":21,"offset":1941},"end":{"line":81,"col":30,"offset":1950},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":81,"col":21,"offset":1941},"end":{"line":81,"col":26,"offset":1946},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fab51e836f27fcb8f6d93dc81e6355b885be8eb161e7800c3525842567a52cc2ec2252e8472628939791d40535c57d521dd9ada0753ae73ae57112bed8b22b4c_0","lines":"\t\t\tif (cols < 15 && fgetc(fd) != ',')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":86,"col":12,"offset":2100},"end":{"line":86,"col":21,"offset":2109},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":86,"col":12,"offset":2100},"end":{"line":86,"col":17,"offset":2105},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fab51e836f27fcb8f6d93dc81e6355b885be8eb161e7800c3525842567a52cc2ec2252e8472628939791d40535c57d521dd9ada0753ae73ae57112bed8b22b4c_1","lines":"\t\tif ((c = fgetc(fd)) == EOF)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":103,"col":15,"offset":2485},"end":{"line":103,"col":19,"offset":2489},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eb4974acb7a2249f24fe4647bb4af42c07bf3d5b7e14fce45c08beeb989dfe8f7d40fc7525653fe59b896ba93690658fbcfeeb114b23a958e1ac1db48a004e53_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":105,"col":2,"offset":2497},"end":{"line":105,"col":23,"offset":2518},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":2,"offset":2497},"end":{"line":105,"col":11,"offset":2506},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1b3637e111d0318cb057d0dbe53cf4116ab7a4dd52d5461d1ae57d19804b757699548c9fa66fc17af6497c8a941b40028bdcf0ecebf7a28028339c5ca4db89c_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":109,"col":14,"offset":2603},"end":{"line":109,"col":38,"offset":2627},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":109,"col":14,"offset":2603},"end":{"line":109,"col":20,"offset":2609},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e1a9fee9e9beffb3aa10c316716739125cc1025d62f577fadb730f6fac3b5cd6e419360f7723c88349246ef2ffeee44f29c50031ae2dbc0b61ccdd0ebcaa7129_0","lines":"\twhile ((c = getopt(argc, argv, \"hV\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":109,"col":27,"offset":2616},"end":{"line":109,"col":31,"offset":2620},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eb4974acb7a2249f24fe4647bb4af42c07bf3d5b7e14fce45c08beeb989dfe8f7d40fc7525653fe59b896ba93690658fbcfeeb114b23a958e1ac1db48a004e53_1","lines":"\twhile ((c = getopt(argc, argv, \"hV\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":110,"col":11,"offset":2649},"end":{"line":110,"col":12,"offset":2650},"extra":{"metavars":{"$VAR":{"start":{"line":110,"col":11,"offset":2649},"end":{"line":110,"col":12,"offset":2650},"abstract_content":"c","propagated_value":{"svalue_start":{"line":109,"col":14,"offset":2603},"svalue_end":{"line":109,"col":38,"offset":2627},"svalue_abstract_content":"getopt(argc argv\"hV\")"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5479b5f11267d2deb257eea1050354425604858e6ca78430621d918d225874ddb6abb493f53786a842af431cbe76f75a84744b7be924becb2b0ae096fb293462_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":123,"col":9,"offset":2818},"end":{"line":123,"col":13,"offset":2822},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eb4974acb7a2249f24fe4647bb4af42c07bf3d5b7e14fce45c08beeb989dfe8f7d40fc7525653fe59b896ba93690658fbcfeeb114b23a958e1ac1db48a004e53_2","lines":"\tfile = argv[optind];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","start":{"line":132,"col":12,"offset":2974},"end":{"line":132,"col":28,"offset":2990},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":12,"offset":2974},"end":{"line":132,"col":17,"offset":2979},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7fceae37836a6a74def6171793c16e42744559f09577d8148c0595683111f8c71dd752fd7822fa90a42329936f06905e91e6a07ec7be6fce6521d2ff36e931ab_0","lines":"\t\tif ((f = fopen(file, \"r\")) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":85,"col":40,"offset":1776},"end":{"line":85,"col":90,"offset":1826},"extra":{"metavars":{"$FUN":{"start":{"line":85,"col":40,"offset":1776},"end":{"line":85,"col":47,"offset":1783},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c82a99844ae96f949f1634b2f52a0e80ff9c659628a52010a75b77159a114ad3b50d9c6ba3ae4ffa54ff2ff2c73eb5770a15c688c1eded4067be354037dac1ae_0","lines":"\t\tnunimap.entries  = (struct unipair *)xmalloc(nunimap.entry_ct * sizeof(struct unipair));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":101,"col":2,"offset":2156},"end":{"line":111,"col":60,"offset":2726},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_0","lines":"\tfprintf(stderr,\n\t        _(\"usage: showconsolefont -V|--version\\n\"\n\t          \"       showconsolefont [-C tty] [-v] [-i]\\n\"\n\t          \"(probably after loading a font with `setfont font')\\n\"\n\t          \"\\n\"\n\t          \"Valid options are:\\n\"\n\t          \" -V --version    Print version number and exit.\\n\"\n\t          \" -C tty          Device to read the font from. Default: current tty.\\n\"\n\t          \" -v              Be more verbose.\\n\"\n\t          \" -i              Don't print out the font table, just show\\n\"\n\t          \"                 ROWSxCOLSxCOUNT and exit.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":122,"col":15,"offset":2928},"end":{"line":122,"col":19,"offset":2932},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"91c9f7e712da1ac2299c267608b97169ea89da3024191161f947a1a808d55799a4f0e5dc99138bef053280708f066b6256dff7a27f639de4f2b4df5c1a5c19c2_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":124,"col":2,"offset":2940},"end":{"line":124,"col":23,"offset":2961},"extra":{"metavars":{"$FUN":{"start":{"line":124,"col":2,"offset":2940},"end":{"line":124,"col":11,"offset":2949},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"528cbfae6d70ffbb39305fe8be0c8fc837ce9f7446ce5e9a40f8e3fb4380ed1d2fdca966c0b0b1016fd2ee1ede648e7dc5780663cc223ba5b161fff6d3a42f25_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":129,"col":15,"offset":3065},"end":{"line":129,"col":19,"offset":3069},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"91c9f7e712da1ac2299c267608b97169ea89da3024191161f947a1a808d55799a4f0e5dc99138bef053280708f066b6256dff7a27f639de4f2b4df5c1a5c19c2_1","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":129,"col":41,"offset":3091},"end":{"line":129,"col":45,"offset":3095},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"91c9f7e712da1ac2299c267608b97169ea89da3024191161f947a1a808d55799a4f0e5dc99138bef053280708f066b6256dff7a27f639de4f2b4df5c1a5c19c2_2","lines":"\t    (!strcmp(argv[1], \"-V\") || !strcmp(argv[1], \"--version\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":132,"col":14,"offset":3157},"end":{"line":132,"col":40,"offset":3183},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":132,"col":14,"offset":3157},"end":{"line":132,"col":20,"offset":3163},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5217849495099b80c38b195f8453c87b5026c592e89b873717571ae7f7350f18aa56f704ba3b78688ef958f122e75b49d1ac4bf561f37943d0fc3a1072060e8_0","lines":"\twhile ((c = getopt(argc, argv, \"ivC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":132,"col":27,"offset":3170},"end":{"line":132,"col":31,"offset":3174},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"91c9f7e712da1ac2299c267608b97169ea89da3024191161f947a1a808d55799a4f0e5dc99138bef053280708f066b6256dff7a27f639de4f2b4df5c1a5c19c2_3","lines":"\twhile ((c = getopt(argc, argv, \"ivC:\")) != EOF) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":170,"col":4,"offset":3892},"end":{"line":170,"col":42,"offset":3930},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_1","lines":"\t\t\tprintf(_(\"Character count: %d\\n\"), nr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":171,"col":4,"offset":3935},"end":{"line":171,"col":44,"offset":3975},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_2","lines":"\t\t\tprintf(_(\"Font width     : %d\\n\"), rows);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":172,"col":4,"offset":3980},"end":{"line":172,"col":44,"offset":4020},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_3","lines":"\t\t\tprintf(_(\"Font height    : %d\\n\"), cols);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":174,"col":4,"offset":4034},"end":{"line":174,"col":40,"offset":4070},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"%dx%dx%d\\n\""},"$FMT":{"start":{"line":174,"col":11,"offset":4041},"end":{"line":174,"col":23,"offset":4053},"abstract_content":"\"%dx%dx%d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"268b2e605f24326cb7917b5c16bcbcec0c7bcd8addd59e5793a914e2419dca7d51f6ece5b7819a9776e0fe60eb673eeef075fd811faa2eb5aad7b77e2a673884_0","lines":"\t\t\tprintf(\"%dx%dx%d\\n\", rows, cols, nr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":183,"col":3,"offset":4183},"end":{"line":183,"col":43,"offset":4223},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_4","lines":"\t\tprintf(_(\"Showing %d-char font\\n\\n\"), n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":200,"col":4,"offset":4692},"end":{"line":200,"col":22,"offset":4710},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_5","lines":"\t\t\tprintf(sep, space);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","start":{"line":202,"col":5,"offset":4735},"end":{"line":202,"col":23,"offset":4753},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"891e9fad0c7a1791ccd7f288f9d66a82571c056533f95705b6a23e4f46cda28228ae8f9a905340a4d56aff7ff6f5e51890bbb0a459b7492b47c9833a7150fb22_6","lines":"\t\t\t\tprintf(sep, space);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":54,"col":2,"offset":933},"end":{"line":54,"col":34,"offset":965},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_0","lines":"\tprintf(_(\"kb mode was %s\\n\"), m);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":56,"col":3,"offset":998},"end":{"line":57,"col":67,"offset":1129},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_1","lines":"\t\tprintf(_(\"[ if you are trying this under X, it might not work\\n\"\n\t\t         \"since the X server is also reading /dev/console ]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":76,"col":2,"offset":1414},"end":{"line":76,"col":52,"offset":1464},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_2","lines":"\tprintf(_(\"caught signal %d, cleaning up...\\n\"), x);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":91,"col":2,"offset":1674},"end":{"line":102,"col":26,"offset":2281},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_3","lines":"\tfprintf(stderr, _(\n\t                    \"showkey version %s\\n\\n\"\n\t                    \"usage: showkey [options...]\\n\"\n\t                    \"\\n\"\n\t                    \"valid options are:\\n\"\n\t                    \"\\n\"\n\t                    \"\t-h --help\tdisplay this help text\\n\"\n\t                    \"\t-a --ascii\tdisplay the decimal/octal/hex values of the keys\\n\"\n\t                    \"\t-s --scancodes\tdisplay only the raw scan-codes\\n\"\n\t                    \"\t-k --keycodes\tdisplay only the interpreted keycodes (default)\\n\"\n\t                    \"\t-V --version\tprint version number\\n\"),\n\t        PACKAGE_VERSION);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":125,"col":15,"offset":2802},"end":{"line":125,"col":19,"offset":2806},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"051748e0acde6fc6824544e88aff80b281cca19f7ed081814d52c570c8f5ed18c23b63ff3de7f51392d32e3272657877c0256298b5ea7ec318dbce87871a587f_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":127,"col":2,"offset":2814},"end":{"line":127,"col":23,"offset":2835},"extra":{"metavars":{"$FUN":{"start":{"line":127,"col":2,"offset":2814},"end":{"line":127,"col":11,"offset":2823},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c6fc30a79c05a8d6fe03c9549ce835f8ae39716d961d6c15c3c1b824d5191bb15187ff3e80ba8c0bf15a468277a9afb8bb4b3e01d62bf6314fd5bf9c3b281394_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":131,"col":14,"offset":2920},"end":{"line":132,"col":54,"offset":2997},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":12,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":131,"col":14,"offset":2920},"end":{"line":131,"col":25,"offset":2931},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35a346354590af3843420b2ddc266844fd67a123994c012d30a3c76109401f7b7161697ce962e8df95b09e022042b1c0e5bc0c64a1d9c8d7abd8d283edc81f64_0","lines":"\twhile ((c = getopt_long(argc, argv,\n\t                        short_opts, long_opts, NULL)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":131,"col":32,"offset":2938},"end":{"line":131,"col":36,"offset":2942},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"051748e0acde6fc6824544e88aff80b281cca19f7ed081814d52c570c8f5ed18c23b63ff3de7f51392d32e3272657877c0256298b5ea7ec318dbce87871a587f_1","lines":"\twhile ((c = getopt_long(argc, argv,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":133,"col":11,"offset":3018},"end":{"line":133,"col":12,"offset":3019},"extra":{"metavars":{"$VAR":{"start":{"line":133,"col":11,"offset":3018},"end":{"line":133,"col":12,"offset":3019},"abstract_content":"c","propagated_value":{"svalue_start":{"line":131,"col":14,"offset":2920},"svalue_end":{"line":132,"col":54,"offset":2997},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}},"$VAL2":{"start":{"line":134,"col":9,"offset":3031},"end":{"line":134,"col":12,"offset":3034},"abstract_content":"'s'"},"$VAL1":{"start":{"line":143,"col":9,"offset":3170},"end":{"line":143,"col":12,"offset":3173},"abstract_content":"'V'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"34a2da69bb61e9955aa8ebbb419727a1435ddc7532cb603615101a62f71837b334f0a4c16cacda0bdc2858b0c025b17443ae4c68acd9dae2d66f1e9439b8ba3c_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":133,"col":11,"offset":3018},"end":{"line":133,"col":12,"offset":3019},"extra":{"metavars":{"$VAR":{"start":{"line":133,"col":11,"offset":3018},"end":{"line":133,"col":12,"offset":3019},"abstract_content":"c","propagated_value":{"svalue_start":{"line":131,"col":14,"offset":2920},"svalue_end":{"line":132,"col":54,"offset":2997},"svalue_abstract_content":"getopt_long(argc argv short_opts long_opts NULL)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6854f85e0f36f2029a04b1c7fadff793326f76f91a2540b297d39e827d90545a5f21ee8961bd68469f05e63644e519c89a80713aaae4fab7e661dc3e8771f07a_0","lines":"\t\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":171,"col":3,"offset":3737},"end":{"line":172,"col":54,"offset":3821},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_4","lines":"\t\tprintf(_(\"\\nPress any keys - \"\n\t\t         \"Ctrl-D will terminate this program\\n\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":175,"col":8,"offset":3845},"end":{"line":175,"col":24,"offset":3861},"extra":{"metavars":{"$FUN":{"start":{"line":175,"col":8,"offset":3845},"end":{"line":175,"col":12,"offset":3849},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19d2e654518cb40a9debe87db195db7c1f6cd408902a250d06f66264bdd32cd8f02effce4df78598d06905fb23015b5aecf5c6b098c61b1c906be65661e4e9b9_0","lines":"\t\t\tn = read(fd, buf, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":175,"col":8,"offset":3845},"end":{"line":175,"col":24,"offset":3861},"extra":{"metavars":{"$FD":{"start":{"line":175,"col":13,"offset":3850},"end":{"line":175,"col":15,"offset":3852},"abstract_content":"fd"},"$BUF":{"start":{"line":175,"col":17,"offset":3854},"end":{"line":175,"col":20,"offset":3857},"abstract_content":"buf"},"$LEN":{"start":{"line":175,"col":22,"offset":3859},"end":{"line":175,"col":23,"offset":3860},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2048c6a180e441e4c48c86ea7ce7d9710dd68ebdce2426883805d7908a0659a947834058a1b715c6238e5780b2664436eb86035c821369172918daa2451e23ee_0","lines":"\t\t\tn = read(fd, buf, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":175,"col":8,"offset":3845},"end":{"line":175,"col":24,"offset":3861},"extra":{"metavars":{"$TYPE":{"start":{"line":122,"col":2,"offset":2732},"end":{"line":122,"col":15,"offset":2745},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":122,"col":20,"offset":2750},"end":{"line":122,"col":22,"offset":2752},"abstract_content":"18"},"$FUN":{"start":{"line":175,"col":8,"offset":3845},"end":{"line":175,"col":12,"offset":3849},"abstract_content":"read"},"$ARG1":{"start":{"line":175,"col":13,"offset":3850},"end":{"line":175,"col":15,"offset":3852},"abstract_content":"fd"},"$BUF":{"start":{"line":175,"col":17,"offset":3854},"end":{"line":175,"col":20,"offset":3857},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"721bf8bb62726ab9934c274aa23c321056b297fa158610568614b918ef8be2cab45603024c74013132b3939abbe9db285c7d3be187468799a20fd1df89ef758d_0","lines":"\t\t\tn = read(fd, buf, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":177,"col":5,"offset":3882},"end":{"line":178,"col":35,"offset":3948},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":24,"offset":23},"abstract_content":"\" \\t%3d 0%03o 0x%02x\\n\""},"$FMT":{"start":{"line":177,"col":12,"offset":3889},"end":{"line":177,"col":35,"offset":3912},"abstract_content":"\" \\t%3d 0%03o 0x%02x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a25bb7b70d23fc78574d975fdbbff5ff1b04dffdae328bcea2fb5021a0357a43714a9f8cd6067ca1822a815ee6103b5c4007c883770d59430492367828f1b7fb_0","lines":"\t\t\t\tprintf(\" \\t%3d 0%03o 0x%02x\\n\",\n\t\t\t\t       buf[0], buf[0], buf[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":192,"col":2,"offset":4284},"end":{"line":192,"col":28,"offset":4310},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_0","lines":"\tsignal(SIGALRM, watch_dog);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":198,"col":2,"offset":4431},"end":{"line":198,"col":21,"offset":4450},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_1","lines":"\tsignal(SIGHUP, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":199,"col":2,"offset":4453},"end":{"line":199,"col":21,"offset":4472},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_2","lines":"\tsignal(SIGINT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":200,"col":2,"offset":4475},"end":{"line":200,"col":22,"offset":4495},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_3","lines":"\tsignal(SIGQUIT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":201,"col":2,"offset":4498},"end":{"line":201,"col":21,"offset":4517},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_4","lines":"\tsignal(SIGILL, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":202,"col":2,"offset":4520},"end":{"line":202,"col":22,"offset":4540},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_5","lines":"\tsignal(SIGTRAP, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":203,"col":2,"offset":4543},"end":{"line":203,"col":22,"offset":4563},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_6","lines":"\tsignal(SIGABRT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":204,"col":2,"offset":4566},"end":{"line":204,"col":21,"offset":4585},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_7","lines":"\tsignal(SIGIOT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":205,"col":2,"offset":4588},"end":{"line":205,"col":21,"offset":4607},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_8","lines":"\tsignal(SIGFPE, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":206,"col":2,"offset":4610},"end":{"line":206,"col":22,"offset":4630},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_9","lines":"\tsignal(SIGKILL, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":207,"col":2,"offset":4633},"end":{"line":207,"col":22,"offset":4653},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_10","lines":"\tsignal(SIGUSR1, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":208,"col":2,"offset":4656},"end":{"line":208,"col":22,"offset":4676},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_11","lines":"\tsignal(SIGSEGV, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":209,"col":2,"offset":4679},"end":{"line":209,"col":22,"offset":4699},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_12","lines":"\tsignal(SIGUSR2, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":210,"col":2,"offset":4702},"end":{"line":210,"col":22,"offset":4722},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_13","lines":"\tsignal(SIGPIPE, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":211,"col":2,"offset":4725},"end":{"line":211,"col":22,"offset":4745},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_14","lines":"\tsignal(SIGTERM, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":213,"col":2,"offset":4765},"end":{"line":213,"col":24,"offset":4787},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_15","lines":"\tsignal(SIGSTKFLT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":215,"col":2,"offset":4797},"end":{"line":215,"col":22,"offset":4817},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_16","lines":"\tsignal(SIGCHLD, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":216,"col":2,"offset":4820},"end":{"line":216,"col":22,"offset":4840},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_17","lines":"\tsignal(SIGCONT, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":217,"col":2,"offset":4843},"end":{"line":217,"col":22,"offset":4863},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_18","lines":"\tsignal(SIGSTOP, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":218,"col":2,"offset":4866},"end":{"line":218,"col":22,"offset":4886},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_19","lines":"\tsignal(SIGTSTP, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":219,"col":2,"offset":4889},"end":{"line":219,"col":22,"offset":4909},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_20","lines":"\tsignal(SIGTTIN, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":220,"col":2,"offset":4912},"end":{"line":220,"col":22,"offset":4932},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046c7390f0e63d83408f25d923d177250ec5f9d1e3f78dab5c0a083d21a746252e52e8d851f39b7a179e05bae1b6158ae014b4fc6e32f5b27aa2702dee438cc0_21","lines":"\tsignal(SIGTTOU, die);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":239,"col":2,"offset":5440},"end":{"line":239,"col":78,"offset":5516},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_5","lines":"\tprintf(_(\"press any key (program terminates 10s after last keypress)...\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":245,"col":8,"offset":5599},"end":{"line":245,"col":34,"offset":5625},"extra":{"metavars":{"$FUN":{"start":{"line":245,"col":8,"offset":5599},"end":{"line":245,"col":12,"offset":5603},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19d2e654518cb40a9debe87db195db7c1f6cd408902a250d06f66264bdd32cd8f02effce4df78598d06905fb23015b5aecf5c6b098c61b1c906be65661e4e9b9_1","lines":"\t\t\tn = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":245,"col":8,"offset":5599},"end":{"line":245,"col":34,"offset":5625},"extra":{"metavars":{"$TYPE":{"start":{"line":122,"col":2,"offset":2732},"end":{"line":122,"col":15,"offset":2745},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":122,"col":20,"offset":2750},"end":{"line":122,"col":22,"offset":2752},"abstract_content":"18"},"$FUN":{"start":{"line":245,"col":8,"offset":5599},"end":{"line":245,"col":12,"offset":5603},"abstract_content":"read"},"$ARG1":{"start":{"line":245,"col":13,"offset":5604},"end":{"line":245,"col":15,"offset":5606},"abstract_content":"fd"},"$BUF":{"start":{"line":245,"col":17,"offset":5608},"end":{"line":245,"col":20,"offset":5611},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"721bf8bb62726ab9934c274aa23c321056b297fa158610568614b918ef8be2cab45603024c74013132b3939abbe9db285c7d3be187468799a20fd1df89ef758d_1","lines":"\t\t\tn = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":247,"col":5,"offset":5658},"end":{"line":247,"col":30,"offset":5683},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"0x%02x \""},"$FMT":{"start":{"line":247,"col":12,"offset":5665},"end":{"line":247,"col":21,"offset":5674},"abstract_content":"\"0x%02x \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5f9c0cb12b14487829722c2f0935f23d36911c64522fd966f65e003b764bca4ce4d6b4e370a31119b21fb8e85826190aa5d8f6d0e3d300e6f8d9120700172f3_0","lines":"\t\t\t\tprintf(\"0x%02x \", buf[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":257,"col":7,"offset":5828},"end":{"line":257,"col":33,"offset":5854},"extra":{"metavars":{"$FUN":{"start":{"line":257,"col":7,"offset":5828},"end":{"line":257,"col":11,"offset":5832},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19d2e654518cb40a9debe87db195db7c1f6cd408902a250d06f66264bdd32cd8f02effce4df78598d06905fb23015b5aecf5c6b098c61b1c906be65661e4e9b9_2","lines":"\t\tn = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":257,"col":7,"offset":5828},"end":{"line":257,"col":33,"offset":5854},"extra":{"metavars":{"$TYPE":{"start":{"line":122,"col":2,"offset":2732},"end":{"line":122,"col":15,"offset":2745},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":122,"col":20,"offset":2750},"end":{"line":122,"col":22,"offset":2752},"abstract_content":"18"},"$FUN":{"start":{"line":257,"col":7,"offset":5828},"end":{"line":257,"col":11,"offset":5832},"abstract_content":"read"},"$ARG1":{"start":{"line":257,"col":12,"offset":5833},"end":{"line":257,"col":14,"offset":5835},"abstract_content":"fd"},"$BUF":{"start":{"line":257,"col":16,"offset":5837},"end":{"line":257,"col":19,"offset":5840},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"721bf8bb62726ab9934c274aa23c321056b297fa158610568614b918ef8be2cab45603024c74013132b3939abbe9db285c7d3be187468799a20fd1df89ef758d_2","lines":"\t\tn = read(fd, buf, sizeof(buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","start":{"line":273,"col":4,"offset":6195},"end":{"line":273,"col":40,"offset":6231},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1956881215045f3c722dbcbc6f7470fc2a1e25b0e89237a867e16991e66150ea83c8ea163d1193134571344a29049ca930dd56557519281820f9fa38fd8dbc4_6","lines":"\t\t\tprintf(_(\"keycode %3d %s\\n\"), kc, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":31,"col":6,"offset":777},"end":{"line":31,"col":33,"offset":804},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":6,"offset":777},"end":{"line":31,"col":12,"offset":783},"abstract_content":"system"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0f341152bad75c5e74a4275c7d78eb48aefa9f418ffecfe9c535235e93376fd3b98e1bbedcac6ad37dc8786424fb9c30ec4044200a17d7444344aa48f23d000_0","lines":"\tif (system(\"openvt -s -l bash\") == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":34,"col":2,"offset":862},"end":{"line":34,"col":24,"offset":884},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"757733c48f8504fc5ee035d91f2ad2d0457a8e14ecf334f2c5bd0890ed6cf9dceb2742e7f292972b7ede4b775c9d48635d15aa57d82c73e3d8765ffe5165e76f_0","lines":"\tsignal(SIGHUP, sighup);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":41,"col":15,"offset":972},"end":{"line":41,"col":19,"offset":976},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8554772e90c5f30da160035fb9861557837a3570571c369aed4aefef8bc7310cdc8163eb13b798950b8b00a161e9f76b4321e167750bbb50fbcff865a92121b5_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":43,"col":7,"offset":989},"end":{"line":43,"col":27,"offset":1009},"extra":{"metavars":{"$FUN":{"start":{"line":43,"col":7,"offset":989},"end":{"line":43,"col":11,"offset":993},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2578c4304094bb5a9c70ddcda045f295f35e4d7aa5e04312402875ecd45eebda54f3ed14c0f50fe3a0303f8b2c52eb62179bf97bcc940a8e46ff641043d5f233_0","lines":"\tfd = open(\"/dev/tty0\", 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":45,"col":8,"offset":1050},"end":{"line":45,"col":28,"offset":1070},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":8,"offset":1050},"end":{"line":45,"col":12,"offset":1054},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2578c4304094bb5a9c70ddcda045f295f35e4d7aa5e04312402875ecd45eebda54f3ed14c0f50fe3a0303f8b2c52eb62179bf97bcc940a8e46ff641043d5f233_1","lines":"\t\tfd = open(\"/dev/vc/0\", 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","start":{"line":48,"col":2,"offset":1096},"end":{"line":48,"col":24,"offset":1118},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"757733c48f8504fc5ee035d91f2ad2d0457a8e14ecf334f2c5bd0890ed6cf9dceb2742e7f292972b7ede4b775c9d48635d15aa57d82c73e3d8765ffe5165e76f_1","lines":"\tsignal(SIGHUP, sighup);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":25,"col":6,"offset":427},"end":{"line":25,"col":46,"offset":467},"extra":{"metavars":{"$FUN":{"start":{"line":25,"col":6,"offset":427},"end":{"line":25,"col":12,"offset":433},"abstract_content":"system"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4fd97a55aaef1c70bd911c34533a19e19bf6707ab45c62030dc5e692316ad11df47c44328bfcf0d441a67b270f2ff6cdf695f174d3af3aed20311b9dfb012d66_0","lines":"\tif (system(\"openvt -s -l -- login -h spawn\") == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":28,"col":2,"offset":525},"end":{"line":28,"col":24,"offset":547},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"232e08511b666f19b3139a6b2ebbe1c38266d62f9b5b8f50e349e017faa7e252adadad8b95d86e29710ee64003db6b7d9d4d449c4892ae2562728b105a867874_0","lines":"\tsignal(SIGHUP, sighup);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":35,"col":15,"offset":635},"end":{"line":35,"col":19,"offset":639},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8f3219d801732f64b6f75e7b15c592d6d9a398bbbe477837734b49de49ed417c1f8549329a6270fb9fca46608e51833084b58b942ac0d70685586da1980545d8_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":37,"col":7,"offset":652},"end":{"line":37,"col":27,"offset":672},"extra":{"metavars":{"$FUN":{"start":{"line":37,"col":7,"offset":652},"end":{"line":37,"col":11,"offset":656},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8cd833ee1cce27694de1f49bc11e9edfb96b29b20ff0f0db56b4f391a739f4a142a750e71833a9ce872ea17e7acee6fb9f3c39521b357edf37626cbab63027c9_0","lines":"\tfd = open(\"/dev/tty0\", 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":39,"col":8,"offset":713},"end":{"line":39,"col":28,"offset":733},"extra":{"metavars":{"$FUN":{"start":{"line":39,"col":8,"offset":713},"end":{"line":39,"col":12,"offset":717},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8cd833ee1cce27694de1f49bc11e9edfb96b29b20ff0f0db56b4f391a739f4a142a750e71833a9ce872ea17e7acee6fb9f3c39521b357edf37626cbab63027c9_1","lines":"\t\tfd = open(\"/dev/vc/0\", 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","start":{"line":42,"col":2,"offset":759},"end":{"line":42,"col":24,"offset":781},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"232e08511b666f19b3139a6b2ebbe1c38266d62f9b5b8f50e349e017faa7e252adadad8b95d86e29710ee64003db6b7d9d4d449c4892ae2562728b105a867874_1","lines":"\tsignal(SIGHUP, sighup);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","start":{"line":23,"col":15,"offset":376},"end":{"line":23,"col":19,"offset":380},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eeed93141d39318458b3e7e9ff7e37615b983b7e6f9a1b1faf2544fed5c36f3d071c164014cb545e6dca130270173933536b00aefc8f27a03b19bbe2169d0a62_0","lines":"\tset_progname(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","start":{"line":25,"col":2,"offset":388},"end":{"line":25,"col":23,"offset":409},"extra":{"metavars":{"$FUN":{"start":{"line":25,"col":2,"offset":388},"end":{"line":25,"col":11,"offset":397},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"41b0416a8477e18f217eedc0e1282c99e15b2d98bc853850c43ad5a3aa35b826710c57712e5a883cb88027ea38208f05de1a3a7039e5ea99aebdfc5e8c631dc2_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","start":{"line":29,"col":27,"offset":507},"end":{"line":29,"col":31,"offset":511},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eeed93141d39318458b3e7e9ff7e37615b983b7e6f9a1b1faf2544fed5c36f3d071c164014cb545e6dca130270173933536b00aefc8f27a03b19bbe2169d0a62_1","lines":"\tif (argc == 2 && !strcmp(argv[1], \"-V\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","start":{"line":39,"col":8,"offset":759},"end":{"line":39,"col":21,"offset":772},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"7ceafecd548e7f967d711ed5504d1065238eca2aa4b77ebb006f01e4e046e0f36e1bf616d587fd6530be15fa06136cfb57f2de96c783afeda251a8cc4ea1b79e_0","lines":"\tnum = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","start":{"line":39,"col":13,"offset":764},"end":{"line":39,"col":17,"offset":768},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"eeed93141d39318458b3e7e9ff7e37615b983b7e6f9a1b1faf2544fed5c36f3d071c164014cb545e6dca130270173933536b00aefc8f27a03b19bbe2169d0a62_2","lines":"\tnum = atoi(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/utf8.c","start":{"line":44,"col":4,"offset":926},"end":{"line":44,"col":33,"offset":955},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":44,"col":4,"offset":926},"end":{"line":44,"col":6,"offset":928},"abstract_content":"uc"},"$SIGNED":{"start":{"line":44,"col":17,"offset":939},"end":{"line":44,"col":18,"offset":940},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"703f73135397336fb4e07c903eaff29fcf02a5ca91d530d9ecee9d66af2c610a172974b681b1247cb85b70f0dc89cf8332e2392f5b249c8626412abd20a98b7d_0","lines":"\t\t\tuc = ((uc << 6) | (uc2 & 0x3f));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/version.h","start":{"line":22,"col":2,"offset":332},"end":{"line":22,"col":53,"offset":383},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"4692b690a9b48411e7130ebde4fd70fe1766f7b91a3d9f3610cbcd155ccf15b7a7be61275d707afb65aa4a906572926f2f623552d7d686e125103b7e1b2433d8_0","lines":"\tprintf(_(\"%s from %s\\n\"), progname, PACKAGE_STRING);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/auth.c","start":{"line":83,"col":4,"offset":2209},"end":{"line":84,"col":20,"offset":2302},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"0072b8153ee95a38388c0666451de012dd2d4720d050e6be056a0eca00c6face5d14e67b04c874c7ca7f65caebaba00a39c76abe542642a90e4fe16a2870f936_0","lines":"\t\t\tprintf(_(\"The entire console display is now completely locked by %s.\\n\"),\n\t\t\t       username);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/auth.c","start":{"line":86,"col":4,"offset":2318},"end":{"line":87,"col":20,"offset":2385},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"0072b8153ee95a38388c0666451de012dd2d4720d050e6be056a0eca00c6face5d14e67b04c874c7ca7f65caebaba00a39c76abe542642a90e4fe16a2870f936_1","lines":"\t\t\tprintf(_(\"The %s is now locked by %s.\\n\"), tty,\n\t\t\t       username);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/parse.c","start":{"line":50,"col":2,"offset":1376},"end":{"line":52,"col":40,"offset":1486},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"69bff57e10a4f82c95f0c8244ed6148e2e461cb377e10087db2d25e6f3fcc18045e654d8f58c21c82476b6a4ae6c1a24553254a07c5eb0dd04af90f1ca18e399_0","lines":"\tfprintf(stderr,\n\t        _(\"Try `%s --help' for more information.\\n\"),\n\t        program_invocation_short_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/parse.c","start":{"line":59,"col":2,"offset":1562},"end":{"line":68,"col":28,"offset":2149},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"69bff57e10a4f82c95f0c8244ed6148e2e461cb377e10087db2d25e6f3fcc18045e654d8f58c21c82476b6a4ae6c1a24553254a07c5eb0dd04af90f1ca18e399_1","lines":"\tprintf(_(\"%s: locks virtual consoles, saving your current session.\\n\"\n\t         \"Usage: %s [options]\\n\"\n\t         \"       Where [options] are any of:\\n\"\n\t         \"-c or --current: lock only this virtual console, allowing user to\\n\"\n\t         \"       switch to other virtual consoles.\\n\"\n\t         \"-a or --all: lock all virtual consoles by preventing other users\\n\"\n\t         \"       from switching virtual consoles.\\n\"\n\t         \"-v or --version: Print the version number of vlock and exit.\\n\"\n\t         \"-h or --help: Print this help message and exit.\\n\"),\n\t       progname, progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/parse.c","start":{"line":83,"col":14,"offset":2393},"end":{"line":83,"col":58,"offset":2437},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":3},"end":{"line":2,"col":11,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":83,"col":14,"offset":2393},"end":{"line":83,"col":25,"offset":2404},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a62d0809db8ee7d8226196bad0e14d218bc11e38b41f200e3e7b9cf03cfd039ed639ed24fc428f74e7c32d49b061bd405a0a691c2a65b1ea33b9494e8c2e46f6_0","lines":"\twhile ((c = getopt_long(ac, av, \"acvh\", long_options, 0)) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":48,"col":7,"offset":1331},"end":{"line":48,"col":31,"offset":1355},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":7,"offset":1331},"end":{"line":48,"col":12,"offset":1336},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b45bc112188ab63d86e17c9c7629e59cc637bca6519c8e5e1d105658a5238c19f088c9e1a96ef9d725ce326de0153978aa030e111595763e7545a1ba3d6531ab_0","lines":"\t\tif (fstat(STDIN_FILENO, &st) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":57,"col":3,"offset":1456},"end":{"line":57,"col":24,"offset":1477},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":57,"col":3,"offset":1456},"end":{"line":57,"col":4,"offset":1457},"abstract_content":"i"},"$SIGNED":{"start":{"line":57,"col":20,"offset":1473},"end":{"line":57,"col":24,"offset":1477},"abstract_content":"0xff"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45daf13d4aefad1f8c62e82246d542caae0a60e788c4a3f0a42ff47594924a4456e86611a692e4ed7a23937b2e945c24aa47ed0da186d5bb82c0c4ae8f7905db_0","lines":"\t\ti = st.st_rdev & 0xff;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":58,"col":3,"offset":1481},"end":{"line":58,"col":34,"offset":1512},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":3,"offset":1481},"end":{"line":58,"col":10,"offset":1488},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"07306099d27ebee2a7bed8212ad2b08cc4923be3c7ea2113f602cb9bd538998954a3b58ad1f4ac2d3873c1c4b8f166ea222034b0b0eeaf46ba78c61d849f5f65_0","lines":"\t\tsprintf(path, \"/dev/vcsa%u\", i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":59,"col":9,"offset":1522},"end":{"line":59,"col":27,"offset":1540},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":9,"offset":1522},"end":{"line":59,"col":13,"offset":1526},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f7cc9c3ea9add4a64118d9e480f64d5d4ef0814abd0f7d6d7c06227eb90780694b0bd52f6d0a46b8d01339cdac6730ab00564ef283b6b111ecc2a970a272af55_0","lines":"\t\tvcs = open(path, O_RDWR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":63,"col":7,"offset":1574},"end":{"line":63,"col":29,"offset":1596},"extra":{"metavars":{"$FUN":{"start":{"line":63,"col":7,"offset":1574},"end":{"line":63,"col":11,"offset":1578},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f488171c5f6169e57007420e1310000b599dabfe184436fb72c61bbc7d7f19cfbe08f9fa75a319e4d502f6f170549eccb217066efe3ebe57d34597dae3f4772_0","lines":"\t\tif (read(vcs, &columns, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":63,"col":7,"offset":1574},"end":{"line":63,"col":29,"offset":1596},"extra":{"metavars":{"$FD":{"start":{"line":63,"col":12,"offset":1579},"end":{"line":63,"col":15,"offset":1582},"abstract_content":"vcs","propagated_value":{"svalue_start":{"line":59,"col":9,"offset":1522},"svalue_end":{"line":59,"col":27,"offset":1540},"svalue_abstract_content":"open(path O_RDWR)"}},"$BUF":{"start":{"line":63,"col":17,"offset":1584},"end":{"line":63,"col":25,"offset":1592},"abstract_content":"&columns"},"$LEN":{"start":{"line":63,"col":27,"offset":1594},"end":{"line":63,"col":28,"offset":1595},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"db5416d1bbc0b93b52f2456985b6809216b88096d28ee854d52d0f13a75a587732a7da716dc2479abf4cdede57aa18de726def2c5e18619489fc51a45a045153_0","lines":"\t\tif (read(vcs, &columns, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":66,"col":7,"offset":1620},"end":{"line":66,"col":27,"offset":1640},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":7,"offset":1620},"end":{"line":66,"col":11,"offset":1624},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f488171c5f6169e57007420e1310000b599dabfe184436fb72c61bbc7d7f19cfbe08f9fa75a319e4d502f6f170549eccb217066efe3ebe57d34597dae3f4772_1","lines":"\t\tif (read(vcs, &lines, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":66,"col":7,"offset":1620},"end":{"line":66,"col":27,"offset":1640},"extra":{"metavars":{"$FD":{"start":{"line":66,"col":12,"offset":1625},"end":{"line":66,"col":15,"offset":1628},"abstract_content":"vcs","propagated_value":{"svalue_start":{"line":59,"col":9,"offset":1522},"svalue_end":{"line":59,"col":27,"offset":1540},"svalue_abstract_content":"open(path O_RDWR)"}},"$BUF":{"start":{"line":66,"col":17,"offset":1630},"end":{"line":66,"col":23,"offset":1636},"abstract_content":"&lines"},"$LEN":{"start":{"line":66,"col":25,"offset":1638},"end":{"line":66,"col":26,"offset":1639},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"94dd1d4f63994ac63faaa8e98c396c391c97d1eafd1c26647725ca13abb7d6e389eed15c95dd404c6a6f3d72423c607aed654b394abb41f7aee6dc77d434268b_0","lines":"\t\tif (read(vcs, &lines, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":69,"col":3,"offset":1660},"end":{"line":69,"col":39,"offset":1696},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":69,"col":3,"offset":1660},"end":{"line":69,"col":7,"offset":1664},"abstract_content":"size"},"$SIGNED":{"start":{"line":69,"col":16,"offset":1673},"end":{"line":69,"col":17,"offset":1674},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e4a1a7d9826a40ce89a483230a9c385d513278c03e40f8d910fd4bab5068a2837cca7ad1329097b653400a6678f24e2c993324c57c5d4f8521789c8f5cd04a05_0","lines":"\t\tsize       = 2 * lines * columns + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":70,"col":16,"offset":1713},"end":{"line":70,"col":28,"offset":1725},"extra":{"metavars":{"$X":{"start":{"line":69,"col":16,"offset":1673},"end":{"line":69,"col":35,"offset":1692},"abstract_content":"2*lines*columns"},"$Y":{"start":{"line":69,"col":38,"offset":1695},"end":{"line":69,"col":39,"offset":1696},"abstract_content":"2"},"$FUN":{"start":{"line":70,"col":16,"offset":1713},"end":{"line":70,"col":22,"offset":1719},"abstract_content":"malloc"},"$N":{"start":{"line":70,"col":23,"offset":1720},"end":{"line":70,"col":27,"offset":1724},"abstract_content":"size","propagated_value":{"svalue_start":{"line":69,"col":16,"offset":1673},"svalue_end":{"line":69,"col":39,"offset":1696},"svalue_abstract_content":"2*lines*columns+2"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"982a659e6238b3ef665e8051d053dd29bce3d631d7fa7bde024936929c41f00707e283671b500e44f3af8e4e86ec8454514ad0d08dd8547367e731ef779ab1de_0","lines":"\t\tscreen_buf = malloc(size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":70,"col":16,"offset":1713},"end":{"line":70,"col":28,"offset":1725},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":16,"offset":1713},"end":{"line":70,"col":22,"offset":1719},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2dad82050303229c6f4d25b2d94f03965d35ca623e49b316749b594882cc4aadfa1477300126d28401d0ce755820666d4f2c757693a6590a76627ff5d63e60b6_0","lines":"\t\tscreen_buf = malloc(size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","start":{"line":74,"col":7,"offset":1763},"end":{"line":74,"col":34,"offset":1790},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":7,"offset":1763},"end":{"line":74,"col":11,"offset":1767},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f488171c5f6169e57007420e1310000b599dabfe184436fb72c61bbc7d7f19cfbe08f9fa75a319e4d502f6f170549eccb217066efe3ebe57d34597dae3f4772_2","lines":"\t\tif (read(vcs, screen_buf, size) != (int)size) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/username.c","start":{"line":45,"col":18,"offset":1196},"end":{"line":45,"col":35,"offset":1213},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":45,"col":18,"offset":1196},"end":{"line":45,"col":24,"offset":1202},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"468deb8e4270a92abb44efecf70d327b852d23ea675304275a26232b41fb912e1a55de272b66220ab62e84d7af4c88303788aa103b39cc15f7226a3a8369effb_0","lines":"\tchar *logname = getenv(\"LOGNAME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vlock.c","start":{"line":48,"col":2,"offset":1313},"end":{"line":48,"col":23,"offset":1334},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":2,"offset":1313},"end":{"line":48,"col":11,"offset":1322},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c79981e014ced6ef8a3b1d17e35702cfded7de235b8a6cb573a9ec70713f40e349159ea772ce29462ac71051c7ee63cd3e53a41929022c69b436de8d28885a79_0","lines":"\tsetlocale(LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vlock.c","start":{"line":72,"col":2,"offset":1940},"end":{"line":73,"col":22,"offset":2003},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":8,"offset":1946},"end":{"line":72,"col":12,"offset":1950},"abstract_content":"pamh","propagated_value":{"svalue_start":{"line":72,"col":15,"offset":1953},"svalue_end":{"line":72,"col":41,"offset":1979},"svalue_abstract_content":"init_pam(username tty 0)"}},"$EXPR2":{"start":{"line":72,"col":15,"offset":1953},"end":{"line":72,"col":41,"offset":1979},"abstract_content":"init_pam(username tty 0)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3fcf6c6f556a64e7f8c9f64cb764d2f8681a98d1b175d06a3785a633f1efd98256ae4feb1b387c2d026500a4be0e3a578141f13a4ce724d9ffbfcace689f2fd9_0","lines":"\tif (!(pamh = init_pam(username, tty, 0)))\n\t\texit(EXIT_FAILURE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vt.c","start":{"line":134,"col":8,"offset":3234},"end":{"line":134,"col":29,"offset":3255},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":8,"offset":3234},"end":{"line":134,"col":12,"offset":3238},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"605ebd6892ea1e6c7a53afe69b4318f89a34448129699ca1aa2e0345e2aeea3b8f84fbc1a3d71829ddbca62de1a4690ba07e5ccc11764f2e28d0900ed7ac3b27_0","lines":"\tvfd = open(dev_tty, O_RDWR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vt.c","start":{"line":148,"col":3,"offset":3617},"end":{"line":149,"col":15,"offset":3695},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"0684b95ce25752bbbe6a0e38d16b14dffa1b0b819243004b0ef07e4fdee0ef73157c5cce59bdd74a38d018e1350d0ea2497aaa7fe9ab9f5ea419a1f990dbe426_0","lines":"\t\tfprintf(stderr, _(\"This tty (%s) is not a virtual console.\\n\"),\n\t\t        tty);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vt.c","start":{"line":154,"col":4,"offset":3767},"end":{"line":155,"col":64,"offset":3846},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"0684b95ce25752bbbe6a0e38d16b14dffa1b0b819243004b0ef07e4fdee0ef73157c5cce59bdd74a38d018e1350d0ea2497aaa7fe9ab9f5ea419a1f990dbe426_1","lines":"\t\t\tfprintf(stderr,\n\t\t\t        _(\"The entire console display cannot be locked.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":58,"col":2,"offset":1083},"end":{"line":91,"col":3,"offset":1996},"extra":{"metavars":{"$EXPR1":{"start":{"line":58,"col":6,"offset":1087},"end":{"line":58,"col":8,"offset":1089},"abstract_content":"wc"},"$EXPR2":{"start":{"line":58,"col":11,"offset":1092},"end":{"line":58,"col":18,"offset":1099},"abstract_content":"~Wchar2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4aad09b7033d2f626b2ed1e85ab8808bc4b7eaa3eb6409624b9345bcb0f44e1dcdbacc9249dfcf51e9853b702d366bfd0aca93ee4ca6775727d4de50804f52c_0","lines":"\tif (wc & ~Wchar2) {\n\t\tif (wc & ~Wchar4) {\n\t\t\tif (wc & ~Wchar5) {\n\t\t\t\t/* 6 bytes */\n\t\t\t\ts[0] = T6 | ((wc >> 5 * Bitx) & Mask6);\n\t\t\t\ts[1] = Tx | ((wc >> 4 * Bitx) & Maskx);\n\t\t\t\ts[2] = Tx | ((wc >> 3 * Bitx) & Maskx);\n\t\t\t\ts[3] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\t\ts[4] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\t\ts[5] = Tx | (wc & Maskx);\n\t\t\t\treturn 6;\n\t\t\t}\n\t\t\t/* 5 bytes */\n\t\t\ts[0] = T5 | (wc >> 4 * Bitx);\n\t\t\ts[1] = Tx | ((wc >> 3 * Bitx) & Maskx);\n\t\t\ts[2] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\ts[3] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\ts[4] = Tx | (wc & Maskx);\n\t\t\treturn 5;\n\t\t}\n\t\tif (wc & ~Wchar3) {\n\t\t\t/* 4 bytes */\n\t\t\ts[0] = T4 | (wc >> 3 * Bitx);\n\t\t\ts[1] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\ts[2] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\ts[3] = Tx | (wc & Maskx);\n\t\t\treturn 4;\n\t\t}\n\t\t/* 3 bytes */\n\t\ts[0] = T3 | (wc >> 2 * Bitx);\n\t\ts[1] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\ts[2] = Tx | (wc & Maskx);\n\t\treturn 3;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":59,"col":3,"offset":1105},"end":{"line":77,"col":4,"offset":1659},"extra":{"metavars":{"$EXPR1":{"start":{"line":59,"col":7,"offset":1109},"end":{"line":59,"col":9,"offset":1111},"abstract_content":"wc"},"$EXPR2":{"start":{"line":59,"col":12,"offset":1114},"end":{"line":59,"col":19,"offset":1121},"abstract_content":"~Wchar4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cda715c693e22c8fa0f675f40ca5bce3234a51b69be336e514c39085bb4eaa71719931bfda7a5706f3a6498735f68b4d2b7b96443c632aef58b8dc3c3805c02_0","lines":"\t\tif (wc & ~Wchar4) {\n\t\t\tif (wc & ~Wchar5) {\n\t\t\t\t/* 6 bytes */\n\t\t\t\ts[0] = T6 | ((wc >> 5 * Bitx) & Mask6);\n\t\t\t\ts[1] = Tx | ((wc >> 4 * Bitx) & Maskx);\n\t\t\t\ts[2] = Tx | ((wc >> 3 * Bitx) & Maskx);\n\t\t\t\ts[3] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\t\ts[4] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\t\ts[5] = Tx | (wc & Maskx);\n\t\t\t\treturn 6;\n\t\t\t}\n\t\t\t/* 5 bytes */\n\t\t\ts[0] = T5 | (wc >> 4 * Bitx);\n\t\t\ts[1] = Tx | ((wc >> 3 * Bitx) & Maskx);\n\t\t\ts[2] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\ts[3] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\ts[4] = Tx | (wc & Maskx);\n\t\t\treturn 5;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":60,"col":4,"offset":1128},"end":{"line":69,"col":5,"offset":1434},"extra":{"metavars":{"$EXPR1":{"start":{"line":60,"col":8,"offset":1132},"end":{"line":60,"col":10,"offset":1134},"abstract_content":"wc"},"$EXPR2":{"start":{"line":60,"col":13,"offset":1137},"end":{"line":60,"col":20,"offset":1144},"abstract_content":"~Wchar5"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a64dc6bf021be6915b0a9909052e3b4611bf748063202b3d741b6949d172cc6dc8172ec9c95d91a8915dacecf4a9978932481d950bbb70f3514090f3bc30858_0","lines":"\t\t\tif (wc & ~Wchar5) {\n\t\t\t\t/* 6 bytes */\n\t\t\t\ts[0] = T6 | ((wc >> 5 * Bitx) & Mask6);\n\t\t\t\ts[1] = Tx | ((wc >> 4 * Bitx) & Maskx);\n\t\t\t\ts[2] = Tx | ((wc >> 3 * Bitx) & Maskx);\n\t\t\t\ts[3] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\t\ts[4] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\t\ts[5] = Tx | (wc & Maskx);\n\t\t\t\treturn 6;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":78,"col":3,"offset":1662},"end":{"line":85,"col":4,"offset":1863},"extra":{"metavars":{"$EXPR1":{"start":{"line":78,"col":7,"offset":1666},"end":{"line":78,"col":9,"offset":1668},"abstract_content":"wc"},"$EXPR2":{"start":{"line":78,"col":12,"offset":1671},"end":{"line":78,"col":19,"offset":1678},"abstract_content":"~Wchar3"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"566eac94b194459b22691129769a6f27cd580a0617ce64ad274ef8fae9e5a9b6e6b28c5ae0ad566960761ae370b566ece60f7321c6dce0dd685fb2e7e45cef54_0","lines":"\t\tif (wc & ~Wchar3) {\n\t\t\t/* 4 bytes */\n\t\t\ts[0] = T4 | (wc >> 3 * Bitx);\n\t\t\ts[1] = Tx | ((wc >> 2 * Bitx) & Maskx);\n\t\t\ts[2] = Tx | ((wc >> 1 * Bitx) & Maskx);\n\t\t\ts[3] = Tx | (wc & Maskx);\n\t\t\treturn 4;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":92,"col":2,"offset":1998},"end":{"line":97,"col":3,"offset":2108},"extra":{"metavars":{"$EXPR1":{"start":{"line":92,"col":6,"offset":2002},"end":{"line":92,"col":8,"offset":2004},"abstract_content":"wc"},"$EXPR2":{"start":{"line":92,"col":11,"offset":2007},"end":{"line":92,"col":18,"offset":2014},"abstract_content":"~Wchar1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e48cd810c1089c8ba4c6096023f2d31ec1fda664d5b9ede651bee6dc84459f26f3d45af969b0551fcdab453d508b8dcc10bb32f037d838ee8496d01ce6b7938f_0","lines":"\tif (wc & ~Wchar1) {\n\t\t/* 2 bytes */\n\t\ts[0] = T2 | (wc >> 1 * Bitx);\n\t\ts[1] = Tx | (wc & Maskx);\n\t\treturn 2;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.c","start":{"line":18,"col":2,"offset":284},"end":{"line":18,"col":53,"offset":335},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"fcf9447dcc5846058000316ae522eec241a08c0e8354cde19afc75434b22677d11d5e94a9689aa4410e4905ac08080f888de365ba717a7cdb440c83709ecd064_0","lines":"\tfprintf(stderr, _(\"%s: out of memory\\n\"), progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.c","start":{"line":25,"col":12,"offset":396},"end":{"line":25,"col":22,"offset":406},"extra":{"metavars":{"$FUN":{"start":{"line":25,"col":12,"offset":396},"end":{"line":25,"col":18,"offset":402},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"47ef8097b07351e98d84b1c90cb8dc4337f32870d70cd0f42721898213232687891af3e69c2f23ff81e338f0df73288c47fd8c2188d0289151c1bd16ca04712d_0","lines":"\tvoid *p = malloc(sz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.c","start":{"line":34,"col":12,"offset":499},"end":{"line":34,"col":27,"offset":514},"extra":{"metavars":{"$FUN":{"start":{"line":34,"col":12,"offset":499},"end":{"line":34,"col":19,"offset":506},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35082ddbea7e3486a45dc40764a10e57ca68744ba034f70c513d58280a6978c4bc9dd91791c43a209cb4d2121bc9d68a1a170c3b7c1682bed57528cae47b04ca_0","lines":"\tvoid *p = realloc(pp, sz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.c","start":{"line":62,"col":3,"offset":792},"end":{"line":62,"col":11,"offset":800},"extra":{"metavars":{"$PTR":{"start":{"line":62,"col":8,"offset":797},"end":{"line":62,"col":9,"offset":798},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5b8c5655e26080e38a02bdb0cfc6193bc5fa9f5b30e337ec1039107f1f4d6e405faaf625d3bda9f939dbd1655532f5696c51519665915a6b76a9ec9d17dab443_0","lines":"\t\tfree(p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.c:1:\n Common.Impossible","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":45,"col":40,"offset":0},"end":{"line":47,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":50,"col":1,"offset":0},"end":{"line":50,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c:45:\n `1\n\n#ifndef` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":45,"col":40,"offset":0},"end":{"line":47,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","start":{"line":50,"col":1,"offset":0},"end":{"line":50,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/loadkeys.c:1:\n `#include \"config.h\"\n\n#include <errno.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/ioctl.h>\n#include <linux/kd.h>\n#include <linux/keyboard.h>\n#include <unistd.h>\n\n#include \"keymap.h\"\n\n#include \"nls.h\"\n#include \"kbd.h\"\n#include \"contextP.h\"\n#include \"ksyms.h\"\n\nstatic int\ndefkeys(struct lk_ctx *ctx, int fd, int kbd_mode)\n{\n\tstruct kbentry ke;\n\tint ct = 0;\n\tint i, j, fail;\n\n\tif (ctx->flags & LK_FLAG_UNICODE_MODE) {\n\t\t/* temporarily switch to K_UNICODE while defining keys */\n\t\tif (ioctl(fd, KDSKBMODE, K_UNICODE)) {\n\t\t\tERR(ctx, _(\"KDSKBMODE: %s: could not switch to Unicode mode\"),\n\t\t\t    strerror(errno));\n\t\t\tgoto fail;\n\t\t}\n\t}\n\n\tfor (i = 0; i < MAX_NR_KEYMAPS; i++) {\n\t\tunsigned int exist = lk_map_exists(ctx, i);\n\n\t\tif (exist) {\n\t\t\tfor (j = 0; j < NR_KEYS; j++) {\n\t\t\t\tif (!lk_key_exists(ctx, i, j))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tke.kb_index = j;\n\t\t\t\tke.kb_table = i;\n\t\t\t\tke.kb_value = lk_get_key(ctx, i, j);\n\n\t\t\t\tfail = ioctl(fd, KDSKBENT, (unsigned long)&ke);\n\n\t\t\t\tif (fail) {\n\t\t\t\t\tif (errno == EPERM) {\n\t\t\t\t\t\tERR(ctx, _(\"Keymap %d: Permission denied\"), i);\n\t\t\t\t\t\tj = NR_KEYS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tERR(ctx, \"%s\", strerror(errno));\n\t\t\t\t} else\n\t\t\t\t\tct++;\n\n\t\t\t\tINFO(ctx, _(\"keycode %d, table %d = %d%s\"),\n\t\t\t\t     j, i, lk_get_key(ctx, i, j), fail ? _(\"    FAILED\") : \"\");\n\n\t\t\t\tif (fail)\n\t\t\t\t\tWARN(ctx, _(\"failed to bind key %d to value %d\"),\n\t\t\t\t\t     j, lk_get_key(ctx, i, j));\n\t\t\t}\n\n\t\t} else if ((ctx->keywords & LK_KEYWORD_KEYMAPS) && !exist) {\n\t\t\t/* deallocate keymap */\n\t\t\tke.kb_index = 0;\n\t\t\tke.kb_table = i;\n\t\t\tke.kb_value = K_NOSUCHMAP;\n\n\t\t\tDBG(ctx, _(\"deallocate keymap %d\"), i);\n\n\t\t\tif (ioctl(fd, KDSKBENT, (unsigned long)&ke)) {\n\t\t\t\tif (errno != EINVAL) {\n\t\t\t\t\tERR(ctx, _(\"KDSKBENT: %s: could not deallocate keymap %d\"),\n\t\t\t\t\t    strerror(errno), i);\n\t\t\t\t\tgoto fail;\n\t\t\t\t}\n\t\t\t\t/* probably an old kernel */\n\t\t\t\t/* clear keymap by hand */\n\t\t\t\tfor (j = 0; j < NR_KEYS; j++) {\n\t\t\t\t\tke.kb_index = j;\n\t\t\t\t\tke.kb_table = i;\n\t\t\t\t\tke.kb_value = K_HOLE;\n\n\t\t\t\t\tif (ioctl(fd, KDSKBENT, (unsigned long)&ke)) {\n\t\t\t\t\t\tif (errno == EINVAL && i >= 16)\n\t\t\t\t\t\t\tbreak; /* old kernel */\n\n\t\t\t\t\t\tERR(ctx, _(\"KDSKBENT: %s: cannot deallocate or clear keymap\"),\n\t\t\t\t\t\t    strerror(errno));\n\t\t\t\t\t\tgoto fail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif ((ctx->flags & LK_FLAG_UNICODE_MODE) && ioctl(fd, KDSKBMODE, kbd_mode)) {\n\t\tERR(ctx, _(\"KDSKBMODE: %s: could not return to original keyboard mode\"),\n\t\t    strerror(errno));\n\t\tgoto fail;\n\t}\n\n\treturn ct;\n\nfail:\n\treturn -1;\n}\n\nstatic char *\nostr(struct lk_ctx *ctx, char *s)\n{\n\tint lth   = strlen(s);\n\tchar *ns0 = malloc(4 * lth + 1);\n\tchar *ns  = ns0;\n\n\tif (ns == NULL) {\n\t\tERR(ctx, _(\"out of memory\"));\n\t\treturn NULL;\n\t}\n\n\twhile (*s) {\n\t\tswitch (*s) {\n\t\t\tcase '\\n':\n\t\t\t\t*ns++ = '\\\\';\n\t\t\t\t*ns++ = 'n';\n\t\t\t\tbreak;\n\t\t\tcase '\\033':\n\t\t\t\t*ns++ = '\\\\';\n\t\t\t\t*ns++ = '0';\n\t\t\t\t*ns++ = '3';\n\t\t\t\t*ns++ = '3';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t*ns++ = *s;\n\t\t}\n\t\ts++;\n\t}\n\t*ns = 0;\n\treturn ns0;\n}\n\nstatic int\ndeffuncs(struct lk_ctx *ctx, int fd)\n{\n\tint i, ct = 0;\n\tchar *ptr, *s;\n\tstruct kbsentry kbs;\n\n\tfor (i = 0; i < MAX_NR_FUNC; i++) {\n\t\tkbs.kb_func = i;\n\n\t\tptr = lk_array_get_ptr(ctx->func_table, i);\n\n\t\tif (ptr) {\n\t\t\tstrcpy((char *)kbs.kb_string, ptr);\n\t\t\tif (ioctl(fd, KDSKBSENT, (unsigned long)&kbs)) {\n\t\t\t\ts = ostr(ctx, (char *)kbs.kb_string);\n\t\t\t\tif (s == NULL)\n\t\t\t\t\treturn -1;\n\t\t\t\tERR(ctx, _(\"failed to bind string '%s' to function %s\"),\n\t\t\t\t    s, get_sym(ctx, KT_FN, kbs.kb_func));\n\t\t\t\tfree(s);\n\t\t\t} else {\n\t\t\t\tct++;\n\t\t\t}\n\t\t} else if (ctx->flags & LK_FLAG_CLEAR_STRINGS) {\n\t\t\tkbs.kb_string[0] = 0;\n\n\t\t\tif (ioctl(fd, KDSKBSENT, (unsigned long)&kbs)) {\n\t\t\t\tERR(ctx, _(\"failed to clear string %s\"),\n\t\t\t\t    get_sym(ctx, KT_FN, kbs.kb_func));\n\t\t\t} else {\n\t\t\t\tct++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ct;\n}\n\nstatic int\ndefdiacs(struct lk_ctx *ctx, int fd)\n{\n\tunsigned int i, j, count;\n\tstruct lk_kbdiacr *ptr;\n\n\tcount = ctx->accent_table->count;\n\tif (count > MAX_DIACR) {\n\t\tcount = MAX_DIACR;\n\t\tERR(ctx, _(\"too many compose definitions\"));\n\t}\n#ifdef KDSKBDIACRUC\n\tif (ctx->flags & LK_FLAG_PREFER_UNICODE) {\n\t\tstruct kbdiacrsuc kdu;\n\n\t\tkdu.kb_cnt = count;\n\n\t\tfor (i = 0, j = 0; i < ctx->accent_table->total && j < count; i++) {\n\t\t\tptr = lk_array_get_ptr(ctx->accent_table, i);\n\t\t\tif (!ptr)\n\t\t\t\tcontinue;\n\n\t\t\tkdu.kbdiacruc[j].diacr  = ptr->diacr;\n\t\t\tkdu.kbdiacruc[j].base   = ptr->base;\n\t\t\tkdu.kbdiacruc[j].result = ptr->result;\n\t\t\tj++;\n\t\t}\n\n\t\tif (ioctl(fd, KDSKBDIACRUC, (unsigned long)&kdu)) {\n\t\t\tERR(ctx, \"KDSKBDIACRUC: %s\", strerror(errno));\n\t\t\treturn -1;\n\t\t}\n\t} else\n#endif\n\t{\n\t\tstruct kbdiacrs kd;\n\n\t\tkd.kb_cnt = count;\n\n\t\tfor (i = 0, j = 0; i < ctx->accent_table->total && j < count; i++) {\n\t\t\tptr = lk_array_get_ptr(ctx->accent_table, i);\n\t\t\tif (!ptr)\n\t\t\t\tcontinue;\n\n\t\t\tkd.kbdiacr[j].diacr  = ptr->diacr;\n\t\t\tkd.kbdiacr[j].base   = ptr->base;\n\t\t\tkd.kbdiacr[j].result = ptr->result;\n\t\t\tj++;\n\t\t}\n\n\t\tif (ioctl(fd, KDSKBDIACR, (unsigned long)&kd)) {\n\t\t\tERR(ctx, \"KDSKBDIACR: %s\", strerror(errno));\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\treturn count;\n}\n\nint lk_load_keymap(struct lk_ctx *ctx, int fd, int kbd_mode)\n{\n\tint keyct, funcct, diacct;\n\n\tif (lk_add_constants(ctx) < 0)\n\t\treturn -1;\n\n\tif ((keyct = defkeys(ctx, fd, kbd_mode)) < 0 || (funcct = deffuncs(ctx, fd)) < 0)\n\t\treturn -1;\n\n\tINFO(ctx, P_(\"\\nChanged %d key\", \"\\nChanged %d keys\", keyct), keyct);\n\tINFO(ctx, P_(\"Changed %d string\", \"Changed %d strings\", funcct), funcct);\n\n\tif (ctx->accent_table->count > 0 || ctx->flags & LK_FLAG_CLEAR_COMPOSE) {\n\t\tdiacct = defdiacs(ctx, fd);\n\n\t\tif (diacct < 0)\n\t\t\treturn -1;\n\n\t\tINFO(ctx, P_(\"Loaded %d compose definition\",\n\t\t             \"Loaded %d compose definitions\", diacct),\n\t\t     diacct);\n\n\t} else {\n\t\tINFO(ctx, _(\"(No change in compose definitions)\"));\n\t}\n\n\treturn 0;\n}\n` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/loadkeys.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":9,"offset":0},"end":{"line":229,"col":22,"offset":13}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":29,"offset":0},"end":{"line":229,"col":39,"offset":10}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":42,"offset":0},"end":{"line":231,"col":19,"offset":22}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":233,"col":1,"offset":0},"end":{"line":233,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":474,"col":1,"offset":0},"end":{"line":474,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1236,"col":1,"offset":0},"end":{"line":1237,"col":8,"offset":56}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1237,"col":34,"offset":0},"end":{"line":1237,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1440,"col":3,"offset":0},"end":{"line":1440,"col":7,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c:229:\n `struct lk_ctx` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":9,"offset":0},"end":{"line":229,"col":22,"offset":13}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":29,"offset":0},"end":{"line":229,"col":39,"offset":10}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":229,"col":42,"offset":0},"end":{"line":231,"col":19,"offset":22}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":233,"col":1,"offset":0},"end":{"line":233,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":474,"col":1,"offset":0},"end":{"line":474,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1236,"col":1,"offset":0},"end":{"line":1237,"col":8,"offset":56}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1237,"col":34,"offset":0},"end":{"line":1237,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","start":{"line":1440,"col":3,"offset":0},"end":{"line":1440,"col":7,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":190,"col":1,"offset":0},"end":{"line":190,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c:190:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","start":{"line":190,"col":1,"offset":0},"end":{"line":190,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":37,"col":1,"offset":0},"end":{"line":39,"col":6,"offset":44}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":41,"col":1,"offset":0},"end":{"line":41,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":81,"col":1,"offset":0},"end":{"line":81,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":26,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":144,"col":22,"offset":0},"end":{"line":144,"col":26,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c:37:\n `#ifdef __sparc__\n\t        \"| compose \"\n#else` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":37,"col":1,"offset":0},"end":{"line":39,"col":6,"offset":44}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":41,"col":1,"offset":0},"end":{"line":41,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":81,"col":1,"offset":0},"end":{"line":81,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":26,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","start":{"line":144,"col":22,"offset":0},"end":{"line":144,"col":26,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":37,"offset":0},"end":{"line":188,"col":41,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":53,"offset":0},"end":{"line":188,"col":56,"offset":3}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":74,"offset":0},"end":{"line":188,"col":77,"offset":3}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":220,"col":16,"offset":0},"end":{"line":220,"col":47,"offset":31}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c:188:\n `rate` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":37,"offset":0},"end":{"line":188,"col":41,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":53,"offset":0},"end":{"line":188,"col":56,"offset":3}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":188,"col":74,"offset":0},"end":{"line":188,"col":77,"offset":3}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","start":{"line":220,"col":16,"offset":0},"end":{"line":220,"col":47,"offset":31}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":237,"col":41,"offset":0},"end":{"line":237,"col":45,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":238,"col":40,"offset":0},"end":{"line":238,"col":44,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":246,"col":1,"offset":0},"end":{"line":246,"col":43,"offset":42}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":323,"col":50,"offset":0},"end":{"line":323,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":327,"col":41,"offset":0},"end":{"line":327,"col":42,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h:237:\n `char` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":237,"col":41,"offset":0},"end":{"line":237,"col":45,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":238,"col":40,"offset":0},"end":{"line":238,"col":44,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":246,"col":1,"offset":0},"end":{"line":246,"col":43,"offset":42}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":323,"col":50,"offset":0},"end":{"line":323,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","start":{"line":327,"col":41,"offset":0},"end":{"line":327,"col":42,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":165,"col":1,"offset":0},"end":{"line":412,"col":2,"offset":6196}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c:165:\n `int main(int argc, char *argv[])\n{\n\tint opt, pid, i;\n\tstruct vt_stat vtstat;\n\tint vtno         = -1;\n\tint fd           = -1;\n\tint consfd       = -1;\n\tint force        = 0;\n\tchar optc        = FALSE;\n\tchar show        = FALSE;\n\tchar login       = FALSE;\n\tchar verbose     = FALSE;\n\tchar direct_exec = FALSE;\n\tchar do_wait     = FALSE;\n\tchar as_user     = FALSE;\n\tchar vtname[sizeof(VTNAME) + 2]; /* allow 999 possible VTs */\n\tchar *cmd = NULL, *def_cmd = NULL, *username = NULL;\n\n\tstruct option long_options[] = {\n\t\t{ \"help\", no_argument, 0, 'h' },\n\t\t{ \"version\", no_argument, 0, 'V' },\n\t\t{ \"verbose\", no_argument, 0, 'v' },\n\t\t{ \"exec\", no_argument, 0, 'e' },\n\t\t{ \"force\", no_argument, 0, 'f' },\n\t\t{ \"login\", no_argument, 0, 'l' },\n\t\t{ \"user\", no_argument, 0, 'u' },\n\t\t{ \"switch\", no_argument, 0, 's' },\n\t\t{ \"wait\", no_argument, 0, 'w' },\n\t\t{ \"console\", required_argument, 0, 'c' },\n\t\t{ 0, 0, 0, 0 }\n\t};\n\n\tset_progname(argv[0]);\n\n\tsetlocale(LC_ALL, \"\");\n\tbindtextdomain(PACKAGE_NAME, LOCALEDIR);\n\ttextdomain(PACKAGE_NAME);\n\n\twhile ((opt = getopt_long(argc, argv, \"c:lsfuewhvV\", long_options, NULL)) != -1) {\n\t\tswitch (opt) {\n\t\t\tcase 'c':\n\t\t\t\toptc = 1; /* vtno was specified by the user */\n\t\t\t\tvtno = (int)atol(optarg);\n\n\t\t\t\tif (vtno <= 0 || vtno > 63)\n\t\t\t\t\tkbd_error(5, 0, _(\"%s: Illegal vt number\"), optarg);\n\n\t\t\t\t/* close security holes - until we can do this safely */\n\t\t\t\t(void)setuid(getuid());\n\t\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\t\tlogin = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tshow = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'v':\n\t\t\t\tverbose = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'f':\n\t\t\t\tforce = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tdirect_exec = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\t\tdo_wait = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'u':\n\t\t\t\t/* we'll let 'em get away with the meaningless -ul combo */\n\t\t\t\tif (getuid())\n\t\t\t\t\tkbd_error(EXIT_FAILURE, 0, _(\"Only root can use the -u flag.\"));\n\n\t\t\t\tas_user = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'V':\n\t\t\t\tprint_version_and_exit();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tcase 'h':\n\t\t\t\tprint_help(EXIT_SUCCESS);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\tstruct stat st;\n\n\t\tif (fstat(i, &st) == -1 && open(\"/dev/null\", O_RDWR) == -1)\n\t\t\tkbd_error(EXIT_FAILURE, errno, \"open(/dev/null)\");\n\t}\n\n\tif ((consfd = getfd(NULL)) < 0)\n\t\tkbd_error(2, 0, _(\"Couldn't get a file descriptor referring to the console\"));\n\n\tif (ioctl(consfd, VT_GETSTATE, &vtstat) < 0)\n\t\tkbd_error(4, errno, \"ioctl(VT_GETSTATE)\");\n\n\tif (vtno == -1) {\n\t\tif (ioctl(consfd, VT_OPENQRY, &vtno) < 0 || vtno == -1)\n\t\t\tkbd_error(3, errno, _(\"Cannot find a free vt\"));\n\n\t} else if (!force) {\n\t\tif (vtno >= 16)\n\t\t\tkbd_error(7, 0, _(\"Cannot check whether vt %d is free; use `%s -f' to force.\"),\n\t\t\t          vtno, progname);\n\n\t\tif (vtstat.v_state & (1 << vtno))\n\t\t\tkbd_error(7, 0, _(\"vt %d is in use; command aborted; use `%s -f' to force.\"),\n\t\t\t          vtno, progname);\n\t}\n\n\tif (as_user)\n\t\tusername = authenticate_user(vtstat.v_active);\n\telse {\n\t\tif (!(argc > optind)) {\n\t\t\tdef_cmd = getenv(\"SHELL\");\n\t\t\tif (def_cmd == NULL)\n\t\t\t\tkbd_error(7, 0, _(\"Unable to find command.\"));\n\t\t\tcmd = xmalloc(strlen(def_cmd) + 2);\n\t\t} else {\n\t\t\tcmd = xmalloc(strlen(argv[optind]) + 2);\n\t\t}\n\n\t\tif (login)\n\t\t\tstrcpy(cmd, \"-\");\n\t\telse\n\t\t\tcmd[0] = '\\0';\n\n\t\tif (def_cmd)\n\t\t\tstrcat(cmd, def_cmd);\n\t\telse\n\t\t\tstrcat(cmd, argv[optind]);\n\n\t\tif (login)\n\t\t\targv[optind] = cmd++;\n\t}\n\n\tif (direct_exec || ((pid = fork()) == 0)) {\n\t\t/* leave current vt */\n\t\tif (!direct_exec) {\n#ifdef ESIX_5_3_2_D\n#ifdef HAVE_SETPGRP\n\t\t\tif (setpgrp() < 0)\n#else\n\t\t\tif (1)\n#endif /* HAVE_SETPGRP */\n#else\n\t\t\tif (setsid() < 0)\n#endif /* ESIX_5_3_2_D */\n\t\t\t\tkbd_error(5, errno, _(\"Unable to set new session\"));\n\t\t}\n\n\t\tsprintf(vtname, VTNAME, vtno);\n\n\t\t/* Can we open the vt we want? */\n\t\tif ((fd = open_vt(vtname, force)) == -1) {\n\t\t\tint errsv = errno;\n\t\t\tif (!optc) {\n\t\t\t\t/* We found vtno ourselves - it is free according\n\t\t\t\t   to the kernel, but we cannot open it. Maybe X\n\t\t\t\t   used it and did a chown.  Try a few vt's more\n\t\t\t\t   before giving up. Note: the 16 is a kernel limitation. */\n\t\t\t\tfor (i = vtno + 1; i < 16; i++) {\n\t\t\t\t\tif ((vtstat.v_state & (1 << i)) == 0) {\n\t\t\t\t\t\tsprintf(vtname, VTNAME, i);\n\t\t\t\t\t\tif ((fd = open_vt(vtname, force)) >= 0) {\n\t\t\t\t\t\t\tvtno = i;\n\t\t\t\t\t\t\tgoto got_vtno;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsprintf(vtname, VTNAME, vtno);\n\t\t\t}\n\t\t\tkbd_error(5, errsv, _(\"Unable to open %s\"), vtname);\n\t\t}\n\tgot_vtno:\n\t\tif (verbose)\n\t\t\tkbd_warning(0, _(\"Using VT %s\"), vtname);\n\n\t\t/* Maybe we are suid root, and the -c option was given.\n\t\t   Check that the real user can access this VT.\n\t\t   We assume getty has made any in use VT non accessable */\n\t\tif (access(vtname, R_OK | W_OK) < 0)\n\t\t\tkbd_error(5, errno, _(\"Cannot open %s read/write\"), vtname);\n\n\t\tif (!as_user && !geteuid()) {\n\t\t\tuid_t uid = getuid();\n\t\t\tif (chown(vtname, uid, getgid()) == -1)\n\t\t\t\tkbd_error(5, errno, \"chown\");\n\t\t\tsetuid(uid);\n\t\t}\n\n\t\tif (show) {\n\t\t\tif (ioctl(fd, VT_ACTIVATE, vtno))\n\t\t\t\tkbd_error(1, errno, _(\"Couldn't activate vt %d\"), vtno);\n\n\t\t\tif (ioctl(fd, VT_WAITACTIVE, vtno))\n\t\t\t\tkbd_error(1, errno, _(\"Activation interrupted?\"));\n\t\t}\n\t\tclose(0);\n\t\tclose(1);\n\t\tclose(2);\n\t\tclose(consfd);\n\n\t\tif ((dup2(fd, 0) == -1) || (dup2(fd, 1) == -1) || (dup2(fd, 2) == -1))\n\t\t\tkbd_error(1, errno, \"dup\");\n\n\t\t/* slight problem: after \"openvt -su\" has finished, the\n\t\t   utmp entry is not removed */\n\t\tif (as_user)\n\t\t\texeclp(\"login\", \"login\", \"-f\", username, NULL);\n\t\telse if (def_cmd)\n\t\t\texeclp(cmd, def_cmd, NULL);\n\t\telse\n\t\t\texecvp(cmd, &argv[optind]);\n\n\t\tkbd_error(127, errno, \"exec\");\n\t}\n\n\tif (pid < 0)\n\t\tkbd_error(6, errno, \"fork\");\n\n\tif (do_wait) {\n\t\tint retval = 0; /* actual value returned form process */\n\n\t\twait(NULL);\n\t\twaitpid(pid, &retval, 0);\n\n\t\tif (show) { /* Switch back... */\n\t\t\tif (ioctl(consfd, VT_ACTIVATE, vtstat.v_active))\n\t\t\t\tkbd_error(8, errno, \"ioctl(VT_ACTIVATE)\");\n\n\t\t\t/* wait to be really sure we have switched */\n\t\t\tif (ioctl(consfd, VT_WAITACTIVE, vtstat.v_active))\n\t\t\t\tkbd_error(8, errno, \"ioctl(VT_WAITACTIVE)\");\n\n\t\t\tif (ioctl(consfd, VT_DISALLOCATE, vtno))\n\t\t\t\tkbd_error(8, 0, _(\"Couldn't deallocate console %d\"), vtno);\n\t\t}\n\n\t\t/* if all our stuff went right, we want to return the exit code of the command we ran\n\t\t   super vital for scripting loops etc */\n\t\treturn (retval);\n\t}\n\n\treturn EXIT_SUCCESS;\n}` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","start":{"line":165,"col":1,"offset":0},"end":{"line":412,"col":2,"offset":6196}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":165,"col":1,"offset":0},"end":{"line":417,"col":2,"offset":6301}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c:165:\n `int main(int argc, char *argv[])\n{\n\tint opt, pid, i;\n\tstruct vt_stat vtstat;\n\tint vtno         = -1;\n\tint fd           = -1;\n\tint consfd       = -1;\n\tint force        = 0;\n\tchar optc        = FALSE;\n\tchar show        = FALSE;\n\tchar login       = FALSE;\n\tchar verbose     = FALSE;\n\tchar direct_exec = FALSE;\n\tchar do_wait     = FALSE;\n\tchar as_user     = FALSE;\n\tchar vtname[sizeof(VTNAME) + 2]; /* allow 999 possible VTs */\n\tchar *cmd = NULL, *def_cmd = NULL, *username = NULL;\n\n\tstruct option long_options[] = {\n\t\t{ \"help\", no_argument, 0, 'h' },\n\t\t{ \"version\", no_argument, 0, 'V' },\n\t\t{ \"verbose\", no_argument, 0, 'v' },\n\t\t{ \"exec\", no_argument, 0, 'e' },\n\t\t{ \"force\", no_argument, 0, 'f' },\n\t\t{ \"login\", no_argument, 0, 'l' },\n\t\t{ \"user\", no_argument, 0, 'u' },\n\t\t{ \"switch\", no_argument, 0, 's' },\n\t\t{ \"wait\", no_argument, 0, 'w' },\n\t\t{ \"console\", required_argument, 0, 'c' },\n\t\t{ 0, 0, 0, 0 }\n\t};\n\n\tset_progname(argv[0]);\n\n\tsetlocale(LC_ALL, \"\");\n\tbindtextdomain(PACKAGE_NAME, LOCALEDIR);\n\ttextdomain(PACKAGE_NAME);\n\n\twhile ((opt = getopt_long(argc, argv, \"c:lsfuewhvV\", long_options, NULL)) != -1) {\n\t\tswitch (opt) {\n\t\t\tcase 'c':\n\t\t\t\toptc = 1; /* vtno was specified by the user */\n\t\t\t\tvtno = (int)atol(optarg);\n\n\t\t\t\tif (vtno <= 0 || vtno > 63)\n\t\t\t\t\tkbd_error(5, 0, _(\"%s: Illegal vt number\"), optarg);\n\n\t\t\t\t/* close security holes - until we can do this safely */\n\t\t\t\t(void)setuid(getuid());\n\t\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\t\tlogin = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tshow = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'v':\n\t\t\t\tverbose = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'f':\n\t\t\t\tforce = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tdirect_exec = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\t\tdo_wait = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'u':\n\t\t\t\t/* we'll let 'em get away with the meaningless -ul combo */\n\t\t\t\tif (getuid())\n\t\t\t\t\tkbd_error(EXIT_FAILURE, 0, _(\"Only root can use the -u flag.\"));\n\n\t\t\t\tas_user = TRUE;\n\t\t\t\tbreak;\n\t\t\tcase 'V':\n\t\t\t\tprint_version_and_exit();\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\t\tprint_help(EXIT_SUCCESS);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tprint_help(EXIT_FAILURE);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\tstruct stat st;\n\n\t\tif (fstat(i, &st) == -1 && open(\"/dev/null\", O_RDWR) == -1)\n\t\t\tkbd_error(EXIT_FAILURE, errno, \"open(/dev/null)\");\n\t}\n\n\tif ((consfd = getfd(NULL)) < 0)\n\t\tkbd_error(2, 0, _(\"Couldn't get a file descriptor referring to the console\"));\n\n\tif (ioctl(consfd, VT_GETSTATE, &vtstat) < 0)\n\t\tkbd_error(4, errno, \"ioctl(VT_GETSTATE)\");\n\n\tif (vtno == -1) {\n\t\tif (ioctl(consfd, VT_OPENQRY, &vtno) < 0 || vtno == -1)\n\t\t\tkbd_error(3, errno, _(\"Cannot find a free vt\"));\n\n\t} else if (!force) {\n\t\tif (vtno >= 16)\n\t\t\tkbd_error(7, 0, _(\"Cannot check whether vt %d is free; use `%s -f' to force.\"),\n\t\t\t          vtno, progname);\n\n\t\tif (vtstat.v_state & (1 << vtno))\n\t\t\tkbd_error(7, 0, _(\"vt %d is in use; command aborted; use `%s -f' to force.\"),\n\t\t\t          vtno, progname);\n\t}\n\n\tif (as_user)\n\t\tusername = authenticate_user(vtstat.v_active);\n\telse {\n\t\tif (!(argc > optind)) {\n\t\t\tdef_cmd = getenv(\"SHELL\");\n\t\t\tif (def_cmd == NULL)\n\t\t\t\tkbd_error(7, 0, _(\"Unable to find command.\"));\n\t\t\tcmd = xmalloc(strlen(def_cmd) + 2);\n\t\t} else {\n\t\t\tcmd = xmalloc(strlen(argv[optind]) + 2);\n\t\t}\n\n\t\tif (login)\n\t\t\tstrcpy(cmd, \"-\");\n\t\telse\n\t\t\tcmd[0] = '\\0';\n\n\t\tif (def_cmd)\n\t\t\tstrcat(cmd, def_cmd);\n\t\telse\n\t\t\tstrcat(cmd, argv[optind]);\n\n\t\tif (login)\n\t\t\targv[optind] = cmd++;\n\t}\n\n\tif (direct_exec || ((pid = fork()) == 0)) {\n\t\t/* leave current vt */\n\t\tif (!direct_exec) {\n#ifdef ESIX_5_3_2_D\n#ifdef HAVE_SETPGRP\n\t\t\tif (setpgrp() < 0)\n#else\n\t\t\tif (1)\n#endif /* HAVE_SETPGRP */\n#else\n\t\t\tif (setsid() < 0)\n#endif /* ESIX_5_3_2_D */\n\t\t\t\tkbd_error(5, errno, _(\"Unable to set new session\"));\n\t\t}\n\n\t\tsprintf(vtname, VTNAME, vtno);\n\n\t\t/* Can we open the vt we want? */\n\t\tif ((fd = open_vt(vtname, force)) == -1) {\n\t\t\tint errsv = errno;\n\t\t\tif (!optc) {\n\t\t\t\t/* We found vtno ourselves - it is free according\n\t\t\t\t   to the kernel, but we cannot open it. Maybe X\n\t\t\t\t   used it and did a chown.  Try a few vt's more\n\t\t\t\t   before giving up. Note: the 16 is a kernel limitation. */\n\t\t\t\tfor (i = vtno + 1; i < 16; i++) {\n\t\t\t\t\tif ((vtstat.v_state & (1 << i)) == 0) {\n\t\t\t\t\t\tsprintf(vtname, VTNAME, i);\n\t\t\t\t\t\tif ((fd = open_vt(vtname, force)) >= 0) {\n\t\t\t\t\t\t\tvtno = i;\n\t\t\t\t\t\t\tgoto got_vtno;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsprintf(vtname, VTNAME, vtno);\n\t\t\t}\n\t\t\tkbd_error(5, errsv, _(\"Unable to open %s\"), vtname);\n\t\t}\n\tgot_vtno:\n\t\tif (verbose)\n\t\t\tkbd_warning(0, _(\"Using VT %s\"), vtname);\n\n\t\t/* Maybe we are suid root, and the -c option was given.\n\t\t   Check that the real user can access this VT.\n\t\t   We assume getty has made any in use VT non accessable */\n\t\tif (access(vtname, R_OK | W_OK) < 0)\n\t\t\tkbd_error(5, errno, _(\"Cannot open %s read/write\"), vtname);\n\n\t\tif (!as_user && !geteuid()) {\n\t\t\tuid_t uid = getuid();\n\t\t\tif (chown(vtname, uid, getgid()) == -1)\n\t\t\t\tkbd_error(5, errno, \"chown\");\n\t\t\tsetuid(uid);\n\t\t}\n\n\t\tif (show) {\n\t\t\tif (ioctl(fd, VT_ACTIVATE, vtno))\n\t\t\t\tkbd_error(1, errno, _(\"Couldn't activate vt %d\"), vtno);\n\n\t\t\tif (ioctl(fd, VT_WAITACTIVE, vtno))\n\t\t\t\tkbd_error(1, errno, _(\"Activation interrupted?\"));\n\t\t}\n\t\tclose(0);\n\t\tclose(1);\n\t\tclose(2);\n\t\tif (consfd > 2)\n\t\t\tclose(consfd);\n\n\t\tif ((dup2(fd, 0) == -1) || (dup2(fd, 1) == -1) || (dup2(fd, 2) == -1))\n\t\t\tkbd_error(1, errno, \"dup\");\n\n\t\t/* slight problem: after \"openvt -su\" has finished, the\n\t\t   utmp entry is not removed */\n\t\tif (as_user)\n\t\t\texeclp(\"login\", \"login\", \"-f\", username, NULL);\n\t\telse if (def_cmd)\n\t\t\texeclp(cmd, def_cmd, NULL);\n\t\telse\n\t\t\texecvp(cmd, &argv[optind]);\n\n\t\tkbd_error(127, errno, \"exec\");\n\t}\n\n\tif (pid < 0)\n\t\tkbd_error(6, errno, \"fork\");\n\n\tif (do_wait) {\n\t\tint retval = 0; /* actual value returned form process */\n\n\t\twaitpid(pid, &retval, 0);\n\n\t\tif (show) { /* Switch back... */\n\t\t\tif (ioctl(consfd, VT_ACTIVATE, vtstat.v_active))\n\t\t\t\tkbd_error(8, errno, \"ioctl(VT_ACTIVATE)\");\n\n\t\t\t/* wait to be really sure we have switched */\n\t\t\tif (ioctl(consfd, VT_WAITACTIVE, vtstat.v_active))\n\t\t\t\tkbd_error(8, errno, \"ioctl(VT_WAITACTIVE)\");\n\n\t\t\tif (ioctl(consfd, VT_DISALLOCATE, vtno))\n\t\t\t\tkbd_error(8, 0, _(\"Couldn't deallocate console %d\"), vtno);\n\t\t}\n\n\t\t/* if all our stuff went right, we want to return the exit code of the command we ran\n\t\t   super vital for scripting loops etc */\n\t\tif (WIFEXITED(retval))\n\t\t\treturn WEXITSTATUS(retval);\n\t\telse\n\t\t\treturn 127;\n\t}\n\n\treturn EXIT_SUCCESS;\n}` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","start":{"line":165,"col":1,"offset":0},"end":{"line":417,"col":2,"offset":6301}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":34,"col":14,"offset":0},"end":{"line":34,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":35,"col":22,"offset":0},"end":{"line":35,"col":26,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":36,"col":20,"offset":0},"end":{"line":36,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":37,"col":22,"offset":0},"end":{"line":37,"col":24,"offset":2}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c:34:\n `priority` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":34,"col":14,"offset":0},"end":{"line":34,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":35,"col":22,"offset":0},"end":{"line":35,"col":26,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":36,"col":20,"offset":0},"end":{"line":36,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","start":{"line":37,"col":22,"offset":0},"end":{"line":37,"col":24,"offset":2}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":31,"col":16,"offset":0},"end":{"line":31,"col":19,"offset":3}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":32,"col":16,"offset":0},"end":{"line":32,"col":21,"offset":5}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":33,"col":16,"offset":0},"end":{"line":33,"col":22,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":35,"col":16,"offset":0},"end":{"line":35,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":43,"col":26,"offset":0},"end":{"line":43,"col":32,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":44,"col":31,"offset":0},"end":{"line":44,"col":37,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":45,"col":30,"offset":0},"end":{"line":45,"col":36,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":56,"col":31,"offset":0},"end":{"line":56,"col":37,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":58,"col":16,"offset":0},"end":{"line":58,"col":22,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":69,"col":23,"offset":0},"end":{"line":69,"col":29,"offset":6}},{"path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":70,"col":16,"offset":0},"end":{"line":70,"col":21,"offset":5}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c:31:\n `id0` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":31,"col":16,"offset":0},"end":{"line":31,"col":19,"offset":3}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":32,"col":16,"offset":0},"end":{"line":32,"col":21,"offset":5}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":33,"col":16,"offset":0},"end":{"line":33,"col":22,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":35,"col":16,"offset":0},"end":{"line":35,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":43,"col":26,"offset":0},"end":{"line":43,"col":32,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":44,"col":31,"offset":0},"end":{"line":44,"col":37,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":45,"col":30,"offset":0},"end":{"line":45,"col":36,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":56,"col":31,"offset":0},"end":{"line":56,"col":37,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":58,"col":16,"offset":0},"end":{"line":58,"col":22,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":69,"col":23,"offset":0},"end":{"line":69,"col":29,"offset":6}},{"file":"/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","start":{"line":70,"col":16,"offset":0},"end":{"line":70,"col":21,"offset":5}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":296,"col":1,"offset":0},"end":{"line":296,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c:296:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","start":{"line":296,"col":1,"offset":0},"end":{"line":296,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":296,"col":1,"offset":0},"end":{"line":296,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c:296:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","spans":[{"file":"/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","start":{"line":296,"col":1,"offset":0},"end":{"line":296,"col":7,"offset":6}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/kbd-2.0.4/.pc/Change-misleading-kbd_mode-message-for-XLATE-mode.patch/src/kbd_mode.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/dump.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/Support-KT_DEAD2-diacritics.patch/src/libkeymap/ksyms.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/Various-fixes-to-the-openvt-utility.patch/src/openvt.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Add-f-option-and-deny-dangerous-mode-switches-wi.patch/src/kbd_mode.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/kbd_mode-Exit-with-success-even-when-mode-change-is-not-p.patch/src/kbd_mode.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_ckbcomp.diff/src/loadkeys.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.c","/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/getfd.h","/home/capstone/Desktop/root/kbd-2.0.4/.pc/loadkeys_find_usable_console.diff/src/loadkeys.c","/home/capstone/Desktop/root/kbd-2.0.4/contrib/codepage.c","/home/capstone/Desktop/root/kbd-2.0.4/contrib/dropkeymaps.c","/home/capstone/Desktop/root/kbd-2.0.4/contrib/splitfont.c","/home/capstone/Desktop/root/kbd-2.0.4/contrib/sti.c","/home/capstone/Desktop/root/kbd-2.0.4/contrib/vcstime.c","/home/capstone/Desktop/root/kbd-2.0.4/src/chvt.c","/home/capstone/Desktop/root/kbd-2.0.4/src/clrunimap.c","/home/capstone/Desktop/root/kbd-2.0.4/src/deallocvt.c","/home/capstone/Desktop/root/kbd-2.0.4/src/dumpkeys.c","/home/capstone/Desktop/root/kbd-2.0.4/src/fgconsole.c","/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.c","/home/capstone/Desktop/root/kbd-2.0.4/src/getfd.h","/home/capstone/Desktop/root/kbd-2.0.4/src/getkeycodes.c","/home/capstone/Desktop/root/kbd-2.0.4/src/getunimap.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kbd.h","/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_error.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_error.h","/home/capstone/Desktop/root/kbd-2.0.4/src/kbd_mode.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kbdinfo.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kbdrate.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kdfontop.h","/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.c","/home/capstone/Desktop/root/kbd-2.0.4/src/kdmapop.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/analyze.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/array.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/common.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/contextP.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/diacr.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/dump.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/findfile.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/func.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kernel.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/array.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/charset.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/common.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/context.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/dump.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/findfile.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/kernel.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/kmap.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap/logging.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/keymap.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/kmap.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/ksyms.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/loadkeys.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/modifiers.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/modifiers.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/parser.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/summary.c","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.cp1250.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.ethiopic.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.iso8859_15.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.iso8859_5.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.iso8859_7.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.iso8859_8.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.iso8859_9.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.koi8.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.ktyp.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.latin1.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.latin2.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.latin3.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.latin4.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.mazovia.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.sami.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.synonyms.h","/home/capstone/Desktop/root/kbd-2.0.4/src/libkeymap/syms.thai.h","/home/capstone/Desktop/root/kbd-2.0.4/src/loadkeys.c","/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.c","/home/capstone/Desktop/root/kbd-2.0.4/src/loadunimap.h","/home/capstone/Desktop/root/kbd-2.0.4/src/mapscrn.c","/home/capstone/Desktop/root/kbd-2.0.4/src/nls.h","/home/capstone/Desktop/root/kbd-2.0.4/src/openvt.c","/home/capstone/Desktop/root/kbd-2.0.4/src/outpsfheader.c","/home/capstone/Desktop/root/kbd-2.0.4/src/paths.h","/home/capstone/Desktop/root/kbd-2.0.4/src/psf.h","/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.c","/home/capstone/Desktop/root/kbd-2.0.4/src/psffontop.h","/home/capstone/Desktop/root/kbd-2.0.4/src/psfxtable.c","/home/capstone/Desktop/root/kbd-2.0.4/src/resizecons.c","/home/capstone/Desktop/root/kbd-2.0.4/src/screendump.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setfont.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setkeycodes.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setleds.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setlogcons.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setmetamode.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setpalette.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setvesablank.c","/home/capstone/Desktop/root/kbd-2.0.4/src/setvtrgb.c","/home/capstone/Desktop/root/kbd-2.0.4/src/showconsolefont.c","/home/capstone/Desktop/root/kbd-2.0.4/src/showkey.c","/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_console.c","/home/capstone/Desktop/root/kbd-2.0.4/src/spawn_login.c","/home/capstone/Desktop/root/kbd-2.0.4/src/totextmode.c","/home/capstone/Desktop/root/kbd-2.0.4/src/utf8.c","/home/capstone/Desktop/root/kbd-2.0.4/src/utf8.h","/home/capstone/Desktop/root/kbd-2.0.4/src/version.h","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/auth.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/pam.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/pam_auth.h","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/parse.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/screen.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/username.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vlock.c","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vlock.h","/home/capstone/Desktop/root/kbd-2.0.4/src/vlock/vt.c","/home/capstone/Desktop/root/kbd-2.0.4/src/wctomb.c","/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.c","/home/capstone/Desktop/root/kbd-2.0.4/src/xmalloc.h"]},"interfile_languages_used":[],"skipped_rules":[]}