{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":224,"col":10,"offset":7488},"end":{"line":224,"col":15,"offset":7493},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":224,"col":10,"offset":7488},"end":{"line":224,"col":11,"offset":7489},"abstract_content":"i"},"$SIGNED":{"start":{"line":224,"col":14,"offset":7492},"end":{"line":224,"col":15,"offset":7493},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8ae331b0f5d65bfe8541523eec41933d46b32362abc7eaa53d511e1b178a93fa78f6be5d6056ee5ea6af9cbb5728e762514eb28274725994f8cca0f2c8aca5f7_0","lines":"    for (i = 0; i < NUM_FC_CONSTANTS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":236,"col":5,"offset":7726},"end":{"line":240,"col":6,"offset":7811},"extra":{"metavars":{"$EXPR1":{"start":{"line":236,"col":10,"offset":7731},"end":{"line":236,"col":11,"offset":7732},"abstract_content":"c","propagated_value":{"svalue_start":{"line":236,"col":14,"offset":7735},"svalue_end":{"line":236,"col":39,"offset":7760},"svalue_abstract_content":"FcNameGetConstant(string)"}},"$EXPR2":{"start":{"line":236,"col":14,"offset":7735},"end":{"line":236,"col":39,"offset":7760},"abstract_content":"FcNameGetConstant(string)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"61691657e4e8281fcde756bb02c05d692a7d15970d49c8f5efc48b4639ce534067590f1905b30ee99b3385279a9b27104bd3bf05581571071e9cd3ef37c21619_0","lines":"    if ((c = FcNameGetConstant(string)))\n    {\n\t*result = c->value;\n\treturn FcTrue;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":268,"col":2,"offset":8256},"end":{"line":268,"col":11,"offset":8265},"extra":{"metavars":{"$NARROW":{"start":{"line":268,"col":2,"offset":8256},"end":{"line":268,"col":4,"offset":8258},"abstract_content":"c1"},"$LARGE":{"start":{"line":268,"col":9,"offset":8263},"end":{"line":268,"col":10,"offset":8264},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"115c55d49d167869aa06bb7c09dbb592fbd87fcb2bfa9df59c2d8c3ae621b31778604aa9e88e1872540eb424aa49d13adde2b95bafdc8157d174c876040132ba_0","lines":"\tc1 = v[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":301,"col":14,"offset":8765},"end":{"line":301,"col":36,"offset":8787},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"2a7cad8550a3cd5b0ad600d7aec6ea02b20a7afb69da49353640661720fe9d2a68158f4d2211bac1cd8d92797980c3c44e52c672ed4f6b0391a41c0f0e58b295_0","lines":"\t    v.u.i = atoi ((char *) string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":317,"col":2,"offset":9094},"end":{"line":317,"col":73,"offset":9165},"extra":{"metavars":{"$FUN":{"start":{"line":317,"col":2,"offset":9094},"end":{"line":317,"col":8,"offset":9100},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"170b78efce57f673870785361a42d1b698845c9573a2f1c2783bf74cdde9c86de21993b3e873c8c47281acf0a1a0c3817bd5583cb7a00156be97f71204384497_0","lines":"\tsscanf ((char *) string, \"%lg %lg %lg %lg\", &m.xx, &m.xy, &m.yx, &m.yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":317,"col":2,"offset":9094},"end":{"line":317,"col":73,"offset":9165},"extra":{"metavars":{"$FUN":{"start":{"line":317,"col":2,"offset":9094},"end":{"line":317,"col":8,"offset":9100},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"df041030c0a85c01bbbb4b01fa025546e8c865f393f4c15a2cd6c269fb11253465366a79a39571fcf6a731d8090df37b4d96f19b65b93f14654b84b69dd6501f_0","lines":"\tsscanf ((char *) string, \"%lg %lg %lg %lg\", &m.xx, &m.xy, &m.yx, &m.yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":331,"col":6,"offset":9448},"end":{"line":331,"col":51,"offset":9493},"extra":{"metavars":{"$FUN":{"start":{"line":331,"col":6,"offset":9448},"end":{"line":331,"col":12,"offset":9454},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"170b78efce57f673870785361a42d1b698845c9573a2f1c2783bf74cdde9c86de21993b3e873c8c47281acf0a1a0c3817bd5583cb7a00156be97f71204384497_1","lines":"\tif (sscanf ((char *) string, \"[%lg %lg]\", &b, &e) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":337,"col":11,"offset":9601},"end":{"line":337,"col":27,"offset":9617},"extra":{"metavars":{"$FUN":{"start":{"line":337,"col":11,"offset":9601},"end":{"line":337,"col":17,"offset":9607},"abstract_content":"malloc"},"$X":{"start":{"line":337,"col":19,"offset":9609},"end":{"line":337,"col":22,"offset":9612},"abstract_content":"len","propagated_value":{"svalue_start":{"line":334,"col":19,"offset":9541},"svalue_end":{"line":334,"col":49,"offset":9571},"svalue_abstract_content":"strlen((const char*string)"}},"$Y":{"start":{"line":337,"col":25,"offset":9615},"end":{"line":337,"col":26,"offset":9616},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e73c42ca0dd52bd70ad9c998619e62390283e253aa5b65703fb63917a33e3992a1db76c5a7b7fb0221d3d70070aa3b0b1c2d8b54cb15fe6200d1c18aa37e910_0","lines":"\t    sc = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":337,"col":11,"offset":9601},"end":{"line":337,"col":27,"offset":9617},"extra":{"metavars":{"$FUN":{"start":{"line":337,"col":11,"offset":9601},"end":{"line":337,"col":17,"offset":9607},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c41f03d5e2c267c6c3a627fa5742b4c6c5175a1bb6e333a4a794e4d3dcf16184bb50f84211259ed3174555e9c1f9da5015cb53a83723f0a2709438c6df3f635e_0","lines":"\t    sc = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":338,"col":11,"offset":9629},"end":{"line":338,"col":27,"offset":9645},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":11,"offset":9629},"end":{"line":338,"col":17,"offset":9635},"abstract_content":"malloc"},"$X":{"start":{"line":338,"col":19,"offset":9637},"end":{"line":338,"col":22,"offset":9640},"abstract_content":"len","propagated_value":{"svalue_start":{"line":334,"col":19,"offset":9541},"svalue_end":{"line":334,"col":49,"offset":9571},"svalue_abstract_content":"strlen((const char*string)"}},"$Y":{"start":{"line":338,"col":25,"offset":9643},"end":{"line":338,"col":26,"offset":9644},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e73c42ca0dd52bd70ad9c998619e62390283e253aa5b65703fb63917a33e3992a1db76c5a7b7fb0221d3d70070aa3b0b1c2d8b54cb15fe6200d1c18aa37e910_1","lines":"\t    ec = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":338,"col":11,"offset":9629},"end":{"line":338,"col":27,"offset":9645},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":11,"offset":9629},"end":{"line":338,"col":17,"offset":9635},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c41f03d5e2c267c6c3a627fa5742b4c6c5175a1bb6e333a4a794e4d3dcf16184bb50f84211259ed3174555e9c1f9da5015cb53a83723f0a2709438c6df3f635e_1","lines":"\t    ec = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-scanf-etc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":339,"col":22,"offset":9668},"end":{"line":339,"col":68,"offset":9714},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"[%s %[^]]]\""},"$BUF":{"start":{"line":339,"col":30,"offset":9676},"end":{"line":339,"col":45,"offset":9691},"abstract_content":"(char*string"},"$FMT":{"start":{"line":339,"col":47,"offset":9693},"end":{"line":339,"col":59,"offset":9705},"abstract_content":"\"[%s %[^]]]\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"a53d9b20fd2d8bb62c0ac67aa486c101b5afa83a9cf7a0077a7a38ed470938e632d9c8f9941866ed5dd4fabbbb2a4ef63954a954cacd8eb1430fd5fc2ab10d99_0","lines":"\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":339,"col":22,"offset":9668},"end":{"line":339,"col":68,"offset":9714},"extra":{"metavars":{"$FUN":{"start":{"line":339,"col":22,"offset":9668},"end":{"line":339,"col":28,"offset":9674},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"170b78efce57f673870785361a42d1b698845c9573a2f1c2783bf74cdde9c86de21993b3e873c8c47281acf0a1a0c3817bd5583cb7a00156be97f71204384497_2","lines":"\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":390,"col":6,"offset":10574},"end":{"line":391,"col":9,"offset":10599},"extra":{"metavars":{"$EXPR1":{"start":{"line":390,"col":12,"offset":10580},"end":{"line":390,"col":13,"offset":10581},"abstract_content":"c"},"$EXPR2":{"start":{"line":390,"col":16,"offset":10584},"end":{"line":390,"col":20,"offset":10588},"abstract_content":"*cur"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7d1865bfd5ce0d2f0d3d89c61c1b99aa300e95a3d5db8dda103f1b4246ebea689a3fec44e4904cbd4ba9c66e89bf6acf781afdb1631ded8d7833136aa9bd4d3_0","lines":"\t    if (!(c = *cur))\n\t\tbreak;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":418,"col":12,"offset":10989},"end":{"line":418,"col":47,"offset":11024},"extra":{"metavars":{"$FUN":{"start":{"line":418,"col":12,"offset":10989},"end":{"line":418,"col":18,"offset":10995},"abstract_content":"malloc"},"$X":{"start":{"line":418,"col":20,"offset":10997},"end":{"line":418,"col":42,"offset":11019},"abstract_content":"strlen((char*name)"},"$Y":{"start":{"line":418,"col":45,"offset":11022},"end":{"line":418,"col":46,"offset":11023},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"00ce4e0127791927fd2c416a06e7b40befee226e75442a6e8d5c25481d1c108f3a74eab7d828f7ccf0f010a8b8d6c9800c63880dde28685fb0158e946d12f5e6_0","lines":"    save = malloc (strlen ((char *) name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":418,"col":12,"offset":10989},"end":{"line":418,"col":47,"offset":11024},"extra":{"metavars":{"$FUN":{"start":{"line":418,"col":12,"offset":10989},"end":{"line":418,"col":18,"offset":10995},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c41f03d5e2c267c6c3a627fa5742b4c6c5175a1bb6e333a4a794e4d3dcf16184bb50f84211259ed3174555e9c1f9da5015cb53a83723f0a2709438c6df3f635e_2","lines":"    save = malloc (strlen ((char *) name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":478,"col":3,"offset":12109},"end":{"line":500,"col":4,"offset":12654},"extra":{"metavars":{"$EXPR1":{"start":{"line":478,"col":8,"offset":12114},"end":{"line":478,"col":9,"offset":12115},"abstract_content":"c","propagated_value":{"svalue_start":{"line":478,"col":12,"offset":12118},"svalue_end":{"line":478,"col":36,"offset":12142},"svalue_abstract_content":"FcNameGetConstant(save)"}},"$EXPR2":{"start":{"line":478,"col":12,"offset":12118},"end":{"line":478,"col":36,"offset":12142},"abstract_content":"FcNameGetConstant(save)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0a665a24a8c802a8ccce350b13c63326fad1f17b186fb2e801583e1d831c83fdcab5bccd671647a0d9f1062c560f5f4dee64940df8be04e0c3069e4549b5e3fe_0","lines":"\t\tif ((c = FcNameGetConstant (save)))\n\t\t{\n\t\t    t = FcNameGetObjectType ((char *) c->object);\n\t\t    if (t == NULL)\n\t\t\tgoto bail2;\n\t\t    switch ((int) t->type) {\n\t\t    case FcTypeInteger:\n\t\t    case FcTypeDouble:\n\t\t\tif (!FcPatternAddInteger (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    case FcTypeBool:\n\t\t\tif (!FcPatternAddBool (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    case FcTypeRange:\n\t\t\tif (!FcPatternAddInteger (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    default:\n\t\t\tbreak;\n\t\t    }\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":511,"col":5,"offset":12752},"end":{"line":511,"col":9,"offset":12756},"extra":{"metavars":{"$PTR":{"start":{"line":505,"col":11,"offset":12682},"end":{"line":505,"col":15,"offset":12686},"abstract_content":"save"},"$FREE":{"start":{"line":511,"col":5,"offset":12752},"end":{"line":511,"col":9,"offset":12756},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"bbb469cbe57fafe34e6424080c19132da9a7eb272eb2e8bdefa1e4ff28a8edd701930905643e51c4b58fe3bf9f18ec88ec9d63132d09b681d02f4af939c1cc65_0","lines":"    free (save);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":542,"col":13,"offset":13313},"end":{"line":542,"col":19,"offset":13319},"extra":{"metavars":{"$VAR":{"start":{"line":542,"col":13,"offset":13313},"end":{"line":542,"col":19,"offset":13319},"abstract_content":"v.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b3a1a72cc822682d9599fca9798c70866ee6921cc7e2bf66d1c65aa06711680a43a7c72228b0089729e1a6b041b19c9cccc180d3c740641e6f409d4a4dfe6f6b_0","lines":"    switch (v.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":547,"col":2,"offset":13409},"end":{"line":547,"col":38,"offset":13445},"extra":{"metavars":{"$FUN":{"start":{"line":547,"col":2,"offset":13409},"end":{"line":547,"col":9,"offset":13416},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaa0e75e4c98d3e3d7fb0fb3049db2e6521e1abffa28520ac2a075cdcdbbc7b7d2b49edc0ac80c06765bb616f2c0eafb92de4f6fe7afa4e2ad00e6dfcb7b47d1_0","lines":"\tsprintf ((char *) temp, \"%d\", v.u.i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":550,"col":2,"offset":13515},"end":{"line":550,"col":38,"offset":13551},"extra":{"metavars":{"$FUN":{"start":{"line":550,"col":2,"offset":13515},"end":{"line":550,"col":9,"offset":13522},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaa0e75e4c98d3e3d7fb0fb3049db2e6521e1abffa28520ac2a075cdcdbbc7b7d2b49edc0ac80c06765bb616f2c0eafb92de4f6fe7afa4e2ad00e6dfcb7b47d1_1","lines":"\tsprintf ((char *) temp, \"%g\", v.u.d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":560,"col":2,"offset":13901},"end":{"line":561,"col":47,"offset":13986},"extra":{"metavars":{"$FUN":{"start":{"line":560,"col":2,"offset":13901},"end":{"line":560,"col":9,"offset":13908},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaa0e75e4c98d3e3d7fb0fb3049db2e6521e1abffa28520ac2a075cdcdbbc7b7d2b49edc0ac80c06765bb616f2c0eafb92de4f6fe7afa4e2ad00e6dfcb7b47d1_2","lines":"\tsprintf ((char *) temp, \"%g %g %g %g\",\n\t\t v.u.m->xx, v.u.m->xy, v.u.m->yx, v.u.m->yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":570,"col":2,"offset":14228},"end":{"line":570,"col":62,"offset":14288},"extra":{"metavars":{"$FUN":{"start":{"line":570,"col":2,"offset":14228},"end":{"line":570,"col":9,"offset":14235},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaa0e75e4c98d3e3d7fb0fb3049db2e6521e1abffa28520ac2a075cdcdbbc7b7d2b49edc0ac80c06765bb616f2c0eafb92de4f6fe7afa4e2ad00e6dfcb7b47d1_3","lines":"\tsprintf ((char *) temp, \"[%g %g]\", v.u.r->begin, v.u.r->end);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":43,"offset":1514},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cc4ed03723453413040bb136a8fc6667e223bb5f83d279e74a4b5f520f32394ea26609a26d873d71ace19645bc8d60c2f0352941c6ace887bb3d55f1af28aac0_0","lines":"    if (lstat ((const char *)file, &statb) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":43,"offset":1514},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":14,"offset":1485},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e22210923a37e1f07f3e9b124f67761266de361f8ced21543e0418acf9659aefdb718a9e3af83b04b2ae2fb49d49a38e7ce32c63a23e39890977be9e2c0d4c1e_0","lines":"    if (lstat ((const char *)file, &statb) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":72,"col":5,"offset":2014},"end":{"line":76,"col":6,"offset":2114},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":9,"offset":2018},"end":{"line":72,"col":19,"offset":2028},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":72,"col":22,"offset":2031},"end":{"line":72,"col":33,"offset":2042},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0071388a1e43324bc44fc35f02f7e5ceadd5844f02bf809ef4deba730b75fbdf54413d78cd147a246c04602b24f97c85e689fb236f04208cc4bee7c58663688_0","lines":"    if (FcDebug () & FC_DBG_SCAN)\n    {\n\tprintf (\"\\tScanning file %s...\", file);\n\tfflush (stdout);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":81,"col":5,"offset":2195},"end":{"line":82,"col":20,"offset":2244},"extra":{"metavars":{"$EXPR1":{"start":{"line":81,"col":9,"offset":2199},"end":{"line":81,"col":19,"offset":2209},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":81,"col":22,"offset":2212},"end":{"line":81,"col":33,"offset":2223},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0071388a1e43324bc44fc35f02f7e5ceadd5844f02bf809ef4deba730b75fbdf54413d78cd147a246c04602b24f97c85e689fb236f04208cc4bee7c58663688_1","lines":"    if (FcDebug () & FC_DBG_SCAN)\n\tprintf (\"done\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":117,"col":2,"offset":3096},"end":{"line":121,"col":3,"offset":3198},"extra":{"metavars":{"$EXPR1":{"start":{"line":117,"col":6,"offset":3100},"end":{"line":117,"col":15,"offset":3109},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":117,"col":18,"offset":3112},"end":{"line":117,"col":30,"offset":3124},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f23ab46cfba410a2c3375ea7153589615edc743433251a4b91e9432a1f7a34c672f953f603920f4a9b7447e9326a448ea8d627df7942a1b142747e2a89129b2c_0","lines":"\tif (FcDebug() & FC_DBG_SCANV)\n\t{\n\t    printf (\"Final font pattern:\\n\");\n\t    FcPatternPrint (font);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":80,"offset":4775},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":30,"offset":4725},"abstract_content":"malloc"},"$X":{"start":{"line":204,"col":32,"offset":4727},"end":{"line":204,"col":75,"offset":4770},"abstract_content":"strlen((char*dir)+1+FC_MAX_FILE_LEN"},"$Y":{"start":{"line":204,"col":78,"offset":4773},"end":{"line":204,"col":79,"offset":4774},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa84780c4f0927e7d32ca0babc08b6172141511877daa23b7d00395614098374d31dc08615bedcb04809c66adbf06ec0cd0a593935921d6287e49d4a4cbdf491_0","lines":"    file = (FcChar8 *) malloc (strlen ((char *) dir) + 1 + FC_MAX_FILE_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":80,"offset":4775},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":30,"offset":4725},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"036184af65c45f83960e2dcc2b5c533c632ee7b326d222cca63be6285481d9553d06f70976c562de345fa049ccbda8209d72b3775b062dc3437931cb7a2823c2_0","lines":"    file = (FcChar8 *) malloc (strlen ((char *) dir) + 1 + FC_MAX_FILE_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":41,"offset":4869},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"51fe10cf7f40a5421e679e0aa06baab46755b8c3444c20291b2a0d2b399f4e1490de6ab1cf15a3efa84226d5f82aad8a0967909a7523a6cc9849a72ec6886992_0","lines":"    strcpy ((char *) file, (char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":41,"offset":4869},"extra":{"metavars":{"$FUN":{"start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":11,"offset":4839},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9dd103855141f370dccb98b1ee7b3f4bcf7e5d657897c329cf1a5ba0c3b6cd1ff6aa6f852dfced8ddfd89624b172eec122d34b87f2c3e7e34f5ddd60fc29f1_0","lines":"    strcpy ((char *) file, (char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":211,"col":5,"offset":4875},"end":{"line":211,"col":32,"offset":4902},"extra":{"metavars":{"$FUN":{"start":{"line":211,"col":5,"offset":4875},"end":{"line":211,"col":11,"offset":4881},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e7f144ffaa8a29dcc199f9d11b9076b1c6b4d134a09c8e466a340f1339170391f52f331ac833432269774052c36c992bb0c856dceaf4800c7821a9adb0849bb2_0","lines":"    strcat ((char *) file, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":214,"col":5,"offset":4951},"end":{"line":215,"col":38,"offset":5018},"extra":{"metavars":{"$EXPR1":{"start":{"line":214,"col":9,"offset":4955},"end":{"line":214,"col":19,"offset":4965},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":214,"col":22,"offset":4968},"end":{"line":214,"col":33,"offset":4979},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0071388a1e43324bc44fc35f02f7e5ceadd5844f02bf809ef4deba730b75fbdf54413d78cd147a246c04602b24f97c85e689fb236f04208cc4bee7c58663688_2","lines":"    if (FcDebug () & FC_DBG_SCAN)\n\tprintf (\"\\tScanning dir %s\\n\", dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":48,"offset":5461},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"51fe10cf7f40a5421e679e0aa06baab46755b8c3444c20291b2a0d2b399f4e1490de6ab1cf15a3efa84226d5f82aad8a0967909a7523a6cc9849a72ec6886992_1","lines":"\t    strcpy ((char *) base, (char *) e->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":48,"offset":5461},"extra":{"metavars":{"$FUN":{"start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":12,"offset":5425},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9dd103855141f370dccb98b1ee7b3f4bcf7e5d657897c329cf1a5ba0c3b6cd1ff6aa6f852dfced8ddfd89624b172eec122d34b87f2c3e7e34f5ddd60fc29f1_1","lines":"\t    strcpy ((char *) base, (char *) e->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":301,"col":5,"offset":6717},"end":{"line":302,"col":36,"offset":6785},"extra":{"metavars":{"$EXPR1":{"start":{"line":301,"col":9,"offset":6721},"end":{"line":301,"col":19,"offset":6731},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":301,"col":22,"offset":6734},"end":{"line":301,"col":36,"offset":6748},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eb27d246bab69a59677433852ed98472abf69a1ce921935ae7cccd246176d8456cd5050b5820958eb0b4753904e4827991bd262c185aac73436098c518bde9e3_0","lines":"    if (FcDebug () & FC_DBG_FONTSET)\n\tprintf (\"cache scan dir %s\\n\", d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":108,"col":14,"offset":2514},"end":{"line":108,"col":40,"offset":2540},"extra":{"metavars":{"$FUN":{"start":{"line":108,"col":14,"offset":2514},"end":{"line":108,"col":20,"offset":2520},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_0","lines":"    config = malloc (sizeof (FcConfig));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":273,"col":13,"offset":6607},"end":{"line":273,"col":41,"offset":6635},"extra":{"metavars":{"$FUN":{"start":{"line":273,"col":13,"offset":6607},"end":{"line":273,"col":19,"offset":6613},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_1","lines":"\tnew_page = malloc (sizeof (FcExprPage));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":333,"col":7,"offset":7996},"end":{"line":333,"col":19,"offset":8008},"extra":{"metavars":{"$PTR":{"start":{"line":333,"col":13,"offset":8002},"end":{"line":333,"col":17,"offset":8006},"abstract_content":"page"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aa4331a38923d90cf08cb6971b07d2892df7bfa16057e26507c2717e499e25ce091554fd512931689941a972a9f723d2434716c49b1c8c7e5d756adf70106755_0","lines":"      free (page);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":341,"col":5,"offset":8140},"end":{"line":341,"col":19,"offset":8154},"extra":{"metavars":{"$PTR":{"start":{"line":341,"col":11,"offset":8146},"end":{"line":341,"col":17,"offset":8152},"abstract_content":"config"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"df49d74432bdfa1191c344330f563460e81d86696881dbed08c8999dc19b7c3a99b661a60122be4605aeab061714b9dba6cc4f6fa4dec2a662ed1520f5a949e4_0","lines":"    free (config);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":389,"col":7,"offset":9186},"end":{"line":389,"col":34,"offset":9213},"extra":{"metavars":{"$PTR":{"start":{"line":389,"col":13,"offset":9192},"end":{"line":389,"col":32,"offset":9211},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd58e52be6026bd515da0f3f8655ef43154974e1fd92c0d57b0bfefeb5b37031f2dd50db4ffe5f02c884206dc5eb4b7c9828c217ddd96903e13c6a895dbb91fe_0","lines":"\t\t    free (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":399,"col":3,"offset":9363},"end":{"line":399,"col":30,"offset":9390},"extra":{"metavars":{"$PTR":{"start":{"line":399,"col":9,"offset":9369},"end":{"line":399,"col":28,"offset":9388},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd58e52be6026bd515da0f3f8655ef43154974e1fd92c0d57b0bfefeb5b37031f2dd50db4ffe5f02c884206dc5eb4b7c9828c217ddd96903e13c6a895dbb91fe_1","lines":"\t\tfree (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":406,"col":8,"offset":9531},"end":{"line":406,"col":35,"offset":9558},"extra":{"metavars":{"$PTR":{"start":{"line":406,"col":14,"offset":9537},"end":{"line":406,"col":33,"offset":9556},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd58e52be6026bd515da0f3f8655ef43154974e1fd92c0d57b0bfefeb5b37031f2dd50db4ffe5f02c884206dc5eb4b7c9828c217ddd96903e13c6a895dbb91fe_2","lines":"\t      free (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":454,"col":2,"offset":10471},"end":{"line":455,"col":45,"offset":10548},"extra":{"metavars":{"$EXPR1":{"start":{"line":454,"col":6,"offset":10475},"end":{"line":454,"col":16,"offset":10485},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":454,"col":19,"offset":10488},"end":{"line":454,"col":33,"offset":10502},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21a1e50452f8060d537f7e849d73d9d36d443b854bc381229707ba9d17e55eb5ea24fd7a28d466b8d555c117a4d0815401218a0ec2a9a21354274c9a29edcb01_0","lines":"\tif (FcDebug () & FC_DBG_FONTSET)\n\t    printf (\"adding fonts from %s\\n\", dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":491,"col":5,"offset":11253},"end":{"line":492,"col":25,"offset":11310},"extra":{"metavars":{"$EXPR1":{"start":{"line":491,"col":9,"offset":11257},"end":{"line":491,"col":19,"offset":11267},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":491,"col":22,"offset":11270},"end":{"line":491,"col":36,"offset":11284},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21a1e50452f8060d537f7e849d73d9d36d443b854bc381229707ba9d17e55eb5ea24fd7a28d466b8d555c117a4d0815401218a0ec2a9a21354274c9a29edcb01_1","lines":"    if (FcDebug () & FC_DBG_FONTSET)\n\tFcFontSetPrint (fonts);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":39,"offset":16428},"extra":{"metavars":{"$NARROW":{"start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":15,"offset":16404},"abstract_content":"flags"},"$LARGE":{"start":{"line":778,"col":35,"offset":16424},"end":{"line":778,"col":38,"offset":16427},"abstract_content":"op_"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ac55558cd722efc3bcb9faebfed0f7181dd5d01f797e829907bb7fe0b08664d519c6ce1c6b712e2e46121e706c9f85cd7d052e0027873fa20725a4a7385c2e92_0","lines":"    int\t\tflags = FC_OP_GET_FLAGS (op_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":39,"offset":16428},"extra":{"metavars":{"$SIGNED":{"start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":15,"offset":16404},"abstract_content":"flags"},"$UNSIGNED":{"start":{"line":778,"col":35,"offset":16424},"end":{"line":778,"col":38,"offset":16427},"abstract_content":"op_"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fc5e38151bb5738f997d1e9a5d9a7501e07ab4713f98aa55f404977f9a75c09bfc6e4cfe47190e509c7bd21db5fca3ab7a75c434a3ffd5f2e672775a04e90daf_0","lines":"    int\t\tflags = FC_OP_GET_FLAGS (op_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":785,"col":10,"offset":16617},"end":{"line":785,"col":19,"offset":16626},"extra":{"metavars":{"$VAR":{"start":{"line":785,"col":10,"offset":16617},"end":{"line":785,"col":19,"offset":16626},"abstract_content":"left.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cacd201ba3986c2dc857ced82b1e5e9400e8144de4dfc35c1160e2b601ea9a8c810b9b65551db96905e7744b5ef7fc39eb3c72c53e92ed3a2c66971909a1ad28_0","lines":"\tswitch (left.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":795,"col":3,"offset":16915},"end":{"line":795,"col":31,"offset":16943},"extra":{"metavars":{"$EXPR1":{"start":{"line":795,"col":9,"offset":16921},"end":{"line":795,"col":17,"offset":16929},"abstract_content":"left.u.d"},"$EXPR2":{"start":{"line":795,"col":21,"offset":16933},"end":{"line":795,"col":30,"offset":16942},"abstract_content":"right.u.d"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"019c8d589f5c583d006a4e2be211bb30c69a1a5e5a12e516769ad25c3e372ec0b8ae4d68a9d3128ad59cf113a0cc3f0b0dd348f0027f9d09fb4a84ac044f83f1_0","lines":"\t\tret = left.u.d == right.u.d;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":820,"col":3,"offset":17400},"end":{"line":820,"col":31,"offset":17428},"extra":{"metavars":{"$EXPR1":{"start":{"line":820,"col":9,"offset":17406},"end":{"line":820,"col":17,"offset":17414},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":820,"col":21,"offset":17418},"end":{"line":820,"col":30,"offset":17427},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cdbd9ea0944a2f1f69865381c8fbaa327f0c058185e5f28518df43e97db435aced44a75afe3c67c8b2dd0c8253c996e35cbc603c661f57c198b7aeb80b69585_0","lines":"\t\tret = left.u.b == right.u.b;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":824,"col":3,"offset":17487},"end":{"line":824,"col":57,"offset":17541},"extra":{"metavars":{"$EXPR1":{"start":{"line":824,"col":9,"offset":17493},"end":{"line":824,"col":17,"offset":17501},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":824,"col":21,"offset":17505},"end":{"line":824,"col":30,"offset":17514},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cdbd9ea0944a2f1f69865381c8fbaa327f0c058185e5f28518df43e97db435aced44a75afe3c67c8b2dd0c8253c996e35cbc603c661f57c198b7aeb80b69585_1","lines":"\t\tret = left.u.b == right.u.b || left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":830,"col":3,"offset":17644},"end":{"line":830,"col":60,"offset":17701},"extra":{"metavars":{"$EXPR1":{"start":{"line":830,"col":11,"offset":17652},"end":{"line":830,"col":19,"offset":17660},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":830,"col":23,"offset":17664},"end":{"line":830,"col":32,"offset":17673},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cdbd9ea0944a2f1f69865381c8fbaa327f0c058185e5f28518df43e97db435aced44a75afe3c67c8b2dd0c8253c996e35cbc603c661f57c198b7aeb80b69585_2","lines":"\t\tret = !(left.u.b == right.u.b || left.u.b == FcDontCare);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":833,"col":3,"offset":17733},"end":{"line":833,"col":58,"offset":17788},"extra":{"metavars":{"$EXPR1":{"start":{"line":833,"col":34,"offset":17764},"end":{"line":833,"col":43,"offset":17773},"abstract_content":"right.u.b"},"$EXPR2":{"start":{"line":833,"col":47,"offset":17777},"end":{"line":833,"col":57,"offset":17787},"abstract_content":"FcDontCare"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a67baf8b6d2503138e4d4ffd6e0b62b6113f03956ad425ec1f376447f2a0291d7965a7c52a9eea395a0586e3f30b239a3a1503e4fc492ae617f9eda459c2e8ac_0","lines":"\t\tret = left.u.b != right.u.b && right.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":836,"col":3,"offset":17825},"end":{"line":836,"col":58,"offset":17880},"extra":{"metavars":{"$EXPR1":{"start":{"line":836,"col":9,"offset":17831},"end":{"line":836,"col":17,"offset":17839},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":836,"col":21,"offset":17843},"end":{"line":836,"col":30,"offset":17852},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cdbd9ea0944a2f1f69865381c8fbaa327f0c058185e5f28518df43e97db435aced44a75afe3c67c8b2dd0c8253c996e35cbc603c661f57c198b7aeb80b69585_3","lines":"\t\tret = left.u.b == right.u.b || right.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":839,"col":3,"offset":17912},"end":{"line":839,"col":57,"offset":17966},"extra":{"metavars":{"$EXPR1":{"start":{"line":839,"col":34,"offset":17943},"end":{"line":839,"col":42,"offset":17951},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":839,"col":46,"offset":17955},"end":{"line":839,"col":56,"offset":17965},"abstract_content":"FcDontCare"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba42f734d71b6f577bcc710f39949410e0bbfe096cc29ffee8bded20fc892ea64b6f1e8feee2b57cce772b1e008854bada5f47fd168c148706c5b00ff70dd54e_0","lines":"\t\tret = left.u.b != right.u.b && left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":842,"col":3,"offset":18003},"end":{"line":842,"col":57,"offset":18057},"extra":{"metavars":{"$EXPR1":{"start":{"line":842,"col":9,"offset":18009},"end":{"line":842,"col":17,"offset":18017},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":842,"col":21,"offset":18021},"end":{"line":842,"col":30,"offset":18030},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cdbd9ea0944a2f1f69865381c8fbaa327f0c058185e5f28518df43e97db435aced44a75afe3c67c8b2dd0c8253c996e35cbc603c661f57c198b7aeb80b69585_4","lines":"\t\tret = left.u.b == right.u.b || left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":852,"col":3,"offset":18200},"end":{"line":855,"col":59,"offset":18367},"extra":{"metavars":{"$EXPR1":{"start":{"line":852,"col":7,"offset":18204},"end":{"line":852,"col":12,"offset":18209},"abstract_content":"flags","propagated_value":{"svalue_start":{"line":778,"col":18,"offset":16407},"svalue_end":{"line":778,"col":39,"offset":16428},"svalue_abstract_content":"FC_OP_GET_FLAGS(op_)"}},"$EXPR2":{"start":{"line":852,"col":15,"offset":18212},"end":{"line":852,"col":35,"offset":18232},"abstract_content":"FcOpFlagIgnoreBlanks"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d43d8ea41c30239551de30d20f5dc48c454b296ccfb24eadbb14c4e5b7b637b305d843182d3cc6b7147cb9501c97de0431808c058bbc003de6dfb50e755cde82_0","lines":"\t\tif (flags & FcOpFlagIgnoreBlanks)\n\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) == 0;\n\t\telse\n\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":853,"col":7,"offset":18240},"end":{"line":853,"col":68,"offset":18301},"extra":{"metavars":{"$EXPR1":{"start":{"line":853,"col":13,"offset":18246},"end":{"line":853,"col":62,"offset":18295},"abstract_content":"FcStrCmpIgnoreBlanksAndCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":853,"col":66,"offset":18299},"end":{"line":853,"col":67,"offset":18300},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"83e9b89bdd775673b315b64c027bf1281a36bce06f1fe24e7d1157d7c723724316cab011148973cfdb2cf2966210974d7a98db07a8674bc6f374beecdbd8feb3_0","lines":"\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":855,"col":7,"offset":18315},"end":{"line":855,"col":59,"offset":18367},"extra":{"metavars":{"$EXPR1":{"start":{"line":855,"col":13,"offset":18321},"end":{"line":855,"col":53,"offset":18361},"abstract_content":"FcStrCmpIgnoreCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":855,"col":57,"offset":18365},"end":{"line":855,"col":58,"offset":18366},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"83b59e47a5ea11c67e436b2b67ccf6a7d2b03d85d3638797142cbf0e6630d328cea4a89d75069de6feb69df48bec32cf410717f15aaf1b74186775add564ec4f_0","lines":"\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":861,"col":3,"offset":18491},"end":{"line":864,"col":59,"offset":18658},"extra":{"metavars":{"$EXPR1":{"start":{"line":861,"col":7,"offset":18495},"end":{"line":861,"col":12,"offset":18500},"abstract_content":"flags","propagated_value":{"svalue_start":{"line":778,"col":18,"offset":16407},"svalue_end":{"line":778,"col":39,"offset":16428},"svalue_abstract_content":"FC_OP_GET_FLAGS(op_)"}},"$EXPR2":{"start":{"line":861,"col":15,"offset":18503},"end":{"line":861,"col":35,"offset":18523},"abstract_content":"FcOpFlagIgnoreBlanks"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d43d8ea41c30239551de30d20f5dc48c454b296ccfb24eadbb14c4e5b7b637b305d843182d3cc6b7147cb9501c97de0431808c058bbc003de6dfb50e755cde82_1","lines":"\t\tif (flags & FcOpFlagIgnoreBlanks)\n\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) != 0;\n\t\telse\n\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) != 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":867,"col":3,"offset":18697},"end":{"line":867,"col":55,"offset":18749},"extra":{"metavars":{"$EXPR1":{"start":{"line":867,"col":9,"offset":18703},"end":{"line":867,"col":49,"offset":18743},"abstract_content":"FcStrStrIgnoreCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":867,"col":53,"offset":18747},"end":{"line":867,"col":54,"offset":18748},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"01452b1799274db7d82a47c56432b546db287494badccebc6f4c1b6fdd0d70537fad89c692ad61fabedbb91e797bf51c217ecf3eaa24bcffc242202c6db815e1_0","lines":"\t\tret = FcStrStrIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":944,"col":3,"offset":20393},"end":{"line":944,"col":31,"offset":20421},"extra":{"metavars":{"$EXPR1":{"start":{"line":944,"col":9,"offset":20399},"end":{"line":944,"col":17,"offset":20407},"abstract_content":"left.u.f"},"$EXPR2":{"start":{"line":944,"col":21,"offset":20411},"end":{"line":944,"col":30,"offset":20420},"abstract_content":"right.u.f"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a7d13c0503138f054f4bb65d74c94ddd53e2146726dcde6f410e4dc494df990151f9b528889d2cf19b43d0c5d51bb17128852694da19b2698f924777b86d464e_0","lines":"\t\tret = left.u.f == right.u.f;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1130,"col":7,"offset":25140},"end":{"line":1130,"col":36,"offset":25169},"extra":{"metavars":{"$EXPR":{"start":{"line":1130,"col":7,"offset":25140},"end":{"line":1130,"col":12,"offset":25145},"abstract_content":"v.u.d"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f352776b720ee73cf948bcd46d62a4cdb31164dd4f0f6fa04dc4755a059e53569ecc96ad730ccc04eeefaddeb5ea8a408d287e46405b82831607054f8e7f7b5b_0","lines":"\t\t    v.u.d == (double) (int) v.u.d)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1171,"col":11,"offset":25945},"end":{"line":1171,"col":37,"offset":25971},"extra":{"metavars":{"$FUN":{"start":{"line":1171,"col":11,"offset":25945},"end":{"line":1171,"col":17,"offset":25951},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_2","lines":"\t\t    m = malloc (sizeof (FcMatrix));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1374,"col":25,"offset":29879},"end":{"line":1374,"col":54,"offset":29908},"extra":{"metavars":{"$FUN":{"start":{"line":1374,"col":25,"offset":29879},"end":{"line":1374,"col":31,"offset":29885},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_3","lines":"    l = (FcValueList *) malloc (sizeof (FcValueList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1421,"col":6,"offset":30990},"end":{"line":1424,"col":7,"offset":31060},"extra":{"metavars":{"$EXPR1":{"start":{"line":1421,"col":10,"offset":30994},"end":{"line":1421,"col":20,"offset":31004},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1421,"col":23,"offset":31007},"end":{"line":1421,"col":34,"offset":31018},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_0","lines":"\t    if (FcDebug () & FC_DBG_EDIT)\n\t    {\n\t\tprintf (\"Not adding\\n\");\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1442,"col":6,"offset":31389},"end":{"line":1444,"col":4,"offset":31451},"extra":{"metavars":{"$EXPR1":{"start":{"line":1442,"col":11,"offset":31394},"end":{"line":1442,"col":22,"offset":31405},"abstract_content":"prev=head"},"$EXPR2":{"start":{"line":1442,"col":24,"offset":31407},"end":{"line":1442,"col":37,"offset":31420},"abstract_content":"*prev!=NULL"},"$EXPR3":{"start":{"line":1443,"col":4,"offset":31425},"end":{"line":1443,"col":25,"offset":31446},"abstract_content":"prev=&*prev->->next"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8280e47cf51140cc7314c60e944787e357aea9eadfdc41b2d8c131c279ec624aaeeb15911e88ad7d4209971ea5b5498877bcbb66fb4bdb3213f0a268342df979_0","lines":"\t    for (prev = head; *prev != NULL;\n\t\t prev = &(*prev)->next)\n\t\t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1460,"col":2,"offset":31636},"end":{"line":1464,"col":3,"offset":31732},"extra":{"metavars":{"$EXPR1":{"start":{"line":1460,"col":6,"offset":31640},"end":{"line":1460,"col":16,"offset":31650},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1460,"col":19,"offset":31653},"end":{"line":1460,"col":30,"offset":31664},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_1","lines":"\tif (FcDebug () & FC_DBG_EDIT)\n\t{\n\t    if (*prev == NULL)\n\t\tprintf (\"position not on list\\n\");\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1467,"col":5,"offset":31744},"end":{"line":1472,"col":6,"offset":31907},"extra":{"metavars":{"$EXPR1":{"start":{"line":1467,"col":9,"offset":31748},"end":{"line":1467,"col":19,"offset":31758},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1467,"col":22,"offset":31761},"end":{"line":1467,"col":33,"offset":31772},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_2","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"%s list before \", append ? \"Append\" : \"Prepend\");\n\tFcValueListPrintWithPosition (*head, *prev);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1484,"col":5,"offset":32040},"end":{"line":1489,"col":6,"offset":32183},"extra":{"metavars":{"$EXPR1":{"start":{"line":1484,"col":9,"offset":32044},"end":{"line":1484,"col":19,"offset":32054},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1484,"col":22,"offset":32057},"end":{"line":1484,"col":33,"offset":32068},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_3","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"%s list after \", append ? \"Append\" : \"Prepend\");\n\tFcValueListPrint (*head);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":60,"offset":35616},"extra":{"metavars":{"$FUN":{"start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":36,"offset":35592},"abstract_content":"malloc"},"$X":{"start":{"line":1647,"col":38,"offset":35594},"end":{"line":1647,"col":51,"offset":35607},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1647,"col":54,"offset":35610},"end":{"line":1647,"col":59,"offset":35615},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f21c0c0f261f371642d12aa63c78c91c911260e651723b33150d338503ae9e8fa54ae2e00c661f5603339f1db6029ed26053319136f60cffa41ca0fea3ce3136_0","lines":"    value = (FcValueList **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":60,"offset":35616},"extra":{"metavars":{"$FUN":{"start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":36,"offset":35592},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_4","lines":"    value = (FcValueList **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":59,"offset":35736},"extra":{"metavars":{"$FUN":{"start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":35,"offset":35712},"abstract_content":"malloc"},"$X":{"start":{"line":1653,"col":37,"offset":35714},"end":{"line":1653,"col":50,"offset":35727},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1653,"col":53,"offset":35730},"end":{"line":1653,"col":58,"offset":35735},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f21c0c0f261f371642d12aa63c78c91c911260e651723b33150d338503ae9e8fa54ae2e00c661f5603339f1db6029ed26053319136f60cffa41ca0fea3ce3136_1","lines":"    elt = (FcPatternElt **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":59,"offset":35736},"extra":{"metavars":{"$FUN":{"start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":35,"offset":35712},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_5","lines":"    elt = (FcPatternElt **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":53,"offset":35848},"extra":{"metavars":{"$FUN":{"start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":29,"offset":35824},"abstract_content":"malloc"},"$X":{"start":{"line":1659,"col":31,"offset":35826},"end":{"line":1659,"col":44,"offset":35839},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1659,"col":47,"offset":35842},"end":{"line":1659,"col":52,"offset":35847},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f21c0c0f261f371642d12aa63c78c91c911260e651723b33150d338503ae9e8fa54ae2e00c661f5603339f1db6029ed26053319136f60cffa41ca0fea3ce3136_2","lines":"    tst = (FcTest **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":53,"offset":35848},"extra":{"metavars":{"$FUN":{"start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":29,"offset":35824},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_6","lines":"    tst = (FcTest **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1666,"col":5,"offset":35913},"end":{"line":1670,"col":6,"offset":36008},"extra":{"metavars":{"$EXPR1":{"start":{"line":1666,"col":9,"offset":35917},"end":{"line":1666,"col":19,"offset":35927},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1666,"col":22,"offset":35930},"end":{"line":1666,"col":33,"offset":35941},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_4","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"FcConfigSubstitute \");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1675,"col":2,"offset":36178},"end":{"line":1678,"col":3,"offset":36257},"extra":{"metavars":{"$EXPR1":{"start":{"line":1675,"col":6,"offset":36182},"end":{"line":1675,"col":16,"offset":36192},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1675,"col":19,"offset":36195},"end":{"line":1675,"col":30,"offset":36206},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_5","lines":"\tif (FcDebug () & FC_DBG_EDIT)\n\t{\n\t    printf (\"\\nRule Set: %s\\n\", rs->name);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1691,"col":11,"offset":36622},"end":{"line":1691,"col":18,"offset":36629},"extra":{"metavars":{"$VAR":{"start":{"line":1691,"col":11,"offset":36622},"end":{"line":1691,"col":18,"offset":36629},"abstract_content":"r->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58ca53c2e1c1d87e4fc9ca17ff1e40d7f6b43226962dc0bae0c6e35cec716af5e76090ab01d5c3a5f43e25a0f60d49e14dddab188f64e14025b5c73e5149bb36_0","lines":"\t\tswitch (r->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1701,"col":7,"offset":36862},"end":{"line":1705,"col":8,"offset":36975},"extra":{"metavars":{"$EXPR1":{"start":{"line":1701,"col":11,"offset":36866},"end":{"line":1701,"col":21,"offset":36876},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1701,"col":24,"offset":36879},"end":{"line":1701,"col":35,"offset":36890},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_6","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"FcConfigSubstitute test \");\n\t\t\tFcTestPrint (r->u.test);\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1733,"col":8,"offset":37600},"end":{"line":1734,"col":27,"offset":37656},"extra":{"metavars":{"$EXPR1":{"start":{"line":1733,"col":12,"offset":37604},"end":{"line":1733,"col":22,"offset":37614},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1733,"col":25,"offset":37617},"end":{"line":1733,"col":36,"offset":37628},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_7","lines":"\t\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t\t\tprintf (\"No match\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1750,"col":4,"offset":38159},"end":{"line":1751,"col":30,"offset":38218},"extra":{"metavars":{"$EXPR1":{"start":{"line":1750,"col":8,"offset":38163},"end":{"line":1750,"col":18,"offset":38173},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1750,"col":21,"offset":38176},"end":{"line":1750,"col":32,"offset":38187},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_8","lines":"\t\t\tif (FcDebug () & FC_DBG_EDIT)\n\t\t\t    printf (\"No match\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1757,"col":7,"offset":38325},"end":{"line":1762,"col":8,"offset":38445},"extra":{"metavars":{"$EXPR1":{"start":{"line":1757,"col":11,"offset":38329},"end":{"line":1757,"col":21,"offset":38339},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1757,"col":24,"offset":38342},"end":{"line":1757,"col":35,"offset":38353},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_9","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"Substitute \");\n\t\t\tFcEditPrint (r->u.edit);\n\t\t\tprintf (\"\\n\\n\");\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1770,"col":15,"offset":38755},"end":{"line":1770,"col":43,"offset":38783},"extra":{"metavars":{"$VAR":{"start":{"line":1770,"col":15,"offset":38755},"end":{"line":1770,"col":43,"offset":38783},"abstract_content":"FC_OP_GET_OP(r->->u.edit->->op)"},"$VAL1":{"start":{"line":1771,"col":12,"offset":38798},"end":{"line":1771,"col":22,"offset":38808},"abstract_content":"FcOpAssign"},"$VAL2":{"start":{"line":1798,"col":12,"offset":39537},"end":{"line":1798,"col":29,"offset":39554},"abstract_content":"FcOpAssignReplace"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcba027ed6468431bb5808c2b4161b87dd478d348856a722200f3c752debaa46f8a45301543815792e32011c62a8f3668e91321e384fc14402934496360dbc39_0","lines":"\t\t    switch (FC_OP_GET_OP (r->u.edit->op)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1853,"col":7,"offset":40947},"end":{"line":1857,"col":8,"offset":41054},"extra":{"metavars":{"$EXPR1":{"start":{"line":1853,"col":11,"offset":40951},"end":{"line":1853,"col":21,"offset":40961},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1853,"col":24,"offset":40964},"end":{"line":1853,"col":35,"offset":40975},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_10","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"FcConfigSubstitute edit\");\n\t\t\tFcPatternPrint (p);\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1864,"col":5,"offset":41100},"end":{"line":1868,"col":6,"offset":41199},"extra":{"metavars":{"$EXPR1":{"start":{"line":1864,"col":9,"offset":41104},"end":{"line":1864,"col":19,"offset":41114},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1864,"col":22,"offset":41117},"end":{"line":1864,"col":33,"offset":41128},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_11","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"FcConfigSubstitute done\");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1907,"col":11,"offset":41863},"end":{"line":1907,"col":20,"offset":41872},"extra":{"metavars":{"$VAR":{"start":{"line":1907,"col":11,"offset":41863},"end":{"line":1907,"col":20,"offset":41872},"abstract_content":"fdwReason"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef393fef471d95f2997ecdd7e6fbb00dbe59e36805b9f7f8aa8ade02ea642e59bc58bc6b029d22e9100036e1afc41f1d19a9f075134ce70887916999c0c47aa5_0","lines":"  switch (fdwReason) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":69,"offset":42677},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e8839716dafc07e7dc09659b40bcec0a1a3a55f5e1c7010636638fed061ca3c205132c56e01b9657c0e8829fed623e7042b07ca227cb24657a9678f89f27599a_0","lines":"\t  strcat ((char *) fontconfig_instprefix, (char *) fontconfig_path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":69,"offset":42677},"extra":{"metavars":{"$FUN":{"start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":10,"offset":42618},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_0","lines":"\t  strcat ((char *) fontconfig_instprefix, (char *) fontconfig_path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1927,"col":4,"offset":42682},"end":{"line":1927,"col":53,"offset":42731},"extra":{"metavars":{"$FUN":{"start":{"line":1927,"col":4,"offset":42682},"end":{"line":1927,"col":10,"offset":42688},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_1","lines":"\t  strcat ((char *) fontconfig_path, \"\\\\etc\\\\fonts\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":25,"offset":43463},"extra":{"metavars":{"$FUN":{"start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":18,"offset":43456},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_7","lines":"    path = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":25,"offset":43463},"extra":{"metavars":{"$LEN":{"start":{"line":1965,"col":20,"offset":43458},"end":{"line":1965,"col":24,"offset":43462},"abstract_content":"size","propagated_value":{"svalue_start":{"line":1963,"col":13,"offset":43421},"svalue_end":{"line":1963,"col":28,"offset":43436},"svalue_abstract_content":"osize+3&~3"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"04ea75cc085374bc54c7507d20ee1560ee537a8336c3c5990b7ed1371bcd9b589443dfd4ccfd74d730276b4f24570e14f746ac15affdec54877b8b613fdb9ccd_0","lines":"    path = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":47,"offset":43538},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e8839716dafc07e7dc09659b40bcec0a1a3a55f5e1c7010636638fed061ca3c205132c56e01b9657c0e8829fed623e7042b07ca227cb24657a9678f89f27599a_1","lines":"    strcpy ((char *) path, (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":47,"offset":43538},"extra":{"metavars":{"$FUN":{"start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":11,"offset":43502},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"348006ad8fe738ed9120c6e8205801f6bab246e844f6f113cf476121df2e712a91c320bf8ceb3c750903a7c9fc9d7d802c026833c6d8915964d055d55ee4c163_0","lines":"    strcpy ((char *) path, (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1972,"col":23,"offset":43623},"end":{"line":1972,"col":52,"offset":43652},"extra":{"metavars":{"$STR":{"start":{"line":1972,"col":23,"offset":43623},"end":{"line":1972,"col":27,"offset":43627},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0298ad6e7f9953ee7c805c80e0e61ee59b672b39c553189df686b888dc3b59135298dc9460fb0ae0085b3a051fb46655c747097fcfe207a2da0de01b638c6b3_0","lines":"    if ((!path[0] || (path[strlen((char *) path)-1] != '/' &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1973,"col":9,"offset":43671},"end":{"line":1973,"col":38,"offset":43700},"extra":{"metavars":{"$STR":{"start":{"line":1973,"col":9,"offset":43671},"end":{"line":1973,"col":13,"offset":43675},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0298ad6e7f9953ee7c805c80e0e61ee59b672b39c553189df686b888dc3b59135298dc9460fb0ae0085b3a051fb46655c747097fcfe207a2da0de01b638c6b3_1","lines":"\t\t      path[strlen((char *) path)-1] != '\\\\')) &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1977,"col":2,"offset":43840},"end":{"line":1977,"col":30,"offset":43868},"extra":{"metavars":{"$FUN":{"start":{"line":1977,"col":2,"offset":43840},"end":{"line":1977,"col":8,"offset":43846},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_2","lines":"\tstrcat ((char *) path, \"\\\\\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1979,"col":22,"offset":43897},"end":{"line":1979,"col":51,"offset":43926},"extra":{"metavars":{"$STR":{"start":{"line":1979,"col":22,"offset":43897},"end":{"line":1979,"col":26,"offset":43901},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0298ad6e7f9953ee7c805c80e0e61ee59b672b39c553189df686b888dc3b59135298dc9460fb0ae0085b3a051fb46655c747097fcfe207a2da0de01b638c6b3_2","lines":"    if ((!path[0] || path[strlen((char *) path)-1] != '/') && file[0] != '/')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1980,"col":2,"offset":43955},"end":{"line":1980,"col":29,"offset":43982},"extra":{"metavars":{"$FUN":{"start":{"line":1980,"col":2,"offset":43955},"end":{"line":1980,"col":8,"offset":43961},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_3","lines":"\tstrcat ((char *) path, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":42,"offset":44051},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e8839716dafc07e7dc09659b40bcec0a1a3a55f5e1c7010636638fed061ca3c205132c56e01b9657c0e8829fed623e7042b07ca227cb24657a9678f89f27599a_2","lines":"    strcat ((char *) path, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":42,"offset":44051},"extra":{"metavars":{"$FUN":{"start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":11,"offset":44020},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_4","lines":"    strcat ((char *) path, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":37,"offset":44090},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"554ddae99f298c0b01947726d20756a1237c1996feed20e9603b3e7b140ffd9e611ff0af4783724b086c68bb40e352a6724b04dc0bb30d0936e7c4359b7320db_0","lines":"    if (access ((char *) path, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":37,"offset":44090},"extra":{"metavars":{"$FUN":{"start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":15,"offset":44068},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"61f2f66f4e181c970f2bd4c8667867bb0bc2e175e42aa4de6ae93fef5d97d6dfd80e457d739083f79c68ecee80f8a748cafe0994624d465cece07cc3b025402b_0","lines":"    if (access ((char *) path, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2004,"col":23,"offset":44369},"end":{"line":2004,"col":49,"offset":44395},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2004,"col":23,"offset":44369},"end":{"line":2004,"col":29,"offset":44375},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_0","lines":"    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":46,"offset":44553},"extra":{"metavars":{"$FUN":{"start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":18,"offset":44525},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f31e674893d14a7149b9536ddcc6802c32faefb9bc100366e292e8abadb888d5ad71012c4a006d9b6b382b84167c57ab3be655a01b7471d896f51a540140e02_0","lines":"    path = calloc (npath, sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":46,"offset":44553},"extra":{"metavars":{"$CNT":{"start":{"line":2013,"col":20,"offset":44527},"end":{"line":2013,"col":25,"offset":44532},"abstract_content":"npath"},"$LEN":{"start":{"line":2013,"col":27,"offset":44534},"end":{"line":2013,"col":45,"offset":44552},"abstract_content":"sizeof(FcChar8*)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85d519e5af6ca699440a09287a55e2c3be697e8604a06731296f1b52a4d37c1ab5002e660a199ff33bd388da5ecc3951db2f7f7399a9b1d964b3c29c64a64bbc_0","lines":"    path = calloc (npath, sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":38,"offset":44800},"extra":{"metavars":{"$FUN":{"start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":22,"offset":44784},"abstract_content":"malloc"},"$X":{"start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":33,"offset":44795},"abstract_content":"colon-e"},"$Y":{"start":{"line":2026,"col":36,"offset":44798},"end":{"line":2026,"col":37,"offset":44799},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"20d089fd7cae2eb46d618167a66fddba5c4b104d0a51de157dcb79ce94610ae7d40ec980f3a01f6360e54d8176f0e518bfdfcb13ddfb5c9761f034c53d78185e_0","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":38,"offset":44800},"extra":{"metavars":{"$FUN":{"start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":22,"offset":44784},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_8","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":33,"offset":44795},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":29,"offset":44791},"abstract_content":"colon"},"$PTR2":{"start":{"line":2026,"col":32,"offset":44794},"end":{"line":2026,"col":33,"offset":44795},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"614a04695a3d23cf0958ac7b27d3df467e775a95de0f47336e1cb460cf5489dc99e09d9b70c2ddeed911a75ee35c88c33c3a6c10271c52a5f6c76b734ee07115_0","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":61,"offset":44895},"extra":{"metavars":{"$FUN":{"start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":13,"offset":44847},"abstract_content":"strncpy"},"$DST":{"start":{"line":2029,"col":15,"offset":44849},"end":{"line":2029,"col":31,"offset":44865},"abstract_content":"(char*path[i]"},"$SRC":{"start":{"line":2029,"col":48,"offset":44882},"end":{"line":2029,"col":49,"offset":44883},"abstract_content":"e"}},"message":"The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/806","https://github.com/0xdea/advisories/blob/master/2020-07-solaris-whodo-w.txt","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c2a434b9f1843e7f6a5631700e90df6e35c78bb4305279e7263266acfde77b227e20345909611124438a45f2d6aa83de2d15ed302325e64632b0a3fa0ee6e15a_0","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":61,"offset":44895},"extra":{"metavars":{"$FUN":{"start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":13,"offset":44847},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fe7f71d9118ff07020e041d1a640f77e199a3295d69ce798843404c66861b514bf0ac315a5a116d19c3c6f32aa7eedce32a9a470ffdd7b304a8d8f961affc585_0","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2029,"col":51,"offset":44885},"end":{"line":2029,"col":60,"offset":44894},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2029,"col":51,"offset":44885},"end":{"line":2029,"col":56,"offset":44890},"abstract_content":"colon"},"$PTR2":{"start":{"line":2029,"col":59,"offset":44893},"end":{"line":2029,"col":60,"offset":44894},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"614a04695a3d23cf0958ac7b27d3df467e775a95de0f47336e1cb460cf5489dc99e09d9b70c2ddeed911a75ee35c88c33c3a6c10271c52a5f6c76b734ee07115_1","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2030,"col":14,"offset":44910},"end":{"line":2030,"col":23,"offset":44919},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2030,"col":14,"offset":44910},"end":{"line":2030,"col":19,"offset":44915},"abstract_content":"colon"},"$PTR2":{"start":{"line":2030,"col":22,"offset":44918},"end":{"line":2030,"col":23,"offset":44919},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"614a04695a3d23cf0958ac7b27d3df467e775a95de0f47336e1cb460cf5489dc99e09d9b70c2ddeed911a75ee35c88c33c3a6c10271c52a5f6c76b734ee07115_2","lines":"\t    path[i][colon - e] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2047,"col":3,"offset":45238},"end":{"line":2047,"col":47,"offset":45282},"extra":{"metavars":{"$FUN":{"start":{"line":2047,"col":3,"offset":45238},"end":{"line":2047,"col":9,"offset":45244},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95c89cb6a277f57a8a3e45a4de7ee2fe474d4a26243184de44894d7f85f698b194f207c17951bf66b63ecf7f2ec7a7558ae07e2bbfd6321d0c4a1ed2f647ef6b_5","lines":"\t\tstrcat ((char *) fontconfig_path, \"\\\\fonts\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":49,"offset":45381},"extra":{"metavars":{"$FUN":{"start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":21,"offset":45353},"abstract_content":"malloc"},"$X":{"start":{"line":2051,"col":23,"offset":45355},"end":{"line":2051,"col":44,"offset":45376},"abstract_content":"strlen((char*dir)"},"$Y":{"start":{"line":2051,"col":47,"offset":45379},"end":{"line":2051,"col":48,"offset":45380},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"021ab75ebb462575d7e28ae6d5aa32e13c6ee5509372100af4751eb6928a704c2d9371f4967bdf43e51365957e6c61890df9ecf30b7d910330323da728007158_0","lines":"    path[i] = malloc (strlen ((char *) dir) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":49,"offset":45381},"extra":{"metavars":{"$FUN":{"start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":21,"offset":45353},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_9","lines":"    path[i] = malloc (strlen ((char *) dir) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":50,"offset":45463},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e8839716dafc07e7dc09659b40bcec0a1a3a55f5e1c7010636638fed061ca3c205132c56e01b9657c0e8829fed623e7042b07ca227cb24657a9678f89f27599a_3","lines":"    strcpy ((char *) path[i], (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":50,"offset":45463},"extra":{"metavars":{"$FUN":{"start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":11,"offset":45424},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"348006ad8fe738ed9120c6e8205801f6bab246e844f6f113cf476121df2e712a91c320bf8ceb3c750903a7c9fc9d7d802c026833c6d8915964d055d55ee4c163_1","lines":"    strcpy ((char *) path[i], (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2071,"col":2,"offset":45676},"end":{"line":2071,"col":12,"offset":45686},"extra":{"metavars":{"$PTR":{"start":{"line":2071,"col":8,"offset":45682},"end":{"line":2071,"col":10,"offset":45684},"abstract_content":"*p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5fde8617bdc36ee1ee12ed72067348e0508c78792c290a3fd267c52c1616d7d29551c8b20ad0d56e39ccd3c63acaaf5387e607d52d3d604066595946286205a5_0","lines":"\tfree (*p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2072,"col":5,"offset":45691},"end":{"line":2072,"col":17,"offset":45703},"extra":{"metavars":{"$PTR":{"start":{"line":2072,"col":11,"offset":45697},"end":{"line":2072,"col":15,"offset":45701},"abstract_content":"path"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"76bb2d4c6707c71371fd6d44f777571c3da49d590523d4335907e74eb7e59baf51363e96fe7cac0f741b2e0073415b8014cbe5700c51f8eb087f30b4d78758db_0","lines":"    free (path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2082,"col":22,"offset":45862},"end":{"line":2082,"col":37,"offset":45877},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2082,"col":22,"offset":45862},"end":{"line":2082,"col":28,"offset":45868},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_1","lines":"        char *home = getenv (\"HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2086,"col":13,"offset":45925},"end":{"line":2086,"col":35,"offset":45947},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2086,"col":13,"offset":45925},"end":{"line":2086,"col":19,"offset":45931},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_2","lines":"\t    home = getenv (\"USERPROFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2097,"col":23,"offset":46068},"end":{"line":2097,"col":48,"offset":46093},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2097,"col":23,"offset":46068},"end":{"line":2097,"col":29,"offset":46074},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_3","lines":"    const char *env = getenv (\"XDG_CACHE_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2107,"col":9,"offset":46283},"end":{"line":2107,"col":53,"offset":46327},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2107,"col":9,"offset":46283},"end":{"line":2107,"col":12,"offset":46286},"abstract_content":"len"},"$SIGNED":{"start":{"line":2107,"col":52,"offset":46326},"end":{"line":2107,"col":53,"offset":46327},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ceac2b46da496f0e8d64ef3fa442e8000ac9518dca305f6c1cb3633fadd8382bacff539d6aa2b962b273f18bb6df380e7d19592411f505bb1712a29a89e03a6a_0","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":28,"offset":46357},"extra":{"metavars":{"$FUN":{"start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":14,"offset":46343},"abstract_content":"malloc"},"$X":{"start":{"line":2109,"col":16,"offset":46345},"end":{"line":2109,"col":23,"offset":46352},"abstract_content":"len+7"},"$Y":{"start":{"line":2109,"col":26,"offset":46355},"end":{"line":2109,"col":27,"offset":46356},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b585221ffbd8e27fdbdbda20b1ca0500a69582167b0b6be91ee80e404f70f3fde53cfdfdec3d46a8a213e47b0187850004d6adf1e5757ae14c8cfa783ceb1a95_0","lines":"\tret = malloc (len + 7 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":28,"offset":46357},"extra":{"metavars":{"$FUN":{"start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":14,"offset":46343},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_10","lines":"\tret = malloc (len + 7 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2113,"col":3,"offset":46389},"end":{"line":2113,"col":26,"offset":46412},"extra":{"metavars":{"$FUN":{"start":{"line":2113,"col":3,"offset":46389},"end":{"line":2113,"col":9,"offset":46395},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_0","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":56,"offset":46469},"extra":{"metavars":{"$FUN":{"start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":12,"offset":46425},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_1","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".cache\", 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":56,"offset":46469},"extra":{"metavars":{"$DST":{"start":{"line":2114,"col":14,"offset":46427},"end":{"line":2114,"col":23,"offset":46436},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2114,"col":25,"offset":46438},"end":{"line":2114,"col":52,"offset":46465},"abstract_content":"FC_DIR_SEPARATOR_S\".cache\""},"$LEN":{"start":{"line":2114,"col":54,"offset":46467},"end":{"line":2114,"col":55,"offset":46468},"abstract_content":"7"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"245f93375ab9c96ee5aa775c0cfac6f3b58476cefa402f3c3164fcd303d14d8bd56bdaa18c91455b2c8925a0509be278d5f0b3d29b24ac82b2b96aa5db5aee87_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".cache\", 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2125,"col":23,"offset":46586},"end":{"line":2125,"col":49,"offset":46612},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2125,"col":23,"offset":46586},"end":{"line":2125,"col":29,"offset":46592},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_4","lines":"    const char *env = getenv (\"XDG_CONFIG_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2135,"col":9,"offset":46802},"end":{"line":2135,"col":53,"offset":46846},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2135,"col":9,"offset":46802},"end":{"line":2135,"col":12,"offset":46805},"abstract_content":"len"},"$SIGNED":{"start":{"line":2135,"col":52,"offset":46845},"end":{"line":2135,"col":53,"offset":46846},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ceac2b46da496f0e8d64ef3fa442e8000ac9518dca305f6c1cb3633fadd8382bacff539d6aa2b962b273f18bb6df380e7d19592411f505bb1712a29a89e03a6a_1","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":28,"offset":46876},"extra":{"metavars":{"$FUN":{"start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":14,"offset":46862},"abstract_content":"malloc"},"$X":{"start":{"line":2137,"col":16,"offset":46864},"end":{"line":2137,"col":23,"offset":46871},"abstract_content":"len+8"},"$Y":{"start":{"line":2137,"col":26,"offset":46874},"end":{"line":2137,"col":27,"offset":46875},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"509d07a3f9b33b990a5e8003613e846dc254964e60a0f802bae162a23b01b60c1a4c47176ef0b8fb2765a3a9c5a26f051d12220ef5b5ff4639a91810230d3a8a_0","lines":"\tret = malloc (len + 8 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":28,"offset":46876},"extra":{"metavars":{"$FUN":{"start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":14,"offset":46862},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_11","lines":"\tret = malloc (len + 8 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2141,"col":3,"offset":46908},"end":{"line":2141,"col":26,"offset":46931},"extra":{"metavars":{"$FUN":{"start":{"line":2141,"col":3,"offset":46908},"end":{"line":2141,"col":9,"offset":46914},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_2","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":57,"offset":46989},"extra":{"metavars":{"$FUN":{"start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":12,"offset":46944},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_3","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".config\", 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":57,"offset":46989},"extra":{"metavars":{"$DST":{"start":{"line":2142,"col":14,"offset":46946},"end":{"line":2142,"col":23,"offset":46955},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2142,"col":25,"offset":46957},"end":{"line":2142,"col":53,"offset":46985},"abstract_content":"FC_DIR_SEPARATOR_S\".config\""},"$LEN":{"start":{"line":2142,"col":55,"offset":46987},"end":{"line":2142,"col":56,"offset":46988},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1d69a4d3db0928da256e82ebcccd34daaed5417f47023e4cfa7174867050b1faba066b97555a867634cef67ff55d27f18c37d99bcbc66ecf159a0fcf44d946ed_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".config\", 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2153,"col":23,"offset":47104},"end":{"line":2153,"col":47,"offset":47128},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2153,"col":23,"offset":47104},"end":{"line":2153,"col":29,"offset":47110},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_5","lines":"    const char *env = getenv (\"XDG_DATA_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2163,"col":9,"offset":47318},"end":{"line":2163,"col":53,"offset":47362},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2163,"col":9,"offset":47318},"end":{"line":2163,"col":12,"offset":47321},"abstract_content":"len"},"$SIGNED":{"start":{"line":2163,"col":52,"offset":47361},"end":{"line":2163,"col":53,"offset":47362},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ceac2b46da496f0e8d64ef3fa442e8000ac9518dca305f6c1cb3633fadd8382bacff539d6aa2b962b273f18bb6df380e7d19592411f505bb1712a29a89e03a6a_2","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":29,"offset":47393},"extra":{"metavars":{"$FUN":{"start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":14,"offset":47378},"abstract_content":"malloc"},"$X":{"start":{"line":2165,"col":16,"offset":47380},"end":{"line":2165,"col":24,"offset":47388},"abstract_content":"len+13"},"$Y":{"start":{"line":2165,"col":27,"offset":47391},"end":{"line":2165,"col":28,"offset":47392},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fbda75008519fa28754eb6490ed723971ba15858af2b6a7b1eeb91499e1eec1510223c2522f7cec873af0c3c044ad0443a688d22494d925a7b50e397cb065963_0","lines":"\tret = malloc (len + 13 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":29,"offset":47393},"extra":{"metavars":{"$FUN":{"start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":14,"offset":47378},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_12","lines":"\tret = malloc (len + 13 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2169,"col":3,"offset":47425},"end":{"line":2169,"col":26,"offset":47448},"extra":{"metavars":{"$FUN":{"start":{"line":2169,"col":3,"offset":47425},"end":{"line":2169,"col":9,"offset":47431},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_4","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":84,"offset":47533},"extra":{"metavars":{"$FUN":{"start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":12,"offset":47461},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1286d524b2dfb64ad1b88c5045943c2e30781bb90fbe0c7e7fa10b127aca5c9972f620eebf0b505867981aa5d6f59b69d890d5900c9fc634c76439b4b1323d83_5","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".local\" FC_DIR_SEPARATOR_S \"share\", 13);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":84,"offset":47533},"extra":{"metavars":{"$DST":{"start":{"line":2170,"col":14,"offset":47463},"end":{"line":2170,"col":23,"offset":47472},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2170,"col":25,"offset":47474},"end":{"line":2170,"col":79,"offset":47528},"abstract_content":"FC_DIR_SEPARATOR_S\".local\"FC_DIR_SEPARATOR_S\"share\""},"$LEN":{"start":{"line":2170,"col":81,"offset":47530},"end":{"line":2170,"col":83,"offset":47532},"abstract_content":"13"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fbbb65d84b76c109c67f95038df159a29120ff01ae7d9f4f758e886ccf3c47b08093f3d9f6bec58d75d0acdf99efaf550b4a4d5287857ec6346c1aa3b2150cfb_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".local\" FC_DIR_SEPARATOR_S \"share\", 13);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2193,"col":20,"offset":47868},"end":{"line":2193,"col":46,"offset":47894},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2193,"col":20,"offset":47868},"end":{"line":2193,"col":26,"offset":47874},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_6","lines":"\turl = (FcChar8 *) getenv (\"FONTCONFIG_FILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2314,"col":5,"offset":50003},"end":{"line":2321,"col":6,"offset":50178},"extra":{"metavars":{"$EXPR1":{"start":{"line":2314,"col":10,"offset":50008},"end":{"line":2314,"col":17,"offset":50015},"abstract_content":"sublist","propagated_value":{"svalue_start":{"line":2314,"col":20,"offset":50018},"svalue_end":{"line":2314,"col":45,"offset":50043},"svalue_abstract_content":"FcStrListCreate(subdirs)"}},"$EXPR2":{"start":{"line":2314,"col":20,"offset":50018},"end":{"line":2314,"col":45,"offset":50043},"abstract_content":"FcStrListCreate(subdirs)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c8b2d3ae960943042a5dd588bf98d98b1f1fe0162dfdda6a14564b89b1beb8dd92673bcb0954bbe219850edd3b66c01444112933ab5b6fa91a8590c1816c03f9_0","lines":"    if ((sublist = FcStrListCreate (subdirs)))\n    {\n\twhile ((subdir = FcStrListNext (sublist)))\n\t{\n\t    FcConfigAppFontAddDir (config, subdir);\n\t}\n\tFcStrListDone (sublist);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2467,"col":24,"offset":52924},"end":{"line":2467,"col":53,"offset":52953},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2467,"col":24,"offset":52924},"end":{"line":2467,"col":30,"offset":52930},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"314b9d1567f4600d2e89fb2d88e20e77f43a423695bd9f357b67611a40fa76c3185c44108e6b07617ce88c6028c07ec5f4e8f2209d503e12062770ac0551bd01_7","lines":"    return (FcChar8 *) getenv (\"FONTCONFIG_SYSROOT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2519,"col":36,"offset":53955},"end":{"line":2519,"col":63,"offset":53982},"extra":{"metavars":{"$FUN":{"start":{"line":2519,"col":36,"offset":53955},"end":{"line":2519,"col":42,"offset":53961},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b82bafeb382ec069cde57585b0c644b94c79916f82d1454e3f8e8d03907b06281b4a38356c1e5e929c319de473c95dc7cc24c0499bb96eb1f32f0b8f042792e_13","lines":"    FcRuleSet *ret = (FcRuleSet *) malloc (sizeof (FcRuleSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2560,"col":5,"offset":54705},"end":{"line":2560,"col":15,"offset":54715},"extra":{"metavars":{"$PTR":{"start":{"line":2560,"col":11,"offset":54711},"end":{"line":2560,"col":13,"offset":54713},"abstract_content":"rs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4aeb84e5b22f70e51106798c9a1b7f5f898fb9c45a78cbbd27e8e62346a9f3ac4c598eebc74e3061839d13445acfd9e801cd85b0ca9a7f0b1779318c079683bc_0","lines":"    free (rs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":2635,"col":5,"offset":56092},"end":{"line":2639,"col":6,"offset":56212},"extra":{"metavars":{"$EXPR1":{"start":{"line":2635,"col":9,"offset":56096},"end":{"line":2635,"col":19,"offset":56106},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":2635,"col":22,"offset":56109},"end":{"line":2635,"col":33,"offset":56120},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c46c21ade97ff025e0f1c27c12806847e61d2a9ff1e31f4b3c7fea859d85c5b46a537c393586a7a41d88d77b4b42db0207a70a74e0fa3b0684bfd0615496ca0e_12","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"Add Rule(kind:%d, name: %s) \", kind, rs->name);\n\tFcRulePrint (rule);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":150,"col":18,"offset":3254},"end":{"line":150,"col":31,"offset":3267},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":18,"offset":3254},"end":{"line":150,"col":24,"offset":3260},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f1121bbdf98551795162e7e8ba4baa7493588ab0597f6d2c8be5d7b929227c01362e359379aad78313c372c8bf64361aa0a3a1050ed76223a5b919d5c095fc5e_0","lines":"    void    *m = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":150,"col":18,"offset":3254},"end":{"line":150,"col":31,"offset":3267},"extra":{"metavars":{"$LEN":{"start":{"line":150,"col":26,"offset":3262},"end":{"line":150,"col":30,"offset":3266},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"229838d24fdaedae6a0d9017571ddee198805fbda557896bb72f33a4a56ba9cf0539f6a9533307fab66f56c6a7715148e87e0d88b3d7c773563fdfb7d40c9a00_0","lines":"    void    *m = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":159,"col":18,"offset":3373},"end":{"line":159,"col":35,"offset":3390},"extra":{"metavars":{"$FUN":{"start":{"line":159,"col":18,"offset":3373},"end":{"line":159,"col":25,"offset":3380},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c6524f6c4de4c388b22d75510628765484de8ac3b87a11d74c043f13641104f237f6971fba289f1ba980f9711d2251d6b8721c793a0469f28ddbc34b44a37c3a_0","lines":"    void    *r = realloc (p, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":159,"col":18,"offset":3373},"end":{"line":159,"col":35,"offset":3390},"extra":{"metavars":{"$PTR":{"start":{"line":159,"col":27,"offset":3382},"end":{"line":159,"col":28,"offset":3383},"abstract_content":"p"},"$LEN":{"start":{"line":159,"col":30,"offset":3385},"end":{"line":159,"col":34,"offset":3389},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f8ff96c57aa7adffe8e812517c4ab94fa28ab915b2d2a824439f14cfd0fed9d5285fc84901a4cbe3ca08725a4d4321dffdfe34f51163024301e4436ee0a5d9f3_0","lines":"    void    *r = realloc (p, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":169,"col":5,"offset":3469},"end":{"line":169,"col":14,"offset":3478},"extra":{"metavars":{"$PTR":{"start":{"line":169,"col":11,"offset":3475},"end":{"line":169,"col":12,"offset":3476},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3ec1cbdef40e5aa37d86e801276998e98842b572ffe0737044cca81172075efb0c5c481bab86221f8b2f4fbcb2bcc24e70cd9ea8b1a45f684537733422c440ae_0","lines":"    free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":255,"col":5,"offset":4785},"end":{"line":255,"col":40,"offset":4820},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6422b332a786526bb1dd3b189fa79ea63ee14354ac06b6b169e4208b3a97cff6632c658616b1fadd04eb45f32e26deb393a7a8d6378fbea20a835f882ca5a1e9_0","lines":"    fprintf (stderr, format, line, arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":263,"col":13,"offset":4919},"end":{"line":263,"col":21,"offset":4927},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":263,"col":13,"offset":4919},"end":{"line":263,"col":17,"offset":4923},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"920037b7b742155ab1e7d2f06334842d090e72d79119e99599f8cbc5210fe8c2cebb877fd74d9840e18b41d42587d10db54ad2d2130acd36ec69d96ec6f24d5c_0","lines":"    int\tc = getc (f);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":274,"col":5,"offset":5064},"end":{"line":274,"col":18,"offset":5077},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":274,"col":5,"offset":5064},"end":{"line":274,"col":11,"offset":5070},"abstract_content":"ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34414205042cf15dc389e31afa0c5a0b81b08184ecc210a1f6dbcc25ab5b8591b8c3efbae164be750f8fa41f757d140bd2a2a6d1d3664d08f4f87cb027ffb2c4_0","lines":"    ungetc (c, f);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":307,"col":5,"offset":5626},"end":{"line":307,"col":25,"offset":5646},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":307,"col":5,"offset":5626},"end":{"line":307,"col":11,"offset":5632},"abstract_content":"Ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f15de77174f74a54d7f46ca3a2784820e2c6f56bccba40306e0cadb3f3325cff34252fca08d4e425b7c65dfcf97222a65e9bf8a3c2e95c199a9b34ef37b08ce_0","lines":"    Ungetc (c, f, linep);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":311,"col":2,"offset":5745},"end":{"line":311,"col":22,"offset":5765},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":311,"col":2,"offset":5745},"end":{"line":311,"col":8,"offset":5751},"abstract_content":"Ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f15de77174f74a54d7f46ca3a2784820e2c6f56bccba40306e0cadb3f3325cff34252fca08d4e425b7c65dfcf97222a65e9bf8a3c2e95c199a9b34ef37b08ce_1","lines":"\tUngetc (c, f, linep);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":452,"col":5,"offset":8246},"end":{"line":452,"col":25,"offset":8266},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":452,"col":5,"offset":8246},"end":{"line":452,"col":11,"offset":8252},"abstract_content":"Ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f15de77174f74a54d7f46ca3a2784820e2c6f56bccba40306e0cadb3f3325cff34252fca08d4e425b7c65dfcf97222a65e9bf8a3c2e95c199a9b34ef37b08ce_2","lines":"    Ungetc (c, f, linep);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":527,"col":10,"offset":9592},"end":{"line":527,"col":14,"offset":9596},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"61c1f300a0e653addf6b2ced06e1a0761a7950d322bec5e24954a484b0e9c854b2b98cc1693a1926dd5c2e597904391fe442518638700c67fe108f8e20eb569c_0","lines":"    if (!argv[1])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":528,"col":41,"offset":9641},"end":{"line":528,"col":45,"offset":9645},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"61c1f300a0e653addf6b2ced06e1a0761a7950d322bec5e24954a484b0e9c854b2b98cc1693a1926dd5c2e597904391fe442518638700c67fe108f8e20eb569c_1","lines":"\tBail (\"usage: %*s <template.sgml>\", 0, argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":529,"col":9,"offset":9659},"end":{"line":529,"col":29,"offset":9679},"extra":{"metavars":{"$FUN":{"start":{"line":529,"col":9,"offset":9659},"end":{"line":529,"col":14,"offset":9664},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"530e8ba7e67ba7e5e0f4effa0a6759b0b9c5378f347b3e9e16d9abce95869e9c324043f594f7f2f36edf6848c2a4cbc3ad9623dbd99f0cd94bf8e3d33259bc24_0","lines":"    f = fopen (argv[1], \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":529,"col":16,"offset":9666},"end":{"line":529,"col":20,"offset":9670},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"61c1f300a0e653addf6b2ced06e1a0761a7950d322bec5e24954a484b0e9c854b2b98cc1693a1926dd5c2e597904391fe442518638700c67fe108f8e20eb569c_2","lines":"    f = fopen (argv[1], \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","start":{"line":532,"col":33,"offset":9731},"end":{"line":532,"col":37,"offset":9735},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"61c1f300a0e653addf6b2ced06e1a0761a7950d322bec5e24954a484b0e9c854b2b98cc1693a1926dd5c2e597904391fe442518638700c67fe108f8e20eb569c_3","lines":"\tBail (\"can't open file %s\", 0, argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":99,"col":5,"offset":2565},"end":{"line":100,"col":15,"offset":2759},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_0","lines":"    fprintf (file, _(\"usage: %s [-EfrsvVh] [-y SYSROOT] [--error-on-no-fonts] [--force|--really-force] [--sysroot=SYSROOT] [--system-only] [--verbose] [--version] [--help] [dirs]\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":102,"col":5,"offset":2771},"end":{"line":103,"col":15,"offset":2849},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_1","lines":"    fprintf (file, _(\"usage: %s [-EfrsvVh] [-y SYSROOT] [dirs]\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":105,"col":5,"offset":2862},"end":{"line":106,"col":65,"offset":2987},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_2","lines":"    fprintf (file, _(\"Build font information caches in [dirs]\\n\"\n\t\t     \"(all directories in font configuration by default).\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":109,"col":5,"offset":3040},"end":{"line":109,"col":96,"offset":3131},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_3","lines":"    fprintf (file, _(\"  -E, --error-on-no-fonts  raise an error if no fonts in a directory\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":110,"col":5,"offset":3137},"end":{"line":110,"col":100,"offset":3232},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_4","lines":"    fprintf (file, _(\"  -f, --force              scan directories with apparently valid caches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":111,"col":5,"offset":3238},"end":{"line":111,"col":93,"offset":3326},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_5","lines":"    fprintf (file, _(\"  -r, --really-force       erase all existing caches, then rescan\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":112,"col":5,"offset":3332},"end":{"line":112,"col":88,"offset":3415},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_6","lines":"    fprintf (file, _(\"  -s, --system-only        scan system-wide directories only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":113,"col":5,"offset":3421},"end":{"line":113,"col":96,"offset":3512},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_7","lines":"    fprintf (file, _(\"  -y, --sysroot=SYSROOT    prepend SYSROOT to all paths for scanning\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":114,"col":5,"offset":3518},"end":{"line":114,"col":92,"offset":3605},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_8","lines":"    fprintf (file, _(\"  -v, --verbose            display status information while busy\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":115,"col":5,"offset":3611},"end":{"line":115,"col":91,"offset":3697},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_9","lines":"    fprintf (file, _(\"  -V, --version            display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":116,"col":5,"offset":3703},"end":{"line":116,"col":81,"offset":3779},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_10","lines":"    fprintf (file, _(\"  -h, --help               display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":118,"col":5,"offset":3791},"end":{"line":118,"col":60,"offset":3846},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_11","lines":"    fprintf (file, _(\"  -E         (error-on-no-fonts)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":119,"col":5,"offset":3852},"end":{"line":119,"col":92,"offset":3939},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_12","lines":"    fprintf (file, _(\"                       raise an error if no fonts in a directory\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":120,"col":5,"offset":3945},"end":{"line":120,"col":96,"offset":4036},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_13","lines":"    fprintf (file, _(\"  -f         (force)   scan directories with apparently valid caches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":121,"col":5,"offset":4042},"end":{"line":121,"col":89,"offset":4126},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_14","lines":"    fprintf (file, _(\"  -r,   (really force) erase all existing caches, then rescan\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":122,"col":5,"offset":4132},"end":{"line":122,"col":84,"offset":4211},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_15","lines":"    fprintf (file, _(\"  -s         (system)  scan system-wide directories only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":123,"col":5,"offset":4217},"end":{"line":123,"col":92,"offset":4304},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_16","lines":"    fprintf (file, _(\"  -y SYSROOT (sysroot) prepend SYSROOT to all paths for scanning\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":124,"col":5,"offset":4310},"end":{"line":124,"col":88,"offset":4393},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_17","lines":"    fprintf (file, _(\"  -v         (verbose) display status information while busy\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":125,"col":5,"offset":4399},"end":{"line":125,"col":87,"offset":4481},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_18","lines":"    fprintf (file, _(\"  -V         (version) display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":126,"col":5,"offset":4487},"end":{"line":126,"col":77,"offset":4559},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_19","lines":"    fprintf (file, _(\"  -h         (help)    display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":163,"col":3,"offset":5395},"end":{"line":163,"col":54,"offset":5446},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_20","lines":"\t\tprintf (_(\"skipping, looped directory detected\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":167,"col":6,"offset":5472},"end":{"line":167,"col":33,"offset":5499},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"c20eabb664c3c26562851e04cd467ba479dcb5bc719f07816270644dc3dfc09119f10be45135bc80b9e6f04ad1afa39d748f79b1257f4b130d5d6b98d204085c_0","lines":"\tif (stat ((char *) dir, &statb) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":167,"col":6,"offset":5472},"end":{"line":167,"col":33,"offset":5499},"extra":{"metavars":{"$FUN":{"start":{"line":167,"col":6,"offset":5472},"end":{"line":167,"col":10,"offset":5476},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e4b41aa31e36f564c82a8bb4dbf2aae0eb47f0fb4b33495a2dbcb4c1504504819acc77b41537c00f01948ae7f8bb78970b6e36f61815535df2c9952d6e7d787c_0","lines":"\tif (stat ((char *) dir, &statb) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":173,"col":7,"offset":5590},"end":{"line":173,"col":50,"offset":5633},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_21","lines":"\t\t    printf (_(\"skipping, no such directory\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":186,"col":6,"offset":5793},"end":{"line":186,"col":69,"offset":5856},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_22","lines":"\t    fprintf (stderr, _(\"\\\"%s\\\": not a directory, skipping\\n\"), dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":193,"col":6,"offset":5929},"end":{"line":193,"col":36,"offset":5959},"extra":{"metavars":{"$FUN":{"start":{"line":193,"col":6,"offset":5929},"end":{"line":193,"col":22,"offset":5945},"abstract_content":"FcDirCacheUnlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d8bc04a423da6da9732d98276d676976ed67fa3deefdb6d681f826a5f7064ef10c9688d0fc85f0181fb76bd997ecb2c94c2a83ac25259a81bdac759bf4eca3e2_0","lines":"\t    FcDirCacheUnlink (dir, config);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":211,"col":3,"offset":6282},"end":{"line":211,"col":55,"offset":6334},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_23","lines":"\t\tfprintf (stderr, _(\"\\\"%s\\\": scanning error\\n\"), dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":220,"col":3,"offset":6407},"end":{"line":221,"col":53,"offset":6528},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_24","lines":"\t\tprintf (_(\"skipping, existing cache is valid: %d fonts, %d dirs\\n\"),\n\t\t\tFcCacheNumFont (cache), FcCacheNumSubdir (cache));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":226,"col":3,"offset":6562},"end":{"line":227,"col":53,"offset":6677},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_25","lines":"\t\tprintf (_(\"caching, new cache contents: %d fonts, %d dirs\\n\"),\n\t\t\tFcCacheNumFont (cache), FcCacheNumSubdir (cache));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":231,"col":3,"offset":6722},"end":{"line":231,"col":58,"offset":6777},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_26","lines":"\t\tfprintf (stderr, _(\"%s: failed to write cache\\n\"), dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":232,"col":10,"offset":6788},"end":{"line":232,"col":40,"offset":6818},"extra":{"metavars":{"$FUN":{"start":{"line":232,"col":10,"offset":6788},"end":{"line":232,"col":26,"offset":6804},"abstract_content":"FcDirCacheUnlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d8bc04a423da6da9732d98276d676976ed67fa3deefdb6d681f826a5f7064ef10c9688d0fc85f0181fb76bd997ecb2c94c2a83ac25259a81bdac759bf4eca3e2_1","lines":"\t\t(void) FcDirCacheUnlink (dir, config);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":240,"col":6,"offset":6893},"end":{"line":240,"col":63,"offset":6950},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_27","lines":"\t    fprintf (stderr, _(\"%s: Can't create subdir set\\n\"), dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":254,"col":6,"offset":7234},"end":{"line":254,"col":64,"offset":7292},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_28","lines":"\t    fprintf (stderr, _(\"%s: Can't create subdir list\\n\"), dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":306,"col":5,"offset":8374},"end":{"line":306,"col":27,"offset":8396},"extra":{"metavars":{"$FUN":{"start":{"line":306,"col":5,"offset":8374},"end":{"line":306,"col":14,"offset":8383},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e473f5151769b4a88417e03a1f466abb602a1aa348f3c1f675ed8fc5cba5ab80c53c6d70241917579d4c3e36618a678837bc79bbcc4852818e148205503702d_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":308,"col":17,"offset":8435},"end":{"line":308,"col":70,"offset":8488},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":308,"col":17,"offset":8435},"end":{"line":308,"col":28,"offset":8446},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f71f847188d6d292cab7b01d51798f6f05187de87884aa10978e3121ac8fb0929f5225c67b3e6f5adc9e958cb211efdec5cff3502ae1ab2edc86af3d354fb71_0","lines":"    while ((c = getopt_long (argc, argv, \"Efrsy:Vvh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":308,"col":36,"offset":8454},"end":{"line":308,"col":40,"offset":8458},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_0","lines":"    while ((c = getopt_long (argc, argv, \"Efrsy:Vvh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":310,"col":17,"offset":8519},"end":{"line":310,"col":49,"offset":8551},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":310,"col":17,"offset":8519},"end":{"line":310,"col":23,"offset":8525},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e506c65e606cf289bf6d74f7fda95e5af88f12aa1432b16895588a92299e3b89e3295e9da165a163bfe2023e7a230467fd66a422aa7a2df866c8ce775413853_0","lines":"    while ((c = getopt (argc, argv, \"Efrsy:Vvh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":310,"col":31,"offset":8533},"end":{"line":310,"col":35,"offset":8537},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_1","lines":"    while ((c = getopt (argc, argv, \"Efrsy:Vvh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":313,"col":10,"offset":8582},"end":{"line":313,"col":11,"offset":8583},"extra":{"metavars":{"$VAR":{"start":{"line":313,"col":10,"offset":8582},"end":{"line":313,"col":11,"offset":8583},"abstract_content":"c","propagated_value":{"svalue_start":{"line":310,"col":17,"offset":8519},"svalue_end":{"line":310,"col":49,"offset":8551},"svalue_abstract_content":"getopt(argc argv\"Efrsy:Vvh\")"}},"$VAL2":{"start":{"line":314,"col":7,"offset":8593},"end":{"line":314,"col":10,"offset":8596},"abstract_content":"'E'"},"$VAL1":{"start":{"line":317,"col":7,"offset":8649},"end":{"line":317,"col":10,"offset":8652},"abstract_content":"'r'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"981eecc278a9f590794fd657279d67bb03425ac5cff263a27a7c67107991e3c10a1e6cdc7f6661c6aee7d8c6b251d3de5287b99a23b81bcdc9e8f5a538f4cf05_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":337,"col":13,"offset":9065},"end":{"line":337,"col":17,"offset":9069},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":339,"col":13,"offset":9100},"end":{"line":339,"col":17,"offset":9104},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":361,"col":2,"offset":9410},"end":{"line":361,"col":76,"offset":9484},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_29","lines":"\tfprintf (stderr, _(\"%s: Can't initialize font config library\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":361,"col":68,"offset":9476},"end":{"line":361,"col":72,"offset":9480},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_4","lines":"\tfprintf (stderr, _(\"%s: Can't initialize font config library\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":366,"col":9,"offset":9545},"end":{"line":366,"col":13,"offset":9549},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_5","lines":"    if (argv[i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":371,"col":6,"offset":9607},"end":{"line":372,"col":16,"offset":9684},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_30","lines":"\t    fprintf (stderr, _(\"%s: Can't create list of directories\\n\"),\n\t\t     argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":372,"col":8,"offset":9676},"end":{"line":372,"col":12,"offset":9680},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_6","lines":"\t\t     argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":375,"col":9,"offset":9712},"end":{"line":375,"col":13,"offset":9716},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_7","lines":"\twhile (argv[i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":377,"col":50,"offset":9773},"end":{"line":377,"col":54,"offset":9777},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_8","lines":"\t    if (!FcStrSetAddFilename (dirs, (FcChar8 *) argv[i]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":379,"col":3,"offset":9792},"end":{"line":379,"col":60,"offset":9849},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_31","lines":"\t\tfprintf (stderr, _(\"%s: Can't add directory\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":379,"col":52,"offset":9841},"end":{"line":379,"col":56,"offset":9845},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_9","lines":"\t\tfprintf (stderr, _(\"%s: Can't add directory\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":391,"col":2,"offset":10050},"end":{"line":391,"col":39,"offset":10087},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9c5f12abf6bc3aa57730b92b1d8d42054c9ce7991fd6ecef1055236f1eb5432375e325fca1ce9ab78c4e65309a54f3eaf655bee3c880eaae391f4ac587fe024d_32","lines":"\tfprintf(stderr, _(\"Out of Memory\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":423,"col":22,"offset":11087},"end":{"line":423,"col":26,"offset":11091},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"074f4c533f57e3ea8867e754445648310000026242a9783df64590edce196f7a9ad090dd9a3a9586e38966bd92fcb3c7a9a1fd454d8018306440ea173cd98dcd_10","lines":"\tprintf (\"%s: %s\\n\", argv[0], ret ? _(\"failed\") : _(\"succeeded\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":68,"col":2,"offset":2054},"end":{"line":68,"col":61,"offset":2113},"extra":{"metavars":{"$RET":{"start":{"line":68,"col":2,"offset":2054},"end":{"line":68,"col":7,"offset":2059},"abstract_content":"folds"},"$FUN":{"start":{"line":68,"col":10,"offset":2062},"end":{"line":68,"col":17,"offset":2069},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a9a5009e2687d37e2c5088aa2b8814582450f0166dfbddc66677f2162e729880c2bc30a63fe4bd68aefacc6941c782c10311f5812f99f811eea3f70e2950810_0","lines":"\tfolds = realloc (folds, (nfolds + 1) * sizeof (FcCaseFold));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":68,"col":10,"offset":2062},"end":{"line":68,"col":61,"offset":2113},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":10,"offset":2062},"end":{"line":68,"col":17,"offset":2069},"abstract_content":"realloc"},"$ARG1":{"start":{"line":68,"col":19,"offset":2071},"end":{"line":68,"col":24,"offset":2076},"abstract_content":"folds"},"$X":{"start":{"line":68,"col":27,"offset":2079},"end":{"line":68,"col":37,"offset":2089},"abstract_content":"nfolds+1"},"$Y":{"start":{"line":68,"col":41,"offset":2093},"end":{"line":68,"col":59,"offset":2111},"abstract_content":"sizeof FcCaseFold"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8b2161c5ce106d60c7e8e3bb8a7dec4d7a3fe2a19e9db0dce0ed710c513dce41c005e4a4501ad0d7d9448d4df0591bb60af4154e8777f95eb7465ffbff6ddfd1_0","lines":"\tfolds = realloc (folds, (nfolds + 1) * sizeof (FcCaseFold));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":68,"col":10,"offset":2062},"end":{"line":68,"col":61,"offset":2113},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":10,"offset":2062},"end":{"line":68,"col":17,"offset":2069},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5f3771fe8d8b6922eb28d94b5bd0770c5900b330749f1ba443bca6df0d16ef0e7f3daabe44a91dbefb48e868cc6af767ed3b390a64900689586d0bf58154f240_0","lines":"\tfolds = realloc (folds, (nfolds + 1) * sizeof (FcCaseFold));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":70,"col":2,"offset":2125},"end":{"line":70,"col":38,"offset":2161},"extra":{"metavars":{"$RET":{"start":{"line":70,"col":2,"offset":2125},"end":{"line":70,"col":7,"offset":2130},"abstract_content":"folds"},"$FUN":{"start":{"line":70,"col":10,"offset":2133},"end":{"line":70,"col":16,"offset":2139},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1a767fd9b9effda47c2ed9b8b6adcb4745d3e929a5502ce7ba813ba1c3930195988854ba6d90b91e17741c31da8637c36d750b67815612597cb2ba23c5fae85b_0","lines":"\tfolds = malloc (sizeof (FcCaseFold));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":70,"col":10,"offset":2133},"end":{"line":70,"col":38,"offset":2161},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":10,"offset":2133},"end":{"line":70,"col":16,"offset":2139},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ad4124a2d5f5e284af2e2e43839b44e41a320225e26765e0cf7167e5ef29ce8954b994d423858caf6293cdf93e7130fcba5cc11874b523f5fe63ac0af7b55eef_0","lines":"\tfolds = malloc (sizeof (FcCaseFold));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":119,"col":2,"offset":3388},"end":{"line":119,"col":72,"offset":3458},"extra":{"metavars":{"$RET":{"start":{"line":119,"col":2,"offset":3388},"end":{"line":119,"col":11,"offset":3397},"abstract_content":"foldChars"},"$FUN":{"start":{"line":119,"col":14,"offset":3400},"end":{"line":119,"col":21,"offset":3407},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a2bea37cfe6a72bb4503f0775d5db857a0b5e7e43eab321d6435544f18eec0e1faa61221bcb3a045b2234630b21db2a008681e77ac67c75261a5a9af676243cf_0","lines":"\tfoldChars = realloc (foldChars, (nfoldChars + len) * sizeof (FcChar8));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":119,"col":14,"offset":3400},"end":{"line":119,"col":72,"offset":3458},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":14,"offset":3400},"end":{"line":119,"col":21,"offset":3407},"abstract_content":"realloc"},"$ARG1":{"start":{"line":119,"col":23,"offset":3409},"end":{"line":119,"col":32,"offset":3418},"abstract_content":"foldChars"},"$X":{"start":{"line":119,"col":35,"offset":3421},"end":{"line":119,"col":51,"offset":3437},"abstract_content":"nfoldChars+len"},"$Y":{"start":{"line":119,"col":55,"offset":3441},"end":{"line":119,"col":70,"offset":3456},"abstract_content":"sizeof FcChar8"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0edc68fa09d38f155f5c8cccbb304a9f34da5ae1e32f59d3541f0f63133f01c61683392e728d4aeb054f2f8a8d2bb45e5dbd33ffeb14e54b659dd55a08e44b5f_0","lines":"\tfoldChars = realloc (foldChars, (nfoldChars + len) * sizeof (FcChar8));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":119,"col":14,"offset":3400},"end":{"line":119,"col":72,"offset":3458},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":14,"offset":3400},"end":{"line":119,"col":21,"offset":3407},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5f3771fe8d8b6922eb28d94b5bd0770c5900b330749f1ba443bca6df0d16ef0e7f3daabe44a91dbefb48e868cc6af767ed3b390a64900689586d0bf58154f240_1","lines":"\tfoldChars = realloc (foldChars, (nfoldChars + len) * sizeof (FcChar8));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":121,"col":2,"offset":3470},"end":{"line":121,"col":45,"offset":3513},"extra":{"metavars":{"$RET":{"start":{"line":121,"col":2,"offset":3470},"end":{"line":121,"col":11,"offset":3479},"abstract_content":"foldChars"},"$FUN":{"start":{"line":121,"col":14,"offset":3482},"end":{"line":121,"col":20,"offset":3488},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"329a401208c227c193ff2bf47894d2d21286f20e58dc8bbe38e7b1afa0f5deaf5f92dd8abafe11784d5bb6d2501b11387b2f704b1cbeb77728a3ea58ef7254a5_0","lines":"\tfoldChars = malloc (sizeof (FcChar8) * len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":121,"col":14,"offset":3482},"end":{"line":121,"col":45,"offset":3513},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":14,"offset":3482},"end":{"line":121,"col":20,"offset":3488},"abstract_content":"malloc"},"$X":{"start":{"line":121,"col":22,"offset":3490},"end":{"line":121,"col":37,"offset":3505},"abstract_content":"sizeof FcChar8"},"$Y":{"start":{"line":121,"col":41,"offset":3509},"end":{"line":121,"col":44,"offset":3512},"abstract_content":"len","propagated_value":{"svalue_start":{"line":117,"col":11,"offset":3344},"svalue_end":{"line":117,"col":33,"offset":3366},"svalue_abstract_content":"ucs4_to_utf8(c utf8)"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bc1735360e730d81aaf16406c5b2629ce0afe93e51884be58296d5ce13e62976c2e3427170198a0faafe4798e77c8769a799ef58bc90af84a36ad65f0a1366ac_0","lines":"\tfoldChars = malloc (sizeof (FcChar8) * len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":121,"col":14,"offset":3482},"end":{"line":121,"col":45,"offset":3513},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":14,"offset":3482},"end":{"line":121,"col":20,"offset":3488},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ad4124a2d5f5e284af2e2e43839b44e41a320225e26765e0cf7167e5ef29ce8954b994d423858caf6293cdf93e7130fcba5cc11874b523f5fe63ac0af7b55eef_1","lines":"\tfoldChars = malloc (sizeof (FcChar8) * len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":132,"col":13,"offset":3729},"end":{"line":132,"col":25,"offset":3741},"extra":{"metavars":{"$VAR":{"start":{"line":132,"col":13,"offset":3729},"end":{"line":132,"col":25,"offset":3741},"abstract_content":"fold->->method"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"02541bc66c7e04066c3ca95036a77308f9c343af9c904717d062817495b22245870a6fddf045ba4206880e26f30375e476b9a4ba5f8ed6c7a8e7b3db7ae0075e_0","lines":"    switch (fold->method) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":171,"col":5,"offset":4772},"end":{"line":171,"col":65,"offset":4832},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":36,"offset":35},"abstract_content":"\"#define FC_MIN_FOLD_CHAR\t0x%08x\\n\""},"$FMT":{"start":{"line":171,"col":16,"offset":4783},"end":{"line":171,"col":51,"offset":4818},"abstract_content":"\"#define FC_MIN_FOLD_CHAR\t0x%08x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"01906a78d446433d6db2d4293f814ad3bf99611168589a6f6c745bd247912b3e7c97d2b9dacb294496fe91cde91d84bd17947cfaca7f1bedc4d230b872211870_0","lines":"    printf (   \"#define FC_MIN_FOLD_CHAR\t0x%08x\\n\", minFoldChar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":172,"col":5,"offset":4838},"end":{"line":172,"col":65,"offset":4898},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":36,"offset":35},"abstract_content":"\"#define FC_MAX_FOLD_CHAR\t0x%08x\\n\""},"$FMT":{"start":{"line":172,"col":16,"offset":4849},"end":{"line":172,"col":51,"offset":4884},"abstract_content":"\"#define FC_MAX_FOLD_CHAR\t0x%08x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"35ff902347c24583a6e0fd568fdf8dadd344e741395b63c8ed90d161226cce39c3f29fd458178b8bbdaa5d15b82b86cb78c9b47868dacf95f7cbc6bb47b10019_0","lines":"    printf (   \"#define FC_MAX_FOLD_CHAR\t0x%08x\\n\", maxFoldChar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":181,"col":2,"offset":5083},"end":{"line":183,"col":35,"offset":5224},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":39,"offset":38},"abstract_content":"\"    { 0x%08x, %-22s 0x%04x, %6d },\\n\""},"$FMT":{"start":{"line":181,"col":10,"offset":5091},"end":{"line":181,"col":48,"offset":5129},"abstract_content":"\"    { 0x%08x, %-22s 0x%04x, %6d },\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70002f810d0fb67ff680a4e3991908e250ce14d2b7f38530365be33a94c9cff64a3525c8840b5465a5513cba02ac55d6511c318b1e1dc19b7ce72e41736adbc9_0","lines":"\tprintf (\"    { 0x%08x, %-22s 0x%04x, %6d },\\n\",\n\t\tfolds[i].upper, case_fold_method_name (folds[i].method),\n\t\tfolds[i].count, folds[i].offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":194,"col":2,"offset":5430},"end":{"line":194,"col":33,"offset":5461},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"0x%02x\""},"$FMT":{"start":{"line":194,"col":10,"offset":5438},"end":{"line":194,"col":18,"offset":5446},"abstract_content":"\"0x%02x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c3e0fa1b92e3bb19aefb8510b2cf9787e31bb5ec061ff7fa37acfee2b7c0df895901fb0c97fd29ee0de22fa792a5902c9a423067ef859a2b5cc92f13b487f1c_0","lines":"\tprintf (\"0x%02x\", foldChars[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":222,"col":11,"offset":5868},"end":{"line":222,"col":29,"offset":5886},"extra":{"metavars":{"$FUN":{"start":{"line":222,"col":11,"offset":5868},"end":{"line":222,"col":17,"offset":5874},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d24b34c231176e7f7bf6d553805f0b61f804bbf361791267295ced0342a5c4686b3b62c30742ddd74100ff6e3c77e66f3fc03b112b2cff2b130abdd845acbd83_0","lines":"    tok = strtok (line, SEP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":231,"col":11,"offset":6044},"end":{"line":231,"col":29,"offset":6062},"extra":{"metavars":{"$FUN":{"start":{"line":231,"col":11,"offset":6044},"end":{"line":231,"col":17,"offset":6050},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d24b34c231176e7f7bf6d553805f0b61f804bbf361791267295ced0342a5c4686b3b62c30742ddd74100ff6e3c77e66f3fc03b112b2cff2b130abdd845acbd83_1","lines":"    tok = strtok (NULL, SEP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":248,"col":8,"offset":6409},"end":{"line":248,"col":26,"offset":6427},"extra":{"metavars":{"$FUN":{"start":{"line":248,"col":8,"offset":6409},"end":{"line":248,"col":14,"offset":6415},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d24b34c231176e7f7bf6d553805f0b61f804bbf361791267295ced0342a5c4686b3b62c30742ddd74100ff6e3c77e66f3fc03b112b2cff2b130abdd845acbd83_2","lines":"\ttok = strtok (NULL, SEP);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":268,"col":7,"offset":6720},"end":{"line":268,"col":42,"offset":6755},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":268,"col":7,"offset":6720},"end":{"line":268,"col":12,"offset":6725},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"acc145c44e8cf0ae74c05ba129447aa72404992cb5ffc2ac742344ddf3722e4068f7586e4315f50a1bcaa1cfd9472985495cf92ddee9cb3aef9a0dfc439ecae2_0","lines":"\tif (!fgets (line, sizeof (line) - 1, in))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":287,"col":16,"offset":7063},"end":{"line":287,"col":36,"offset":7083},"extra":{"metavars":{"$FUN":{"start":{"line":287,"col":16,"offset":7063},"end":{"line":287,"col":21,"offset":7068},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e86e3a07f53563acc07adcccb24e42762e96eaf0846ce44f82fa337b890391a3d5540139b9fbbb64ec5922e332ea27a544baa02531c26dc1a1d5b37da3c4519c_0","lines":"    caseFile = fopen (argv[1], \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":287,"col":23,"offset":7070},"end":{"line":287,"col":27,"offset":7074},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"21a5838a3f1d72cefe5d37c0e34230cbf960bea59222136c8572ccfb068b20b6f7b851828392cd96c8c01f0fe516da93d0fe596f625c3618d269366e701f5639_0","lines":"    caseFile = fopen (argv[1], \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":296,"col":10,"offset":7285},"end":{"line":296,"col":19,"offset":7294},"extra":{"metavars":{"$VAR":{"start":{"line":296,"col":10,"offset":7285},"end":{"line":296,"col":19,"offset":7294},"abstract_content":"raw.class"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0214786a446e53e55d5a07cbeba5d48b599ac10ce47e76b3c677061403c258c0af59ebb19181f04a39e299b474b6ba0c44dd0d6741735bccadb26f6a14b8e4d1_0","lines":"\tswitch (raw.class) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":342,"col":12,"offset":8365},"end":{"line":342,"col":46,"offset":8399},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":342,"col":12,"offset":8365},"end":{"line":342,"col":17,"offset":8370},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"acc145c44e8cf0ae74c05ba129447aa72404992cb5ffc2ac742344ddf3722e4068f7586e4315f50a1bcaa1cfd9472985495cf92ddee9cb3aef9a0dfc439ecae2_1","lines":"    while (fgets (line, sizeof (line), stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","start":{"line":358,"col":12,"offset":8618},"end":{"line":358,"col":46,"offset":8652},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":358,"col":12,"offset":8618},"end":{"line":358,"col":17,"offset":8623},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"acc145c44e8cf0ae74c05ba129447aa72404992cb5ffc2ac742344ddf3722e4068f7586e4315f50a1bcaa1cfd9472985495cf92ddee9cb3aef9a0dfc439ecae2_2","lines":"    while (fgets (line, sizeof (line), stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":160,"col":5,"offset":3651},"end":{"line":161,"col":32,"offset":3784},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_0","lines":"    fprintf (file, _(\"usage: %s [-rv] [--recurse] [--verbose] [*-%s\" FC_CACHE_SUFFIX \"|directory]...\\n\"),\n\t     program, FC_ARCHITECTURE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":164,"col":5,"offset":3867},"end":{"line":165,"col":32,"offset":3978},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_1","lines":"    fprintf (file, _(\"usage: %s [-rvVh] [*-%s\" FC_CACHE_SUFFIX \"|directory]...\\n\"),\n\t     program, FC_ARCHITECTURE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":167,"col":5,"offset":3991},"end":{"line":167,"col":62,"offset":4048},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_2","lines":"    fprintf (file, _(\"Reads font information cache from:\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":168,"col":5,"offset":4054},"end":{"line":168,"col":63,"offset":4112},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_3","lines":"    fprintf (file, _(\" 1) specified fontconfig cache file\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":169,"col":5,"offset":4118},"end":{"line":169,"col":70,"offset":4183},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_4","lines":"    fprintf (file, _(\" 2) related to a particular font directory\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":172,"col":5,"offset":4236},"end":{"line":172,"col":78,"offset":4309},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_5","lines":"    fprintf (file, _(\"  -r, --recurse        recurse into subdirectories\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":173,"col":5,"offset":4315},"end":{"line":173,"col":61,"offset":4371},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_6","lines":"    fprintf (file, _(\"  -v, --verbose        be verbose\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":174,"col":5,"offset":4377},"end":{"line":174,"col":87,"offset":4459},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_7","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":175,"col":5,"offset":4465},"end":{"line":175,"col":77,"offset":4537},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_8","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":177,"col":5,"offset":4549},"end":{"line":177,"col":78,"offset":4622},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_9","lines":"    fprintf (file, _(\"  -r         (recurse) recurse into subdirectories\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":178,"col":5,"offset":4628},"end":{"line":178,"col":61,"offset":4684},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_10","lines":"    fprintf (file, _(\"  -v         (verbose) be verbose\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":179,"col":5,"offset":4690},"end":{"line":179,"col":87,"offset":4772},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_11","lines":"    fprintf (file, _(\"  -V         (version) display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":180,"col":5,"offset":4778},"end":{"line":180,"col":77,"offset":4850},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_12","lines":"    fprintf (file, _(\"  -h         (help)    display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":275,"col":5,"offset":6723},"end":{"line":275,"col":27,"offset":6745},"extra":{"metavars":{"$FUN":{"start":{"line":275,"col":5,"offset":6723},"end":{"line":275,"col":14,"offset":6732},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cb5dce1ee15e2ef5ec9303b815826a8316b72fff040061070f121ff2a1f8a9fef23b9359d5b709cabca9acdacbd9eac9f941819b4ffee142853dc0fbaa9ea53a_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":277,"col":17,"offset":6784},"end":{"line":277,"col":65,"offset":6832},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":277,"col":17,"offset":6784},"end":{"line":277,"col":28,"offset":6795},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a5e919a327bde7fba60abd2f9aaca049e2b93f01a9b0e107d5b833da9372ceba8ac6713e6242df789835cb1453371f384e867433ca81a1772f34d46516a71792_0","lines":"    while ((c = getopt_long (argc, argv, \"Vvrh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":277,"col":36,"offset":6803},"end":{"line":277,"col":40,"offset":6807},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_0","lines":"    while ((c = getopt_long (argc, argv, \"Vvrh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":279,"col":17,"offset":6863},"end":{"line":279,"col":44,"offset":6890},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":279,"col":17,"offset":6863},"end":{"line":279,"col":23,"offset":6869},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb0a89dd1ece969830ce52d5efe50a6b81925e6cdab2f3f65ad7c06afcf613225214551677368d23e80f29174157735d621fc3f211cefa3a72eb1a2d2a8b91a0_0","lines":"    while ((c = getopt (argc, argv, \"Vvrh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":279,"col":31,"offset":6877},"end":{"line":279,"col":35,"offset":6881},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_1","lines":"    while ((c = getopt (argc, argv, \"Vvrh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":282,"col":10,"offset":6921},"end":{"line":282,"col":11,"offset":6922},"extra":{"metavars":{"$VAR":{"start":{"line":282,"col":10,"offset":6921},"end":{"line":282,"col":11,"offset":6922},"abstract_content":"c","propagated_value":{"svalue_start":{"line":279,"col":17,"offset":6863},"svalue_end":{"line":279,"col":44,"offset":6890},"svalue_abstract_content":"getopt(argc argv\"Vvrh\")"}},"$VAL2":{"start":{"line":283,"col":7,"offset":6932},"end":{"line":283,"col":10,"offset":6935},"abstract_content":"'V'"},"$VAL1":{"start":{"line":293,"col":7,"offset":7133},"end":{"line":293,"col":10,"offset":7136},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"67f63815143602e236c3706dd63f2c3ed2c3cac01d2d4c6ffa866d82009e7f4cf48c1b9a07a181b0fa6efcb3aa8c3dbd5c9012f3479574ff0637e3f2c3b78f7b_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":294,"col":13,"offset":7150},"end":{"line":294,"col":17,"offset":7154},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":296,"col":13,"offset":7185},"end":{"line":296,"col":17,"offset":7189},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":307,"col":2,"offset":7306},"end":{"line":307,"col":76,"offset":7380},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_13","lines":"\tfprintf (stderr, _(\"%s: Can't initialize font config library\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":307,"col":68,"offset":7372},"end":{"line":307,"col":72,"offset":7376},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_4","lines":"\tfprintf (stderr, _(\"%s: Can't initialize font config library\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":316,"col":2,"offset":7519},"end":{"line":316,"col":54,"offset":7571},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_14","lines":"\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":316,"col":46,"offset":7563},"end":{"line":316,"col":50,"offset":7567},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_5","lines":"\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":323,"col":56,"offset":7695},"end":{"line":323,"col":60,"offset":7699},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_6","lines":"\t    if (!FcStrSetAddFilename (args, (const FcChar8 *) argv[i]))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":325,"col":3,"offset":7714},"end":{"line":325,"col":55,"offset":7766},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_15","lines":"\t\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":325,"col":47,"offset":7758},"end":{"line":325,"col":51,"offset":7762},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_7","lines":"\t\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":337,"col":3,"offset":7949},"end":{"line":337,"col":55,"offset":8001},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_16","lines":"\t\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":337,"col":47,"offset":7993},"end":{"line":337,"col":51,"offset":7997},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_8","lines":"\t\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":345,"col":2,"offset":8117},"end":{"line":345,"col":54,"offset":8169},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_17","lines":"\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":345,"col":46,"offset":8161},"end":{"line":345,"col":50,"offset":8165},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_9","lines":"\tfprintf (stderr, _(\"%s: malloc failure\\n\"), argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":364,"col":10,"offset":8530},"end":{"line":364,"col":20,"offset":8540},"extra":{"metavars":{"$EXPR":{"start":{"line":364,"col":10,"offset":8530},"end":{"line":364,"col":15,"offset":8535},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":357,"col":10,"offset":8365},"svalue_end":{"line":357,"col":11,"offset":8366},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69572dff8929fabf5aa3d4f4fc071c1ccb4cb5bce264de47296202bd9130ed320b590c2b4dbe8516fa7c79938eb6747650b31b33acc3b636e1c20a333e3635fd_0","lines":"\t    if (errno != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":367,"col":58,"offset":8634},"end":{"line":367,"col":62,"offset":8638},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"44e2eec1bebbe09f7c141f223e07e9fb2ab46cfcd2472640ae2c4b7688c4c5ccf9cee0a12b0cd6569b89a6d1d8d0396c13ee27ade0e409803f4a63728c080f36_10","lines":"\t\tfprintf (stderr, \"%s: Unable to load the cache: %s\\n\", argv[0], arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":385,"col":6,"offset":8967},"end":{"line":386,"col":56,"offset":9073},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"160363cc7870cbed3d1a9e9a3f45249827a46eda9dd578d74771f8592c80c0e24d3482546d0ec2113d09016b82d917856d9e8cd09da6d3480d13a5ac4130f439_18","lines":"\t    printf (_(\"Directory: %s\\nCache: %s\\n--------\\n\"),\n\t\t    FcCacheDir(cache), cache_file ? cache_file : arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":79,"col":5,"offset":2185},"end":{"line":80,"col":15,"offset":2259},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_0","lines":"    fprintf (file, _(\"usage: %s [-Vh] [--version] [--help]\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":82,"col":5,"offset":2271},"end":{"line":83,"col":15,"offset":2324},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_1","lines":"    fprintf (file, _(\"usage: %s [-Vh]\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":85,"col":5,"offset":2337},"end":{"line":85,"col":76,"offset":2408},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_2","lines":"    fprintf (file, _(\"Show the ruleset files information on the system\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":88,"col":5,"offset":2461},"end":{"line":88,"col":87,"offset":2543},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_3","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":89,"col":5,"offset":2549},"end":{"line":89,"col":77,"offset":2621},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_4","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":91,"col":5,"offset":2633},"end":{"line":91,"col":92,"offset":2720},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_5","lines":"    fprintf (file, _(\"  -V         (version)      display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":92,"col":5,"offset":2726},"end":{"line":92,"col":82,"offset":2803},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ae235e7955471c54056fb55967e2dd5ea1ca86232716b484a63b4a8f28455a64cbddbf61d416c35300665b6973fd7a1c2d223e166c87a8b2f736bd88a74d3ad8_6","lines":"    fprintf (file, _(\"  -h         (help)         display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":106,"col":5,"offset":2975},"end":{"line":106,"col":27,"offset":2997},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":5,"offset":2975},"end":{"line":106,"col":14,"offset":2984},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0e6703264e5c839361b60cd32a6df849282585d6ac595932665700effd6a0b2e090a54e8db022bc905e891f3b641e06d8db09fe67b3059a5fb916f6ea254b162_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":108,"col":17,"offset":3036},"end":{"line":108,"col":63,"offset":3082},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":108,"col":17,"offset":3036},"end":{"line":108,"col":28,"offset":3047},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f36136d2ed6959393e62d1fcf71a5c65c3897aac24c681475c32e10391e8245d9110ea52681a1368a9694d0fc142880e7942b6a83bba03853f1f15b677ec4910_0","lines":"    while ((c = getopt_long (argc, argv, \"Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":108,"col":36,"offset":3055},"end":{"line":108,"col":40,"offset":3059},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"882cc32b1faf513a00b52fa37c93bf392745d7a30037a0bc94aaa043e992e6ac62dffe9e9fd40af89d8bcc3bc7085f7fe8f1d3daa6192380da86ee166fed4e90_0","lines":"    while ((c = getopt_long (argc, argv, \"Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":110,"col":17,"offset":3113},"end":{"line":110,"col":42,"offset":3138},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":110,"col":17,"offset":3113},"end":{"line":110,"col":23,"offset":3119},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7b33869313729294a1dd5c292233bfb97a45b573478eb1f611e86f2081e9ed3fe8631d57f2bd2f2244bce6a2172ca0fb108010e58b7bc06bb17f3a0449d0f0a6_0","lines":"    while ((c = getopt (argc, argv, \"Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":110,"col":31,"offset":3127},"end":{"line":110,"col":35,"offset":3131},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"882cc32b1faf513a00b52fa37c93bf392745d7a30037a0bc94aaa043e992e6ac62dffe9e9fd40af89d8bcc3bc7085f7fe8f1d3daa6192380da86ee166fed4e90_1","lines":"    while ((c = getopt (argc, argv, \"Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":113,"col":10,"offset":3169},"end":{"line":113,"col":11,"offset":3170},"extra":{"metavars":{"$VAR":{"start":{"line":113,"col":10,"offset":3169},"end":{"line":113,"col":11,"offset":3170},"abstract_content":"c","propagated_value":{"svalue_start":{"line":110,"col":17,"offset":3113},"svalue_end":{"line":110,"col":42,"offset":3138},"svalue_abstract_content":"getopt(argc argv\"Vh\")"}},"$VAL2":{"start":{"line":114,"col":7,"offset":3180},"end":{"line":114,"col":10,"offset":3183},"abstract_content":"'V'"},"$VAL1":{"start":{"line":118,"col":7,"offset":3302},"end":{"line":118,"col":10,"offset":3305},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"80009255a4f62c1b4e642b8334fa7f7d5cd7260948c7d2dd7dd2bfc3edf779d9589c9cf44658cc153ca9304a93026f5b0377704fd982def9926ddfcf74f1f8ae_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":119,"col":13,"offset":3319},"end":{"line":119,"col":17,"offset":3323},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"882cc32b1faf513a00b52fa37c93bf392745d7a30037a0bc94aaa043e992e6ac62dffe9e9fd40af89d8bcc3bc7085f7fe8f1d3daa6192380da86ee166fed4e90_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":121,"col":13,"offset":3354},"end":{"line":121,"col":17,"offset":3358},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"882cc32b1faf513a00b52fa37c93bf392745d7a30037a0bc94aaa043e992e6ac62dffe9e9fd40af89d8bcc3bc7085f7fe8f1d3daa6192380da86ee166fed4e90_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":61,"col":24,"offset":1964},"end":{"line":61,"col":39,"offset":1979},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":61,"col":24,"offset":1964},"end":{"line":61,"col":30,"offset":1970},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"821dd778b5cba702e787974b7252dfe76fbf151b014498e1079a322f17556cdf36ed5edcfb8dfdcf906c48d05aa59088159f14298fcc550ed1567117da76eba0_0","lines":"    return (FcChar8 *) getenv (\"HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":83,"col":10,"offset":2336},"end":{"line":83,"col":31,"offset":2357},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":83,"col":10,"offset":2336},"end":{"line":83,"col":15,"offset":2341},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"74d36c915267c4c4e79b868189897cf2aab7e59844e6cd524fdd56d14b1ea6ac7b0e76ed85faf1be8750466aa51d40c78f7ff6827ae326b9b9f6aa974df58cde_0","lines":"    if (!fgets (line, 1024, f))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":109,"col":9,"offset":2787},"end":{"line":109,"col":26,"offset":2804},"extra":{"metavars":{"$FUN":{"start":{"line":109,"col":9,"offset":2787},"end":{"line":109,"col":14,"offset":2792},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"570c265717231a8cc0f9954c5bf3bfdf3cf73b0875994826bd89c59a07174a65b2dd4d22ef9b25bf12dadef523aab8384aff5213c5a2a374d2ce7528dcbdacc1_0","lines":"    f = fopen (file, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":114,"col":2,"offset":2852},"end":{"line":114,"col":20,"offset":2870},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ecf3732ca49d48e42323ca8d6781e4226c2ef8f5bd2d59a2c6fc8245a0b1048505ef2f69b96438c11a2d2126075afe321842e4dca461cffdbd71e9e81920248b_0","lines":"\tstrcpy (path, dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":114,"col":2,"offset":2852},"end":{"line":114,"col":20,"offset":2870},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":2,"offset":2852},"end":{"line":114,"col":8,"offset":2858},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"65ccb48d9180cdb0c310e5f5b353a940cc2fba5656c7f5ecb6b7cf86e4e1094a0b480d421aaa9f435fa89458e2a4f5b00378a2ec8cc04e08742f108f3ba3414d_0","lines":"\tstrcpy (path, dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":114,"col":2,"offset":2852},"end":{"line":114,"col":20,"offset":2870},"extra":{"metavars":{"$TYPE":{"start":{"line":112,"col":2,"offset":2832},"end":{"line":112,"col":6,"offset":2836},"abstract_content":"char"},"$LEN":{"start":{"line":112,"col":12,"offset":2842},"end":{"line":112,"col":16,"offset":2846},"abstract_content":"1024"},"$FUN":{"start":{"line":114,"col":2,"offset":2852},"end":{"line":114,"col":8,"offset":2858},"abstract_content":"strcpy"},"$BUF":{"start":{"line":114,"col":10,"offset":2860},"end":{"line":114,"col":14,"offset":2864},"abstract_content":"path"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"356fc05299e6faacaabb18e0dc9157c26d7cd5d758734651a09eee3cbd6e9253f847ecee3c6eb70b2e75abd71004e8881452cfd66ebcc39dc9a193c5ad3b0335_0","lines":"\tstrcpy (path, dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":115,"col":2,"offset":2873},"end":{"line":115,"col":20,"offset":2891},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":2,"offset":2873},"end":{"line":115,"col":8,"offset":2879},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4ab14a675dec8a2d69b98cb07e2e20e01fda609dbe3673a8a1f30cf9b2a00fbde1188ecd80dca2bfed80a9a8749f573c2e36c9b3d72291cd19809aca3c09474c_0","lines":"\tstrcat (path, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":116,"col":2,"offset":2894},"end":{"line":116,"col":21,"offset":2913},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ecf3732ca49d48e42323ca8d6781e4226c2ef8f5bd2d59a2c6fc8245a0b1048505ef2f69b96438c11a2d2126075afe321842e4dca461cffdbd71e9e81920248b_1","lines":"\tstrcat (path, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":116,"col":2,"offset":2894},"end":{"line":116,"col":21,"offset":2913},"extra":{"metavars":{"$FUN":{"start":{"line":116,"col":2,"offset":2894},"end":{"line":116,"col":8,"offset":2900},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4ab14a675dec8a2d69b98cb07e2e20e01fda609dbe3673a8a1f30cf9b2a00fbde1188ecd80dca2bfed80a9a8749f573c2e36c9b3d72291cd19809aca3c09474c_1","lines":"\tstrcat (path, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":116,"col":2,"offset":2894},"end":{"line":116,"col":21,"offset":2913},"extra":{"metavars":{"$TYPE":{"start":{"line":112,"col":2,"offset":2832},"end":{"line":112,"col":6,"offset":2836},"abstract_content":"char"},"$LEN":{"start":{"line":112,"col":12,"offset":2842},"end":{"line":112,"col":16,"offset":2846},"abstract_content":"1024"},"$FUN":{"start":{"line":116,"col":2,"offset":2894},"end":{"line":116,"col":8,"offset":2900},"abstract_content":"strcat"},"$BUF":{"start":{"line":116,"col":10,"offset":2902},"end":{"line":116,"col":14,"offset":2906},"abstract_content":"path"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"10cc95a9de2d392a1d489724c10e285f270fae75c67440fe32873d9cf83a0beb17aef71fa82b2a813f354c647098994836ff27aa28175f4034c65d967fa5eda9_0","lines":"\tstrcat (path, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":117,"col":6,"offset":2920},"end":{"line":117,"col":23,"offset":2937},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":6,"offset":2920},"end":{"line":117,"col":11,"offset":2925},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"570c265717231a8cc0f9954c5bf3bfdf3cf73b0875994826bd89c59a07174a65b2dd4d22ef9b25bf12dadef523aab8384aff5213c5a2a374d2ce7528dcbdacc1_1","lines":"\tf = fopen (path, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":154,"col":19,"offset":3785},"end":{"line":154,"col":43,"offset":3809},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":19,"offset":3785},"end":{"line":154,"col":27,"offset":3793},"abstract_content":"scanopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"859e32c7515380cfe2a824f7c662ba15e88f846fdaa4a4a62b10247bb97f1b6281ef42c87f4765548d90bb415cf834a087bcfe63c59a67fcf64196384911a2ce_0","lines":"\t    included_f = scanopen (included_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":174,"col":10,"offset":4225},"end":{"line":174,"col":46,"offset":4261},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":10,"offset":4225},"end":{"line":174,"col":16,"offset":4231},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e666420359edb41d7c1c1b4166d04525df39668f171f035a9ef207444e9f8ee5fcef5df07ce9f8b2b12fd5443ea7abdeda6976e6f4e40f21ba0da77b6d50df2c_0","lines":"\t    if (sscanf (line, \"%x-%x\", &start, &end) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":179,"col":10,"offset":4353},"end":{"line":179,"col":47,"offset":4390},"extra":{"metavars":{"$FUN":{"start":{"line":179,"col":10,"offset":4353},"end":{"line":179,"col":16,"offset":4359},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e666420359edb41d7c1c1b4166d04525df39668f171f035a9ef207444e9f8ee5fcef5df07ce9f8b2b12fd5443ea7abdeda6976e6f4e40f21ba0da77b6d50df2c_1","lines":"\t    if (sscanf (line, \"%x..%x\", &start, &end) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":184,"col":10,"offset":4457},"end":{"line":184,"col":37,"offset":4484},"extra":{"metavars":{"$FUN":{"start":{"line":184,"col":10,"offset":4457},"end":{"line":184,"col":16,"offset":4463},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e666420359edb41d7c1c1b4166d04525df39668f171f035a9ef207444e9f8ee5fcef5df07ce9f8b2b12fd5443ea7abdeda6976e6f4e40f21ba0da77b6d50df2c_2","lines":"\t    if (sscanf (line, \"%x\", &start) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":213,"col":5,"offset":5067},"end":{"line":213,"col":35,"offset":5097},"extra":{"metavars":{"$RET":{"start":{"line":213,"col":5,"offset":5067},"end":{"line":213,"col":9,"offset":5071},"abstract_content":"name"},"$FUN":{"start":{"line":213,"col":12,"offset":5074},"end":{"line":213,"col":18,"offset":5080},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0e3bda1992a35d9b9af1d2835f27312e09d4f34e262c526b0106b361b64750662394d82cb6e46c1528d02e162936bbb53b81bc830014e80c8b2b86e293903622_0","lines":"    name = malloc (dot - file + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":213,"col":12,"offset":5074},"end":{"line":213,"col":35,"offset":5097},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":12,"offset":5074},"end":{"line":213,"col":18,"offset":5080},"abstract_content":"malloc"},"$X":{"start":{"line":213,"col":20,"offset":5082},"end":{"line":213,"col":30,"offset":5092},"abstract_content":"dot-file"},"$Y":{"start":{"line":213,"col":33,"offset":5095},"end":{"line":213,"col":34,"offset":5096},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3ab5d43904c7a61fd36343e9d9ab09e6c1661fbe8f13f205e45ec1b03cf5b2f17e3bf00d938941183207fd8f382a8afb31fdf7255493761effc56fdb62029a11_0","lines":"    name = malloc (dot - file + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":213,"col":12,"offset":5074},"end":{"line":213,"col":35,"offset":5097},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":12,"offset":5074},"end":{"line":213,"col":18,"offset":5080},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3e6623d9acd5c8d6d893281c845b4b644a80f802855284a2ad68457fbcee081404ab2fa539c71499eb62423c7389d3d60a68b884ed6dcc38525a1c4b14d32c7_0","lines":"    name = malloc (dot - file + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":213,"col":20,"offset":5082},"end":{"line":213,"col":30,"offset":5092},"extra":{"metavars":{"$PTR1":{"start":{"line":213,"col":20,"offset":5082},"end":{"line":213,"col":23,"offset":5085},"abstract_content":"dot"},"$PTR2":{"start":{"line":213,"col":26,"offset":5088},"end":{"line":213,"col":30,"offset":5092},"abstract_content":"file"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43d32463b138bb33446eadabbc138cd1ebd2e16ea801b110ae682795c9c382cecb6a320b7da9f88d6b1c709ba4ff3a41dee161c126b91627faa7199e1244718a_0","lines":"    name = malloc (dot - file + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":214,"col":5,"offset":5103},"end":{"line":214,"col":37,"offset":5135},"extra":{"metavars":{"$FUN":{"start":{"line":214,"col":5,"offset":5103},"end":{"line":214,"col":12,"offset":5110},"abstract_content":"strncpy"},"$DST":{"start":{"line":214,"col":14,"offset":5112},"end":{"line":214,"col":18,"offset":5116},"abstract_content":"name","propagated_value":{"svalue_start":{"line":213,"col":12,"offset":5074},"svalue_end":{"line":213,"col":35,"offset":5097},"svalue_abstract_content":"malloc(dot-file+1)"}},"$SRC":{"start":{"line":214,"col":20,"offset":5118},"end":{"line":214,"col":24,"offset":5122},"abstract_content":"file"}},"message":"The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/806","https://github.com/0xdea/advisories/blob/master/2020-07-solaris-whodo-w.txt","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3902e915604068e0477ccf9b3865e6a11e4fe54d5f8c91a5d9608f2374be2bac84baf918d6201bf6b8aa621241e5e9864875209b5e431c5534d1c9717f64dd4b_0","lines":"    strncpy (name, file, dot - file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":214,"col":5,"offset":5103},"end":{"line":214,"col":37,"offset":5135},"extra":{"metavars":{"$FUN":{"start":{"line":214,"col":5,"offset":5103},"end":{"line":214,"col":12,"offset":5110},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d69885ca5e2a677fd1d09639a6f8743c0dfd6793d286c7f172ef7ed96fa12308c77e201ee4f06a449184371fd478543f07895916c9dfcb9037d77d38e293d892_0","lines":"    strncpy (name, file, dot - file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":214,"col":26,"offset":5124},"end":{"line":214,"col":36,"offset":5134},"extra":{"metavars":{"$PTR1":{"start":{"line":214,"col":26,"offset":5124},"end":{"line":214,"col":29,"offset":5127},"abstract_content":"dot"},"$PTR2":{"start":{"line":214,"col":32,"offset":5130},"end":{"line":214,"col":36,"offset":5134},"abstract_content":"file"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43d32463b138bb33446eadabbc138cd1ebd2e16ea801b110ae682795c9c382cecb6a320b7da9f88d6b1c709ba4ff3a41dee161c126b91627faa7199e1244718a_1","lines":"    strncpy (name, file, dot - file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":215,"col":10,"offset":5146},"end":{"line":215,"col":18,"offset":5154},"extra":{"metavars":{"$PTR1":{"start":{"line":215,"col":10,"offset":5146},"end":{"line":215,"col":13,"offset":5149},"abstract_content":"dot"},"$PTR2":{"start":{"line":215,"col":14,"offset":5150},"end":{"line":215,"col":18,"offset":5154},"abstract_content":"file"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43d32463b138bb33446eadabbc138cd1ebd2e16ea801b110ae682795c9c382cecb6a320b7da9f88d6b1c709ba4ff3a41dee161c126b91627faa7199e1244718a_2","lines":"    name[dot-file] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":225,"col":14,"offset":5283},"end":{"line":225,"col":47,"offset":5316},"extra":{"metavars":{"$RET":{"start":{"line":225,"col":14,"offset":5283},"end":{"line":225,"col":18,"offset":5287},"abstract_content":"lang"},"$FUN":{"start":{"line":225,"col":21,"offset":5290},"end":{"line":225,"col":27,"offset":5296},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bcabc6c7cd1006c6e2c4142fb155910434243f1fb87e371df8fb48cd203232592527f9903d49fbb0112ce18f723c67b312b08779edbb446cb9fe373642fb53da_0","lines":"    char    *lang = malloc (strlen (name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":225,"col":21,"offset":5290},"end":{"line":225,"col":47,"offset":5316},"extra":{"metavars":{"$FUN":{"start":{"line":225,"col":21,"offset":5290},"end":{"line":225,"col":27,"offset":5296},"abstract_content":"malloc"},"$X":{"start":{"line":225,"col":29,"offset":5298},"end":{"line":225,"col":42,"offset":5311},"abstract_content":"strlen(name)"},"$Y":{"start":{"line":225,"col":45,"offset":5314},"end":{"line":225,"col":46,"offset":5315},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7659abbb682bbfcfdecc832dbbea1ef9029ec885bd88905baf1438122a0d2ac1c8c1d855a4bfcdf23199a72ee0d5bc8ed183733b6b834f7ce1241a9040033afe_0","lines":"    char    *lang = malloc (strlen (name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":225,"col":21,"offset":5290},"end":{"line":225,"col":47,"offset":5316},"extra":{"metavars":{"$FUN":{"start":{"line":225,"col":21,"offset":5290},"end":{"line":225,"col":27,"offset":5296},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3e6623d9acd5c8d6d893281c845b4b644a80f802855284a2ad68457fbcee081404ab2fa539c71499eb62423c7389d3d60a68b884ed6dcc38525a1c4b14d32c7_1","lines":"    char    *lang = malloc (strlen (name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":232,"col":6,"offset":5434},"end":{"line":232,"col":43,"offset":5471},"extra":{"metavars":{"$NARROW":{"start":{"line":232,"col":6,"offset":5434},"end":{"line":232,"col":7,"offset":5435},"abstract_content":"c"},"$LARGE":{"start":{"line":232,"col":19,"offset":5447},"end":{"line":232,"col":42,"offset":5470},"abstract_content":"(int(unsigned char c"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"145b087e5b039ebbd981858430736e1098754e63f00b1cc31b2f1302bfab3857da2e07ba60d4aca18a53b605d6785c86ef6cf28115a092fedfe4a911e1ad1932_0","lines":"\t    c = tolower ((int) (unsigned char) c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":287,"col":9,"offset":6745},"end":{"line":287,"col":13,"offset":6749},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_0","lines":"\tfatal (argv[0], 0, \"out of memory\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":289,"col":12,"offset":6800},"end":{"line":289,"col":16,"offset":6804},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_1","lines":"    while (argv[argi])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":291,"col":15,"offset":6832},"end":{"line":291,"col":19,"offset":6836},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_2","lines":"\tif (!strcmp (argv[argi], \"-d\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":294,"col":12,"offset":6878},"end":{"line":294,"col":16,"offset":6882},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_3","lines":"\t    dir = argv[argi++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":298,"col":13,"offset":6942},"end":{"line":298,"col":17,"offset":6946},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_4","lines":"\t    fatal (argv[0], 0, \"Too many languages\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":300,"col":20,"offset":7016},"end":{"line":300,"col":24,"offset":7020},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"117d808567bf591a5a170934df32b46dcbf5e474bbf7c00dd572fa564b99f4e9c6f21bd3e93c106c1d43ef0636cc3c50f2a819597f444a62b53a64f30988c40c_5","lines":"\tentries[i].file = argv[argi++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":308,"col":6,"offset":7166},"end":{"line":308,"col":32,"offset":7192},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":6,"offset":7166},"end":{"line":308,"col":14,"offset":7174},"abstract_content":"scanopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"859e32c7515380cfe2a824f7c662ba15e88f846fdaa4a4a62b10247bb97f1b6281ef42c87f4765548d90bb415cf834a087bcfe63c59a67fcf64196384911a2ce_1","lines":"\tf = scanopen (entries[i].file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":323,"col":14,"offset":7534},"end":{"line":323,"col":59,"offset":7579},"extra":{"metavars":{"$FUN":{"start":{"line":323,"col":14,"offset":7534},"end":{"line":323,"col":20,"offset":7540},"abstract_content":"malloc"},"$X":{"start":{"line":323,"col":22,"offset":7542},"end":{"line":323,"col":34,"offset":7554},"abstract_content":"total_leaves"},"$Y":{"start":{"line":323,"col":37,"offset":7557},"end":{"line":323,"col":58,"offset":7578},"abstract_content":"sizeof(FcCharLeaf*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d62ce32cb484feab1dcf382f3fb54be744523a8a2535593b6decc787d06bb073960f7ac8549021c803a3c4622a0b89f12d0ecf15849fee72cc97bdd7a05b076f_0","lines":"    leaves = malloc (total_leaves * sizeof (FcCharLeaf *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":323,"col":14,"offset":7534},"end":{"line":323,"col":59,"offset":7579},"extra":{"metavars":{"$FUN":{"start":{"line":323,"col":14,"offset":7534},"end":{"line":323,"col":20,"offset":7540},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3e6623d9acd5c8d6d893281c845b4b644a80f802855284a2ad68457fbcee081404ab2fa539c71499eb62423c7389d3d60a68b884ed6dcc38525a1c4b14d32c7_2","lines":"    leaves = malloc (total_leaves * sizeof (FcCharLeaf *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":344,"col":12,"offset":7954},"end":{"line":344,"col":46,"offset":7988},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":344,"col":12,"offset":7954},"end":{"line":344,"col":17,"offset":7959},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"74d36c915267c4c4e79b868189897cf2aab7e59844e6cd524fdd56d14b1ea6ac7b0e76ed85faf1be8750466aa51d40c78f7ff6827ae326b9b9f6aa974df58cde_1","lines":"    while (fgets (line, sizeof (line), stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":432,"col":6,"offset":10303},"end":{"line":432,"col":44,"offset":10341},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\" 0x%08x,\""},"$FMT":{"start":{"line":432,"col":14,"offset":10311},"end":{"line":432,"col":24,"offset":10321},"abstract_content":"\" 0x%08x,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c50b94b5b94b2c2dd302d4c9c7564a05709aea8bdebfc06d2a1df787fe2bbb5f6560399ba14e4e18939b9633037070db949d53eac25d86023f5c31c3d7b451e_0","lines":"\t    printf (\" 0x%08x,\", leaves[l]->map[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":480,"col":6,"offset":11182},"end":{"line":480,"col":56,"offset":11232},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\" 0x%04x,\""},"$FMT":{"start":{"line":480,"col":14,"offset":11190},"end":{"line":480,"col":24,"offset":11200},"abstract_content":"\" 0x%04x,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"63c2a2585dd916a39406ed40465b08d19f84051daf4e6289d5785d1be4b4c807bb99366607e72155b5fedfd6fbf794d1c36bdfbbed9707020956b4f115ceeb49_0","lines":"\t    printf (\" 0x%04x,\", FcCharSetNumbers (sets[i])[n]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":545,"col":7,"offset":12635},"end":{"line":545,"col":34,"offset":12662},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\" 0x%08x,\""},"$FMT":{"start":{"line":545,"col":15,"offset":12643},"end":{"line":545,"col":25,"offset":12653},"abstract_content":"\" 0x%08x,\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c50b94b5b94b2c2dd302d4c9c7564a05709aea8bdebfc06d2a1df787fe2bbb5f6560399ba14e4e18939b9633037070db949d53eac25d86023f5c31c3d7b451e_1","lines":"\t\t    printf (\" 0x%08x,\", map[k]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":560,"col":5,"offset":12936},"end":{"line":560,"col":56,"offset":12987},"extra":{"metavars":{"$TYPE":{"start":{"line":280,"col":5,"offset":6566},"end":{"line":280,"col":8,"offset":6569},"abstract_content":"int"},"$LEN":{"start":{"line":280,"col":24,"offset":6585},"end":{"line":280,"col":26,"offset":6587},"abstract_content":"26"},"$FUN":{"start":{"line":560,"col":5,"offset":12936},"end":{"line":560,"col":11,"offset":12942},"abstract_content":"memset"},"$BUF":{"start":{"line":560,"col":12,"offset":12943},"end":{"line":560,"col":25,"offset":12956},"abstract_content":"setRangeStart"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"02b4de3a001a045bd346a20f92d188e8d6640630b542d9bfaf298471f7dd62dded5adb436e78e1490a642b6154ecfaf8bdcdb02a7824edf3d75abd7fe0a3feac_0","lines":"    memset(setRangeStart, '\\0', sizeof (setRangeStart));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":561,"col":5,"offset":12993},"end":{"line":561,"col":52,"offset":13040},"extra":{"metavars":{"$TYPE":{"start":{"line":281,"col":5,"offset":6594},"end":{"line":281,"col":8,"offset":6597},"abstract_content":"int"},"$LEN":{"start":{"line":281,"col":22,"offset":6611},"end":{"line":281,"col":24,"offset":6613},"abstract_content":"26"},"$FUN":{"start":{"line":561,"col":5,"offset":12993},"end":{"line":561,"col":11,"offset":12999},"abstract_content":"memset"},"$BUF":{"start":{"line":561,"col":12,"offset":13000},"end":{"line":561,"col":23,"offset":13011},"abstract_content":"setRangeEnd"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f126ae04a4ea71c3dc86a5d2a58821aa6f6a7f3ac8fd2041c20a786adba8f452d5214935b34e06faf0e4914a1cd2ac3ae89628a24484193aac0d63e02a54057a_0","lines":"    memset(setRangeEnd, '\\0', sizeof (setRangeEnd));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":564,"col":7,"offset":13084},"end":{"line":564,"col":22,"offset":13099},"extra":{"metavars":{"$NARROW":{"start":{"line":564,"col":7,"offset":13084},"end":{"line":564,"col":8,"offset":13085},"abstract_content":"c"},"$LARGE":{"start":{"line":564,"col":17,"offset":13094},"end":{"line":564,"col":18,"offset":13095},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ccef3755a4bb79b714fbdd54dbe99889d71c45544db0c28bc69a014a186ee5ea9362b090be6668f050fb39d71b872602c19420853671f492c41ebb4455db0d11_0","lines":"\tchar\tc = names[i][0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":590,"col":12,"offset":13922},"end":{"line":590,"col":46,"offset":13956},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":590,"col":12,"offset":13922},"end":{"line":590,"col":17,"offset":13927},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"74d36c915267c4c4e79b868189897cf2aab7e59844e6cd524fdd56d14b1ea6ac7b0e76ed85faf1be8750466aa51d40c78f7ff6827ae326b9b9f6aa974df58cde_2","lines":"    while (fgets (line, sizeof (line), stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":80,"col":5,"offset":2207},"end":{"line":81,"col":15,"offset":2371},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_0","lines":"    fprintf (file, _(\"usage: %s [-vbqVh] [-f FORMAT] [--verbose] [--brief] [--format=FORMAT] [--quiet] [--version] [--help] [pattern] {element ...} \\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":83,"col":5,"offset":2383},"end":{"line":84,"col":15,"offset":2476},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_1","lines":"    fprintf (file, _(\"usage: %s [-vbqVh] [-f FORMAT] [pattern] {element ...} \\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":86,"col":5,"offset":2489},"end":{"line":86,"col":57,"offset":2541},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_2","lines":"    fprintf (file, _(\"List fonts matching [pattern]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":89,"col":5,"offset":2594},"end":{"line":89,"col":88,"offset":2677},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_3","lines":"    fprintf (file, _(\"  -v, --verbose        display entire font pattern verbosely\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":90,"col":5,"offset":2683},"end":{"line":90,"col":86,"offset":2764},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_4","lines":"    fprintf (file, _(\"  -b, --brief          display entire font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":91,"col":5,"offset":2770},"end":{"line":91,"col":78,"offset":2843},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_5","lines":"    fprintf (file, _(\"  -f, --format=FORMAT  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":92,"col":5,"offset":2849},"end":{"line":92,"col":105,"offset":2949},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_6","lines":"    fprintf (file, _(\"  -q, --quiet          suppress all normal output, exit 1 if no fonts matched\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":93,"col":5,"offset":2955},"end":{"line":93,"col":87,"offset":3037},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_7","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":94,"col":5,"offset":3043},"end":{"line":94,"col":77,"offset":3115},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_8","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":96,"col":5,"offset":3127},"end":{"line":96,"col":88,"offset":3210},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_9","lines":"    fprintf (file, _(\"  -v         (verbose) display entire font pattern verbosely\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":97,"col":5,"offset":3216},"end":{"line":97,"col":86,"offset":3297},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_10","lines":"    fprintf (file, _(\"  -b         (brief)   display entire font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":98,"col":5,"offset":3303},"end":{"line":98,"col":78,"offset":3376},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_11","lines":"    fprintf (file, _(\"  -f FORMAT  (format)  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":99,"col":5,"offset":3382},"end":{"line":99,"col":105,"offset":3482},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_12","lines":"    fprintf (file, _(\"  -q,        (quiet)   suppress all normal output, exit 1 if no fonts matched\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":100,"col":5,"offset":3488},"end":{"line":100,"col":87,"offset":3570},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_13","lines":"    fprintf (file, _(\"  -V         (version) display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":101,"col":5,"offset":3576},"end":{"line":101,"col":77,"offset":3648},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_14","lines":"    fprintf (file, _(\"  -h         (help)    display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":121,"col":5,"offset":3967},"end":{"line":121,"col":27,"offset":3989},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":5,"offset":3967},"end":{"line":121,"col":14,"offset":3976},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2d9ffaf164536c1a4c93849f06f208ca57606ef57a5755e3597288aec50fa8821034b68ea28fcae16e52023be5c5057b3c59fd7638379164eb0302bf4f7bcafc_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":123,"col":17,"offset":4028},"end":{"line":123,"col":68,"offset":4079},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":123,"col":17,"offset":4028},"end":{"line":123,"col":28,"offset":4039},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be797f8acda1661200647ed103c781eb4ea4140c0a14e6865cdea35abb94747dbb930bf69edd07bf260ebbbac24907182a25ad38a128aa4a39f10dd0c4c25ca3_0","lines":"    while ((c = getopt_long (argc, argv, \"vbf:qVh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":123,"col":36,"offset":4047},"end":{"line":123,"col":40,"offset":4051},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_0","lines":"    while ((c = getopt_long (argc, argv, \"vbf:qVh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":125,"col":17,"offset":4110},"end":{"line":125,"col":47,"offset":4140},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":125,"col":17,"offset":4110},"end":{"line":125,"col":23,"offset":4116},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed23f63f83230f61ee6337e0b69465cd49e9270856ae580a012a188b9e25c9cd91241047fe6b31cd50dd77c342822f74bd0e8740377ef0e1b5fbec8de4202e87_0","lines":"    while ((c = getopt (argc, argv, \"vbf:qVh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":125,"col":31,"offset":4124},"end":{"line":125,"col":35,"offset":4128},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_1","lines":"    while ((c = getopt (argc, argv, \"vbf:qVh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":128,"col":10,"offset":4171},"end":{"line":128,"col":11,"offset":4172},"extra":{"metavars":{"$VAR":{"start":{"line":128,"col":10,"offset":4171},"end":{"line":128,"col":11,"offset":4172},"abstract_content":"c","propagated_value":{"svalue_start":{"line":125,"col":17,"offset":4110},"svalue_end":{"line":125,"col":47,"offset":4140},"svalue_abstract_content":"getopt(argc argv\"vbf:qVh\")"}},"$VAL2":{"start":{"line":129,"col":7,"offset":4182},"end":{"line":129,"col":10,"offset":4185},"abstract_content":"'v'"},"$VAL1":{"start":{"line":145,"col":7,"offset":4489},"end":{"line":145,"col":10,"offset":4492},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd5e6d9e463d6c7f871ef0e12bad8a056c7b6d42569d3a7f490b51725be130f8466e0bf2a9aa7ff1765333886982bdb3cdd3874d9a4557bfd949a8f4c1d05b8e_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":136,"col":6,"offset":4272},"end":{"line":136,"col":42,"offset":4308},"extra":{"metavars":{"$RET":{"start":{"line":136,"col":6,"offset":4272},"end":{"line":136,"col":12,"offset":4278},"abstract_content":"format"},"$CAST":{"start":{"line":136,"col":16,"offset":4282},"end":{"line":136,"col":25,"offset":4291},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":136,"col":27,"offset":4293},"end":{"line":136,"col":33,"offset":4299},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d367049226cabcc08515338f0f8e99ff6fb36f52af03aa587dea5b779c8f47c523bc7c4febc804478fdb48bd18eb0d041cb9a478a38b6c67defce705b93d8a09_0","lines":"\t    format = (FcChar8 *) strdup (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":146,"col":13,"offset":4506},"end":{"line":146,"col":17,"offset":4510},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":148,"col":13,"offset":4541},"end":{"line":148,"col":17,"offset":4545},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":156,"col":9,"offset":4612},"end":{"line":156,"col":13,"offset":4616},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_4","lines":"    if (argv[i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":158,"col":33,"offset":4659},"end":{"line":158,"col":37,"offset":4663},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_5","lines":"\tpat = FcNameParse ((FcChar8 *) argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":161,"col":6,"offset":4688},"end":{"line":161,"col":58,"offset":4740},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9184e42a4eb58a81a15495953e80d7aa348536749781687cfea431f577d1b8cdd224e8034d4ff6e2318794e981024ff0fc5c8eac8bf032b2d57aea7534ef31fd_15","lines":"\t    fprintf (stderr, _(\"Unable to parse the pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":164,"col":9,"offset":4768},"end":{"line":164,"col":13,"offset":4772},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_6","lines":"\twhile (argv[++i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":168,"col":26,"offset":4850},"end":{"line":168,"col":30,"offset":4854},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"530b9a658479a654937fde0ee8e7baabfd28cfe9bf52748526329f91fd1193903e6b8bbd5b89c7c463c7183c3a3909e6d75da0087b239f7547d2dfdda0fb55fd_7","lines":"\t    FcObjectSetAdd (os, argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":82,"col":5,"offset":2240},"end":{"line":83,"col":15,"offset":2410},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_0","lines":"    fprintf (file, _(\"usage: %s [-savbVh] [-f FORMAT] [--sort] [--all] [--verbose] [--brief] [--format=FORMAT] [--version] [--help] [pattern] {element...}\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":85,"col":5,"offset":2422},"end":{"line":86,"col":15,"offset":2513},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_1","lines":"    fprintf (file, _(\"usage: %s [-savVh] [-f FORMAT] [pattern] {element...}\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":88,"col":5,"offset":2526},"end":{"line":88,"col":61,"offset":2582},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_2","lines":"    fprintf (file, _(\"List best font matching [pattern]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":91,"col":5,"offset":2635},"end":{"line":91,"col":81,"offset":2711},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_3","lines":"    fprintf (file, _(\"  -s, --sort           display sorted list of matches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":92,"col":5,"offset":2717},"end":{"line":92,"col":90,"offset":2802},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_4","lines":"    fprintf (file, _(\"  -a, --all            display unpruned sorted list of matches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":93,"col":5,"offset":2808},"end":{"line":93,"col":88,"offset":2891},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_5","lines":"    fprintf (file, _(\"  -v, --verbose        display entire font pattern verbosely\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":94,"col":5,"offset":2897},"end":{"line":94,"col":86,"offset":2978},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_6","lines":"    fprintf (file, _(\"  -b, --brief          display entire font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":95,"col":5,"offset":2984},"end":{"line":95,"col":78,"offset":3057},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_7","lines":"    fprintf (file, _(\"  -f, --format=FORMAT  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":96,"col":5,"offset":3063},"end":{"line":96,"col":87,"offset":3145},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_8","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":97,"col":5,"offset":3151},"end":{"line":97,"col":77,"offset":3223},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_9","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":99,"col":5,"offset":3235},"end":{"line":99,"col":81,"offset":3311},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_10","lines":"    fprintf (file, _(\"  -s,        (sort)    display sorted list of matches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":100,"col":5,"offset":3317},"end":{"line":100,"col":90,"offset":3402},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_11","lines":"    fprintf (file, _(\"  -a         (all)     display unpruned sorted list of matches\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":101,"col":5,"offset":3408},"end":{"line":101,"col":88,"offset":3491},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_12","lines":"    fprintf (file, _(\"  -v         (verbose) display entire font pattern verbosely\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":102,"col":5,"offset":3497},"end":{"line":102,"col":86,"offset":3578},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_13","lines":"    fprintf (file, _(\"  -b         (brief)   display entire font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":103,"col":5,"offset":3584},"end":{"line":103,"col":78,"offset":3657},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_14","lines":"    fprintf (file, _(\"  -f FORMAT  (format)  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":104,"col":5,"offset":3663},"end":{"line":104,"col":87,"offset":3745},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_15","lines":"    fprintf (file, _(\"  -V         (version) display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":105,"col":5,"offset":3751},"end":{"line":105,"col":77,"offset":3823},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_16","lines":"    fprintf (file, _(\"  -h         (help)    display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":125,"col":5,"offset":4151},"end":{"line":125,"col":27,"offset":4173},"extra":{"metavars":{"$FUN":{"start":{"line":125,"col":5,"offset":4151},"end":{"line":125,"col":14,"offset":4160},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2802524a2663cf39f1ccf2254c818ba4ac15b98eaebada989f111e162ee19d0dce3c403f9de1e9c0d6a142854f9fd8d07a1ac8aa81a9b6ec25e539635b49f3bd_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":127,"col":17,"offset":4212},"end":{"line":127,"col":69,"offset":4264},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":127,"col":17,"offset":4212},"end":{"line":127,"col":28,"offset":4223},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6a41a8db5b86b3175abe2e71372bc6c237dcfda5fd1e77b556cb82b6bb38d0202953f853a2abd2597024b3322f726ede4310b2df78e28d5cce61b716114e365_0","lines":"    while ((c = getopt_long (argc, argv, \"asvbf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":127,"col":36,"offset":4231},"end":{"line":127,"col":40,"offset":4235},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_0","lines":"    while ((c = getopt_long (argc, argv, \"asvbf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":129,"col":17,"offset":4295},"end":{"line":129,"col":48,"offset":4326},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":129,"col":17,"offset":4295},"end":{"line":129,"col":23,"offset":4301},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95d50aba0994a319607e25d1879d8c4b3bbf1b04debf15b9914eb0f95cd926c5e3366086c1705b09f25fe35b7f26b0e7a51a8a99fdb94d86180244ba68fb952f_0","lines":"    while ((c = getopt (argc, argv, \"asvbf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":129,"col":31,"offset":4309},"end":{"line":129,"col":35,"offset":4313},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_1","lines":"    while ((c = getopt (argc, argv, \"asvbf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":132,"col":10,"offset":4357},"end":{"line":132,"col":11,"offset":4358},"extra":{"metavars":{"$VAR":{"start":{"line":132,"col":10,"offset":4357},"end":{"line":132,"col":11,"offset":4358},"abstract_content":"c","propagated_value":{"svalue_start":{"line":129,"col":17,"offset":4295},"svalue_end":{"line":129,"col":48,"offset":4326},"svalue_abstract_content":"getopt(argc argv\"asvbf:Vh\")"}},"$VAL2":{"start":{"line":133,"col":7,"offset":4368},"end":{"line":133,"col":10,"offset":4371},"abstract_content":"'a'"},"$VAL1":{"start":{"line":152,"col":7,"offset":4712},"end":{"line":152,"col":10,"offset":4715},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73b243edcd0e3d246199b9558a7f4d76ca98359e1df15cbbc8162e7cd8c0f7e86f3890f7809a405affdcd660340fa0ac3277a0db269f66f9e40bd44b7fef9fa7_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":146,"col":6,"offset":4533},"end":{"line":146,"col":42,"offset":4569},"extra":{"metavars":{"$RET":{"start":{"line":146,"col":6,"offset":4533},"end":{"line":146,"col":12,"offset":4539},"abstract_content":"format"},"$CAST":{"start":{"line":146,"col":16,"offset":4543},"end":{"line":146,"col":25,"offset":4552},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":146,"col":27,"offset":4554},"end":{"line":146,"col":33,"offset":4560},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3605826a9c4d9063b42aac818f8a578bd5f624ded7173f9c18955ad7bff51eb96a4c7cb6af678e750950e9dd76362dcf1842e7b11635a9c644a5075a9289355c_0","lines":"\t    format = (FcChar8 *) strdup (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":153,"col":13,"offset":4729},"end":{"line":153,"col":17,"offset":4733},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":155,"col":13,"offset":4764},"end":{"line":155,"col":17,"offset":4768},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":163,"col":9,"offset":4835},"end":{"line":163,"col":13,"offset":4839},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_4","lines":"    if (argv[i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":165,"col":33,"offset":4882},"end":{"line":165,"col":37,"offset":4886},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_5","lines":"\tpat = FcNameParse ((FcChar8 *) argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":168,"col":6,"offset":4911},"end":{"line":168,"col":58,"offset":4963},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_17","lines":"\t    fprintf (stderr, _(\"Unable to parse the pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":171,"col":9,"offset":4991},"end":{"line":171,"col":13,"offset":4995},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_6","lines":"\twhile (argv[++i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":175,"col":26,"offset":5073},"end":{"line":175,"col":30,"offset":5077},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d87fae87f1b5ef3c0fc6bd4bc28e95faa233a22cb56af1abd9f203d16f5a55e65d5539c2dc4f0ac36d7a449e1e9a3954e088d2fdff201d79201aa6e5aef66be3_7","lines":"\t    FcObjectSetAdd (os, argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":197,"col":6,"offset":5465},"end":{"line":197,"col":63,"offset":5522},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"780dbd0d795e521302a4acd74872ae147ff0055c838060cb438006c35d260e4c3da8e831b962a1438ee99a1cdbe5f7474af878eb4991470018d5b5c0f9a5f02c_18","lines":"\t    fprintf (stderr, _(\"No fonts installed on the system\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":80,"col":5,"offset":2196},"end":{"line":81,"col":15,"offset":2360},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_0","lines":"    fprintf (file, _(\"usage: %s [-cdVh] [-f FORMAT] [--config] [--default] [--verbose] [--format=FORMAT] [--version] [--help] [pattern] {element...}\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":83,"col":5,"offset":2372},"end":{"line":84,"col":15,"offset":2462},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_1","lines":"    fprintf (file, _(\"usage: %s [-cdVh] [-f FORMAT] [pattern] {element...}\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":86,"col":5,"offset":2475},"end":{"line":86,"col":61,"offset":2531},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_2","lines":"    fprintf (file, _(\"List best font matching [pattern]\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":89,"col":5,"offset":2584},"end":{"line":89,"col":89,"offset":2668},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_3","lines":"    fprintf (file, _(\"  -c, --config         perform config substitution on pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":90,"col":5,"offset":2674},"end":{"line":90,"col":90,"offset":2759},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_4","lines":"    fprintf (file, _(\"  -d, --default        perform default substitution on pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":91,"col":5,"offset":2765},"end":{"line":91,"col":78,"offset":2838},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_5","lines":"    fprintf (file, _(\"  -f, --format=FORMAT  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":92,"col":5,"offset":2844},"end":{"line":92,"col":87,"offset":2926},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_6","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":93,"col":5,"offset":2932},"end":{"line":93,"col":77,"offset":3004},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_7","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":95,"col":5,"offset":3016},"end":{"line":95,"col":89,"offset":3100},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_8","lines":"    fprintf (file, _(\"  -c,        (config)  perform config substitution on pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":96,"col":5,"offset":3106},"end":{"line":96,"col":90,"offset":3191},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_9","lines":"    fprintf (file, _(\"  -d,        (default) perform default substitution on pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":97,"col":5,"offset":3197},"end":{"line":97,"col":78,"offset":3270},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_10","lines":"    fprintf (file, _(\"  -f FORMAT  (format)  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":98,"col":5,"offset":3276},"end":{"line":98,"col":87,"offset":3358},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_11","lines":"    fprintf (file, _(\"  -V         (version) display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":99,"col":5,"offset":3364},"end":{"line":99,"col":77,"offset":3436},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_12","lines":"    fprintf (file, _(\"  -h         (help)    display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":115,"col":5,"offset":3685},"end":{"line":115,"col":27,"offset":3707},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":5,"offset":3685},"end":{"line":115,"col":14,"offset":3694},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fae55181929776ef589f9522e30e240e1ce8f4633c38b4b4105ae0f60198566adc1d1b87284fe507809839b6c9444d76954e6d66f500e1de53e7a740ed99ed22_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":117,"col":17,"offset":3746},"end":{"line":117,"col":67,"offset":3796},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":117,"col":17,"offset":3746},"end":{"line":117,"col":28,"offset":3757},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34296c50ea30657ee7ee226f9f732ec7c9515a9d3194d8b88140353fdb75078f333fbba2c0e6195189f227add620ce0e6709da5d72b17ad02198ed9d87beaa02_0","lines":"    while ((c = getopt_long (argc, argv, \"cdf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":117,"col":36,"offset":3765},"end":{"line":117,"col":40,"offset":3769},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_0","lines":"    while ((c = getopt_long (argc, argv, \"cdf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":119,"col":17,"offset":3827},"end":{"line":119,"col":46,"offset":3856},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":119,"col":17,"offset":3827},"end":{"line":119,"col":23,"offset":3833},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"762c462cdfe04ec8136941e7dbe162f6aa193f1df794f7fac68601a4b7020d4ae66632b438dd82256766c85522753ee1a1677423bb9ba15236675f3e603a1386_0","lines":"    while ((c = getopt (argc, argv, \"cdf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":119,"col":31,"offset":3841},"end":{"line":119,"col":35,"offset":3845},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_1","lines":"    while ((c = getopt (argc, argv, \"cdf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":122,"col":10,"offset":3887},"end":{"line":122,"col":11,"offset":3888},"extra":{"metavars":{"$VAR":{"start":{"line":122,"col":10,"offset":3887},"end":{"line":122,"col":11,"offset":3888},"abstract_content":"c","propagated_value":{"svalue_start":{"line":119,"col":17,"offset":3827},"svalue_end":{"line":119,"col":46,"offset":3856},"svalue_abstract_content":"getopt(argc argv\"cdf:Vh\")"}},"$VAL2":{"start":{"line":123,"col":7,"offset":3898},"end":{"line":123,"col":10,"offset":3901},"abstract_content":"'c'"},"$VAL1":{"start":{"line":136,"col":7,"offset":4174},"end":{"line":136,"col":10,"offset":4177},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2b1b4d5cdeedeabf85578a4c4b2daa9cba963a2252587b550bd099a8d965b8ffca438112fd40dac18f5be40db10bad1b97ebbe5224f6d22dbe9288555319c34a_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":130,"col":6,"offset":3995},"end":{"line":130,"col":42,"offset":4031},"extra":{"metavars":{"$RET":{"start":{"line":130,"col":6,"offset":3995},"end":{"line":130,"col":12,"offset":4001},"abstract_content":"format"},"$CAST":{"start":{"line":130,"col":16,"offset":4005},"end":{"line":130,"col":25,"offset":4014},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":130,"col":27,"offset":4016},"end":{"line":130,"col":33,"offset":4022},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c4743c27288d6cd9d207d4144a4ac9169da760f1d1ada330f464b74e376dbbcde7fbf4b1d97ba79092a86a3de12754b10313fc5e9c6fe3e6e7a86cd16283525_0","lines":"\t    format = (FcChar8 *) strdup (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":137,"col":13,"offset":4191},"end":{"line":137,"col":17,"offset":4195},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":139,"col":13,"offset":4226},"end":{"line":139,"col":17,"offset":4230},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":147,"col":9,"offset":4297},"end":{"line":147,"col":13,"offset":4301},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_4","lines":"    if (argv[i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":149,"col":33,"offset":4344},"end":{"line":149,"col":37,"offset":4348},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_5","lines":"\tpat = FcNameParse ((FcChar8 *) argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":152,"col":6,"offset":4373},"end":{"line":152,"col":58,"offset":4425},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"5a3121e42d51f7ecbfe5a40dc9f3c848dfb01cbfafa9975474711dce966f258adcbdcdf4315a141eeac3608e76ff7de854b6f1e4915872c1c25e4dffcad6cbb8_13","lines":"\t    fprintf (stderr, _(\"Unable to parse the pattern\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":155,"col":9,"offset":4453},"end":{"line":155,"col":13,"offset":4457},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_6","lines":"\twhile (argv[++i])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":159,"col":26,"offset":4535},"end":{"line":159,"col":30,"offset":4539},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ed87c3c26bdac64f776e1ef63198d75e8c16ffe66c5f463f52c693531ea0e845413f2e8b189befa04fad155075090d4571e3d1a02c7225c2a3db80ed94bdf9d0_7","lines":"\t    FcObjectSetAdd (os, argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":83,"col":5,"offset":2297},"end":{"line":84,"col":15,"offset":2452},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_0","lines":"    fprintf (file, _(\"usage: %s [-bVh] [-i index] [-f FORMAT] [--index index] [--brief] [--format FORMAT] [--version] [--help] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":86,"col":5,"offset":2464},"end":{"line":87,"col":15,"offset":2554},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_1","lines":"    fprintf (file, _(\"usage: %s [-bVh] [-i index] [-f FORMAT] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":89,"col":5,"offset":2567},"end":{"line":89,"col":75,"offset":2637},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_2","lines":"    fprintf (file, _(\"Query font files and print resulting pattern(s)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":92,"col":5,"offset":2690},"end":{"line":92,"col":96,"offset":2781},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_3","lines":"    fprintf (file, _(\"  -i, --index INDEX    display the INDEX face of each font file only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":93,"col":5,"offset":2787},"end":{"line":93,"col":79,"offset":2861},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_4","lines":"    fprintf (file, _(\"  -b, --brief          display font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":94,"col":5,"offset":2867},"end":{"line":94,"col":78,"offset":2940},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_5","lines":"    fprintf (file, _(\"  -f, --format=FORMAT  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":95,"col":5,"offset":2946},"end":{"line":95,"col":87,"offset":3028},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_6","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":96,"col":5,"offset":3034},"end":{"line":96,"col":77,"offset":3106},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_7","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":98,"col":5,"offset":3118},"end":{"line":98,"col":102,"offset":3215},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_8","lines":"    fprintf (file, _(\"  -i INDEX   (index)         display the INDEX face of each font file only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":99,"col":5,"offset":3221},"end":{"line":99,"col":85,"offset":3301},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_9","lines":"    fprintf (file, _(\"  -b         (brief)         display font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":100,"col":5,"offset":3307},"end":{"line":100,"col":84,"offset":3386},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_10","lines":"    fprintf (file, _(\"  -f FORMAT  (format)        use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":101,"col":5,"offset":3392},"end":{"line":101,"col":93,"offset":3480},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_11","lines":"    fprintf (file, _(\"  -V         (version)       display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":102,"col":5,"offset":3486},"end":{"line":102,"col":83,"offset":3564},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_12","lines":"    fprintf (file, _(\"  -h         (help)          display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":110,"col":18,"offset":3646},"end":{"line":110,"col":40,"offset":3668},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":110,"col":18,"offset":3646},"end":{"line":110,"col":20,"offset":3648},"abstract_content":"id"},"$SIGNED":{"start":{"line":110,"col":38,"offset":3666},"end":{"line":110,"col":40,"offset":3668},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a0d83f20071ac669171d43711cea87668254b996fc2be38b711b03afaf7556d351397d216b06499f812631d0a2f1630dd7b6b850b8bb1c1901fa053bd1dc0190_0","lines":"    unsigned int id = (unsigned int) -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":119,"col":5,"offset":3833},"end":{"line":119,"col":27,"offset":3855},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":5,"offset":3833},"end":{"line":119,"col":14,"offset":3842},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a8e49dcc65e37e646785f83202d07388e598f078e05ae210a68b574220381572f64bfd363bf90a128d2ffb0100abedcb0b5e17f66afa6fd8713a301339c347dc_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":121,"col":17,"offset":3894},"end":{"line":121,"col":68,"offset":3945},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":121,"col":17,"offset":3894},"end":{"line":121,"col":28,"offset":3905},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c697289004441be4be3a00f3ce709f4b9b604e415fa4ebcdfea3b43e1ee3e2e9aa1630186863bd9f5bde2e7d748bfc93d5f0d0db35db5a6b74beb7a476c04709_0","lines":"    while ((c = getopt_long (argc, argv, \"i:bf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":121,"col":36,"offset":3913},"end":{"line":121,"col":40,"offset":3917},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_0","lines":"    while ((c = getopt_long (argc, argv, \"i:bf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":123,"col":17,"offset":3976},"end":{"line":123,"col":47,"offset":4006},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":123,"col":17,"offset":3976},"end":{"line":123,"col":23,"offset":3982},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1016723efe4be173967a9d708d966d1cf8e357c582dea1c53107ddd80ccd4a1807afdbbf2bf18968284da542b3511d75b93998b733b6507e037e4205eea0a3d_0","lines":"    while ((c = getopt (argc, argv, \"i:bf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":123,"col":31,"offset":3990},"end":{"line":123,"col":35,"offset":3994},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_1","lines":"    while ((c = getopt (argc, argv, \"i:bf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":126,"col":10,"offset":4037},"end":{"line":126,"col":11,"offset":4038},"extra":{"metavars":{"$VAR":{"start":{"line":126,"col":10,"offset":4037},"end":{"line":126,"col":11,"offset":4038},"abstract_content":"c","propagated_value":{"svalue_start":{"line":123,"col":17,"offset":3976},"svalue_end":{"line":123,"col":47,"offset":4006},"svalue_abstract_content":"getopt(argc argv\"i:bf:Vh\")"}},"$VAL2":{"start":{"line":127,"col":7,"offset":4048},"end":{"line":127,"col":10,"offset":4051},"abstract_content":"'i'"},"$VAL1":{"start":{"line":140,"col":7,"offset":4378},"end":{"line":140,"col":10,"offset":4381},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1d6c2ad89f544e82503a137ec29d4015716b6fddc86493a41ac167f0dffd461c11fbaec07c10404b99f55e20964ca339b4e2f956810486fbd5b6f8f36c9d3258_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":128,"col":6,"offset":4058},"end":{"line":128,"col":50,"offset":4102},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":128,"col":6,"offset":4058},"end":{"line":128,"col":8,"offset":4060},"abstract_content":"id"},"$SIGNED":{"start":{"line":128,"col":48,"offset":4100},"end":{"line":128,"col":49,"offset":4101},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d8bd816013fded41cf90324192af2708764fea7d5db3f867a9d2cdfabd521d7c6b2deb33515ceac485f832506a9e5299eec3c1f00653a57b57efb5ec2349f9fc_0","lines":"\t    id = (unsigned int) strtol (optarg, NULL, 0); /* strtol() To handle -1. */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":134,"col":6,"offset":4200},"end":{"line":134,"col":42,"offset":4236},"extra":{"metavars":{"$RET":{"start":{"line":134,"col":6,"offset":4200},"end":{"line":134,"col":12,"offset":4206},"abstract_content":"format"},"$CAST":{"start":{"line":134,"col":16,"offset":4210},"end":{"line":134,"col":25,"offset":4219},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":134,"col":27,"offset":4221},"end":{"line":134,"col":33,"offset":4227},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9141398ba902a0c4e0555d2f0fd0550cf1c1c7031374f762107a31b9f10042140610bf0482073c6b8a0d7f90bed9f4dde6079930422271dc50336b66695ac915_0","lines":"\t    format = (FcChar8 *) strdup (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":141,"col":13,"offset":4395},"end":{"line":141,"col":17,"offset":4399},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":143,"col":13,"offset":4430},"end":{"line":143,"col":17,"offset":4434},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":152,"col":9,"offset":4520},"end":{"line":152,"col":13,"offset":4524},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_4","lines":"\tusage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":158,"col":38,"offset":4633},"end":{"line":158,"col":42,"offset":4637},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_5","lines":"\tif (!FcFreeTypeQueryAll ((FcChar8*) argv[i], id, NULL, NULL, fs))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":160,"col":6,"offset":4671},"end":{"line":160,"col":79,"offset":4744},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b7f170be9f76ca32bb41138d2bf5ceba0e5078d8974e7cf430508c3585b9d7d5ca990cf49c4c510ca164372eed75ccccad4d514cc2968e1a3e3a0200e454fd51_13","lines":"\t    fprintf (stderr, _(\"Can't query face %u of font file %s\\n\"), id, argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":160,"col":71,"offset":4736},"end":{"line":160,"col":75,"offset":4740},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"03c675466940214f0ab4c02e4654847f028caaecadd40d77c82f34b064c0e2198754451b095053a26f4e5fb8cfdd9f53b0b94d3927cc4ffdd7f3dea5c23ac599_6","lines":"\t    fprintf (stderr, _(\"Can't query face %u of font file %s\\n\"), id, argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":82,"col":5,"offset":2269},"end":{"line":83,"col":15,"offset":2397},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_0","lines":"    fprintf (file, _(\"usage: %s [-bVh] [-f FORMAT] [--brief] [--format FORMAT] [--version] [--help] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":85,"col":5,"offset":2409},"end":{"line":86,"col":15,"offset":2488},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_1","lines":"    fprintf (file, _(\"usage: %s [-bVh] [-f FORMAT] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":88,"col":5,"offset":2501},"end":{"line":88,"col":91,"offset":2587},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_2","lines":"    fprintf (file, _(\"Scan font files and directories, and print resulting pattern(s)\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":91,"col":5,"offset":2640},"end":{"line":91,"col":79,"offset":2714},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_3","lines":"    fprintf (file, _(\"  -b, --brief          display font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":92,"col":5,"offset":2720},"end":{"line":92,"col":78,"offset":2793},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_4","lines":"    fprintf (file, _(\"  -f, --format=FORMAT  use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":93,"col":5,"offset":2799},"end":{"line":93,"col":87,"offset":2881},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_5","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":94,"col":5,"offset":2887},"end":{"line":94,"col":77,"offset":2959},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_6","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":96,"col":5,"offset":2971},"end":{"line":96,"col":85,"offset":3051},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_7","lines":"    fprintf (file, _(\"  -b         (brief)         display font pattern briefly\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":97,"col":5,"offset":3057},"end":{"line":97,"col":84,"offset":3136},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_8","lines":"    fprintf (file, _(\"  -f FORMAT  (format)        use the given output format\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":98,"col":5,"offset":3142},"end":{"line":98,"col":93,"offset":3230},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_9","lines":"    fprintf (file, _(\"  -V         (version)       display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":99,"col":5,"offset":3236},"end":{"line":99,"col":83,"offset":3314},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"06e888252273726420c09c39c1ef4042a0857419ff7f8af1e73e9015d1c494ceb105ee0e830e4061f39d6181f5767ad42ef4f5daa4650e2a45ce2ef767bb4dd7_10","lines":"    fprintf (file, _(\"  -h         (help)          display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":114,"col":5,"offset":3524},"end":{"line":114,"col":27,"offset":3546},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":5,"offset":3524},"end":{"line":114,"col":14,"offset":3533},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"38dd4647a98dd3036b781bbeab6f8bce5d0ad6422283b0e73b43f7b8390d594a3b62e90fe50ec0da7b2fa41fa423527e1b9dda4c55ce2ea5370902f3e5e8659b_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":116,"col":17,"offset":3585},"end":{"line":116,"col":66,"offset":3634},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":116,"col":17,"offset":3585},"end":{"line":116,"col":28,"offset":3596},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"597ce42c46e22154eacfb1f21557ca33d03c8a643b28e4ca5fff9427a162dc7e82dbbae1eca8ffde5df6ec5d082f0de662480cc650b504ff06228706e8cc7864_0","lines":"    while ((c = getopt_long (argc, argv, \"bf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":116,"col":36,"offset":3604},"end":{"line":116,"col":40,"offset":3608},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_0","lines":"    while ((c = getopt_long (argc, argv, \"bf:Vh\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":118,"col":17,"offset":3665},"end":{"line":118,"col":45,"offset":3693},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":118,"col":17,"offset":3665},"end":{"line":118,"col":23,"offset":3671},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6046cbfd79ff4b3f448c3475be5f352e8701a1fb46663e290bf15adc28d2fe8d24fe35e30f1f5990ec37228ab5c2c4d6bb28fe3c9fcc3b4cf6aae9b9dca5bc89_0","lines":"    while ((c = getopt (argc, argv, \"bf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":118,"col":31,"offset":3679},"end":{"line":118,"col":35,"offset":3683},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_1","lines":"    while ((c = getopt (argc, argv, \"bf:Vh\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":121,"col":10,"offset":3724},"end":{"line":121,"col":11,"offset":3725},"extra":{"metavars":{"$VAR":{"start":{"line":121,"col":10,"offset":3724},"end":{"line":121,"col":11,"offset":3725},"abstract_content":"c","propagated_value":{"svalue_start":{"line":118,"col":17,"offset":3665},"svalue_end":{"line":118,"col":45,"offset":3693},"svalue_abstract_content":"getopt(argc argv\"bf:Vh\")"}},"$VAL2":{"start":{"line":122,"col":7,"offset":3735},"end":{"line":122,"col":10,"offset":3738},"abstract_content":"'b'"},"$VAL1":{"start":{"line":132,"col":7,"offset":3962},"end":{"line":132,"col":10,"offset":3965},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f2c1de09dd1fef677caedce9418d27168e8004bfeb16bd0c6a7073bff776db87213f1e7e3d016d0324707d97e5ce7d24aea8ab7ef7be9bf50097cf63d3962fc_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":126,"col":6,"offset":3784},"end":{"line":126,"col":42,"offset":3820},"extra":{"metavars":{"$RET":{"start":{"line":126,"col":6,"offset":3784},"end":{"line":126,"col":12,"offset":3790},"abstract_content":"format"},"$CAST":{"start":{"line":126,"col":16,"offset":3794},"end":{"line":126,"col":25,"offset":3803},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":126,"col":27,"offset":3805},"end":{"line":126,"col":33,"offset":3811},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ebb98db2d0ca62affe4a55f084500afb3a8c26a59f45e85550b5b3140a1c076aba3e52966d51fe538ee6fe69cd500649d8184db35556a8feccb44bbc14e4abf7_0","lines":"\t    format = (FcChar8 *) strdup (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":133,"col":13,"offset":3979},"end":{"line":133,"col":17,"offset":3983},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":135,"col":13,"offset":4014},"end":{"line":135,"col":17,"offset":4018},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":144,"col":9,"offset":4104},"end":{"line":144,"col":13,"offset":4108},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_4","lines":"\tusage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":150,"col":35,"offset":4214},"end":{"line":150,"col":39,"offset":4218},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"65d4dd506b764211faf0213c1eedaa68cac3215c0dfe37988a3d623bf18a6cdd567949a6fe471cb47a22e5fe4d58f6ecb5116c97cecf8b412e051b27eb0e510a_5","lines":"\tconst FcChar8 *file = (FcChar8*) argv[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":83,"col":5,"offset":2299},"end":{"line":84,"col":15,"offset":2450},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_0","lines":"    fprintf (file, _(\"usage: %s [-Vhv] [-i index] [-l LANG] [--index index] [--lang LANG] [--verbose] [--version] [--help] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":86,"col":5,"offset":2462},"end":{"line":87,"col":15,"offset":2550},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_1","lines":"    fprintf (file, _(\"usage: %s [-Vhv] [-i index] [-l LANG] font-file...\\n\"),\n\t     program);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":89,"col":5,"offset":2563},"end":{"line":89,"col":64,"offset":2622},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_2","lines":"    fprintf (file, _(\"Validate font files and print result\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":92,"col":5,"offset":2675},"end":{"line":92,"col":96,"offset":2766},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_3","lines":"    fprintf (file, _(\"  -i, --index INDEX    display the INDEX face of each font file only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":93,"col":5,"offset":2772},"end":{"line":93,"col":85,"offset":2852},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_4","lines":"    fprintf (file, _(\"  -l, --lang=LANG      set LANG instead of current locale\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":94,"col":5,"offset":2858},"end":{"line":94,"col":81,"offset":2934},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_5","lines":"    fprintf (file, _(\"  -v, --verbose        show more detailed information\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":95,"col":5,"offset":2940},"end":{"line":95,"col":87,"offset":3022},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_6","lines":"    fprintf (file, _(\"  -V, --version        display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":96,"col":5,"offset":3028},"end":{"line":96,"col":77,"offset":3100},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_7","lines":"    fprintf (file, _(\"  -h, --help           display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":98,"col":5,"offset":3112},"end":{"line":98,"col":101,"offset":3208},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_8","lines":"    fprintf (file, _(\"  -i INDEX   (index)        display the INDEX face of each font file only\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":99,"col":5,"offset":3214},"end":{"line":99,"col":90,"offset":3299},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_9","lines":"    fprintf (file, _(\"  -l LANG    (lang)         set LANG instead of current locale\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":100,"col":5,"offset":3305},"end":{"line":100,"col":86,"offset":3386},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_10","lines":"    fprintf (file, _(\"  -v         (verbose)      show more detailed information\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":101,"col":5,"offset":3392},"end":{"line":101,"col":92,"offset":3479},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_11","lines":"    fprintf (file, _(\"  -V         (version)      display font config version and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":102,"col":5,"offset":3485},"end":{"line":102,"col":82,"offset":3562},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_12","lines":"    fprintf (file, _(\"  -h         (help)         display this help and exit\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":121,"col":5,"offset":3884},"end":{"line":121,"col":27,"offset":3906},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":5,"offset":3884},"end":{"line":121,"col":14,"offset":3893},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b76a4807a854b0313b20946d72544387eeaecb1b6699e3f91b941aaf7397eb4ebf6467a2a2d958b3ed9e6ba42181a030f7453885b8d06676c1cce71c4fee7a28_0","lines":"    setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":124,"col":17,"offset":3946},"end":{"line":124,"col":69,"offset":3998},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":9,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":124,"col":17,"offset":3946},"end":{"line":124,"col":28,"offset":3957},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"052a1b61c15432fabb7c41a5ec2366e14c08526218088a3e06314a75eae0f044a660eec4b9d8c6b98ad48dd683385f05e08d65d2108cd3fe57294e594a208a0d_0","lines":"    while ((c = getopt_long (argc, argv, \"i:l:mVhv\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":124,"col":36,"offset":3965},"end":{"line":124,"col":40,"offset":3969},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_0","lines":"    while ((c = getopt_long (argc, argv, \"i:l:mVhv\", longopts, NULL)) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":126,"col":17,"offset":4029},"end":{"line":126,"col":48,"offset":4060},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":126,"col":17,"offset":4029},"end":{"line":126,"col":23,"offset":4035},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae3ccfa0915ae710c8ed3798e307e4528d3297acfbf13a9e35144d80c37ea1eaf54b96643ca9ca7db653c7c0312ea46cd05fa8a7fa11b2acd6ccd6c83c9bbbf1_0","lines":"    while ((c = getopt (argc, argv, \"i:l:mVhv\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":126,"col":31,"offset":4043},"end":{"line":126,"col":35,"offset":4047},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_1","lines":"    while ((c = getopt (argc, argv, \"i:l:mVhv\")) != -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":129,"col":10,"offset":4091},"end":{"line":129,"col":11,"offset":4092},"extra":{"metavars":{"$VAR":{"start":{"line":129,"col":10,"offset":4091},"end":{"line":129,"col":11,"offset":4092},"abstract_content":"c","propagated_value":{"svalue_start":{"line":126,"col":17,"offset":4029},"svalue_end":{"line":126,"col":48,"offset":4060},"svalue_abstract_content":"getopt(argc argv\"i:l:mVhv\")"}},"$VAL2":{"start":{"line":130,"col":7,"offset":4102},"end":{"line":130,"col":10,"offset":4105},"abstract_content":"'i'"},"$VAL1":{"start":{"line":144,"col":7,"offset":4436},"end":{"line":144,"col":10,"offset":4439},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0d0e5b07ad20a9a8bca83e02caa3ab5141fef86f4ee1e0db46b6a1b4687a4f8048446ccb3a4987684137c87f2981af153c39f22436162d6ec9802491e9a1b18_0","lines":"\tswitch (c) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":132,"col":18,"offset":4144},"end":{"line":132,"col":31,"offset":4157},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"c2a19e67f711f76ecb908ac427be5b54190f1de73be1a9c0ebafab93916557735d14e62a988ec2ac0d4ee82949deb7a653c98fa840db5d4816a9be89d66441e0_0","lines":"\t    set_index = atoi (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":145,"col":13,"offset":4453},"end":{"line":145,"col":17,"offset":4457},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_2","lines":"\t    usage (argv[0], 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":147,"col":13,"offset":4488},"end":{"line":147,"col":17,"offset":4492},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_3","lines":"\t    usage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":157,"col":9,"offset":4600},"end":{"line":157,"col":13,"offset":4604},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_4","lines":"\tusage (argv[0], 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":160,"col":44,"offset":4672},"end":{"line":160,"col":70,"offset":4698},"extra":{"metavars":{"$FUN":{"start":{"line":160,"col":44,"offset":4672},"end":{"line":160,"col":53,"offset":4681},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b76a4807a854b0313b20946d72544387eeaecb1b6699e3f91b941aaf7397eb4ebf6467a2a2d958b3ed9e6ba42181a030f7453885b8d06676c1cce71c4fee7a28_1","lines":"\tlang = FcLangNormalize ((const FcChar8 *) setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":167,"col":2,"offset":4796},"end":{"line":167,"col":59,"offset":4853},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_13","lines":"\tfprintf (stderr, _(\"Can't initalize FreeType library\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":181,"col":30,"offset":5025},"end":{"line":181,"col":34,"offset":5029},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_5","lines":"\t    if (FT_New_Face (ftlib, argv[i], index, &face))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":185,"col":3,"offset":5102},"end":{"line":185,"col":54,"offset":5153},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_14","lines":"\t\tfprintf (stderr, _(\"Unable to open %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":185,"col":46,"offset":5145},"end":{"line":185,"col":50,"offset":5149},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_6","lines":"\t\tfprintf (stderr, _(\"Unable to open %s\\n\"), argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":200,"col":7,"offset":5413},"end":{"line":201,"col":36,"offset":5530},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_15","lines":"\t\t    printf (_(\"%s:%d Missing %d glyph(s) to satisfy the coverage for %s language\\n\"),\n\t\t\t    argv[i], index, count, lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":201,"col":8,"offset":5502},"end":{"line":201,"col":12,"offset":5506},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_7","lines":"\t\t\t    argv[i], index, count, lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":219,"col":9,"offset":5892},"end":{"line":220,"col":38,"offset":5943},"extra":{"metavars":{"$EXPR1":{"start":{"line":219,"col":13,"offset":5896},"end":{"line":219,"col":17,"offset":5900},"abstract_content":"bits"},"$EXPR2":{"start":{"line":219,"col":20,"offset":5903},"end":{"line":219,"col":21,"offset":5904},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0cdfd62ced430602d273165d73281c7fd7c4e20b9e0f49a8ea7f73830cf8bebd19d157b5a52a38e3468d4bbfedf48fdb4002a8cd21f9c8274c9131b2ff47eb5_0","lines":"\t\t\t\t    if (bits & 1)\n\t\t\t\t\tprintf (\"  0x%04x\\n\", base + b);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":220,"col":6,"offset":5911},"end":{"line":220,"col":37,"offset":5942},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"  0x%04x\\n\""},"$FMT":{"start":{"line":220,"col":14,"offset":5919},"end":{"line":220,"col":26,"offset":5931},"abstract_content":"\"  0x%04x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2005c023d038b3f402914b480db92be1cc8456465b7ec9b8ffeafdacade722446d5dc59fd1907206988d7d3dd3ccbf586212f12c2116f955d3570b4ca1c06e27_0","lines":"\t\t\t\t\tprintf (\"  0x%04x\\n\", base + b);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":230,"col":7,"offset":6026},"end":{"line":230,"col":87,"offset":6106},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b654fa1de7d8bf49f3259553669395117bc4e5bcf240bb875790bbfde1ff3928fc7b02037c24589bb8810527d018bba7b1a841d5138dd62905f1bc88a1b8052_16","lines":"\t\t    printf (_(\"%s:%d Satisfy the coverage for %s language\\n\"), argv[i], index, lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":230,"col":66,"offset":6085},"end":{"line":230,"col":70,"offset":6089},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"74f79a8dff3fe077bb1bcad0a56d897cd23637ce1032a05418cd032d17d68e8b411f44d8aec87f61a8edd1d9f2311a01797a530e59d995b033465c9beadf7ad7_8","lines":"\t\t    printf (_(\"%s:%d Satisfy the coverage for %s language\\n\"), argv[i], index, lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":28,"col":1,"offset":1254},"end":{"line":28,"col":39,"offset":1292},"extra":{"metavars":{"$EXPR1":{"start":{"line":28,"col":19,"offset":1272},"end":{"line":28,"col":20,"offset":1273},"abstract_content":"1"},"$EXPR2":{"start":{"line":28,"col":24,"offset":1277},"end":{"line":28,"col":37,"offset":1290},"abstract_content":"sizeof(char)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"18866bcf1039b58855b53524124ddd4a8b6d8a79d6345beb7a423b8a39dc973b28bf9d8aff1af11133e1aac848a352a71a5f1d93294c3704e32ce9e8e663eb16_0","lines":"FC_ASSERT_STATIC (1 == sizeof (char));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":29,"col":1,"offset":1293},"end":{"line":29,"col":43,"offset":1335},"extra":{"metavars":{"$EXPR1":{"start":{"line":29,"col":19,"offset":1311},"end":{"line":29,"col":20,"offset":1312},"abstract_content":"2"},"$EXPR2":{"start":{"line":29,"col":24,"offset":1316},"end":{"line":29,"col":40,"offset":1332},"abstract_content":"sizeof FcChar16"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c1bb3e418e15ed1165278897b29e4d9013fea07809cf4038805b0d0c2b57d8f0993a765beee8dc767b1f4492c4e8daccdbf054e6e315bda5b5bc3943b3674fa_0","lines":"FC_ASSERT_STATIC (2 == sizeof (FcChar16));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":30,"col":1,"offset":1336},"end":{"line":30,"col":38,"offset":1373},"extra":{"metavars":{"$EXPR1":{"start":{"line":30,"col":19,"offset":1354},"end":{"line":30,"col":20,"offset":1355},"abstract_content":"4"},"$EXPR2":{"start":{"line":30,"col":24,"offset":1359},"end":{"line":30,"col":36,"offset":1371},"abstract_content":"sizeof(int)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f737cbdeb99b1467064a2e39dbdced2d5a7bc91aa53eacf009d6f0fe679f078db0b4f9725af4fe040f388a8095fccb3e318212a222f29c13fb6db6fc8b367bf9_0","lines":"FC_ASSERT_STATIC (4 == sizeof (int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":31,"col":1,"offset":1374},"end":{"line":31,"col":43,"offset":1416},"extra":{"metavars":{"$EXPR1":{"start":{"line":31,"col":19,"offset":1392},"end":{"line":31,"col":20,"offset":1393},"abstract_content":"4"},"$EXPR2":{"start":{"line":31,"col":24,"offset":1397},"end":{"line":31,"col":40,"offset":1413},"abstract_content":"sizeof FcChar32"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c5141f4ce44f913aa351a7e1be327076ae1891d929eeff2d883b0637f602374fb2af6ad2c6c6a6ffd900734286d0480ea6f5e20210e7d9e928d71ee803103665_0","lines":"FC_ASSERT_STATIC (4 == sizeof (FcChar32));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":32,"col":1,"offset":1417},"end":{"line":32,"col":43,"offset":1459},"extra":{"metavars":{"$EXPR1":{"start":{"line":32,"col":19,"offset":1435},"end":{"line":32,"col":20,"offset":1436},"abstract_content":"4"},"$EXPR2":{"start":{"line":32,"col":24,"offset":1440},"end":{"line":32,"col":40,"offset":1456},"abstract_content":"sizeof FcObject"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dfabeb7e66ef4d6515724080ec9ace9161a072c9d28c38586c0bbc5fa6cf76cd499313b8163808a75c5f72cecbbc50073432bf738ccbb587a3482363afa760fb_0","lines":"FC_ASSERT_STATIC (4 == sizeof (FcObject));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":33,"col":1,"offset":1460},"end":{"line":33,"col":49,"offset":1508},"extra":{"metavars":{"$EXPR1":{"start":{"line":33,"col":19,"offset":1478},"end":{"line":33,"col":20,"offset":1479},"abstract_content":"4"},"$EXPR2":{"start":{"line":33,"col":24,"offset":1483},"end":{"line":33,"col":46,"offset":1505},"abstract_content":"sizeof FcValueBinding"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2845b3e2597394af778e3388cab49a61e87e4abfbd34fa9ec5548da034c5b25a047d1b5cfbb30045706ccd941e0a36d920689d5d740a9fd1bb49edb1e3b7c101_0","lines":"FC_ASSERT_STATIC (4 == sizeof (FcValueBinding));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":34,"col":1,"offset":1509},"end":{"line":34,"col":42,"offset":1550},"extra":{"metavars":{"$EXPR1":{"start":{"line":34,"col":19,"offset":1527},"end":{"line":34,"col":20,"offset":1528},"abstract_content":"8"},"$EXPR2":{"start":{"line":34,"col":24,"offset":1532},"end":{"line":34,"col":39,"offset":1547},"abstract_content":"sizeof FcAlign"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cd83289bd72ad4d13c2542c00784a82003dd1bab380f6346db4765d5e64e34613882e4af052b732afcd9bc15653af9ec2a49baeb41a45ba7ecf9fc60910351e7_0","lines":"FC_ASSERT_STATIC (8 == sizeof (FcAlign));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":35,"col":1,"offset":1551},"end":{"line":35,"col":48,"offset":1598},"extra":{"metavars":{"$EXPR1":{"start":{"line":35,"col":19,"offset":1569},"end":{"line":35,"col":23,"offset":1573},"abstract_content":"0x20"},"$EXPR2":{"start":{"line":35,"col":27,"offset":1577},"end":{"line":35,"col":45,"offset":1595},"abstract_content":"sizeof FcCharLeaf"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d7d1eb3ceaf29d14313a4081556f6c3ba131eb24c0ebbbd2e9f9f03680c2ad5bbe8a5b0398c62458f38897d40e7697a80a995685e9b4082a3ddf3073a40c959_0","lines":"FC_ASSERT_STATIC (0x20 == sizeof (FcCharLeaf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":37,"col":1,"offset":1600},"end":{"line":37,"col":55,"offset":1654},"extra":{"metavars":{"$EXPR1":{"start":{"line":37,"col":19,"offset":1618},"end":{"line":37,"col":32,"offset":1631},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":37,"col":36,"offset":1635},"end":{"line":37,"col":53,"offset":1652},"abstract_content":"sizeof(intptr_t)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f27d04a93ef13cc550218deedddb2ee103fc98867b36d801d08daba7ab3e530b5aecff17725178b1d747a10bb58e1a9c4c7f62341d24fb22caf23397b15d68aa_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (intptr_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":38,"col":1,"offset":1655},"end":{"line":38,"col":62,"offset":1716},"extra":{"metavars":{"$EXPR1":{"start":{"line":38,"col":19,"offset":1673},"end":{"line":38,"col":32,"offset":1686},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":38,"col":36,"offset":1690},"end":{"line":38,"col":59,"offset":1713},"abstract_content":"sizeof FcPatternEltPtr"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5cdfe8a12b7c566bcbf172f46a93725ddf383a3bd1a79463c10f9c8ee3e104b11311df28ba66263ca6e50cda6236dfe58b22f55774981893ddde7ff04d448c83_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcPatternEltPtr));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":39,"col":1,"offset":1717},"end":{"line":39,"col":61,"offset":1777},"extra":{"metavars":{"$EXPR1":{"start":{"line":39,"col":19,"offset":1735},"end":{"line":39,"col":32,"offset":1748},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":39,"col":36,"offset":1752},"end":{"line":39,"col":58,"offset":1774},"abstract_content":"sizeof FcValueListPtr"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a672e5cd702c0e8e9e954018b40f3862b1054046371c50cd878a0ed9f29aea19e55f85dec24d5e860c1c698a99b996e477fbf294938950246150bbfea66a6bed_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcValueListPtr));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":40,"col":1,"offset":1778},"end":{"line":40,"col":53,"offset":1830},"extra":{"metavars":{"$EXPR1":{"start":{"line":40,"col":19,"offset":1796},"end":{"line":40,"col":32,"offset":1809},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":40,"col":36,"offset":1813},"end":{"line":40,"col":51,"offset":1828},"abstract_content":"sizeof(char*)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"684001ccc9e57e2d964f24ff1f5f935067f6db04515e792a505ae5de9e864ffed341fb2775aac9099ed9c59b58fdd521d30cdb94b0949e0aab9b5a15534784db_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":41,"col":1,"offset":1831},"end":{"line":41,"col":68,"offset":1898},"extra":{"metavars":{"$EXPR1":{"start":{"line":41,"col":19,"offset":1849},"end":{"line":41,"col":32,"offset":1862},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":41,"col":36,"offset":1866},"end":{"line":41,"col":66,"offset":1896},"abstract_content":"sizeof(struct FcPatternElt*)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e39dc1272d1cce9f74e905dab0f8c6286386c5cb3626bb43eb286c0d670dfa3b6329be9a734782c6e734596064356cc599926203377728b01fa76bea8c102e7f_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (struct FcPatternElt *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":42,"col":1,"offset":1899},"end":{"line":42,"col":60,"offset":1958},"extra":{"metavars":{"$EXPR1":{"start":{"line":42,"col":19,"offset":1917},"end":{"line":42,"col":32,"offset":1930},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":42,"col":36,"offset":1934},"end":{"line":42,"col":58,"offset":1956},"abstract_content":"sizeof(FcValueList*)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"36fe66a9e421699338eb18f2653ebf014c02f2184c5ffafe6844ba4f6790e77e7eaa98cadf69696b8ce8cfa8fc03ce4b53c9edb41e16f583edca078a8e07357b_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcValueList *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":43,"col":1,"offset":1959},"end":{"line":43,"col":57,"offset":2015},"extra":{"metavars":{"$EXPR1":{"start":{"line":43,"col":19,"offset":1977},"end":{"line":43,"col":32,"offset":1990},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":43,"col":36,"offset":1994},"end":{"line":43,"col":55,"offset":2013},"abstract_content":"sizeof(FcStrSet*)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3511fd1316bf346e2b9579aea124a887744ac5cbd0ac831d50c9f9cecfe5f6816d95e86a2dde294df93168acbb3c481fa7de780f8ce3cf208142d814dede33e0_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcStrSet *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":44,"col":1,"offset":2016},"end":{"line":44,"col":60,"offset":2075},"extra":{"metavars":{"$EXPR1":{"start":{"line":44,"col":19,"offset":2034},"end":{"line":44,"col":32,"offset":2047},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":44,"col":36,"offset":2051},"end":{"line":44,"col":58,"offset":2073},"abstract_content":"sizeof(FcCharLeaf**)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4f5b025c333f920ff6e8e5a71620b6377362e06b189df93681f4b13b96b30998a82bfaa78a9117b9ac13ad031bcf9b2da47e67e281ec256ea42e34cc023e9e50_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcCharLeaf **));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":45,"col":1,"offset":2076},"end":{"line":45,"col":57,"offset":2132},"extra":{"metavars":{"$EXPR1":{"start":{"line":45,"col":19,"offset":2094},"end":{"line":45,"col":32,"offset":2107},"abstract_content":"SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":45,"col":36,"offset":2111},"end":{"line":45,"col":55,"offset":2130},"abstract_content":"sizeof(FcChar16*)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"409eb9b11a70e9ed7010fb99352e68f79bcc606a0bbaa1a4eb380d7a5dc9015bb3bad67df32e1db95dc2358384714fa12533067908e4d9e094519549a741bc50_0","lines":"FC_ASSERT_STATIC (SIZEOF_VOID_P == sizeof (FcChar16 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":47,"col":1,"offset":2134},"end":{"line":47,"col":86,"offset":2219},"extra":{"metavars":{"$EXPR1":{"start":{"line":47,"col":19,"offset":2152},"end":{"line":47,"col":64,"offset":2197},"abstract_content":"0x08+1*FC_MAX(SIZEOF_VOID_P ALIGNOF_DOUBLE)"},"$EXPR2":{"start":{"line":47,"col":68,"offset":2201},"end":{"line":47,"col":83,"offset":2216},"abstract_content":"sizeof FcValue"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2771f877f3664f6a690ee67cc3057a431448b4b489897d453e7ca434f09fa0c7c5700db34711fee8e1fb7b9b6c331c350a27248dfcd1471c1a184ca6936a9a92_0","lines":"FC_ASSERT_STATIC (0x08 + 1*FC_MAX(SIZEOF_VOID_P,ALIGNOF_DOUBLE) == sizeof (FcValue));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":48,"col":1,"offset":2220},"end":{"line":48,"col":68,"offset":2287},"extra":{"metavars":{"$EXPR1":{"start":{"line":48,"col":19,"offset":2238},"end":{"line":48,"col":41,"offset":2260},"abstract_content":"0x00+2*SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":48,"col":45,"offset":2264},"end":{"line":48,"col":65,"offset":2284},"abstract_content":"sizeof FcPatternElt"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"386fb7e60d73106e84fe1bb60b9212b9204a662679a47a5a4c9dd60eddf2b60c08cfb7443bbeb62eb1ebe3979e2bd54f5d5ff96887dff4f58a522aad6135acad_0","lines":"FC_ASSERT_STATIC (0x00 + 2*SIZEOF_VOID_P == sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":49,"col":1,"offset":2288},"end":{"line":49,"col":65,"offset":2352},"extra":{"metavars":{"$EXPR1":{"start":{"line":49,"col":19,"offset":2306},"end":{"line":49,"col":41,"offset":2328},"abstract_content":"0x08+2*SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":49,"col":45,"offset":2332},"end":{"line":49,"col":62,"offset":2349},"abstract_content":"sizeof FcPattern"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c40156d099f7ea93c66491df4fcf4c87386414afeffd5ba6272823d3b60510836a9e1965f4a984ba67c4f2ec3d000450f6b5a461c2287ac212b56d835025454_0","lines":"FC_ASSERT_STATIC (0x08 + 2*SIZEOF_VOID_P == sizeof (FcPattern));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":50,"col":1,"offset":2353},"end":{"line":50,"col":65,"offset":2417},"extra":{"metavars":{"$EXPR1":{"start":{"line":50,"col":19,"offset":2371},"end":{"line":50,"col":41,"offset":2393},"abstract_content":"0x08+2*SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":50,"col":45,"offset":2397},"end":{"line":50,"col":62,"offset":2414},"abstract_content":"sizeof FcCharSet"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ed02c39b2fabdf08e683a32df1f7e05ecf2c585b048770833473ee7782f073b14f91ad3fdbb16c3ece2f19fe236795299a9145350e821319d8a69fe1c1b39f29_0","lines":"FC_ASSERT_STATIC (0x08 + 2*SIZEOF_VOID_P == sizeof (FcCharSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":51,"col":1,"offset":2418},"end":{"line":51,"col":63,"offset":2480},"extra":{"metavars":{"$EXPR1":{"start":{"line":51,"col":19,"offset":2436},"end":{"line":51,"col":41,"offset":2458},"abstract_content":"0x10+6*SIZEOF_VOID_P"},"$EXPR2":{"start":{"line":51,"col":45,"offset":2462},"end":{"line":51,"col":60,"offset":2477},"abstract_content":"sizeof FcCache"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6626be5c95ad37a31cc7d93960ae74ad1ab03b2d10184f29be511b8901de43d8eb9041919b21b4f35336fd792c681aeed14918fec4eff9e466a91b2e84b962dc_0","lines":"FC_ASSERT_STATIC (0x10 + 6*SIZEOF_VOID_P == sizeof (FcCache));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":78,"col":24,"offset":2609},"end":{"line":78,"col":42,"offset":2627},"extra":{"metavars":{"$X":{"start":{"line":73,"col":26,"offset":2493},"end":{"line":77,"col":12,"offset":2579},"abstract_content":"sizeof FcAtomic+file_len+1+new_len+1+lck_len+1+tmp_len"},"$Y":{"start":{"line":77,"col":15,"offset":2582},"end":{"line":77,"col":16,"offset":2583},"abstract_content":"1"},"$FUN":{"start":{"line":78,"col":24,"offset":2609},"end":{"line":78,"col":30,"offset":2615},"abstract_content":"malloc"},"$N":{"start":{"line":78,"col":32,"offset":2617},"end":{"line":78,"col":41,"offset":2626},"abstract_content":"total_len","propagated_value":{"svalue_start":{"line":73,"col":26,"offset":2493},"svalue_end":{"line":77,"col":16,"offset":2583},"svalue_abstract_content":"sizeof FcAtomic+file_len+1+new_len+1+lck_len+1+tmp_len+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ee7ad724f8a221b58466dcffc9652d944d46f4764c414756c7dab41ee9bdfe96027bfc4875adbf4746beb206641b94326a8cf6f1b6a5771e2e87e8df7570d495_0","lines":"    FcAtomic\t*atomic = malloc (total_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":78,"col":24,"offset":2609},"end":{"line":78,"col":42,"offset":2627},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":24,"offset":2609},"end":{"line":78,"col":30,"offset":2615},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c050ef0a5ba9014d21657409e40c5806dbf66bcc6d26aab6ee7f6f9008a712d44285ba0513334340bbdfe787bfc1051dc27e0d170f4da5f449ba33f9c900339_0","lines":"    FcAtomic\t*atomic = malloc (total_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":78,"col":24,"offset":2609},"end":{"line":78,"col":42,"offset":2627},"extra":{"metavars":{"$LEN":{"start":{"line":78,"col":32,"offset":2617},"end":{"line":78,"col":41,"offset":2626},"abstract_content":"total_len","propagated_value":{"svalue_start":{"line":73,"col":26,"offset":2493},"svalue_end":{"line":77,"col":16,"offset":2583},"svalue_abstract_content":"sizeof FcAtomic+file_len+1+new_len+1+lck_len+1+tmp_len+1"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3148019791c9a77d60ad9902b07050db1446ad9ee95495b0a4bc4c9362924a7896abfae92c14da793f758856e9fef4cef989326bed40dd416a40542e1f77e8f6_0","lines":"    FcAtomic\t*atomic = malloc (total_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":83,"col":5,"offset":2707},"end":{"line":83,"col":50,"offset":2752},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_0","lines":"    strcpy ((char *) atomic->file, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":83,"col":5,"offset":2707},"end":{"line":83,"col":50,"offset":2752},"extra":{"metavars":{"$FUN":{"start":{"line":83,"col":5,"offset":2707},"end":{"line":83,"col":11,"offset":2713},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5a7093df424ce33f05cfb476c3a4798f0fcc9115dcda4afcf084b2d754f7af3a07166c8cac5a7b61c75008b3a61c31b17ef1042d4e0b3f8a0a67a18339b1008_0","lines":"    strcpy ((char *) atomic->file, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":86,"col":5,"offset":2806},"end":{"line":86,"col":49,"offset":2850},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_1","lines":"    strcpy ((char *) atomic->new, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":86,"col":5,"offset":2806},"end":{"line":86,"col":49,"offset":2850},"extra":{"metavars":{"$FUN":{"start":{"line":86,"col":5,"offset":2806},"end":{"line":86,"col":11,"offset":2812},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5a7093df424ce33f05cfb476c3a4798f0fcc9115dcda4afcf084b2d754f7af3a07166c8cac5a7b61c75008b3a61c31b17ef1042d4e0b3f8a0a67a18339b1008_1","lines":"    strcpy ((char *) atomic->new, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":87,"col":5,"offset":2856},"end":{"line":87,"col":44,"offset":2895},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_2","lines":"    strcat ((char *) atomic->new, NEW_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":87,"col":5,"offset":2856},"end":{"line":87,"col":44,"offset":2895},"extra":{"metavars":{"$FUN":{"start":{"line":87,"col":5,"offset":2856},"end":{"line":87,"col":11,"offset":2862},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"caa3e9ecb0bfa9e3000142052fb9e3f33c951f8dce7f15607d1d6651f6c22ef2031c2ddc6f4fe8f7d2f7473b8efa965090b5590c00450151b265fe1458b2363d_0","lines":"    strcat ((char *) atomic->new, NEW_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":90,"col":5,"offset":2947},"end":{"line":90,"col":49,"offset":2991},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_3","lines":"    strcpy ((char *) atomic->lck, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":90,"col":5,"offset":2947},"end":{"line":90,"col":49,"offset":2991},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":5,"offset":2947},"end":{"line":90,"col":11,"offset":2953},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5a7093df424ce33f05cfb476c3a4798f0fcc9115dcda4afcf084b2d754f7af3a07166c8cac5a7b61c75008b3a61c31b17ef1042d4e0b3f8a0a67a18339b1008_2","lines":"    strcpy ((char *) atomic->lck, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":91,"col":5,"offset":2997},"end":{"line":91,"col":44,"offset":3036},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_4","lines":"    strcat ((char *) atomic->lck, LCK_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":91,"col":5,"offset":2997},"end":{"line":91,"col":44,"offset":3036},"extra":{"metavars":{"$FUN":{"start":{"line":91,"col":5,"offset":2997},"end":{"line":91,"col":11,"offset":3003},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"caa3e9ecb0bfa9e3000142052fb9e3f33c951f8dce7f15607d1d6651f6c22ef2031c2ddc6f4fe8f7d2f7473b8efa965090b5590c00450151b265fe1458b2363d_1","lines":"    strcat ((char *) atomic->lck, LCK_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":109,"col":5,"offset":3276},"end":{"line":109,"col":57,"offset":3328},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_5","lines":"    strcpy ((char *) atomic->tmp, (char *) atomic->file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":109,"col":5,"offset":3276},"end":{"line":109,"col":57,"offset":3328},"extra":{"metavars":{"$FUN":{"start":{"line":109,"col":5,"offset":3276},"end":{"line":109,"col":11,"offset":3282},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5a7093df424ce33f05cfb476c3a4798f0fcc9115dcda4afcf084b2d754f7af3a07166c8cac5a7b61c75008b3a61c31b17ef1042d4e0b3f8a0a67a18339b1008_3","lines":"    strcpy ((char *) atomic->tmp, (char *) atomic->file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":110,"col":5,"offset":3334},"end":{"line":110,"col":44,"offset":3373},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d18718d8b2c90c62c690f89263406b196f7f24bdcd16b8396c2c7d2800467a09f4b7d121df8ec6623d72861922f22e8523e7b46d34a766b2210e699078a2a74a_6","lines":"    strcat ((char *) atomic->tmp, TMP_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":110,"col":5,"offset":3334},"end":{"line":110,"col":44,"offset":3373},"extra":{"metavars":{"$FUN":{"start":{"line":110,"col":5,"offset":3334},"end":{"line":110,"col":11,"offset":3340},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"caa3e9ecb0bfa9e3000142052fb9e3f33c951f8dce7f15607d1d6651f6c22ef2031c2ddc6f4fe8f7d2f7473b8efa965090b5590c00450151b265fe1458b2363d_2","lines":"    strcat ((char *) atomic->tmp, TMP_NAME);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":114,"col":9,"offset":3464},"end":{"line":114,"col":25,"offset":3480},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":9,"offset":3464},"end":{"line":114,"col":15,"offset":3470},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c1f7ad26061fb28da3be0aa862a39da8585ddfa76e3e6f8e45278ba3e633e0f8518c6c3c3d4625356482578ac27700c18b2993f2b5dc08a10d543d2e960d9541_0","lines":"    f = fdopen (fd, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":118,"col":2,"offset":3518},"end":{"line":118,"col":31,"offset":3547},"extra":{"metavars":{"$FUN":{"start":{"line":118,"col":2,"offset":3518},"end":{"line":118,"col":8,"offset":3524},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_0","lines":"\tunlink ((char *) atomic->tmp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":125,"col":2,"offset":3658},"end":{"line":125,"col":31,"offset":3687},"extra":{"metavars":{"$FUN":{"start":{"line":125,"col":2,"offset":3658},"end":{"line":125,"col":8,"offset":3664},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_1","lines":"\tunlink ((char *) atomic->tmp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":130,"col":2,"offset":3746},"end":{"line":130,"col":31,"offset":3775},"extra":{"metavars":{"$FUN":{"start":{"line":130,"col":2,"offset":3746},"end":{"line":130,"col":8,"offset":3752},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_2","lines":"\tunlink ((char *) atomic->tmp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":133,"col":11,"offset":3810},"end":{"line":133,"col":60,"offset":3859},"extra":{"metavars":{"$FUN":{"start":{"line":133,"col":11,"offset":3810},"end":{"line":133,"col":15,"offset":3814},"abstract_content":"link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"901b4ebbae8c844b6aee913d7a0017fa039e5d44acc0ecd1a6b4f05dda16c91aa48c61697f4869e45810ec788d65a3442617191ebdeec72a60ebb74e2c4e37eb_0","lines":"    ret = link ((char *) atomic->tmp, (char *) atomic->lck);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":139,"col":8,"offset":4064},"end":{"line":139,"col":42,"offset":4098},"extra":{"metavars":{"$FUN":{"start":{"line":139,"col":8,"offset":4064},"end":{"line":139,"col":13,"offset":4069},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"577a92c28794ca068f1380bc9b1f318be3d9cbfa35b9dc9193c8cba3de0d3d4eb9e3ca2486b63fdbed8b055451ca915584e1d459e196c2874d5f1389354fc135_0","lines":"\tret = mkdir ((char *) atomic->lck, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":142,"col":12,"offset":4136},"end":{"line":142,"col":41,"offset":4165},"extra":{"metavars":{"$FUN":{"start":{"line":142,"col":12,"offset":4136},"end":{"line":142,"col":18,"offset":4142},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_3","lines":"    (void) unlink ((char *) atomic->tmp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":144,"col":11,"offset":4183},"end":{"line":144,"col":45,"offset":4217},"extra":{"metavars":{"$FUN":{"start":{"line":144,"col":11,"offset":4183},"end":{"line":144,"col":16,"offset":4188},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"577a92c28794ca068f1380bc9b1f318be3d9cbfa35b9dc9193c8cba3de0d3d4eb9e3ca2486b63fdbed8b055451ca915584e1d459e196c2874d5f1389354fc135_1","lines":"    ret = mkdir ((char *) atomic->lck, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":167,"col":11,"offset":4733},"end":{"line":167,"col":40,"offset":4762},"extra":{"metavars":{"$FUN":{"start":{"line":167,"col":11,"offset":4733},"end":{"line":167,"col":17,"offset":4739},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_4","lines":"\t\t    if (unlink ((char *) atomic->lck) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":178,"col":12,"offset":4940},"end":{"line":178,"col":41,"offset":4969},"extra":{"metavars":{"$FUN":{"start":{"line":178,"col":12,"offset":4940},"end":{"line":178,"col":18,"offset":4946},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_5","lines":"    (void) unlink ((char *) atomic->new);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":198,"col":5,"offset":5209},"end":{"line":198,"col":41,"offset":5245},"extra":{"metavars":{"$FUN":{"start":{"line":198,"col":5,"offset":5209},"end":{"line":198,"col":11,"offset":5215},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_6","lines":"    unlink ((const char *) atomic->file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":200,"col":9,"offset":5262},"end":{"line":200,"col":61,"offset":5314},"extra":{"metavars":{"$FUN":{"start":{"line":200,"col":9,"offset":5262},"end":{"line":200,"col":15,"offset":5268},"abstract_content":"rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a20b5efab852979a7f92082382a2fa4a86a88845c1ad1c5b678a21f1b10b0d0a40af72722032561c72461e4355f9eafea8bdf9d6ea004f4c1358086f6cc3418b_0","lines":"    if (rename ((char *) atomic->new, (char *) atomic->file) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":208,"col":5,"offset":5407},"end":{"line":208,"col":34,"offset":5436},"extra":{"metavars":{"$FUN":{"start":{"line":208,"col":5,"offset":5407},"end":{"line":208,"col":11,"offset":5413},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_7","lines":"    unlink ((char *) atomic->new);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":215,"col":9,"offset":5507},"end":{"line":215,"col":38,"offset":5536},"extra":{"metavars":{"$FUN":{"start":{"line":215,"col":9,"offset":5507},"end":{"line":215,"col":15,"offset":5513},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"85de209b3baf683b1fcb66b761260f47321ed15e8ebbb2a7b93c85cf2e5600028a89a280f490aadf8c7146279e1af39a964659dec57c4506eb14ddf72f0bb972_8","lines":"    if (unlink ((char *) atomic->lck) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","start":{"line":225,"col":5,"offset":5671},"end":{"line":225,"col":19,"offset":5685},"extra":{"metavars":{"$PTR":{"start":{"line":225,"col":11,"offset":5677},"end":{"line":225,"col":17,"offset":5683},"abstract_content":"atomic"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2bc00dc4c37952f7e7716fd14b5780f7858f2713c613e1c17a865a7fe38a8c584838b42beaa6a6bd62cf78d7d0c98b7262368b51830efa281f7ec5017fbabd77_0","lines":"    free (atomic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":108,"col":14,"offset":2514},"end":{"line":108,"col":40,"offset":2540},"extra":{"metavars":{"$FUN":{"start":{"line":108,"col":14,"offset":2514},"end":{"line":108,"col":20,"offset":2520},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_0","lines":"    config = malloc (sizeof (FcConfig));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":273,"col":13,"offset":6607},"end":{"line":273,"col":41,"offset":6635},"extra":{"metavars":{"$FUN":{"start":{"line":273,"col":13,"offset":6607},"end":{"line":273,"col":19,"offset":6613},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_1","lines":"\tnew_page = malloc (sizeof (FcExprPage));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":333,"col":7,"offset":7996},"end":{"line":333,"col":19,"offset":8008},"extra":{"metavars":{"$PTR":{"start":{"line":333,"col":13,"offset":8002},"end":{"line":333,"col":17,"offset":8006},"abstract_content":"page"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a797b10248ed8fac52889a3b6e8f2b9b021112b83967ed1d523f3ad40e2c3ce0ac3c9e52fd2b43a5fabde3a24361fef9d16baafdfc1ad137e8b4275def830385_0","lines":"      free (page);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":341,"col":5,"offset":8140},"end":{"line":341,"col":19,"offset":8154},"extra":{"metavars":{"$PTR":{"start":{"line":341,"col":11,"offset":8146},"end":{"line":341,"col":17,"offset":8152},"abstract_content":"config"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f658fccdb1dd9d7a4f17d41304236df6894fc2e9b7523ed34263d521b6242e1bdbed91da0d03c25bec3fd8c359de9704b8af772a495ef01d4bd0459c927426fc_0","lines":"    free (config);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":389,"col":7,"offset":9186},"end":{"line":389,"col":34,"offset":9213},"extra":{"metavars":{"$PTR":{"start":{"line":389,"col":13,"offset":9192},"end":{"line":389,"col":32,"offset":9211},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"03cd6391d30add55eeec3d012a376bc72206c787a99f6ec21f674e91df56ee3274d30566913c7acfca6836f4bb4602628b73700dbdce5d767d00d5f167b682c1_0","lines":"\t\t    free (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":399,"col":3,"offset":9363},"end":{"line":399,"col":30,"offset":9390},"extra":{"metavars":{"$PTR":{"start":{"line":399,"col":9,"offset":9369},"end":{"line":399,"col":28,"offset":9388},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"03cd6391d30add55eeec3d012a376bc72206c787a99f6ec21f674e91df56ee3274d30566913c7acfca6836f4bb4602628b73700dbdce5d767d00d5f167b682c1_1","lines":"\t\tfree (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":406,"col":8,"offset":9531},"end":{"line":406,"col":35,"offset":9558},"extra":{"metavars":{"$PTR":{"start":{"line":406,"col":14,"offset":9537},"end":{"line":406,"col":33,"offset":9556},"abstract_content":"relocated_font_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"03cd6391d30add55eeec3d012a376bc72206c787a99f6ec21f674e91df56ee3274d30566913c7acfca6836f4bb4602628b73700dbdce5d767d00d5f167b682c1_2","lines":"\t      free (relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":454,"col":2,"offset":10471},"end":{"line":455,"col":45,"offset":10548},"extra":{"metavars":{"$EXPR1":{"start":{"line":454,"col":6,"offset":10475},"end":{"line":454,"col":16,"offset":10485},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":454,"col":19,"offset":10488},"end":{"line":454,"col":33,"offset":10502},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5152e75afffb8a67db38ba4751952d05db53f42df29e7898e63e33eabd68dfe7ee2eea38dea346d951f13462088af0fa0f86f6f476ca2cb2b3f6bfa25faa6e69_0","lines":"\tif (FcDebug () & FC_DBG_FONTSET)\n\t    printf (\"adding fonts from %s\\n\", dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":491,"col":5,"offset":11253},"end":{"line":492,"col":25,"offset":11310},"extra":{"metavars":{"$EXPR1":{"start":{"line":491,"col":9,"offset":11257},"end":{"line":491,"col":19,"offset":11267},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":491,"col":22,"offset":11270},"end":{"line":491,"col":36,"offset":11284},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5152e75afffb8a67db38ba4751952d05db53f42df29e7898e63e33eabd68dfe7ee2eea38dea346d951f13462088af0fa0f86f6f476ca2cb2b3f6bfa25faa6e69_1","lines":"    if (FcDebug () & FC_DBG_FONTSET)\n\tFcFontSetPrint (fonts);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":39,"offset":16428},"extra":{"metavars":{"$NARROW":{"start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":15,"offset":16404},"abstract_content":"flags"},"$LARGE":{"start":{"line":778,"col":35,"offset":16424},"end":{"line":778,"col":38,"offset":16427},"abstract_content":"op_"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0d172cec15cc8908eb6b5d6ea144d1efeef25f13de1ad27b7fec16cabd9eff0de76fea2c57376788faba8c25f120cb937ffd63a444f67502ede32694aac601be_0","lines":"    int\t\tflags = FC_OP_GET_FLAGS (op_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":39,"offset":16428},"extra":{"metavars":{"$SIGNED":{"start":{"line":778,"col":10,"offset":16399},"end":{"line":778,"col":15,"offset":16404},"abstract_content":"flags"},"$UNSIGNED":{"start":{"line":778,"col":35,"offset":16424},"end":{"line":778,"col":38,"offset":16427},"abstract_content":"op_"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6e0a0fbba4965815058c959f23ff44e91a9fc3ee6b76f1fd99801a0be46f2f5cdb934f1dbd9fa5a95e91e5e0a5435cc9667b9027cd6c6aaa132e51e9871d6667_0","lines":"    int\t\tflags = FC_OP_GET_FLAGS (op_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":785,"col":10,"offset":16617},"end":{"line":785,"col":19,"offset":16626},"extra":{"metavars":{"$VAR":{"start":{"line":785,"col":10,"offset":16617},"end":{"line":785,"col":19,"offset":16626},"abstract_content":"left.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9dca14bfeeade233b22d5a16e73812a66bd96c80e0d1b1461b53aed86c7c3ed557cc95418d07dd1abb6050bf8d87c922860e1b8d5f2db65165b067cdc206e620_0","lines":"\tswitch (left.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":795,"col":3,"offset":16915},"end":{"line":795,"col":31,"offset":16943},"extra":{"metavars":{"$EXPR1":{"start":{"line":795,"col":9,"offset":16921},"end":{"line":795,"col":17,"offset":16929},"abstract_content":"left.u.d"},"$EXPR2":{"start":{"line":795,"col":21,"offset":16933},"end":{"line":795,"col":30,"offset":16942},"abstract_content":"right.u.d"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4cc10d7b71a0ec704338fdd870dd6ef8d5ebb317d7efd2b6bea3d614c499f5ae62246c054352ba58a8142ee575643c188ff03ac87ee147d2cf7577dd2e2bea1e_0","lines":"\t\tret = left.u.d == right.u.d;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":820,"col":3,"offset":17400},"end":{"line":820,"col":31,"offset":17428},"extra":{"metavars":{"$EXPR1":{"start":{"line":820,"col":9,"offset":17406},"end":{"line":820,"col":17,"offset":17414},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":820,"col":21,"offset":17418},"end":{"line":820,"col":30,"offset":17427},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d1b3e7f0d7eaef37bef054a99159b0d700a8f826ca3d2f72564664c66e25d9f2b9334fb157a0444d418bc3608083694eaf8fb5294c291c3a70c162c5d6e1edd_0","lines":"\t\tret = left.u.b == right.u.b;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":824,"col":3,"offset":17487},"end":{"line":824,"col":57,"offset":17541},"extra":{"metavars":{"$EXPR1":{"start":{"line":824,"col":9,"offset":17493},"end":{"line":824,"col":17,"offset":17501},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":824,"col":21,"offset":17505},"end":{"line":824,"col":30,"offset":17514},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d1b3e7f0d7eaef37bef054a99159b0d700a8f826ca3d2f72564664c66e25d9f2b9334fb157a0444d418bc3608083694eaf8fb5294c291c3a70c162c5d6e1edd_1","lines":"\t\tret = left.u.b == right.u.b || left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":830,"col":3,"offset":17644},"end":{"line":830,"col":60,"offset":17701},"extra":{"metavars":{"$EXPR1":{"start":{"line":830,"col":11,"offset":17652},"end":{"line":830,"col":19,"offset":17660},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":830,"col":23,"offset":17664},"end":{"line":830,"col":32,"offset":17673},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d1b3e7f0d7eaef37bef054a99159b0d700a8f826ca3d2f72564664c66e25d9f2b9334fb157a0444d418bc3608083694eaf8fb5294c291c3a70c162c5d6e1edd_2","lines":"\t\tret = !(left.u.b == right.u.b || left.u.b == FcDontCare);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":833,"col":3,"offset":17733},"end":{"line":833,"col":58,"offset":17788},"extra":{"metavars":{"$EXPR1":{"start":{"line":833,"col":34,"offset":17764},"end":{"line":833,"col":43,"offset":17773},"abstract_content":"right.u.b"},"$EXPR2":{"start":{"line":833,"col":47,"offset":17777},"end":{"line":833,"col":57,"offset":17787},"abstract_content":"FcDontCare"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bed2c9b293a81a6e57a90b6c56cd45554e235748587b79f3925d507690b91bc3e575a21edfa9b3f10eda17ffc621126de2efe35e24f2af68951b1611b5e101d3_0","lines":"\t\tret = left.u.b != right.u.b && right.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":836,"col":3,"offset":17825},"end":{"line":836,"col":58,"offset":17880},"extra":{"metavars":{"$EXPR1":{"start":{"line":836,"col":9,"offset":17831},"end":{"line":836,"col":17,"offset":17839},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":836,"col":21,"offset":17843},"end":{"line":836,"col":30,"offset":17852},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d1b3e7f0d7eaef37bef054a99159b0d700a8f826ca3d2f72564664c66e25d9f2b9334fb157a0444d418bc3608083694eaf8fb5294c291c3a70c162c5d6e1edd_3","lines":"\t\tret = left.u.b == right.u.b || right.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":839,"col":3,"offset":17912},"end":{"line":839,"col":57,"offset":17966},"extra":{"metavars":{"$EXPR1":{"start":{"line":839,"col":34,"offset":17943},"end":{"line":839,"col":42,"offset":17951},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":839,"col":46,"offset":17955},"end":{"line":839,"col":56,"offset":17965},"abstract_content":"FcDontCare"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b723c2722a3f35b671fc089b6dcc2008e6640a4b6c026c7414a279ea09ca84785cd2335354c3a447cd097eb27968dd0d0845c5ed73ba40e29335c140ed4f9dc2_0","lines":"\t\tret = left.u.b != right.u.b && left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":842,"col":3,"offset":18003},"end":{"line":842,"col":57,"offset":18057},"extra":{"metavars":{"$EXPR1":{"start":{"line":842,"col":9,"offset":18009},"end":{"line":842,"col":17,"offset":18017},"abstract_content":"left.u.b"},"$EXPR2":{"start":{"line":842,"col":21,"offset":18021},"end":{"line":842,"col":30,"offset":18030},"abstract_content":"right.u.b"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d1b3e7f0d7eaef37bef054a99159b0d700a8f826ca3d2f72564664c66e25d9f2b9334fb157a0444d418bc3608083694eaf8fb5294c291c3a70c162c5d6e1edd_4","lines":"\t\tret = left.u.b == right.u.b || left.u.b == FcDontCare;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":852,"col":3,"offset":18200},"end":{"line":855,"col":59,"offset":18367},"extra":{"metavars":{"$EXPR1":{"start":{"line":852,"col":7,"offset":18204},"end":{"line":852,"col":12,"offset":18209},"abstract_content":"flags","propagated_value":{"svalue_start":{"line":778,"col":18,"offset":16407},"svalue_end":{"line":778,"col":39,"offset":16428},"svalue_abstract_content":"FC_OP_GET_FLAGS(op_)"}},"$EXPR2":{"start":{"line":852,"col":15,"offset":18212},"end":{"line":852,"col":35,"offset":18232},"abstract_content":"FcOpFlagIgnoreBlanks"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcc6fea07c0e08ae99b20ca5a26574e80ded44b02aa0525174da554bc14223ece2a424815bf08ef6840aa0ffbe6756016e634bbe3b85333034ce8ee818c9aeb4_0","lines":"\t\tif (flags & FcOpFlagIgnoreBlanks)\n\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) == 0;\n\t\telse\n\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":853,"col":7,"offset":18240},"end":{"line":853,"col":68,"offset":18301},"extra":{"metavars":{"$EXPR1":{"start":{"line":853,"col":13,"offset":18246},"end":{"line":853,"col":62,"offset":18295},"abstract_content":"FcStrCmpIgnoreBlanksAndCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":853,"col":66,"offset":18299},"end":{"line":853,"col":67,"offset":18300},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d37b056bb0a8de3dbbbd920ad52519cbd69697d4c16c2a8f82c9abb4d43c9192a4727a25cbd84a3eccc0675693ca5a10ebc87cc522f546f60e9f53702ab3ad4_0","lines":"\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":855,"col":7,"offset":18315},"end":{"line":855,"col":59,"offset":18367},"extra":{"metavars":{"$EXPR1":{"start":{"line":855,"col":13,"offset":18321},"end":{"line":855,"col":53,"offset":18361},"abstract_content":"FcStrCmpIgnoreCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":855,"col":57,"offset":18365},"end":{"line":855,"col":58,"offset":18366},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b724ca67567b6e4f8410379b5c1a01987598f8515ef8cd8000721596ca3644dde549113099ac7d4512f632e04aa93d029e6b6bdc53c1b8ab6f9f05da0411f60_0","lines":"\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":861,"col":3,"offset":18491},"end":{"line":864,"col":59,"offset":18658},"extra":{"metavars":{"$EXPR1":{"start":{"line":861,"col":7,"offset":18495},"end":{"line":861,"col":12,"offset":18500},"abstract_content":"flags","propagated_value":{"svalue_start":{"line":778,"col":18,"offset":16407},"svalue_end":{"line":778,"col":39,"offset":16428},"svalue_abstract_content":"FC_OP_GET_FLAGS(op_)"}},"$EXPR2":{"start":{"line":861,"col":15,"offset":18503},"end":{"line":861,"col":35,"offset":18523},"abstract_content":"FcOpFlagIgnoreBlanks"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcc6fea07c0e08ae99b20ca5a26574e80ded44b02aa0525174da554bc14223ece2a424815bf08ef6840aa0ffbe6756016e634bbe3b85333034ce8ee818c9aeb4_1","lines":"\t\tif (flags & FcOpFlagIgnoreBlanks)\n\t\t    ret = FcStrCmpIgnoreBlanksAndCase (left.u.s, right.u.s) != 0;\n\t\telse\n\t\t    ret = FcStrCmpIgnoreCase (left.u.s, right.u.s) != 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":867,"col":3,"offset":18697},"end":{"line":867,"col":55,"offset":18749},"extra":{"metavars":{"$EXPR1":{"start":{"line":867,"col":9,"offset":18703},"end":{"line":867,"col":49,"offset":18743},"abstract_content":"FcStrStrIgnoreCase(left.u.s right.u.s)"},"$EXPR2":{"start":{"line":867,"col":53,"offset":18747},"end":{"line":867,"col":54,"offset":18748},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9d78e203d8993749aceb805ded822abae4fcb7fe76f6ff42368e2e91f61f0b7c215c1ee09e105b0e40f2a09e99dc2dee8c6842d1fb16154a559ec8cc18619726_0","lines":"\t\tret = FcStrStrIgnoreCase (left.u.s, right.u.s) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":944,"col":3,"offset":20393},"end":{"line":944,"col":31,"offset":20421},"extra":{"metavars":{"$EXPR1":{"start":{"line":944,"col":9,"offset":20399},"end":{"line":944,"col":17,"offset":20407},"abstract_content":"left.u.f"},"$EXPR2":{"start":{"line":944,"col":21,"offset":20411},"end":{"line":944,"col":30,"offset":20420},"abstract_content":"right.u.f"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e5b92c3a386e68a88b0c1db0c28c65a8bd1adc83291662e318cb2f6148b8b9351f834bfb1fcc8a67633c8033e5b98b34e2d6c5bc76dc48d203f91e7c3b4f1f30_0","lines":"\t\tret = left.u.f == right.u.f;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1130,"col":7,"offset":25140},"end":{"line":1130,"col":36,"offset":25169},"extra":{"metavars":{"$EXPR":{"start":{"line":1130,"col":7,"offset":25140},"end":{"line":1130,"col":12,"offset":25145},"abstract_content":"v.u.d"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"46b736d344f7c9b5b0f9be5c6301fd23fe8b2caee68e4e3ea45a6a28f3366d44a71c567b91772bdb1acb6eac6806253da7d809b4cec519b23aa3cfa03eeca8c8_0","lines":"\t\t    v.u.d == (double) (int) v.u.d)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1171,"col":11,"offset":25945},"end":{"line":1171,"col":37,"offset":25971},"extra":{"metavars":{"$FUN":{"start":{"line":1171,"col":11,"offset":25945},"end":{"line":1171,"col":17,"offset":25951},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_2","lines":"\t\t    m = malloc (sizeof (FcMatrix));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1374,"col":25,"offset":29879},"end":{"line":1374,"col":54,"offset":29908},"extra":{"metavars":{"$FUN":{"start":{"line":1374,"col":25,"offset":29879},"end":{"line":1374,"col":31,"offset":29885},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_3","lines":"    l = (FcValueList *) malloc (sizeof (FcValueList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1421,"col":6,"offset":30990},"end":{"line":1424,"col":7,"offset":31060},"extra":{"metavars":{"$EXPR1":{"start":{"line":1421,"col":10,"offset":30994},"end":{"line":1421,"col":20,"offset":31004},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1421,"col":23,"offset":31007},"end":{"line":1421,"col":34,"offset":31018},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_0","lines":"\t    if (FcDebug () & FC_DBG_EDIT)\n\t    {\n\t\tprintf (\"Not adding\\n\");\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1442,"col":6,"offset":31389},"end":{"line":1444,"col":4,"offset":31451},"extra":{"metavars":{"$EXPR1":{"start":{"line":1442,"col":11,"offset":31394},"end":{"line":1442,"col":22,"offset":31405},"abstract_content":"prev=head"},"$EXPR2":{"start":{"line":1442,"col":24,"offset":31407},"end":{"line":1442,"col":37,"offset":31420},"abstract_content":"*prev!=NULL"},"$EXPR3":{"start":{"line":1443,"col":4,"offset":31425},"end":{"line":1443,"col":25,"offset":31446},"abstract_content":"prev=&*prev->->next"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5fe43b6c7fca2f076326cd5c5d3b58f9dfbe3ded009c6f40f724edf78bca7d693113948f3294251672a780916c03dd56197ae4664fb8559e7a8dbfee349c9f0c_0","lines":"\t    for (prev = head; *prev != NULL;\n\t\t prev = &(*prev)->next)\n\t\t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1460,"col":2,"offset":31636},"end":{"line":1464,"col":3,"offset":31732},"extra":{"metavars":{"$EXPR1":{"start":{"line":1460,"col":6,"offset":31640},"end":{"line":1460,"col":16,"offset":31650},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1460,"col":19,"offset":31653},"end":{"line":1460,"col":30,"offset":31664},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_1","lines":"\tif (FcDebug () & FC_DBG_EDIT)\n\t{\n\t    if (*prev == NULL)\n\t\tprintf (\"position not on list\\n\");\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1467,"col":5,"offset":31744},"end":{"line":1472,"col":6,"offset":31907},"extra":{"metavars":{"$EXPR1":{"start":{"line":1467,"col":9,"offset":31748},"end":{"line":1467,"col":19,"offset":31758},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1467,"col":22,"offset":31761},"end":{"line":1467,"col":33,"offset":31772},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_2","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"%s list before \", append ? \"Append\" : \"Prepend\");\n\tFcValueListPrintWithPosition (*head, *prev);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1484,"col":5,"offset":32040},"end":{"line":1489,"col":6,"offset":32183},"extra":{"metavars":{"$EXPR1":{"start":{"line":1484,"col":9,"offset":32044},"end":{"line":1484,"col":19,"offset":32054},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1484,"col":22,"offset":32057},"end":{"line":1484,"col":33,"offset":32068},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_3","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"%s list after \", append ? \"Append\" : \"Prepend\");\n\tFcValueListPrint (*head);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":60,"offset":35616},"extra":{"metavars":{"$FUN":{"start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":36,"offset":35592},"abstract_content":"malloc"},"$X":{"start":{"line":1647,"col":38,"offset":35594},"end":{"line":1647,"col":51,"offset":35607},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1647,"col":54,"offset":35610},"end":{"line":1647,"col":59,"offset":35615},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9a5cb44fd3a48d344d4c06c5aa8d07b80d04c630844ce9472be9fb1859536253505f9a59b953f03958d484a6cb695ca23befcf37293684f73320a70e1375f16a_0","lines":"    value = (FcValueList **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":60,"offset":35616},"extra":{"metavars":{"$FUN":{"start":{"line":1647,"col":30,"offset":35586},"end":{"line":1647,"col":36,"offset":35592},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_4","lines":"    value = (FcValueList **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":59,"offset":35736},"extra":{"metavars":{"$FUN":{"start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":35,"offset":35712},"abstract_content":"malloc"},"$X":{"start":{"line":1653,"col":37,"offset":35714},"end":{"line":1653,"col":50,"offset":35727},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1653,"col":53,"offset":35730},"end":{"line":1653,"col":58,"offset":35735},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9a5cb44fd3a48d344d4c06c5aa8d07b80d04c630844ce9472be9fb1859536253505f9a59b953f03958d484a6cb695ca23befcf37293684f73320a70e1375f16a_1","lines":"    elt = (FcPatternElt **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":59,"offset":35736},"extra":{"metavars":{"$FUN":{"start":{"line":1653,"col":29,"offset":35706},"end":{"line":1653,"col":35,"offset":35712},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_5","lines":"    elt = (FcPatternElt **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":53,"offset":35848},"extra":{"metavars":{"$FUN":{"start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":29,"offset":35824},"abstract_content":"malloc"},"$X":{"start":{"line":1659,"col":31,"offset":35826},"end":{"line":1659,"col":44,"offset":35839},"abstract_content":"SIZEOF_VOID_P"},"$Y":{"start":{"line":1659,"col":47,"offset":35842},"end":{"line":1659,"col":52,"offset":35847},"abstract_content":"nobjs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9a5cb44fd3a48d344d4c06c5aa8d07b80d04c630844ce9472be9fb1859536253505f9a59b953f03958d484a6cb695ca23befcf37293684f73320a70e1375f16a_2","lines":"    tst = (FcTest **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":53,"offset":35848},"extra":{"metavars":{"$FUN":{"start":{"line":1659,"col":23,"offset":35818},"end":{"line":1659,"col":29,"offset":35824},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_6","lines":"    tst = (FcTest **) malloc (SIZEOF_VOID_P * nobjs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1666,"col":5,"offset":35913},"end":{"line":1670,"col":6,"offset":36008},"extra":{"metavars":{"$EXPR1":{"start":{"line":1666,"col":9,"offset":35917},"end":{"line":1666,"col":19,"offset":35927},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1666,"col":22,"offset":35930},"end":{"line":1666,"col":33,"offset":35941},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_4","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"FcConfigSubstitute \");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1675,"col":2,"offset":36178},"end":{"line":1678,"col":3,"offset":36257},"extra":{"metavars":{"$EXPR1":{"start":{"line":1675,"col":6,"offset":36182},"end":{"line":1675,"col":16,"offset":36192},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1675,"col":19,"offset":36195},"end":{"line":1675,"col":30,"offset":36206},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_5","lines":"\tif (FcDebug () & FC_DBG_EDIT)\n\t{\n\t    printf (\"\\nRule Set: %s\\n\", rs->name);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1691,"col":11,"offset":36622},"end":{"line":1691,"col":18,"offset":36629},"extra":{"metavars":{"$VAR":{"start":{"line":1691,"col":11,"offset":36622},"end":{"line":1691,"col":18,"offset":36629},"abstract_content":"r->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"05909c76ef280340acce8ab3e177a72c9ab107b63b09cfc5fda4054c75a63c5ff49f4a03541bedebcd9b43be8584db13b2411b4eb8ccec29d7ecffa4f2282e68_0","lines":"\t\tswitch (r->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1701,"col":7,"offset":36862},"end":{"line":1705,"col":8,"offset":36975},"extra":{"metavars":{"$EXPR1":{"start":{"line":1701,"col":11,"offset":36866},"end":{"line":1701,"col":21,"offset":36876},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1701,"col":24,"offset":36879},"end":{"line":1701,"col":35,"offset":36890},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_6","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"FcConfigSubstitute test \");\n\t\t\tFcTestPrint (r->u.test);\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1733,"col":8,"offset":37600},"end":{"line":1734,"col":27,"offset":37656},"extra":{"metavars":{"$EXPR1":{"start":{"line":1733,"col":12,"offset":37604},"end":{"line":1733,"col":22,"offset":37614},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1733,"col":25,"offset":37617},"end":{"line":1733,"col":36,"offset":37628},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_7","lines":"\t\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t\t\tprintf (\"No match\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1750,"col":4,"offset":38159},"end":{"line":1751,"col":30,"offset":38218},"extra":{"metavars":{"$EXPR1":{"start":{"line":1750,"col":8,"offset":38163},"end":{"line":1750,"col":18,"offset":38173},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1750,"col":21,"offset":38176},"end":{"line":1750,"col":32,"offset":38187},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_8","lines":"\t\t\tif (FcDebug () & FC_DBG_EDIT)\n\t\t\t    printf (\"No match\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1757,"col":7,"offset":38325},"end":{"line":1762,"col":8,"offset":38445},"extra":{"metavars":{"$EXPR1":{"start":{"line":1757,"col":11,"offset":38329},"end":{"line":1757,"col":21,"offset":38339},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1757,"col":24,"offset":38342},"end":{"line":1757,"col":35,"offset":38353},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_9","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"Substitute \");\n\t\t\tFcEditPrint (r->u.edit);\n\t\t\tprintf (\"\\n\\n\");\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1770,"col":15,"offset":38755},"end":{"line":1770,"col":43,"offset":38783},"extra":{"metavars":{"$VAR":{"start":{"line":1770,"col":15,"offset":38755},"end":{"line":1770,"col":43,"offset":38783},"abstract_content":"FC_OP_GET_OP(r->->u.edit->->op)"},"$VAL1":{"start":{"line":1771,"col":12,"offset":38798},"end":{"line":1771,"col":22,"offset":38808},"abstract_content":"FcOpAssign"},"$VAL2":{"start":{"line":1798,"col":12,"offset":39537},"end":{"line":1798,"col":29,"offset":39554},"abstract_content":"FcOpAssignReplace"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c7283b73357d622471d0d837bcfa791dc16906b54aec9ccefc5e477520e3eb181e273230c08268b4895c8131616dede138fdc5d34c7d0c957707dbc7e5ca8f6a_0","lines":"\t\t    switch (FC_OP_GET_OP (r->u.edit->op)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1853,"col":7,"offset":40947},"end":{"line":1857,"col":8,"offset":41054},"extra":{"metavars":{"$EXPR1":{"start":{"line":1853,"col":11,"offset":40951},"end":{"line":1853,"col":21,"offset":40961},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1853,"col":24,"offset":40964},"end":{"line":1853,"col":35,"offset":40975},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_10","lines":"\t\t    if (FcDebug () & FC_DBG_EDIT)\n\t\t    {\n\t\t\tprintf (\"FcConfigSubstitute edit\");\n\t\t\tFcPatternPrint (p);\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1864,"col":5,"offset":41100},"end":{"line":1868,"col":6,"offset":41199},"extra":{"metavars":{"$EXPR1":{"start":{"line":1864,"col":9,"offset":41104},"end":{"line":1864,"col":19,"offset":41114},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1864,"col":22,"offset":41117},"end":{"line":1864,"col":33,"offset":41128},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_11","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"FcConfigSubstitute done\");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1907,"col":11,"offset":41863},"end":{"line":1907,"col":20,"offset":41872},"extra":{"metavars":{"$VAR":{"start":{"line":1907,"col":11,"offset":41863},"end":{"line":1907,"col":20,"offset":41872},"abstract_content":"fdwReason"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"775547e5929904e550ef16ff481514dbededc4047382516fdca5d577ab330b0b1cda08b362e43db44f6083b32bd1b803d0e0bebb2a7cc5ccec09bcecd53f53db_0","lines":"  switch (fdwReason) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":69,"offset":42677},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3526d086040caf3507f5b1337b4f4d2b67fce20914416340548432bbff1994e721707b72f83a22dfe6b5d532df024e08f87a9d5ae53523aac4e3190c193ad233_0","lines":"\t  strcat ((char *) fontconfig_instprefix, (char *) fontconfig_path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":69,"offset":42677},"extra":{"metavars":{"$FUN":{"start":{"line":1926,"col":4,"offset":42612},"end":{"line":1926,"col":10,"offset":42618},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_0","lines":"\t  strcat ((char *) fontconfig_instprefix, (char *) fontconfig_path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1927,"col":4,"offset":42682},"end":{"line":1927,"col":53,"offset":42731},"extra":{"metavars":{"$FUN":{"start":{"line":1927,"col":4,"offset":42682},"end":{"line":1927,"col":10,"offset":42688},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_1","lines":"\t  strcat ((char *) fontconfig_path, \"\\\\etc\\\\fonts\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":25,"offset":43463},"extra":{"metavars":{"$FUN":{"start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":18,"offset":43456},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_7","lines":"    path = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1965,"col":12,"offset":43450},"end":{"line":1965,"col":25,"offset":43463},"extra":{"metavars":{"$LEN":{"start":{"line":1965,"col":20,"offset":43458},"end":{"line":1965,"col":24,"offset":43462},"abstract_content":"size","propagated_value":{"svalue_start":{"line":1963,"col":13,"offset":43421},"svalue_end":{"line":1963,"col":28,"offset":43436},"svalue_abstract_content":"osize+3&~3"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c05bef57e96a98da296e9c9930aff1a9834968ab436b8cb3ce277cba6af4e76aa4a22efd995f755c1e860c0bf26e22e7ebd53b1097b4d65e800d8786b0d94970_0","lines":"    path = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":47,"offset":43538},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3526d086040caf3507f5b1337b4f4d2b67fce20914416340548432bbff1994e721707b72f83a22dfe6b5d532df024e08f87a9d5ae53523aac4e3190c193ad233_1","lines":"    strcpy ((char *) path, (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":47,"offset":43538},"extra":{"metavars":{"$FUN":{"start":{"line":1969,"col":5,"offset":43496},"end":{"line":1969,"col":11,"offset":43502},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d383176231d3b9b12cbd9009b99d856d253f0a31d52dde7ea4ae789e5d66680d38d96cdda615acb333d41dcd27f3cb3c49ac28149108ef1afb85d953537bb1a3_0","lines":"    strcpy ((char *) path, (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1972,"col":23,"offset":43623},"end":{"line":1972,"col":52,"offset":43652},"extra":{"metavars":{"$STR":{"start":{"line":1972,"col":23,"offset":43623},"end":{"line":1972,"col":27,"offset":43627},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed99ba080a93d27e50aeb3865de9b3ea5e715bb80d303ac903baa519b0691f0fd18625e1ef2b15bb5bf77caa60f0e7f0483d6e9d7696810b1554112811c8fab1_0","lines":"    if ((!path[0] || (path[strlen((char *) path)-1] != '/' &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1973,"col":9,"offset":43671},"end":{"line":1973,"col":38,"offset":43700},"extra":{"metavars":{"$STR":{"start":{"line":1973,"col":9,"offset":43671},"end":{"line":1973,"col":13,"offset":43675},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed99ba080a93d27e50aeb3865de9b3ea5e715bb80d303ac903baa519b0691f0fd18625e1ef2b15bb5bf77caa60f0e7f0483d6e9d7696810b1554112811c8fab1_1","lines":"\t\t      path[strlen((char *) path)-1] != '\\\\')) &&","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1977,"col":2,"offset":43840},"end":{"line":1977,"col":30,"offset":43868},"extra":{"metavars":{"$FUN":{"start":{"line":1977,"col":2,"offset":43840},"end":{"line":1977,"col":8,"offset":43846},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_2","lines":"\tstrcat ((char *) path, \"\\\\\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1979,"col":22,"offset":43897},"end":{"line":1979,"col":51,"offset":43926},"extra":{"metavars":{"$STR":{"start":{"line":1979,"col":22,"offset":43897},"end":{"line":1979,"col":26,"offset":43901},"abstract_content":"path","propagated_value":{"svalue_start":{"line":1965,"col":12,"offset":43450},"svalue_end":{"line":1965,"col":25,"offset":43463},"svalue_abstract_content":"malloc(size)"}}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed99ba080a93d27e50aeb3865de9b3ea5e715bb80d303ac903baa519b0691f0fd18625e1ef2b15bb5bf77caa60f0e7f0483d6e9d7696810b1554112811c8fab1_2","lines":"    if ((!path[0] || path[strlen((char *) path)-1] != '/') && file[0] != '/')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1980,"col":2,"offset":43955},"end":{"line":1980,"col":29,"offset":43982},"extra":{"metavars":{"$FUN":{"start":{"line":1980,"col":2,"offset":43955},"end":{"line":1980,"col":8,"offset":43961},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_3","lines":"\tstrcat ((char *) path, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":42,"offset":44051},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3526d086040caf3507f5b1337b4f4d2b67fce20914416340548432bbff1994e721707b72f83a22dfe6b5d532df024e08f87a9d5ae53523aac4e3190c193ad233_2","lines":"    strcat ((char *) path, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":42,"offset":44051},"extra":{"metavars":{"$FUN":{"start":{"line":1984,"col":5,"offset":44014},"end":{"line":1984,"col":11,"offset":44020},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_4","lines":"    strcat ((char *) path, (char *) file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":37,"offset":44090},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"8435dea3e60bb0178bf0be85b55d66db33eb7ff25ddcaaf72c3d0280cdeb69a4833b78fcb31853552eaaa040ef255103f334bf005226585da9e1bed7300ce863_0","lines":"    if (access ((char *) path, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":37,"offset":44090},"extra":{"metavars":{"$FUN":{"start":{"line":1986,"col":9,"offset":44062},"end":{"line":1986,"col":15,"offset":44068},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b6873257f7986bcf887f62c49cc26abf419ecd6bceb7eb6de853b32b82883ac445169da238dada143670308bfe483f7651cbef2498be8a8c2cee27420963ee85_0","lines":"    if (access ((char *) path, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2004,"col":23,"offset":44369},"end":{"line":2004,"col":49,"offset":44395},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2004,"col":23,"offset":44369},"end":{"line":2004,"col":29,"offset":44375},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_0","lines":"    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":46,"offset":44553},"extra":{"metavars":{"$FUN":{"start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":18,"offset":44525},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f4cb7a507d4bf9a6a3d6beb1bd711f8aec9f1692e6dffe06b1086434270a314144a468933b41361dc90e78a6d10070bcd58a87f2a79c40c41e0b81457f1299e_0","lines":"    path = calloc (npath, sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2013,"col":12,"offset":44519},"end":{"line":2013,"col":46,"offset":44553},"extra":{"metavars":{"$CNT":{"start":{"line":2013,"col":20,"offset":44527},"end":{"line":2013,"col":25,"offset":44532},"abstract_content":"npath"},"$LEN":{"start":{"line":2013,"col":27,"offset":44534},"end":{"line":2013,"col":45,"offset":44552},"abstract_content":"sizeof(FcChar8*)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"794be375ef509401097d83164f969dd5a27be4ba9b187a1838d4814be391c81ba4c10de39630b4b5fda56086dad7a10af2556b75fcb827bf3c47983da003e454_0","lines":"    path = calloc (npath, sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":38,"offset":44800},"extra":{"metavars":{"$FUN":{"start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":22,"offset":44784},"abstract_content":"malloc"},"$X":{"start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":33,"offset":44795},"abstract_content":"colon-e"},"$Y":{"start":{"line":2026,"col":36,"offset":44798},"end":{"line":2026,"col":37,"offset":44799},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3064d1cd43b27d04b4c3ea8c274611a2f9a37068cb1b285814d193301223c4d13d56c81b5ca7fc428ee248e2f8592940710e53f17038960b16b93bdf7c8ff182_0","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":38,"offset":44800},"extra":{"metavars":{"$FUN":{"start":{"line":2026,"col":16,"offset":44778},"end":{"line":2026,"col":22,"offset":44784},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_8","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":33,"offset":44795},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2026,"col":24,"offset":44786},"end":{"line":2026,"col":29,"offset":44791},"abstract_content":"colon"},"$PTR2":{"start":{"line":2026,"col":32,"offset":44794},"end":{"line":2026,"col":33,"offset":44795},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"907868e1c1410d59985eab5f715c82f8d3733c54a282f2155fad2d45b3e81c0d7dc311a7a05bc1484053da21bfdf2421eaea9b1cf96984acc838ff2df55637af_0","lines":"\t    path[i] = malloc (colon - e + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":61,"offset":44895},"extra":{"metavars":{"$FUN":{"start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":13,"offset":44847},"abstract_content":"strncpy"},"$DST":{"start":{"line":2029,"col":15,"offset":44849},"end":{"line":2029,"col":31,"offset":44865},"abstract_content":"(char*path[i]"},"$SRC":{"start":{"line":2029,"col":48,"offset":44882},"end":{"line":2029,"col":49,"offset":44883},"abstract_content":"e"}},"message":"The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/806","https://github.com/0xdea/advisories/blob/master/2020-07-solaris-whodo-w.txt","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"1d9b5e6ee6b2c649a536506afa793fb322fd4bc041f09f96699cf71e513fe1ed0fbdc92dae25507bfa3f6a518db30f49a08bbf3aa566c03f7cdb28c0320e1430_0","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":61,"offset":44895},"extra":{"metavars":{"$FUN":{"start":{"line":2029,"col":6,"offset":44840},"end":{"line":2029,"col":13,"offset":44847},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4fff26e874c1ac0300046d1fd7818c805d42865cccbcd3f7b5ef1772d85a6e594dffb72b39940ee26a9cc2fad7a3c73c81e9daf32a204c936d2b7e1587ffdb0a_0","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2029,"col":51,"offset":44885},"end":{"line":2029,"col":60,"offset":44894},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2029,"col":51,"offset":44885},"end":{"line":2029,"col":56,"offset":44890},"abstract_content":"colon"},"$PTR2":{"start":{"line":2029,"col":59,"offset":44893},"end":{"line":2029,"col":60,"offset":44894},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"907868e1c1410d59985eab5f715c82f8d3733c54a282f2155fad2d45b3e81c0d7dc311a7a05bc1484053da21bfdf2421eaea9b1cf96984acc838ff2df55637af_1","lines":"\t    strncpy ((char *) path[i], (const char *) e, colon - e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2030,"col":14,"offset":44910},"end":{"line":2030,"col":23,"offset":44919},"extra":{"metavars":{"$TYPE":{"start":{"line":1998,"col":5,"offset":44222},"end":{"line":1998,"col":12,"offset":44229},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":2030,"col":14,"offset":44910},"end":{"line":2030,"col":19,"offset":44915},"abstract_content":"colon"},"$PTR2":{"start":{"line":2030,"col":22,"offset":44918},"end":{"line":2030,"col":23,"offset":44919},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"907868e1c1410d59985eab5f715c82f8d3733c54a282f2155fad2d45b3e81c0d7dc311a7a05bc1484053da21bfdf2421eaea9b1cf96984acc838ff2df55637af_2","lines":"\t    path[i][colon - e] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2047,"col":3,"offset":45238},"end":{"line":2047,"col":47,"offset":45282},"extra":{"metavars":{"$FUN":{"start":{"line":2047,"col":3,"offset":45238},"end":{"line":2047,"col":9,"offset":45244},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be82481ec364a3d7a4b05c183f66dac6a725be0ca40c81ad94d4f4cfd3475cff568c05f5f17b352c74af733d9e6e08935306e18de358f52465e9367f54992acf_5","lines":"\t\tstrcat ((char *) fontconfig_path, \"\\\\fonts\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":49,"offset":45381},"extra":{"metavars":{"$FUN":{"start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":21,"offset":45353},"abstract_content":"malloc"},"$X":{"start":{"line":2051,"col":23,"offset":45355},"end":{"line":2051,"col":44,"offset":45376},"abstract_content":"strlen((char*dir)"},"$Y":{"start":{"line":2051,"col":47,"offset":45379},"end":{"line":2051,"col":48,"offset":45380},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1460cb56f806b4f4547574dbb424cf9cd36ade8dd2e2cb1cfb32eefe08767d59007280b9e84905849fbf75b3dee0f772b7cb83c4381721d9d1e5be373afbcee1_0","lines":"    path[i] = malloc (strlen ((char *) dir) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":49,"offset":45381},"extra":{"metavars":{"$FUN":{"start":{"line":2051,"col":15,"offset":45347},"end":{"line":2051,"col":21,"offset":45353},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_9","lines":"    path[i] = malloc (strlen ((char *) dir) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":50,"offset":45463},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3526d086040caf3507f5b1337b4f4d2b67fce20914416340548432bbff1994e721707b72f83a22dfe6b5d532df024e08f87a9d5ae53523aac4e3190c193ad233_3","lines":"    strcpy ((char *) path[i], (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":50,"offset":45463},"extra":{"metavars":{"$FUN":{"start":{"line":2054,"col":5,"offset":45418},"end":{"line":2054,"col":11,"offset":45424},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d383176231d3b9b12cbd9009b99d856d253f0a31d52dde7ea4ae789e5d66680d38d96cdda615acb333d41dcd27f3cb3c49ac28149108ef1afb85d953537bb1a3_1","lines":"    strcpy ((char *) path[i], (const char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2071,"col":2,"offset":45676},"end":{"line":2071,"col":12,"offset":45686},"extra":{"metavars":{"$PTR":{"start":{"line":2071,"col":8,"offset":45682},"end":{"line":2071,"col":10,"offset":45684},"abstract_content":"*p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"54e31e5ca8ed20f113fcd906a9020fbcf6a5ff840ef573d09f333153b78a4b480d889d7379df2848e3c373eed07a3bef1e49ea12e2853743960536197d4e3337_0","lines":"\tfree (*p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2072,"col":5,"offset":45691},"end":{"line":2072,"col":17,"offset":45703},"extra":{"metavars":{"$PTR":{"start":{"line":2072,"col":11,"offset":45697},"end":{"line":2072,"col":15,"offset":45701},"abstract_content":"path"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c78dea2485c99628baaae502b0ab8c1ddbaea4afef4f54f4b11f27757b96cc0017a7865e4b8d5b83197e3472ce4067954f89abf171fae51213bf9b7297e42985_0","lines":"    free (path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2082,"col":22,"offset":45862},"end":{"line":2082,"col":37,"offset":45877},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2082,"col":22,"offset":45862},"end":{"line":2082,"col":28,"offset":45868},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_1","lines":"        char *home = getenv (\"HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2086,"col":13,"offset":45925},"end":{"line":2086,"col":35,"offset":45947},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2086,"col":13,"offset":45925},"end":{"line":2086,"col":19,"offset":45931},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_2","lines":"\t    home = getenv (\"USERPROFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2097,"col":23,"offset":46068},"end":{"line":2097,"col":48,"offset":46093},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2097,"col":23,"offset":46068},"end":{"line":2097,"col":29,"offset":46074},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_3","lines":"    const char *env = getenv (\"XDG_CACHE_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2107,"col":9,"offset":46283},"end":{"line":2107,"col":53,"offset":46327},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2107,"col":9,"offset":46283},"end":{"line":2107,"col":12,"offset":46286},"abstract_content":"len"},"$SIGNED":{"start":{"line":2107,"col":52,"offset":46326},"end":{"line":2107,"col":53,"offset":46327},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b58ecebc635ad14a0f64d96956234142299d104ad13cdc35af3bab4f921117d872afd240ae8deb001e9c637b6f022d41b0e4ed1928801128a832d27245e8945d_0","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":28,"offset":46357},"extra":{"metavars":{"$FUN":{"start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":14,"offset":46343},"abstract_content":"malloc"},"$X":{"start":{"line":2109,"col":16,"offset":46345},"end":{"line":2109,"col":23,"offset":46352},"abstract_content":"len+7"},"$Y":{"start":{"line":2109,"col":26,"offset":46355},"end":{"line":2109,"col":27,"offset":46356},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"255230f4191a1fea4b8a4f5cd96f7bf0ab0851ea6d3010820d2ea907e3fe2a0d38be0157471cd0f9ad343b7332415132492e761eedb242049a6543586364f42c_0","lines":"\tret = malloc (len + 7 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":28,"offset":46357},"extra":{"metavars":{"$FUN":{"start":{"line":2109,"col":8,"offset":46337},"end":{"line":2109,"col":14,"offset":46343},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_10","lines":"\tret = malloc (len + 7 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2113,"col":3,"offset":46389},"end":{"line":2113,"col":26,"offset":46412},"extra":{"metavars":{"$FUN":{"start":{"line":2113,"col":3,"offset":46389},"end":{"line":2113,"col":9,"offset":46395},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_0","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":56,"offset":46469},"extra":{"metavars":{"$FUN":{"start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":12,"offset":46425},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_1","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".cache\", 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2114,"col":6,"offset":46419},"end":{"line":2114,"col":56,"offset":46469},"extra":{"metavars":{"$DST":{"start":{"line":2114,"col":14,"offset":46427},"end":{"line":2114,"col":23,"offset":46436},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2114,"col":25,"offset":46438},"end":{"line":2114,"col":52,"offset":46465},"abstract_content":"FC_DIR_SEPARATOR_S\".cache\""},"$LEN":{"start":{"line":2114,"col":54,"offset":46467},"end":{"line":2114,"col":55,"offset":46468},"abstract_content":"7"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fbd1dab88c4fde0f3e5cb8d74a97a34070287c81b3a39ab0b42c181c865b42a8ff8d37142a01485e7795b5344e12c5c081a47d1de22fa941d28f7741060bb0ae_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".cache\", 7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2125,"col":23,"offset":46586},"end":{"line":2125,"col":49,"offset":46612},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2125,"col":23,"offset":46586},"end":{"line":2125,"col":29,"offset":46592},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_4","lines":"    const char *env = getenv (\"XDG_CONFIG_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2135,"col":9,"offset":46802},"end":{"line":2135,"col":53,"offset":46846},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2135,"col":9,"offset":46802},"end":{"line":2135,"col":12,"offset":46805},"abstract_content":"len"},"$SIGNED":{"start":{"line":2135,"col":52,"offset":46845},"end":{"line":2135,"col":53,"offset":46846},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b58ecebc635ad14a0f64d96956234142299d104ad13cdc35af3bab4f921117d872afd240ae8deb001e9c637b6f022d41b0e4ed1928801128a832d27245e8945d_1","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":28,"offset":46876},"extra":{"metavars":{"$FUN":{"start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":14,"offset":46862},"abstract_content":"malloc"},"$X":{"start":{"line":2137,"col":16,"offset":46864},"end":{"line":2137,"col":23,"offset":46871},"abstract_content":"len+8"},"$Y":{"start":{"line":2137,"col":26,"offset":46874},"end":{"line":2137,"col":27,"offset":46875},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8ee16e8f3ce7ff1649019903f68d72c3a34c05540d2b1719658138df955428b640e5e76edf7ca31fc89bad49b4a66ed1d2c24520ccd17e0a760e7d1abf47c861_0","lines":"\tret = malloc (len + 8 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":28,"offset":46876},"extra":{"metavars":{"$FUN":{"start":{"line":2137,"col":8,"offset":46856},"end":{"line":2137,"col":14,"offset":46862},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_11","lines":"\tret = malloc (len + 8 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2141,"col":3,"offset":46908},"end":{"line":2141,"col":26,"offset":46931},"extra":{"metavars":{"$FUN":{"start":{"line":2141,"col":3,"offset":46908},"end":{"line":2141,"col":9,"offset":46914},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_2","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":57,"offset":46989},"extra":{"metavars":{"$FUN":{"start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":12,"offset":46944},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_3","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".config\", 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2142,"col":6,"offset":46938},"end":{"line":2142,"col":57,"offset":46989},"extra":{"metavars":{"$DST":{"start":{"line":2142,"col":14,"offset":46946},"end":{"line":2142,"col":23,"offset":46955},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2142,"col":25,"offset":46957},"end":{"line":2142,"col":53,"offset":46985},"abstract_content":"FC_DIR_SEPARATOR_S\".config\""},"$LEN":{"start":{"line":2142,"col":55,"offset":46987},"end":{"line":2142,"col":56,"offset":46988},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6d1052b0a8b0b58fe4598ccec8dcb525f318c57fa5db25f60f74d7289bcf40d348b4b534fa2e2bcfab6cb9863e50854941b8e1bc7007953172df1896d8c32241_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".config\", 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2153,"col":23,"offset":47104},"end":{"line":2153,"col":47,"offset":47128},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2153,"col":23,"offset":47104},"end":{"line":2153,"col":29,"offset":47110},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_5","lines":"    const char *env = getenv (\"XDG_DATA_HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2163,"col":9,"offset":47318},"end":{"line":2163,"col":53,"offset":47362},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2163,"col":9,"offset":47318},"end":{"line":2163,"col":12,"offset":47321},"abstract_content":"len"},"$SIGNED":{"start":{"line":2163,"col":52,"offset":47361},"end":{"line":2163,"col":53,"offset":47362},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b58ecebc635ad14a0f64d96956234142299d104ad13cdc35af3bab4f921117d872afd240ae8deb001e9c637b6f022d41b0e4ed1928801128a832d27245e8945d_2","lines":"\tsize_t len = home ? strlen ((const char *)home) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":29,"offset":47393},"extra":{"metavars":{"$FUN":{"start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":14,"offset":47378},"abstract_content":"malloc"},"$X":{"start":{"line":2165,"col":16,"offset":47380},"end":{"line":2165,"col":24,"offset":47388},"abstract_content":"len+13"},"$Y":{"start":{"line":2165,"col":27,"offset":47391},"end":{"line":2165,"col":28,"offset":47392},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fc0d931c59e679d88afabb74ca3061dee6ec3c77ef2aaada2203ffb54658fb8270e046b17a13129f52f6925e8c5cd30774ff8c3fa391b83990ca65ec589635a0_0","lines":"\tret = malloc (len + 13 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":29,"offset":47393},"extra":{"metavars":{"$FUN":{"start":{"line":2165,"col":8,"offset":47372},"end":{"line":2165,"col":14,"offset":47378},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_12","lines":"\tret = malloc (len + 13 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2169,"col":3,"offset":47425},"end":{"line":2169,"col":26,"offset":47448},"extra":{"metavars":{"$FUN":{"start":{"line":2169,"col":3,"offset":47425},"end":{"line":2169,"col":9,"offset":47431},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_4","lines":"\t\tmemcpy (ret, home, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":84,"offset":47533},"extra":{"metavars":{"$FUN":{"start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":12,"offset":47461},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f9ca992488328459899e0e2b8fa76d3ec65e2d128abb4c6868d4af2e21a2a7509b2f8c4b779cc0f908a90d49b8be18e97200d4c98efc1ad84f49d253d5f5c56_5","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".local\" FC_DIR_SEPARATOR_S \"share\", 13);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2170,"col":6,"offset":47455},"end":{"line":2170,"col":84,"offset":47533},"extra":{"metavars":{"$DST":{"start":{"line":2170,"col":14,"offset":47463},"end":{"line":2170,"col":23,"offset":47472},"abstract_content":"&ret[len]"},"$SRC":{"start":{"line":2170,"col":25,"offset":47474},"end":{"line":2170,"col":79,"offset":47528},"abstract_content":"FC_DIR_SEPARATOR_S\".local\"FC_DIR_SEPARATOR_S\"share\""},"$LEN":{"start":{"line":2170,"col":81,"offset":47530},"end":{"line":2170,"col":83,"offset":47532},"abstract_content":"13"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb753ed1f01631f2e84e179bb499394174c8c20890f18544f47d7458a5e6fb547fb45ddcd344dbff6b01516a27dfef52e73d2c7efa81622645a6a08272ab93a9_0","lines":"\t    memcpy (&ret[len], FC_DIR_SEPARATOR_S \".local\" FC_DIR_SEPARATOR_S \"share\", 13);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2193,"col":20,"offset":47868},"end":{"line":2193,"col":46,"offset":47894},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2193,"col":20,"offset":47868},"end":{"line":2193,"col":26,"offset":47874},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_6","lines":"\turl = (FcChar8 *) getenv (\"FONTCONFIG_FILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2314,"col":5,"offset":50006},"end":{"line":2321,"col":6,"offset":50181},"extra":{"metavars":{"$EXPR1":{"start":{"line":2314,"col":10,"offset":50011},"end":{"line":2314,"col":17,"offset":50018},"abstract_content":"sublist","propagated_value":{"svalue_start":{"line":2314,"col":20,"offset":50021},"svalue_end":{"line":2314,"col":45,"offset":50046},"svalue_abstract_content":"FcStrListCreate(subdirs)"}},"$EXPR2":{"start":{"line":2314,"col":20,"offset":50021},"end":{"line":2314,"col":45,"offset":50046},"abstract_content":"FcStrListCreate(subdirs)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"16eccc5c0d1e5b7d90316a078b61ded7db55f1224e8b48551c7d23fa7bc94eafcfc8b007dd27855534eef1eac791bfc11337acde2f973197a42be5b8ef248fa5_0","lines":"    if ((sublist = FcStrListCreate (subdirs)))\n    {\n\twhile ((subdir = FcStrListNext (sublist)))\n\t{\n\t    FcConfigAppFontAddDir (config, subdir);\n\t}\n\tFcStrListDone (sublist);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2467,"col":24,"offset":52927},"end":{"line":2467,"col":53,"offset":52956},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2467,"col":24,"offset":52927},"end":{"line":2467,"col":30,"offset":52933},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"185ca2fe9249c98d40746860d7619a8818f443a06856f15bb69a4fa5552cb6ca9e0b5058a90821d91c729eb65c21c8c9d9a01720e21981721e298d2aa8a81368_7","lines":"    return (FcChar8 *) getenv (\"FONTCONFIG_SYSROOT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2519,"col":36,"offset":53958},"end":{"line":2519,"col":63,"offset":53985},"extra":{"metavars":{"$FUN":{"start":{"line":2519,"col":36,"offset":53958},"end":{"line":2519,"col":42,"offset":53964},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf4ea30d2d904e1128090873655cc2b546fc334772b472d03eb02c3c8314b20ab90f176d17a14192d41050d6679dec865c76157eeb7161f8526fb0d1fdeb4ae_13","lines":"    FcRuleSet *ret = (FcRuleSet *) malloc (sizeof (FcRuleSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2560,"col":5,"offset":54708},"end":{"line":2560,"col":15,"offset":54718},"extra":{"metavars":{"$PTR":{"start":{"line":2560,"col":11,"offset":54714},"end":{"line":2560,"col":13,"offset":54716},"abstract_content":"rs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e703ce4f3d153356d0bfe6fb23472c51bbc971b996eb4aa9c296cd8a4b8e1b5864c7eb957f0ca3a35fb9fdab08b004e8a0f5913897720f82fc5612a41ae1d7c4_0","lines":"    free (rs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":2635,"col":5,"offset":56095},"end":{"line":2639,"col":6,"offset":56215},"extra":{"metavars":{"$EXPR1":{"start":{"line":2635,"col":9,"offset":56099},"end":{"line":2635,"col":19,"offset":56109},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":2635,"col":22,"offset":56112},"end":{"line":2635,"col":33,"offset":56123},"abstract_content":"FC_DBG_EDIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ed7a31703efc7d562629a61b8a847e822bc4ff39fecdfdd644eef2f2895f57eec3a34c69124524a5c9dc2c2c7e3f5fee899f7f957ae8dd0e4aaccea7723e00_12","lines":"    if (FcDebug () & FC_DBG_EDIT)\n    {\n\tprintf (\"Add Rule(kind:%d, name: %s) \", kind, rs->name);\n\tFcRulePrint (rule);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":35,"col":25,"offset":1334},"end":{"line":35,"col":52,"offset":1361},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":25,"offset":1334},"end":{"line":35,"col":31,"offset":1340},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_0","lines":"    fcs = (FcCharSet *) malloc (sizeof (FcCharSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":50,"col":5,"offset":1620},"end":{"line":50,"col":77,"offset":1692},"extra":{"metavars":{"$ASSERT":{"start":{"line":50,"col":5,"offset":1620},"end":{"line":50,"col":21,"offset":1636},"abstract_content":"FC_ASSERT_STATIC"},"$A":{"start":{"line":50,"col":23,"offset":1638},"end":{"line":50,"col":40,"offset":1655},"abstract_content":"sizeof FcCharSet"},"$B":{"start":{"line":50,"col":45,"offset":1660},"end":{"line":50,"col":75,"offset":1690},"abstract_content":"sizeof FcValuePromotionBuffer"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89d445d1bff77357812dc99c884e01b43757cc0dd0f0fffb6ba7e519d00a8f647c717a7789dbfea6147da51be4277a3d05faf9319736e5c500b4bc0a15fb5450_0","lines":"    FC_ASSERT_STATIC (sizeof (FcCharSet) <= sizeof (FcValuePromotionBuffer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":81,"col":6,"offset":2130},"end":{"line":81,"col":36,"offset":2160},"extra":{"metavars":{"$PTR":{"start":{"line":81,"col":12,"offset":2136},"end":{"line":81,"col":34,"offset":2158},"abstract_content":"FcCharSetLeaf(fcs i)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c621d6ba55573c560c0388ddabd03e637a96ee481827542866de73046326a55bf12f89243bd1684d0f907413f610efaa1533c9362dff253abb00e6d7975a89b8_0","lines":"\t    free (FcCharSetLeaf (fcs, i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":84,"col":6,"offset":2184},"end":{"line":84,"col":35,"offset":2213},"extra":{"metavars":{"$PTR":{"start":{"line":84,"col":12,"offset":2190},"end":{"line":84,"col":33,"offset":2211},"abstract_content":"FcCharSetLeaves(fcs)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a79584a35fa96f9a771df27bd9a02cfee9712fbea83399bb162467ad63ac1d7aa0675261d007669ddcf7e365f6698381814ba87bbf4c89051d6c43683da61a43_0","lines":"\t    free (FcCharSetLeaves (fcs));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":85,"col":6,"offset":2219},"end":{"line":85,"col":36,"offset":2249},"extra":{"metavars":{"$PTR":{"start":{"line":85,"col":12,"offset":2225},"end":{"line":85,"col":34,"offset":2247},"abstract_content":"FcCharSetNumbers(fcs)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77e0af8c9cf53b02acbb069810d1fe7f3861abae4690c1efbf972be715049b9584c0ebe31cc4c329481ec7f19fd435a751b7456394ecdcdfe8eff10334ed87ab_0","lines":"\t    free (FcCharSetNumbers (fcs));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":87,"col":2,"offset":2254},"end":{"line":87,"col":13,"offset":2265},"extra":{"metavars":{"$PTR":{"start":{"line":87,"col":8,"offset":2260},"end":{"line":87,"col":11,"offset":2263},"abstract_content":"fcs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7fb95761155b17950a6f1fde9c35b9852eb237206b36fd771d1ca93d0916c9b4f75252d9ddf00dc8dbc83443b649309dfc8f18cdf57e209886326e82fcbbba5e_0","lines":"\tfree (fcs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":164,"col":22,"offset":3896},"end":{"line":164,"col":33,"offset":3907},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":164,"col":22,"offset":3896},"end":{"line":164,"col":29,"offset":3903},"abstract_content":"alloced"},"$SIGNED":{"start":{"line":164,"col":32,"offset":3906},"end":{"line":164,"col":33,"offset":3907},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9e6eb34908986e1101bcd4c08b725917a72e024fcfed03924e3dc23e39a1131f43b72f481b3d18a0ac4cce12077d7418723ee6eaa280cefc46013d4a88bdcc25_0","lines":"        unsigned int alloced = 8;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":165,"col":11,"offset":3919},"end":{"line":165,"col":46,"offset":3954},"extra":{"metavars":{"$FUN":{"start":{"line":165,"col":11,"offset":3919},"end":{"line":165,"col":17,"offset":3925},"abstract_content":"malloc"},"$X":{"start":{"line":165,"col":19,"offset":3927},"end":{"line":165,"col":26,"offset":3934},"abstract_content":"alloced","propagated_value":{"svalue_start":{"line":164,"col":32,"offset":3906},"svalue_end":{"line":164,"col":33,"offset":3907},"svalue_abstract_content":"8"}},"$Y":{"start":{"line":165,"col":29,"offset":3937},"end":{"line":165,"col":44,"offset":3952},"abstract_content":"sizeof*leaves"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"175499fc1f4a74d684690e27577f7997b17ccbb89f5ac7ae2c5a80a751c04d7b6346eb1981c0bf2b2ce6b7d003abe8a4d2f9456c0633701ec512fe4e8c057f78_0","lines":"\tleaves = malloc (alloced * sizeof (*leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":165,"col":11,"offset":3919},"end":{"line":165,"col":46,"offset":3954},"extra":{"metavars":{"$FUN":{"start":{"line":165,"col":11,"offset":3919},"end":{"line":165,"col":17,"offset":3925},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_1","lines":"\tleaves = malloc (alloced * sizeof (*leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":166,"col":12,"offset":3967},"end":{"line":166,"col":48,"offset":4003},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":12,"offset":3967},"end":{"line":166,"col":18,"offset":3973},"abstract_content":"malloc"},"$X":{"start":{"line":166,"col":20,"offset":3975},"end":{"line":166,"col":27,"offset":3982},"abstract_content":"alloced","propagated_value":{"svalue_start":{"line":164,"col":32,"offset":3906},"svalue_end":{"line":164,"col":33,"offset":3907},"svalue_abstract_content":"8"}},"$Y":{"start":{"line":166,"col":30,"offset":3985},"end":{"line":166,"col":46,"offset":4001},"abstract_content":"sizeof*numbers"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb8156345044a41f7441cbda55fcbe7cb6be75c43c56d0c746ccb6dbeb1e1b745837ed4bd710716e561408422c6dac85030f31befa907224363eda1c5a6ca7c9_0","lines":"\tnumbers = malloc (alloced * sizeof (*numbers));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":166,"col":12,"offset":3967},"end":{"line":166,"col":48,"offset":4003},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":12,"offset":3967},"end":{"line":166,"col":18,"offset":3973},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_2","lines":"\tnumbers = malloc (alloced * sizeof (*numbers));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":182,"col":15,"offset":4259},"end":{"line":182,"col":59,"offset":4303},"extra":{"metavars":{"$FUN":{"start":{"line":182,"col":15,"offset":4259},"end":{"line":182,"col":22,"offset":4266},"abstract_content":"realloc"},"$ARG1":{"start":{"line":182,"col":24,"offset":4268},"end":{"line":182,"col":30,"offset":4274},"abstract_content":"leaves","propagated_value":{"svalue_start":{"line":153,"col":24,"offset":3662},"svalue_end":{"line":153,"col":45,"offset":3683},"svalue_abstract_content":"FcCharSetLeaves(fcs)"}},"$X":{"start":{"line":182,"col":32,"offset":4276},"end":{"line":182,"col":39,"offset":4283},"abstract_content":"alloced"},"$Y":{"start":{"line":182,"col":42,"offset":4286},"end":{"line":182,"col":57,"offset":4301},"abstract_content":"sizeof*leaves"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa905f81ee6d6a9d727ff4c599e44f8d60ef096b5165a439e68775f65b71e2480d53b883dea68537ab981d05886a845563015ac279b109bd239316b6d66c0dd8_0","lines":"\tnew_leaves = realloc (leaves, alloced * sizeof (*leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":182,"col":15,"offset":4259},"end":{"line":182,"col":59,"offset":4303},"extra":{"metavars":{"$FUN":{"start":{"line":182,"col":15,"offset":4259},"end":{"line":182,"col":22,"offset":4266},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e92d6bbe2de2137a9fbcca91b9d9210144dbbf7fa79e46f794d309afc71f1d5f13ce52e44d04267e525036eda889e44f67366e6e9f71f59fa0f5cc020ebdd140_0","lines":"\tnew_leaves = realloc (leaves, alloced * sizeof (*leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":185,"col":12,"offset":4355},"end":{"line":185,"col":58,"offset":4401},"extra":{"metavars":{"$FUN":{"start":{"line":185,"col":12,"offset":4355},"end":{"line":185,"col":19,"offset":4362},"abstract_content":"realloc"},"$ARG1":{"start":{"line":185,"col":21,"offset":4364},"end":{"line":185,"col":28,"offset":4371},"abstract_content":"numbers","propagated_value":{"svalue_start":{"line":154,"col":25,"offset":3709},"svalue_end":{"line":154,"col":47,"offset":3731},"svalue_abstract_content":"FcCharSetNumbers(fcs)"}},"$X":{"start":{"line":185,"col":30,"offset":4373},"end":{"line":185,"col":37,"offset":4380},"abstract_content":"alloced"},"$Y":{"start":{"line":185,"col":40,"offset":4383},"end":{"line":185,"col":56,"offset":4399},"abstract_content":"sizeof*numbers"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bbf94537380d20e17745a96d2c57520bd99780ecd8fba545c40aac5c3bd4700e4397d5aea8a391919a58a9d82e58446b4cb51f6775c50693a26b32f6f2408596_0","lines":"\tnumbers = realloc (numbers, alloced * sizeof (*numbers));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":185,"col":12,"offset":4355},"end":{"line":185,"col":58,"offset":4401},"extra":{"metavars":{"$FUN":{"start":{"line":185,"col":12,"offset":4355},"end":{"line":185,"col":19,"offset":4362},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e92d6bbe2de2137a9fbcca91b9d9210144dbbf7fa79e46f794d309afc71f1d5f13ce52e44d04267e525036eda889e44f67366e6e9f71f59fa0f5cc020ebdd140_1","lines":"\tnumbers = realloc (numbers, alloced * sizeof (*numbers));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":189,"col":15,"offset":4480},"end":{"line":189,"col":73,"offset":4538},"extra":{"metavars":{"$FUN":{"start":{"line":189,"col":15,"offset":4480},"end":{"line":189,"col":22,"offset":4487},"abstract_content":"realloc"},"$ARG1":{"start":{"line":189,"col":24,"offset":4489},"end":{"line":189,"col":34,"offset":4499},"abstract_content":"new_leaves"},"$X":{"start":{"line":189,"col":37,"offset":4502},"end":{"line":189,"col":48,"offset":4513},"abstract_content":"alloced/2"},"$Y":{"start":{"line":189,"col":52,"offset":4517},"end":{"line":189,"col":71,"offset":4536},"abstract_content":"sizeof*new_leaves"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2cab700585e3d53a954323c7da4894230277595a3777ab46a262a2b8cdf3551bb8bbccfe389a720520748a8efe2443934e6af395ea671032004edaaf585cd182_0","lines":"\t    leaves = realloc (new_leaves, (alloced / 2) * sizeof (*new_leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":189,"col":15,"offset":4480},"end":{"line":189,"col":73,"offset":4538},"extra":{"metavars":{"$FUN":{"start":{"line":189,"col":15,"offset":4480},"end":{"line":189,"col":22,"offset":4487},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e92d6bbe2de2137a9fbcca91b9d9210144dbbf7fa79e46f794d309afc71f1d5f13ce52e44d04267e525036eda889e44f67366e6e9f71f59fa0f5cc020ebdd140_2","lines":"\t    leaves = realloc (new_leaves, (alloced / 2) * sizeof (*new_leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":210,"col":5,"offset":5013},"end":{"line":211,"col":43,"offset":5096},"extra":{"metavars":{"$FUN":{"start":{"line":210,"col":5,"offset":5013},"end":{"line":210,"col":12,"offset":5020},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a9bcdd38e217c8481ad772be47a4f2067aef1bb17b2016ebcf32dcb22a559fcb030ecd4d114d76ecf72cee4ca2851052df4529676bf7d3405b91710d7d3e0bb_0","lines":"    memmove (leaves + pos + 1, leaves + pos,\n\t     (fcs->num - pos) * sizeof (*leaves));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":212,"col":5,"offset":5102},"end":{"line":213,"col":44,"offset":5188},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":5,"offset":5102},"end":{"line":212,"col":12,"offset":5109},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a9bcdd38e217c8481ad772be47a4f2067aef1bb17b2016ebcf32dcb22a559fcb030ecd4d114d76ecf72cee4ca2851052df4529676bf7d3405b91710d7d3e0bb_1","lines":"    memmove (numbers + pos + 1, numbers + pos,\n\t     (fcs->num - pos) * sizeof (*numbers));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":235,"col":12,"offset":5613},"end":{"line":235,"col":43,"offset":5644},"extra":{"metavars":{"$FUN":{"start":{"line":235,"col":12,"offset":5613},"end":{"line":235,"col":18,"offset":5619},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ace993b16d7390f4b9e4e3047e870f3e5edec45bd35ca6f00dff3d55b46d4d8aa7928c6dd4af5025763d13283680dc19431891256fc808dbd489d86255708b7a_0","lines":"    leaf = calloc (1, sizeof (FcCharLeaf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":235,"col":12,"offset":5613},"end":{"line":235,"col":43,"offset":5644},"extra":{"metavars":{"$CNT":{"start":{"line":235,"col":20,"offset":5621},"end":{"line":235,"col":21,"offset":5622},"abstract_content":"1"},"$LEN":{"start":{"line":235,"col":23,"offset":5624},"end":{"line":235,"col":41,"offset":5642},"abstract_content":"sizeof FcCharLeaf"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4f7ca580c1e22dbfcdfe47825422276eb1f309cf76d2afd806d9637054fd5a47c6a17ce9b8c1ff2bc1cef5618804f1f6ff5c04af66725b266f812efe1baa31b6_0","lines":"    leaf = calloc (1, sizeof (FcCharLeaf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":256,"col":2,"offset":5974},"end":{"line":256,"col":34,"offset":6006},"extra":{"metavars":{"$PTR":{"start":{"line":256,"col":8,"offset":5980},"end":{"line":256,"col":32,"offset":6004},"abstract_content":"FcCharSetLeaf(fcs pos)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5a54a5ad41fbab98e4e9f64ef32079b3d9a2d850b0b1f966b2e977af375a0ec37f0eac4871f5fc2d05e047df4bb619bb8aeb7e1779f1c3d77ca49a9c10692291_0","lines":"\tfree (FcCharSetLeaf (fcs, pos));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":484,"col":2,"offset":10439},"end":{"line":485,"col":24,"offset":10510},"extra":{"metavars":{"$EXPR1":{"start":{"line":484,"col":7,"offset":10444},"end":{"line":484,"col":21,"offset":10458},"abstract_content":"result->->map[i]"},"$EXPR2":{"start":{"line":484,"col":24,"offset":10461},"end":{"line":484,"col":47,"offset":10484},"abstract_content":"al->->map[i]&bl->->map[i]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3ba0fe82cb1ad880255d905ddcfd12f4d7cf0846c0d57ca38a0028a97d74673facb7b25ebf565b89592516de35c8c2297e7266b46dba196d06500b290db5a6dc_0","lines":"\tif ((result->map[i] = al->map[i] & bl->map[i]))\n\t    nonempty = FcTrue;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":576,"col":2,"offset":12137},"end":{"line":577,"col":24,"offset":12209},"extra":{"metavars":{"$EXPR1":{"start":{"line":576,"col":7,"offset":12142},"end":{"line":576,"col":21,"offset":12156},"abstract_content":"result->->map[i]"},"$EXPR2":{"start":{"line":576,"col":24,"offset":12159},"end":{"line":576,"col":48,"offset":12183},"abstract_content":"al->->map[i]&~bl->->map[i]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d73ba20dcf3bedf8638103ebf8f2104f4ce9bb2bd30b690c1c118c31b7d13a45d291e562bf3c286dad353e97422720309507c50ae75cf7f84f5ee6924911a3a3_0","lines":"\tif ((result->map[i] = al->map[i] & ~bl->map[i]))\n\t    nonempty = FcTrue;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":742,"col":7,"offset":15301},"end":{"line":743,"col":19,"offset":15339},"extra":{"metavars":{"$EXPR1":{"start":{"line":742,"col":11,"offset":15305},"end":{"line":742,"col":16,"offset":15310},"abstract_content":"*am++"},"$EXPR2":{"start":{"line":742,"col":19,"offset":15313},"end":{"line":742,"col":25,"offset":15319},"abstract_content":"~*bm++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e4f2b375c5f95d25663e5c63a55de989fab36da840c3d2b1a714a24aa9d75fff23e3192ff6e9404bedeb4e07537eb558c580753b0011c5996ef322fce84248f7_0","lines":"\t\t    if (*am++ & ~*bm++)\n\t\t\treturn FcFalse;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":790,"col":5,"offset":16136},"end":{"line":790,"col":54,"offset":16185},"extra":{"metavars":{"$FUN":{"start":{"line":790,"col":5,"offset":16136},"end":{"line":790,"col":11,"offset":16142},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3fac31730bc464e4d6f4915d70c3bc86c5eaec71311664ce2d58cb8bda2942c3fbae6acc7cc7b9322e9fd1ea3cb287e90549bb66deccc6bbbdf40f061779d74a_0","lines":"    memcpy (map, ai.leaf->map, sizeof (ai.leaf->map));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":827,"col":2,"offset":16793},"end":{"line":827,"col":54,"offset":16845},"extra":{"metavars":{"$FUN":{"start":{"line":827,"col":2,"offset":16793},"end":{"line":827,"col":8,"offset":16799},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3fac31730bc464e4d6f4915d70c3bc86c5eaec71311664ce2d58cb8bda2942c3fbae6acc7cc7b9322e9fd1ea3cb287e90549bb66deccc6bbbdf40f061779d74a_1","lines":"\tmemcpy (result, ai.leaf->map, sizeof (ai.leaf->map));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":898,"col":5,"offset":18004},"end":{"line":898,"col":65,"offset":18064},"extra":{"metavars":{"$FUN":{"start":{"line":898,"col":5,"offset":18004},"end":{"line":898,"col":13,"offset":18012},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c68224745347b32ac6c6f9aa72a415f0c93cdca0de9d8df4390f2563cdcc27de0c6ee31c5e3aca568376726a98c5c3c40f51c037ec2e472886c9f934491d904_0","lines":"    snprintf ((char *) buf_static, sizeof (buf_static), \"%x\", u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":898,"col":5,"offset":18004},"end":{"line":898,"col":65,"offset":18064},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"\"%x\""},"$ARG1":{"start":{"line":898,"col":15,"offset":18014},"end":{"line":898,"col":34,"offset":18033},"abstract_content":"(char*buf_static"},"$ARG2":{"start":{"line":898,"col":36,"offset":18035},"end":{"line":898,"col":54,"offset":18053},"abstract_content":"sizeof buf_static"},"$FMT":{"start":{"line":898,"col":57,"offset":18056},"end":{"line":898,"col":61,"offset":18060},"abstract_content":"\"%x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"818fe21bc1aff822e6cc58b254fcde055cd1ec46f49b03a3a2fef65afcbad26d04e8cca96d356338bb578ee0d113c74cc55561879743df56a29329f2199ca38f_0","lines":"    snprintf ((char *) buf_static, sizeof (buf_static), \"%x\", u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":925,"col":3,"offset":18545},"end":{"line":941,"col":4,"offset":18868},"extra":{"metavars":{"$EXPR1":{"start":{"line":925,"col":7,"offset":18549},"end":{"line":925,"col":11,"offset":18553},"abstract_content":"bits"},"$EXPR2":{"start":{"line":925,"col":14,"offset":18556},"end":{"line":925,"col":15,"offset":18557},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c22124a6d60e0af4636927b610a294a7940049a0dced900993acc4d1cff8cbde0ed33369a70a49aa6b096d922a4c0fa66fc132c3e02b07912c1e891adec16060_0","lines":"\t\tif (bits & 1)\n\t\t{\n\t\t\tif (u != last + 1)\n\t\t\t{\n\t\t\t    if (last != first)\n\t\t\t    {\n\t\t\t\tFcStrBufChar (buf, '-');\n\t\t\t\tFcNameUnparseUnicode (buf, last);\n\t\t\t    }\n\t\t\t    if (last != 0x7FFFFFFF)\n\t\t\t\tFcStrBufChar (buf, ' ');\n\t\t\t    /* Start new range. */\n\t\t\t    first = u;\n\t\t\t    FcNameUnparseUnicode (buf, u);\n\t\t\t}\n\t\t\tlast = u;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":969,"col":3,"offset":19398},"end":{"line":969,"col":50,"offset":19445},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":30,"offset":29},"abstract_content":"\"Missing leaf node at 0x%x\\n\""},"$FMT":{"start":{"line":969,"col":11,"offset":19406},"end":{"line":969,"col":40,"offset":19435},"abstract_content":"\"Missing leaf node at 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0353324c3dba29f839f547f0335e38954e7047fc49578c9fe7ddbb19c60969c7f89dba78cc2a263a4af5495ebae5b493a982a359df2734fbd58c8d03bb2ce802_0","lines":"\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":974,"col":3,"offset":19530},"end":{"line":974,"col":52,"offset":19579},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":28,"offset":27},"abstract_content":"\"Extra leaf node at 0x%x\\n\""},"$FMT":{"start":{"line":974,"col":11,"offset":19538},"end":{"line":974,"col":38,"offset":19565},"abstract_content":"\"Extra leaf node at 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d3b7425da214bb9b1a681f2e8a22a2cd0eccd515636e83924e3ad40e8cb8ca861b19d3f4a8bb6e7c6ee1b15f0872c792588057b9f9be40b26ca311a5c2f8fef_0","lines":"\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":986,"col":4,"offset":19807},"end":{"line":987,"col":31,"offset":19895},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":49,"offset":48},"abstract_content":"\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\""},"$FMT":{"start":{"line":986,"col":12,"offset":19815},"end":{"line":986,"col":60,"offset":19863},"abstract_content":"\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6e579d39281dcccbb10b90bb84fb8d97b40e273612c11096594412621baa9c8a01c0e30ec9dca04529edaa7f08f796dd7c47832291bcb2d75d6fe69082e35907_0","lines":"\t\t\tprintf (\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\",\n\t\t\t\tci.ucs4 + i, *cm, *checkm);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":995,"col":2,"offset":20008},"end":{"line":996,"col":58,"offset":20116},"extra":{"metavars":{"$EXPR1":{"start":{"line":995,"col":7,"offset":20013},"end":{"line":995,"col":14,"offset":20020},"abstract_content":"missing","propagated_value":{"svalue_start":{"line":995,"col":17,"offset":20023},"svalue_end":{"line":995,"col":50,"offset":20056},"svalue_abstract_content":"FcCharSetSubtractCount(c check)"}},"$EXPR2":{"start":{"line":995,"col":17,"offset":20023},"end":{"line":995,"col":50,"offset":20056},"abstract_content":"FcCharSetSubtractCount(c check)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0fa9cfb2870a39169ebf20d692bcfc4adeec41620b3a4d6314718baeb2239b5f17b5752fa32a5548e6b2586290a48088252c72e92ffcfcb5aebe7205c2194f16_0","lines":"\tif ((missing = FcCharSetSubtractCount (c, check)))\n\t    printf (\"%d missing in reparsed result\\n\", missing);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":997,"col":2,"offset":20118},"end":{"line":998,"col":56,"offset":20224},"extra":{"metavars":{"$EXPR1":{"start":{"line":997,"col":7,"offset":20123},"end":{"line":997,"col":14,"offset":20130},"abstract_content":"missing","propagated_value":{"svalue_start":{"line":997,"col":17,"offset":20133},"svalue_end":{"line":997,"col":50,"offset":20166},"svalue_abstract_content":"FcCharSetSubtractCount(check c)"}},"$EXPR2":{"start":{"line":997,"col":17,"offset":20133},"end":{"line":997,"col":50,"offset":20166},"abstract_content":"FcCharSetSubtractCount(check c)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5ee8dbacc707f923b08b1ace3a91783a9a1a05107adc5166e7669380626084b0811bca834275326d93ef76f77a6695390367a790e8d017976c83fb0c3e45b5ac_0","lines":"\tif ((missing = FcCharSetSubtractCount (check, c)))\n\t    printf (\"%d extra in reparsed result\\n\", missing);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1057,"col":14,"offset":21522},"end":{"line":1057,"col":98,"offset":21606},"extra":{"metavars":{"$FUN":{"start":{"line":1057,"col":14,"offset":21522},"end":{"line":1057,"col":21,"offset":21529},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1057,"col":23,"offset":21531},"end":{"line":1057,"col":43,"offset":21551},"abstract_content":"freezer->->leaf_blocks"},"$X":{"start":{"line":1057,"col":45,"offset":21553},"end":{"line":1057,"col":70,"offset":21578},"abstract_content":"freezer->->leaf_block_count"},"$Y":{"start":{"line":1057,"col":73,"offset":21581},"end":{"line":1057,"col":97,"offset":21605},"abstract_content":"sizeof(FcCharLeafEnt*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"02aa322c02dc58c3f34dbf86d1af81633706f6eb93e51c19ec9d475f64df061ae90fd34079886b5d3515989647b4cc51b990790fb17c8d9fce0b21ff49ee4d17_0","lines":"\tnewBlocks = realloc (freezer->leaf_blocks, freezer->leaf_block_count * sizeof (FcCharLeafEnt *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1057,"col":14,"offset":21522},"end":{"line":1057,"col":98,"offset":21606},"extra":{"metavars":{"$FUN":{"start":{"line":1057,"col":14,"offset":21522},"end":{"line":1057,"col":21,"offset":21529},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e92d6bbe2de2137a9fbcca91b9d9210144dbbf7fa79e46f794d309afc71f1d5f13ce52e44d04267e525036eda889e44f67366e6e9f71f59fa0f5cc020ebdd140_3","lines":"\tnewBlocks = realloc (freezer->leaf_blocks, freezer->leaf_block_count * sizeof (FcCharLeafEnt *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1061,"col":27,"offset":21701},"end":{"line":1061,"col":131,"offset":21805},"extra":{"metavars":{"$RET":{"start":{"line":1061,"col":27,"offset":21701},"end":{"line":1061,"col":76,"offset":21750},"abstract_content":"freezer->->leaf_blocks[freezer->->leaf_block_count-1]"},"$FUN":{"start":{"line":1061,"col":79,"offset":21753},"end":{"line":1061,"col":85,"offset":21759},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c631e28fde196e392bf9474e4d447bc11cb61c940c1d6e889106312867de1e02322a5d2b746463a681a77fe87cd31d06dc39ae3ecaf03faab4000090eed91b51_0","lines":"\tfreezer->current_block = freezer->leaf_blocks[freezer->leaf_block_count-1] = malloc (FC_CHAR_LEAF_BLOCK * sizeof (FcCharLeafEnt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1061,"col":79,"offset":21753},"end":{"line":1061,"col":131,"offset":21805},"extra":{"metavars":{"$FUN":{"start":{"line":1061,"col":79,"offset":21753},"end":{"line":1061,"col":85,"offset":21759},"abstract_content":"malloc"},"$X":{"start":{"line":1061,"col":87,"offset":21761},"end":{"line":1061,"col":105,"offset":21779},"abstract_content":"FC_CHAR_LEAF_BLOCK"},"$Y":{"start":{"line":1061,"col":108,"offset":21782},"end":{"line":1061,"col":129,"offset":21803},"abstract_content":"sizeof FcCharLeafEnt"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"68b5006b1e0edb1637120eed317775ecb68f873c1631bcf1e0ae56f0834174defabdb07c22d300476677816e6dfe51d140e37e60cb5caf7c138b22a4aef22f9c_0","lines":"\tfreezer->current_block = freezer->leaf_blocks[freezer->leaf_block_count-1] = malloc (FC_CHAR_LEAF_BLOCK * sizeof (FcCharLeafEnt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1061,"col":79,"offset":21753},"end":{"line":1061,"col":131,"offset":21805},"extra":{"metavars":{"$FUN":{"start":{"line":1061,"col":79,"offset":21753},"end":{"line":1061,"col":85,"offset":21759},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_3","lines":"\tfreezer->current_block = freezer->leaf_blocks[freezer->leaf_block_count-1] = malloc (FC_CHAR_LEAF_BLOCK * sizeof (FcCharLeafEnt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1126,"col":11,"offset":23404},"end":{"line":1126,"col":45,"offset":23438},"extra":{"metavars":{"$FUN":{"start":{"line":1126,"col":11,"offset":23404},"end":{"line":1126,"col":17,"offset":23410},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_4","lines":"    ent = malloc (sizeof (FcCharSetOrigEnt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1167,"col":11,"offset":24393},"end":{"line":1167,"col":24,"offset":24406},"extra":{"metavars":{"$X":{"start":{"line":1164,"col":13,"offset":24283},"end":{"line":1165,"col":38,"offset":24344},"abstract_content":"sizeof FcCharSetEnt+fcs->->num*sizeof(FcCharLeaf*)"},"$Y":{"start":{"line":1166,"col":6,"offset":24352},"end":{"line":1166,"col":33,"offset":24379},"abstract_content":"fcs->->num*sizeof FcChar16"},"$FUN":{"start":{"line":1167,"col":11,"offset":24393},"end":{"line":1167,"col":17,"offset":24399},"abstract_content":"malloc"},"$N":{"start":{"line":1167,"col":19,"offset":24401},"end":{"line":1167,"col":23,"offset":24405},"abstract_content":"size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f1f1b9ea1ccecc9a8557d6e69b8cee0bce026c0441f8c280ac5245623632b0850d713ea470d71f02d4a03874b98e2eebd51484fbfb783c081b85f080b40d9583_0","lines":"    ent = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1167,"col":11,"offset":24393},"end":{"line":1167,"col":24,"offset":24406},"extra":{"metavars":{"$FUN":{"start":{"line":1167,"col":11,"offset":24393},"end":{"line":1167,"col":17,"offset":24399},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89ab67c76cf4e1923b42eb76700ac144710f8ad15fd2cc023c4c9f5c5227bb54198d5ca75517ac135733da26a9a7afb3d84f538e5a7d71679642aee29e6084ad_5","lines":"    ent = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1167,"col":11,"offset":24393},"end":{"line":1167,"col":24,"offset":24406},"extra":{"metavars":{"$LEN":{"start":{"line":1167,"col":19,"offset":24401},"end":{"line":1167,"col":23,"offset":24405},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"103bdbaed5a25718ecb74cbe63d61333dde2a959089e26dba3308d54f2a8af7a8bc5b7ac3a06275000a0c96302fdda94376bb7e6ce3c07c5650200678a1a562d_0","lines":"    ent = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1187,"col":2,"offset":24879},"end":{"line":1189,"col":32,"offset":24974},"extra":{"metavars":{"$FUN":{"start":{"line":1187,"col":2,"offset":24879},"end":{"line":1187,"col":8,"offset":24885},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3fac31730bc464e4d6f4915d70c3bc86c5eaec71311664ce2d58cb8bda2942c3fbae6acc7cc7b9322e9fd1ea3cb287e90549bb66deccc6bbbdf40f061779d74a_2","lines":"\tmemcpy (FcCharSetNumbers (&ent->set),\n\t\tFcCharSetNumbers (fcs),\n\t\tfcs->num * sizeof (FcChar16));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1245,"col":2,"offset":26163},"end":{"line":1245,"col":29,"offset":26190},"extra":{"metavars":{"$PTR":{"start":{"line":1245,"col":8,"offset":26169},"end":{"line":1245,"col":27,"offset":26188},"abstract_content":"FcCharSetLeaves(b)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3251420c214e2eeef631fe727fe3188c016e32641e4d2d177328b0ff9a8c5182247d5787dcaaf7398b1e8ad8554d6f4524745bebcfc6ce19a64810d1fe2a2ad2_0","lines":"\tfree (FcCharSetLeaves (b));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1247,"col":2,"offset":26208},"end":{"line":1247,"col":30,"offset":26236},"extra":{"metavars":{"$PTR":{"start":{"line":1247,"col":8,"offset":26214},"end":{"line":1247,"col":28,"offset":26234},"abstract_content":"FcCharSetNumbers(b)"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2ac0cd7adbb38e71f0127a42cff484d71ee47706c330e1d87c246c05cc66e00880cb95cff6e4838af71327548885206d04f488483a019e7b11b640277a49477_0","lines":"\tfree (FcCharSetNumbers (b));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1248,"col":5,"offset":26241},"end":{"line":1248,"col":14,"offset":26250},"extra":{"metavars":{"$PTR":{"start":{"line":1248,"col":11,"offset":26247},"end":{"line":1248,"col":12,"offset":26248},"abstract_content":"b"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4497ae8e4bef375801f58c91bcb1b8b17d4c9bd30e8d4096812e225d8ecb28d72b9117118b8303e6169c775199491fa232c5f4377a78703a58062e6b3d6f024c_0","lines":"    free (b);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1258,"col":5,"offset":26362},"end":{"line":1258,"col":52,"offset":26409},"extra":{"metavars":{"$RET":{"start":{"line":1258,"col":5,"offset":26362},"end":{"line":1258,"col":12,"offset":26369},"abstract_content":"freezer"},"$FUN":{"start":{"line":1258,"col":15,"offset":26372},"end":{"line":1258,"col":21,"offset":26378},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a3bee2a422216577dbca3c4425193cffe6bfe061a4968c4f775a9ebdb9cf7cd21f62bc09e6f16afddae903fc2e6d7a853150ac90698886c3266400bf2b7bb064_0","lines":"    freezer = calloc (1, sizeof (FcCharSetFreezer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1258,"col":15,"offset":26372},"end":{"line":1258,"col":52,"offset":26409},"extra":{"metavars":{"$FUN":{"start":{"line":1258,"col":15,"offset":26372},"end":{"line":1258,"col":21,"offset":26378},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ace993b16d7390f4b9e4e3047e870f3e5edec45bd35ca6f00dff3d55b46d4d8aa7928c6dd4af5025763d13283680dc19431891256fc808dbd489d86255708b7a_1","lines":"    freezer = calloc (1, sizeof (FcCharSetFreezer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1258,"col":15,"offset":26372},"end":{"line":1258,"col":52,"offset":26409},"extra":{"metavars":{"$CNT":{"start":{"line":1258,"col":23,"offset":26380},"end":{"line":1258,"col":24,"offset":26381},"abstract_content":"1"},"$LEN":{"start":{"line":1258,"col":26,"offset":26383},"end":{"line":1258,"col":50,"offset":26407},"abstract_content":"sizeof FcCharSetFreezer"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"460f46647f7c5da81727c382989ad5053930f6ab88b217b848fa717d0529c7ac351a23b7c1f88a86489624f080c3a92f6568632f65966de77bb7748ef75a9fae_0","lines":"    freezer = calloc (1, sizeof (FcCharSetFreezer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1267,"col":5,"offset":26509},"end":{"line":1272,"col":6,"offset":26707},"extra":{"metavars":{"$EXPR1":{"start":{"line":1267,"col":9,"offset":26513},"end":{"line":1267,"col":18,"offset":26522},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1267,"col":21,"offset":26525},"end":{"line":1267,"col":33,"offset":26537},"abstract_content":"FC_DBG_CACHE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"20eaa84586d1b377909c39ede229387646ac6a2d88872e7524e3d8796ab3d2c92e371a7db470475cdd826f76f75b793bbd5f672058bd85b9f577639679541323_0","lines":"    if (FcDebug() & FC_DBG_CACHE)\n    {\n\tprintf (\"\\ncharsets %d -> %d leaves %d -> %d\\n\",\n\t\tfreezer->charsets_seen, freezer->charsets_allocated,\n\t\tfreezer->leaves_seen, freezer->leaves_allocated);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1279,"col":6,"offset":26877},"end":{"line":1279,"col":17,"offset":26888},"extra":{"metavars":{"$PTR":{"start":{"line":1279,"col":12,"offset":26883},"end":{"line":1279,"col":15,"offset":26886},"abstract_content":"ent"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5be6022754004c1a15ceebaca0931ec7e165e928d392c3c0683cd84bfa18eb11f032276f15e0eb6245ff29f241965787338103a91a6f1111257b01d62eff6521_0","lines":"\t    free (ent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1289,"col":6,"offset":27073},"end":{"line":1289,"col":17,"offset":27084},"extra":{"metavars":{"$PTR":{"start":{"line":1289,"col":12,"offset":27079},"end":{"line":1289,"col":15,"offset":27082},"abstract_content":"ent"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5be6022754004c1a15ceebaca0931ec7e165e928d392c3c0683cd84bfa18eb11f032276f15e0eb6245ff29f241965787338103a91a6f1111257b01d62eff6521_1","lines":"\t    free (ent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1294,"col":2,"offset":27148},"end":{"line":1294,"col":33,"offset":27179},"extra":{"metavars":{"$PTR":{"start":{"line":1294,"col":8,"offset":27154},"end":{"line":1294,"col":31,"offset":27177},"abstract_content":"freezer->->leaf_blocks[i]"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69cd8bec4c66f6bb7dcb45b46e40b593d1b30fa122f0d92d2da9535a0713f9333cf03b5615b60a96f9b9df744941920a8ea218650f4e886cd82c62edf92e5fd8_0","lines":"\tfree (freezer->leaf_blocks[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1296,"col":5,"offset":27185},"end":{"line":1296,"col":33,"offset":27213},"extra":{"metavars":{"$PTR":{"start":{"line":1296,"col":11,"offset":27191},"end":{"line":1296,"col":31,"offset":27211},"abstract_content":"freezer->->leaf_blocks"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"077f89c69d91674e1f868a173ae5b84d40faf84382ecf39543802c40a9e14cf5ea8967e9904ba8e51fe9e098fb2e9dc0d504f502a34c8bbae0bcf6204eb9e976_0","lines":"    free (freezer->leaf_blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","start":{"line":1297,"col":5,"offset":27218},"end":{"line":1297,"col":20,"offset":27233},"extra":{"metavars":{"$PTR":{"start":{"line":1297,"col":11,"offset":27224},"end":{"line":1297,"col":18,"offset":27231},"abstract_content":"freezer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3800cd6a0dbbd8f42d4a6dc3b021e610586411ec97060659f8a6d2f5cba0720b1f7248d2d6560304289964a7b31590b7d2618def0da71fd0212c607ca818b8d2_0","lines":"    free (freezer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":96,"col":7,"offset":2440},"end":{"line":96,"col":16,"offset":2449},"extra":{"metavars":{"$SIGNED":{"start":{"line":96,"col":7,"offset":2440},"end":{"line":96,"col":8,"offset":2441},"abstract_content":"i"},"$UNSIGNED":{"start":{"line":96,"col":11,"offset":2444},"end":{"line":96,"col":12,"offset":2445},"abstract_content":"l","propagated_value":{"svalue_start":{"line":87,"col":9,"offset":2290},"svalue_end":{"line":87,"col":26,"offset":2307},"svalue_abstract_content":"strlen(template)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f4caf04be96c568a95250b8609a38f2bc35e3f3a9cb4bfd1b0d7b4fbe34a5e1ea9596c830390390311f802fedcdff489ac741ac60579146f99b2a7123a2d1ced_0","lines":"\tfor (i = l - 6; i < l; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":116,"col":5,"offset":2823},"end":{"line":130,"col":6,"offset":3102},"extra":{"metavars":{"$EXPR1":{"start":{"line":116,"col":9,"offset":2827},"end":{"line":116,"col":14,"offset":2832},"abstract_content":"flags"},"$EXPR2":{"start":{"line":116,"col":17,"offset":2835},"end":{"line":116,"col":24,"offset":2842},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7dfaea53d5b010b8430c95acf3aacb9615d6478008ce8926dc15c6373b4481f5cf29b1ee9a38807ae0d3c0c6f07e2eeaa03900a0310c56bc9707c0642f00219d_0","lines":"    if (flags & O_CREAT)\n    {\n\tva_list ap;\n\tmode_t mode;\n\n\tva_start(ap, flags);\n\tmode = (mode_t) va_arg(ap, int);\n\tva_end(ap);\n\n\tfd = open(pathname, flags | FC_O_CLOEXEC | FC_O_LARGEFILE, mode);\n    }\n    else\n    {\n\tfd = open(pathname, flags | FC_O_CLOEXEC | FC_O_LARGEFILE);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":125,"col":7,"offset":2954},"end":{"line":125,"col":66,"offset":3013},"extra":{"metavars":{"$FUN":{"start":{"line":125,"col":7,"offset":2954},"end":{"line":125,"col":11,"offset":2958},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c40b4576495aaaf900fdb4777ef5c1b6c5eda1d8bb059542d5f0c78bd525559e65621ccccde24ff67601d157b0581c4785139f6986112d6656db101760056216_0","lines":"\tfd = open(pathname, flags | FC_O_CLOEXEC | FC_O_LARGEFILE, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":129,"col":7,"offset":3042},"end":{"line":129,"col":60,"offset":3095},"extra":{"metavars":{"$FUN":{"start":{"line":129,"col":7,"offset":3042},"end":{"line":129,"col":11,"offset":3046},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c40b4576495aaaf900fdb4777ef5c1b6c5eda1d8bb059542d5f0c78bd525559e65621ccccde24ff67601d157b0581c4785139f6986112d6656db101760056216_1","lines":"\tfd = open(pathname, flags | FC_O_CLOEXEC | FC_O_LARGEFILE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":143,"col":10,"offset":3268},"end":{"line":143,"col":28,"offset":3286},"extra":{"metavars":{"$FUN":{"start":{"line":143,"col":10,"offset":3268},"end":{"line":143,"col":17,"offset":3275},"abstract_content":"mkstemp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fd22b47f88ec34f8ce2408d6bc8c1eb0fccdb846a68ede7257ccb37db29ba6c7ac91f268a5936da79ba31008046e63dda566563e061194c5670042f388ff00d7_0","lines":"    fd = mkstemp (template);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-rand-srand","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":224,"col":2,"offset":4834},"end":{"line":224,"col":21,"offset":4853},"extra":{"metavars":{},"message":"The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/338","https://cwe.mitre.org/data/definitions/330","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"e39f1a5b34b5bf6da1d01317064a5c2ab1dea11898421f301c23f2110678493a752f905054299aa9ea9090afda0437c3241e200d301a790f4b8550cf55cc031f_0","lines":"\tsrand (time (NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":224,"col":2,"offset":4834},"end":{"line":224,"col":21,"offset":4853},"extra":{"metavars":{"$FUN":{"start":{"line":224,"col":2,"offset":4834},"end":{"line":224,"col":7,"offset":4839},"abstract_content":"srand"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0443ac7ec29df3731eb1a9dd85aadc1e01000b70dee7d34a779840f640ffe12b0f7c058746210bf7fa13860cf262cede7882fb93470ed3ea3175b7a8864b13bc_0","lines":"\tsrand (time (NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-rand-srand","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":227,"col":14,"offset":4897},"end":{"line":227,"col":21,"offset":4904},"extra":{"metavars":{},"message":"The rand() PRNG should not be used in applications intended to be  portable when good randomness is needed. Instead, the use of random()  is recommended.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/338","https://cwe.mitre.org/data/definitions/330","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"e39f1a5b34b5bf6da1d01317064a5c2ab1dea11898421f301c23f2110678493a752f905054299aa9ea9090afda0437c3241e200d301a790f4b8550cf55cc031f_1","lines":"    result = rand ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":227,"col":14,"offset":4897},"end":{"line":227,"col":21,"offset":4904},"extra":{"metavars":{"$FUN":{"start":{"line":227,"col":14,"offset":4897},"end":{"line":227,"col":18,"offset":4901},"abstract_content":"rand"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9d736f37a62a90836ac562c8600c3627166b1ad58e3bfbb9c63668cf4a7fa7623d75fba3fb23cb620f26a0c18f7f2061cb36d5974c8fb90e5350beb839754e04_0","lines":"    result = rand ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":237,"col":26,"offset":5056},"end":{"line":237,"col":38,"offset":5068},"extra":{"metavars":{"$FUN":{"start":{"line":237,"col":26,"offset":5056},"end":{"line":237,"col":32,"offset":5062},"abstract_content":"_mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2dee71f6faeff9838d814ef3880f04314e699cea8361b11c3c7e17135e33be3620c38be64f5ded659a7d0a50dcbe51d9df4b85face551aa11e600206d6383390_0","lines":"#define mkdir(path,mode) _mkdir(path)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":252,"col":9,"offset":5291},"end":{"line":252,"col":39,"offset":5321},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"924f5ab272c9620c45aba7ed5b6bbcfacdac6e020761ae5ed77dcd96d0d1276a1435f5a8d12ed72e4c694ae77adfd87d3377683f4b1e2f85406aa871e285b2c3_0","lines":"    if (access ((char *) parent, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":252,"col":9,"offset":5291},"end":{"line":252,"col":39,"offset":5321},"extra":{"metavars":{"$FUN":{"start":{"line":252,"col":9,"offset":5291},"end":{"line":252,"col":15,"offset":5297},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ec988a3b3e097fde14ca4175c500e7877d733b1579c35c3d9b0b9d97155f7d5c88cc573e64668be2ad84f6a37fbff736baec1e386fa3df41f517ade84a34d62c_0","lines":"    if (access ((char *) parent, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":253,"col":2,"offset":5329},"end":{"line":253,"col":75,"offset":5402},"extra":{"metavars":{"$EXPR1":{"start":{"line":253,"col":8,"offset":5335},"end":{"line":253,"col":34,"offset":5361},"abstract_content":"mkdir((char*dir 0755)"},"$EXPR2":{"start":{"line":253,"col":38,"offset":5365},"end":{"line":253,"col":39,"offset":5366},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef0c081afb82597705b082f5fe6554c3652aa4c14e6d02913894f8eedc2f99d397647ad62f15745d1766dff9a42ae2ad2b172a60cb40ce1d56b1037a318ee51d_0","lines":"\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":253,"col":8,"offset":5335},"end":{"line":253,"col":34,"offset":5361},"extra":{"metavars":{"$FUN":{"start":{"line":253,"col":8,"offset":5335},"end":{"line":253,"col":13,"offset":5340},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1fa86d62ace2d661d862c424f868db78f88f0caf4522266fff63d5cc6cc305860c3b9a5c04a68fbfe35f5569e6536c2f71ab64e67be2c1a657f27508b66f8a02_0","lines":"\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":253,"col":43,"offset":5370},"end":{"line":253,"col":69,"offset":5396},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":253,"col":43,"offset":5370},"end":{"line":253,"col":48,"offset":5375},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c50ef8cf7a70520ae09c65af665237d06b38a5d019aec1b856293caa37fb2201a428b8e6f9208716cd203428b3c410684cac8576400dc06c6f4101584bcec7be_0","lines":"\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":254,"col":14,"offset":5416},"end":{"line":254,"col":44,"offset":5446},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"924f5ab272c9620c45aba7ed5b6bbcfacdac6e020761ae5ed77dcd96d0d1276a1435f5a8d12ed72e4c694ae77adfd87d3377683f4b1e2f85406aa871e285b2c3_1","lines":"    else if (access ((char *) parent, F_OK) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":254,"col":14,"offset":5416},"end":{"line":254,"col":44,"offset":5446},"extra":{"metavars":{"$FUN":{"start":{"line":254,"col":14,"offset":5416},"end":{"line":254,"col":20,"offset":5422},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ec988a3b3e097fde14ca4175c500e7877d733b1579c35c3d9b0b9d97155f7d5c88cc573e64668be2ad84f6a37fbff736baec1e386fa3df41f517ade84a34d62c_1","lines":"    else if (access ((char *) parent, F_OK) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":255,"col":2,"offset":5455},"end":{"line":255,"col":105,"offset":5558},"extra":{"metavars":{"$EXPR1":{"start":{"line":255,"col":37,"offset":5490},"end":{"line":255,"col":63,"offset":5516},"abstract_content":"mkdir((char*dir 0755)"},"$EXPR2":{"start":{"line":255,"col":67,"offset":5520},"end":{"line":255,"col":68,"offset":5521},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef0c081afb82597705b082f5fe6554c3652aa4c14e6d02913894f8eedc2f99d397647ad62f15745d1766dff9a42ae2ad2b172a60cb40ce1d56b1037a318ee51d_1","lines":"\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":255,"col":37,"offset":5490},"end":{"line":255,"col":63,"offset":5516},"extra":{"metavars":{"$FUN":{"start":{"line":255,"col":37,"offset":5490},"end":{"line":255,"col":42,"offset":5495},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1fa86d62ace2d661d862c424f868db78f88f0caf4522266fff63d5cc6cc305860c3b9a5c04a68fbfe35f5569e6536c2f71ab64e67be2c1a657f27508b66f8a02_1","lines":"\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":255,"col":73,"offset":5526},"end":{"line":255,"col":99,"offset":5552},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":255,"col":73,"offset":5526},"end":{"line":255,"col":78,"offset":5531},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c50ef8cf7a70520ae09c65af665237d06b38a5d019aec1b856293caa37fb2201a428b8e6f9208716cd203428b3c410684cac8576400dc06c6f4101584bcec7be_1","lines":"\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","start":{"line":268,"col":12,"offset":5759},"end":{"line":268,"col":67,"offset":5814},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":12,"offset":5759},"end":{"line":268,"col":20,"offset":5767},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24ae907f8f92a937fbe134796eb5d4ac90447a7eab164ae1681d231c315bf9fd0515a0cde7e726594f2d7e78630e7ef7cf9f73110741c87957dd4f5ac26c8541_0","lines":"    return readlink ((const char *) pathname, (char *)buf, bufsiz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":32,"col":13,"offset":1317},"end":{"line":32,"col":19,"offset":1323},"extra":{"metavars":{"$VAR":{"start":{"line":32,"col":13,"offset":1317},"end":{"line":32,"col":19,"offset":1323},"abstract_content":"v.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0e4254a554c4611480cd625b4405709bf7f3dc18ca15b5582c9c726212afc5b75fda731f40614f90995534bb71c6071d83407cf4eb20c7d9494bac650f8ba519_0","lines":"    switch (v.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":122,"col":2,"offset":2985},"end":{"line":122,"col":86,"offset":3069},"extra":{"metavars":{"$EXPR1":{"start":{"line":122,"col":76,"offset":3059},"end":{"line":122,"col":77,"offset":3060},"abstract_content":"l"},"$EXPR2":{"start":{"line":122,"col":81,"offset":3064},"end":{"line":122,"col":84,"offset":3067},"abstract_content":"pos"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b004dd2b60d58685c9eb6dcf765ba120b1602afc6782f1abad98916b80d097c0f7a5da610646c2b8005e7ea1aaf07335f00ddfc40c9711a146f0d4be19954b9f_0","lines":"\tFcValuePrintWithPosition (FcValueCanonicalize (&l->value), pos != NULL && l == pos);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":161,"col":5,"offset":3805},"end":{"line":161,"col":45,"offset":3845},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":18,"offset":17},"abstract_content":"\"CharSet  0x%x\\n\""},"$FMT":{"start":{"line":161,"col":13,"offset":3813},"end":{"line":161,"col":30,"offset":3830},"abstract_content":"\"CharSet  0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3110f244f1b93d07a70de4dda98512bbcc60d712da71993e363ebe30adbc43cb982e927f27e042bb82918f946fbe32daf87d85f04180bcea1dbc7e93049e1c7c_0","lines":"    printf (\"CharSet  0x%x\\n\", (intptr_t) c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":162,"col":5,"offset":3851},"end":{"line":162,"col":74,"offset":3920},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":24,"offset":23},"abstract_content":"\"Leaves:  +%d = 0x%x\\n\""},"$FMT":{"start":{"line":162,"col":13,"offset":3859},"end":{"line":162,"col":36,"offset":3882},"abstract_content":"\"Leaves:  +%d = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"efec0b8b80580e10872dfc7aafa9d143b49778211e5a140a49b1ad1f9522277d045caa82b702f29655abcf4808ac19217ee5e9320314a55a15296b60ec99eb35_0","lines":"    printf (\"Leaves:  +%d = 0x%x\\n\", c->leaves_offset, (intptr_t) leaves);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":163,"col":5,"offset":3926},"end":{"line":163,"col":76,"offset":3997},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":24,"offset":23},"abstract_content":"\"Numbers: +%d = 0x%x\\n\""},"$FMT":{"start":{"line":163,"col":13,"offset":3934},"end":{"line":163,"col":36,"offset":3957},"abstract_content":"\"Numbers: +%d = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d78dc57ee245413efc32d9b79bad9a80334d6c354c85e824fbb23a501034a70cb678ce838f7a43ddd138259f9e6cd8bbd005a40b84874a27e84f54ee401f7aef_0","lines":"    printf (\"Numbers: +%d = 0x%x\\n\", c->numbers_offset, (intptr_t) numbers);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":167,"col":2,"offset":4040},"end":{"line":169,"col":60,"offset":4165},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":29,"offset":28},"abstract_content":"\"Page %d: %04x +%d = 0x%x\\n\""},"$FMT":{"start":{"line":167,"col":10,"offset":4048},"end":{"line":167,"col":38,"offset":4076},"abstract_content":"\"Page %d: %04x +%d = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"983491c079d22b48420ce7328764e2a1866925307db72f67cd7321219f264d6f96410bfe72b83b3f72fc83fd001382454c1604acdacd53011e2f17724c3db660_0","lines":"\tprintf (\"Page %d: %04x +%d = 0x%x\\n\",\n\t\ti, numbers[i], leaves[i],\n\t\t(intptr_t) FcOffsetToPtr (leaves, leaves[i], FcCharLeaf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":180,"col":2,"offset":4364},"end":{"line":180,"col":30,"offset":4392},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"%04x:\""},"$FMT":{"start":{"line":180,"col":10,"offset":4372},"end":{"line":180,"col":17,"offset":4379},"abstract_content":"\"%04x:\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"821afd3bc2f85a143f82baa484d58283d1b61368e5f4820a25fc891a59b039ead76d876e88278739561f4b6351ebd643957304f630b57ca6ec7b34d5f07a046d_0","lines":"\tprintf (\"%04x:\", numbers[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":182,"col":6,"offset":4429},"end":{"line":182,"col":36,"offset":4459},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\" %08x\""},"$FMT":{"start":{"line":182,"col":14,"offset":4437},"end":{"line":182,"col":21,"offset":4444},"abstract_content":"\" %08x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e15c02301bed7f6056aa3ffa5ea238efe2e391570584ceacc71d8e1eb0b81e6e1416cb1a62e7e96a4abd7126faa71ce795529b4ed86fe4b526b90f0c0adb423c_0","lines":"\t    printf (\" %08x\", leaf->map[j]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":298,"col":13,"offset":6818},"end":{"line":298,"col":15,"offset":6820},"extra":{"metavars":{"$VAR":{"start":{"line":298,"col":13,"offset":6818},"end":{"line":298,"col":15,"offset":6820},"abstract_content":"op"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a915c23feb553bf68346bc97978d82e80acf99344dd7baa5646b5275d35efc7b0f7d9b0b8ccab99adf50db111c5f1a0af22be70955658cb518d8a6fc9a28d63c_0","lines":"    switch (op) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":348,"col":18,"offset":8976},"end":{"line":348,"col":41,"offset":8999},"extra":{"metavars":{"$VAR":{"start":{"line":348,"col":18,"offset":8976},"end":{"line":348,"col":41,"offset":8999},"abstract_content":"FC_OP_GET_OP(expr->->op)"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3e498f7c2a705583a2840af7cf333b425ab48414e61522320742f99e56165ed0921471d75495b4827dba1fa135ee22bcce50dec4c0e42f66fe3cec640d344dee_0","lines":"    else switch (FC_OP_GET_OP (expr->op)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":375,"col":15,"offset":9862},"end":{"line":375,"col":38,"offset":9885},"extra":{"metavars":{"$VAR":{"start":{"line":375,"col":15,"offset":9862},"end":{"line":375,"col":38,"offset":9885},"abstract_content":"(int expr->->u.name.kind"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f75b21b6059e0baca3cc314391d3fb456a305a2a37ce0e8907ae15ed8cfdcc60db8b0b6ec5ddc627ee3fd039c5fa37bf4673e457adaff4acdf28bf42688e8d50_0","lines":"      switch ((int) expr->u.name.kind) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":375,"col":21,"offset":9868},"end":{"line":375,"col":38,"offset":9885},"extra":{"metavars":{"$VAR":{"start":{"line":375,"col":21,"offset":9868},"end":{"line":375,"col":38,"offset":9885},"abstract_content":"expr->->u.name.kind"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"49864745865c7f32d5b2cfe69ef7fc2c7e8179af8ede6f5a06553c5ddf5946a0b881d71c0f5282ea0769ac76c6d5b97fdcdf4acc3038117bcc7ece1cde379622_0","lines":"      switch ((int) expr->u.name.kind) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":471,"col":13,"offset":12530},"end":{"line":471,"col":23,"offset":12540},"extra":{"metavars":{"$VAR":{"start":{"line":471,"col":13,"offset":12530},"end":{"line":471,"col":23,"offset":12540},"abstract_content":"test->->kind"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e52f7f6bb04063925db44ff8e0b2a34ae744ece654eea337eef28754275a46805a0c5ae65dcf74e7729b4e568c232e3affcf1503ae1a6894df3208863d6fc8f4_0","lines":"    switch (test->kind) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":485,"col":13,"offset":12777},"end":{"line":485,"col":23,"offset":12787},"extra":{"metavars":{"$VAR":{"start":{"line":485,"col":13,"offset":12777},"end":{"line":485,"col":23,"offset":12787},"abstract_content":"test->->qual"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bccecd8ca53ee54cf27183f590c995c43b7b2d26d21b0d0fbea5a823eef4438b915dea5f7c6d09f804f271f61c05bb4791f62a5acf6794c47bc2ed18cd6df44b_0","lines":"    switch (test->qual) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":574,"col":6,"offset":14213},"end":{"line":574,"col":25,"offset":14232},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":574,"col":6,"offset":14213},"end":{"line":574,"col":12,"offset":14219},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b236e2ee8559c4d68b7e0635dfa56a3291f1fb5d0a37d9da86f8f69d9fdfa3c46be99094309ec751cb7808a4d9718537b3109f30f7e96d03aac1158a233d96d4_0","lines":"\te = getenv (\"FC_DEBUG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","start":{"line":578,"col":19,"offset":14297},"end":{"line":578,"col":27,"offset":14305},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6f2243c0ca2ae1570a8ee133873dff452d423c8591427945e3168145cd8a1a64c599ad0eb7ee2eb35676deaaef900ed7f660f7a0c4a90a93e0f4edfa1106544d_0","lines":"\t    FcDebugVal = atoi (e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":61,"col":10,"offset":2166},"end":{"line":61,"col":28,"offset":2184},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":61,"col":10,"offset":2166},"end":{"line":61,"col":16,"offset":2172},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0f205177d886567a3c3794a80e42148b402b37aa7ba96e0717a003c1da327fb2cbe226e04de06ee108942c7dfa43047def09a7ab4491a2e307ffd18d5b85f61_0","lines":"\tlangs = getenv (\"FC_LANG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":63,"col":14,"offset":2225},"end":{"line":63,"col":31,"offset":2242},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":63,"col":14,"offset":2225},"end":{"line":63,"col":20,"offset":2231},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0f205177d886567a3c3794a80e42148b402b37aa7ba96e0717a003c1da327fb2cbe226e04de06ee108942c7dfa43047def09a7ab4491a2e307ffd18d5b85f61_1","lines":"\t    langs = getenv (\"LC_ALL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":65,"col":14,"offset":2283},"end":{"line":65,"col":33,"offset":2302},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":65,"col":14,"offset":2283},"end":{"line":65,"col":20,"offset":2289},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0f205177d886567a3c3794a80e42148b402b37aa7ba96e0717a003c1da327fb2cbe226e04de06ee108942c7dfa43047def09a7ab4491a2e307ffd18d5b85f61_2","lines":"\t    langs = getenv (\"LC_CTYPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":67,"col":14,"offset":2343},"end":{"line":67,"col":29,"offset":2358},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":67,"col":14,"offset":2343},"end":{"line":67,"col":20,"offset":2349},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0f205177d886567a3c3794a80e42148b402b37aa7ba96e0717a003c1da327fb2cbe226e04de06ee108942c7dfa43047def09a7ab4491a2e307ffd18d5b85f61_3","lines":"\t    langs = getenv (\"LANG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":101,"col":6,"offset":3062},"end":{"line":101,"col":18,"offset":3074},"extra":{"metavars":{"$PTR":{"start":{"line":101,"col":12,"offset":3068},"end":{"line":101,"col":16,"offset":3072},"abstract_content":"lang"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a80e00b40678c9dd24ee42755dfd868f754ef051aea4bece9ad4f995bc96b2def01a1f830f81e2c46f12b136df30022a375f1b8e7b53a7e45c360f08040e829c_0","lines":"\t    free (lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":159,"col":18,"offset":4053},"end":{"line":159,"col":31,"offset":4066},"extra":{"metavars":{"$FUN":{"start":{"line":159,"col":18,"offset":4053},"end":{"line":159,"col":24,"offset":4059},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"708003757785fff6ee7829a0667afc05955ecea29ce35d47557889fa9451716c9358638804882a5293e2afbc22601a2e0143a61359bbfaed1a56f3dfd03f5fcc_0","lines":"\t    char *buf = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":165,"col":12,"offset":4123},"end":{"line":165,"col":54,"offset":4165},"extra":{"metavars":{"$FUN":{"start":{"line":165,"col":12,"offset":4123},"end":{"line":165,"col":20,"offset":4131},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"44819d9d299544d0547dc3f427c6b87394e15c8ac5157e086f6909e9607fac2642987aa0e04718a8cc16ce19821b1f6ce4e56b5c9747372ad785f779ed4020c1_0","lines":"\t    len = readlink (\"/proc/self/exe\", buf, size - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":199,"col":6,"offset":4541},"end":{"line":199,"col":15,"offset":4550},"extra":{"metavars":{"$PTR":{"start":{"line":199,"col":12,"offset":4547},"end":{"line":199,"col":13,"offset":4548},"abstract_content":"p","propagated_value":{"svalue_start":{"line":182,"col":12,"offset":4352},"svalue_end":{"line":182,"col":16,"offset":4356},"svalue_abstract_content":"NULL"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"15bb3f8ae07eacaf354159ac2b833542ee08f77c0ca232f841f3438d5b879f27c59eaaaad299c5a1a6e8cd8e943e87168403350eb4b8e00b662cf00eaf33441a_0","lines":"\t    free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":203,"col":6,"offset":4629},"end":{"line":203,"col":21,"offset":4644},"extra":{"metavars":{"$PTR":{"start":{"line":203,"col":12,"offset":4635},"end":{"line":203,"col":19,"offset":4642},"abstract_content":"prgname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"79ad349d841680fef49414522411912c2e99154f2e9fd9e6c013ded54310e73bd432eafa36e0cc4855c8653d0672132f64ed241b2243359cb48d2a134a6d2673_0","lines":"\t    free (prgname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":223,"col":2,"offset":4951},"end":{"line":223,"col":14,"offset":4963},"extra":{"metavars":{"$PTR":{"start":{"line":223,"col":8,"offset":4957},"end":{"line":223,"col":12,"offset":4961},"abstract_content":"lang"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a80e00b40678c9dd24ee42755dfd868f754ef051aea4bece9ad4f995bc96b2def01a1f830f81e2c46f12b136df30022a375f1b8e7b53a7e45c360f08040e829c_1","lines":"\tfree (lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","start":{"line":234,"col":2,"offset":5284},"end":{"line":234,"col":17,"offset":5299},"extra":{"metavars":{"$PTR":{"start":{"line":234,"col":8,"offset":5290},"end":{"line":234,"col":15,"offset":5297},"abstract_content":"prgname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"79ad349d841680fef49414522411912c2e99154f2e9fd9e6c013ded54310e73bd432eafa36e0cc4855c8653d0672132f64ed241b2243359cb48d2a134a6d2673_1","lines":"\tfree (prgname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":43,"offset":1514},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"5b51eca9928cc4e0b17cf3d10a08dc73be21481261fc69bddaffa0291d1f765abba37ee8c7e16ca923e5a64668363626b9fbfc110d7e21f8701853aa5fc019fa_0","lines":"    if (lstat ((const char *)file, &statb) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":43,"offset":1514},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":9,"offset":1480},"end":{"line":44,"col":14,"offset":1485},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"90f51fca76a5122afe23f3f3547ad757e976113543d0dd02cae0711aebb7847707e9f43cb08c4f9220e111b02dd7530e45288659554b5472c6e0a266ec927aad_0","lines":"    if (lstat ((const char *)file, &statb) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":72,"col":5,"offset":2014},"end":{"line":76,"col":6,"offset":2114},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":9,"offset":2018},"end":{"line":72,"col":19,"offset":2028},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":72,"col":22,"offset":2031},"end":{"line":72,"col":33,"offset":2042},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7da665573097179efeb0f46b37f05db0adfbe0df86eefe1cfa32d54f4952780256d90e39a5d0fa76128289485b24f8ab825243a8f44663b46b3db4cb4cbe2e7_0","lines":"    if (FcDebug () & FC_DBG_SCAN)\n    {\n\tprintf (\"\\tScanning file %s...\", file);\n\tfflush (stdout);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":81,"col":5,"offset":2195},"end":{"line":82,"col":20,"offset":2244},"extra":{"metavars":{"$EXPR1":{"start":{"line":81,"col":9,"offset":2199},"end":{"line":81,"col":19,"offset":2209},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":81,"col":22,"offset":2212},"end":{"line":81,"col":33,"offset":2223},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7da665573097179efeb0f46b37f05db0adfbe0df86eefe1cfa32d54f4952780256d90e39a5d0fa76128289485b24f8ab825243a8f44663b46b3db4cb4cbe2e7_1","lines":"    if (FcDebug () & FC_DBG_SCAN)\n\tprintf (\"done\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":117,"col":2,"offset":3096},"end":{"line":121,"col":3,"offset":3198},"extra":{"metavars":{"$EXPR1":{"start":{"line":117,"col":6,"offset":3100},"end":{"line":117,"col":15,"offset":3109},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":117,"col":18,"offset":3112},"end":{"line":117,"col":30,"offset":3124},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"be3b6ddc820a9349a34b1612b6ab523e1c7566b82e1b7f444c6fca7aab08ef765c18c93bbdf35eac49a1edcb34d0c5c77441eea5ae4e7634e4c18777f07c0dfd_0","lines":"\tif (FcDebug() & FC_DBG_SCANV)\n\t{\n\t    printf (\"Final font pattern:\\n\");\n\t    FcPatternPrint (font);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":80,"offset":4775},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":30,"offset":4725},"abstract_content":"malloc"},"$X":{"start":{"line":204,"col":32,"offset":4727},"end":{"line":204,"col":75,"offset":4770},"abstract_content":"strlen((char*dir)+1+FC_MAX_FILE_LEN"},"$Y":{"start":{"line":204,"col":78,"offset":4773},"end":{"line":204,"col":79,"offset":4774},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2af363b58cdd7ef50b709e1dc541a4b49448eaa3206db5159f65c6b06b4b1664de9d2684baa116ee2645fdb1907b2b0f0e2afcc2b2211a2af50e9a4d02ca90d5_0","lines":"    file = (FcChar8 *) malloc (strlen ((char *) dir) + 1 + FC_MAX_FILE_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":80,"offset":4775},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":24,"offset":4719},"end":{"line":204,"col":30,"offset":4725},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8b469c86431a14f1501226683926d3508933a5f4d7fc2064a91fafa86e4cdc255c54ccdc208d4084c8b295219cd7658a66c72c37a44f4c4aeaf90b854e2d162_0","lines":"    file = (FcChar8 *) malloc (strlen ((char *) dir) + 1 + FC_MAX_FILE_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":41,"offset":4869},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"60626e13943f29dc4bb42117b7fa65e6b38cf54653cc9bdee21fefcf5978b0d782606a164bd90084bc29c3d86e8dc7ce19b45fdd2b41de8195923b2bce2413ca_0","lines":"    strcpy ((char *) file, (char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":41,"offset":4869},"extra":{"metavars":{"$FUN":{"start":{"line":210,"col":5,"offset":4833},"end":{"line":210,"col":11,"offset":4839},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9919ef3e4dcf7f69fcd79c8241f6cd73b1c82368e2aec275e1111afe0d47a470ceb2af2419a9967b42f680492be494a59ab83ab351dfabc854dcd4415dfc7a2_0","lines":"    strcpy ((char *) file, (char *) dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":211,"col":5,"offset":4875},"end":{"line":211,"col":32,"offset":4902},"extra":{"metavars":{"$FUN":{"start":{"line":211,"col":5,"offset":4875},"end":{"line":211,"col":11,"offset":4881},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a6d30be952837148ba84cce07685ecb831cec15ba184c7c870a6477c3fc4cedb2458aca4bc20a5dd9dd2e533d22b9be81a9ffbd9b63d574a31624b5423d3dd5_0","lines":"    strcat ((char *) file, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":214,"col":5,"offset":4951},"end":{"line":215,"col":38,"offset":5018},"extra":{"metavars":{"$EXPR1":{"start":{"line":214,"col":9,"offset":4955},"end":{"line":214,"col":19,"offset":4965},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":214,"col":22,"offset":4968},"end":{"line":214,"col":33,"offset":4979},"abstract_content":"FC_DBG_SCAN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7da665573097179efeb0f46b37f05db0adfbe0df86eefe1cfa32d54f4952780256d90e39a5d0fa76128289485b24f8ab825243a8f44663b46b3db4cb4cbe2e7_2","lines":"    if (FcDebug () & FC_DBG_SCAN)\n\tprintf (\"\\tScanning dir %s\\n\", dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":48,"offset":5461},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"60626e13943f29dc4bb42117b7fa65e6b38cf54653cc9bdee21fefcf5978b0d782606a164bd90084bc29c3d86e8dc7ce19b45fdd2b41de8195923b2bce2413ca_1","lines":"\t    strcpy ((char *) base, (char *) e->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":48,"offset":5461},"extra":{"metavars":{"$FUN":{"start":{"line":236,"col":6,"offset":5419},"end":{"line":236,"col":12,"offset":5425},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9919ef3e4dcf7f69fcd79c8241f6cd73b1c82368e2aec275e1111afe0d47a470ceb2af2419a9967b42f680492be494a59ab83ab351dfabc854dcd4415dfc7a2_1","lines":"\t    strcpy ((char *) base, (char *) e->d_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":301,"col":5,"offset":6717},"end":{"line":302,"col":36,"offset":6785},"extra":{"metavars":{"$EXPR1":{"start":{"line":301,"col":9,"offset":6721},"end":{"line":301,"col":19,"offset":6731},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":301,"col":22,"offset":6734},"end":{"line":301,"col":36,"offset":6748},"abstract_content":"FC_DBG_FONTSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7644bace25855689279cf6c3287746ebdceb661a1fc90fe3e14a124597cf791532d6ec09ebc9aa67e3a801b4245ac311cc6889804483f09a414b821651af23b_0","lines":"    if (FcDebug () & FC_DBG_FONTSET)\n\tprintf (\"cache scan dir %s\\n\", d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":90,"col":5,"offset":3028},"end":{"line":90,"col":33,"offset":3056},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ac9accdbf5a32c3808f8ac91182e4b854d3035cbd190bbeb4401ae52432b6b2a524f3539e033c5f85b86b4e81e7f638571885a73b10a35fbce28694e25548977_0","lines":"    vfprintf (stderr, fmt, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":121,"col":2,"offset":3682},"end":{"line":121,"col":38,"offset":3718},"extra":{"metavars":{"$RET":{"start":{"line":121,"col":2,"offset":3682},"end":{"line":121,"col":9,"offset":3689},"abstract_content":"c->->word"},"$FUN":{"start":{"line":121,"col":12,"offset":3692},"end":{"line":121,"col":18,"offset":3698},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"38741b6e4b40a82a49135b0a88ab3698d282a1c110b39e3187cb15dbdb136f7be00a9cfe1fc58cad9141598d9c0c548d0c12bafe427d4cee53c3ccc7229f1d90_0","lines":"\tc->word = malloc (c->format_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":121,"col":12,"offset":3692},"end":{"line":121,"col":38,"offset":3718},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":12,"offset":3692},"end":{"line":121,"col":18,"offset":3698},"abstract_content":"malloc"},"$X":{"start":{"line":121,"col":20,"offset":3700},"end":{"line":121,"col":33,"offset":3713},"abstract_content":"c->->format_len"},"$Y":{"start":{"line":121,"col":36,"offset":3716},"end":{"line":121,"col":37,"offset":3717},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e067e308289f8e06911616b439b401e939eb974fa98898c6a1c747543ad47434f87dedf509c6bd1da56cd29f4c2dcee0a3f9d62f26a313a0f9547e9c89a2e2b9_0","lines":"\tc->word = malloc (c->format_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":121,"col":12,"offset":3692},"end":{"line":121,"col":38,"offset":3718},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":12,"offset":3692},"end":{"line":121,"col":18,"offset":3698},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5e75b60688527ef2ca54c01c0612093848ab9e437ca3f665ac521b2f47217527d3b27e7451b50a86a30806a68dbcc37d4aee06ae0690d499a2ed1830c3bad94c_0","lines":"\tc->word = malloc (c->format_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":133,"col":2,"offset":3881},"end":{"line":133,"col":17,"offset":3896},"extra":{"metavars":{"$PTR":{"start":{"line":133,"col":8,"offset":3887},"end":{"line":133,"col":15,"offset":3894},"abstract_content":"c->->word"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3e07d070c1584e5a7b310ceb42b9c400af1cb302fa4a9ee0661f1831c85b0d524be7398b20666f614c7e58b8a14bdbfe560d1158b8b27b87ca8be28f3625646c_0","lines":"\tfree (c->word);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":368,"col":10,"offset":8295},"end":{"line":368,"col":20,"offset":8305},"extra":{"metavars":{"$VAR":{"start":{"line":368,"col":10,"offset":8295},"end":{"line":368,"col":20,"offset":8305},"abstract_content":"*c->->format"},"$VAL1":{"start":{"line":370,"col":7,"offset":8316},"end":{"line":370,"col":11,"offset":8320},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":375,"col":7,"offset":8418},"end":{"line":375,"col":10,"offset":8421},"abstract_content":"'{'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"233aebfd697fd64be083e0de227c48bd945b33644ce3ae9fe46e23a9be590bb7c88f2a6ffb4e5723baedb00d3270d6207247be7ed61d07a2e43fb5a14a9ec707_0","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":368,"col":10,"offset":8295},"end":{"line":368,"col":20,"offset":8305},"extra":{"metavars":{"$VAR":{"start":{"line":368,"col":10,"offset":8295},"end":{"line":368,"col":20,"offset":8305},"abstract_content":"*c->->format"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8557c856d61b1cd3f60797bfed10536bbf52c2268636ca119e4df04e3abff108cc5d2f63d9a67cb30a0d75be2b149b5b5a80d38069e7ebd987d2551dee2ea60a_0","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":391,"col":10,"offset":8649},"end":{"line":391,"col":20,"offset":8659},"extra":{"metavars":{"$VAR":{"start":{"line":391,"col":10,"offset":8649},"end":{"line":391,"col":20,"offset":8659},"abstract_content":"*c->->format"},"$VAL1":{"start":{"line":393,"col":7,"offset":8670},"end":{"line":393,"col":11,"offset":8674},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":398,"col":7,"offset":8772},"end":{"line":398,"col":10,"offset":8775},"abstract_content":"'%'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f6e987997a4c93c1b7ec92c53530fadfd2e139f16047dac502cffb8d8700b04b01f1e5f5d857e3f53a66b62780e6d625b69c87e9f591fa426c3b3f51a6d192b5_0","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":391,"col":10,"offset":8649},"end":{"line":391,"col":20,"offset":8659},"extra":{"metavars":{"$VAR":{"start":{"line":391,"col":10,"offset":8649},"end":{"line":391,"col":20,"offset":8659},"abstract_content":"*c->->format"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8557c856d61b1cd3f60797bfed10536bbf52c2268636ca119e4df04e3abff108cc5d2f63d9a67cb30a0d75be2b149b5b5a80d38069e7ebd987d2551dee2ea60a_1","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":518,"col":2,"offset":10699},"end":{"line":521,"col":56,"offset":10807},"extra":{"metavars":{"$EXPR1":{"start":{"line":520,"col":4,"offset":10735},"end":{"line":520,"col":17,"offset":10748},"abstract_content":"FcResultMatch"},"$EXPR2":{"start":{"line":521,"col":4,"offset":10755},"end":{"line":521,"col":53,"offset":10804},"abstract_content":"FcPatternGet(pat(const char*c->->word 0&v)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"81ff1c416135eb3d11411dd88e5bc9314fcf72440928fa9b730529f4b5e9c0de392b7467c290e510a9ea1f019dbce37702675d0e0370dcb3407ec84c752f59f3_0","lines":"\tpass = pass &&\n\t       (negate ^\n\t\t(FcResultMatch ==\n\t\t FcPatternGet (pat, (const char *) c->word, 0, &v)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":562,"col":5,"offset":11511},"end":{"line":562,"col":69,"offset":11575},"extra":{"metavars":{"$FUN":{"start":{"line":562,"col":5,"offset":11511},"end":{"line":562,"col":13,"offset":11519},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5d60935f8e2889d5bfd848ad7568c6daf88ec8a3427e1b709a76a014118705275ed235ed3b0cb87dcea59ad760798e3b3300c642915a6d6872a85262f071e51_0","lines":"    snprintf ((char *) buf_static, sizeof (buf_static), \"%d\", count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":611,"col":6,"offset":12558},"end":{"line":613,"col":14,"offset":12653},"extra":{"metavars":{"$EXPR1":{"start":{"line":611,"col":12,"offset":12564},"end":{"line":611,"col":14,"offset":12566},"abstract_content":"ss","propagated_value":{"svalue_start":{"line":611,"col":17,"offset":12569},"svalue_end":{"line":611,"col":44,"offset":12596},"svalue_abstract_content":"FcLangSetGetLangs(langset)"}},"$EXPR2":{"start":{"line":611,"col":17,"offset":12569},"end":{"line":611,"col":44,"offset":12596},"abstract_content":"FcLangSetGetLangs(langset)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"67b813a2ebe64d42b501249cc0dfa7cb12c51120b099e6ff481fe7afc1d71189a4749f0915b139c4f5c9d319378333963bb39c021ff7112106adf7edcf129c40_0","lines":"\t    if (!(ss = FcLangSetGetLangs (langset)) ||\n\t\t!(lang_strs = FcStrListCreate (ss)))\n\t\tgoto bail0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":634,"col":6,"offset":12904},"end":{"line":639,"col":7,"offset":13049},"extra":{"metavars":{"$EXPR1":{"start":{"line":634,"col":11,"offset":12909},"end":{"line":634,"col":15,"offset":12913},"abstract_content":"lang","propagated_value":{"svalue_start":{"line":634,"col":18,"offset":12916},"svalue_end":{"line":634,"col":43,"offset":12941},"svalue_abstract_content":"FcStrListNext(lang_strs)"}},"$EXPR2":{"start":{"line":634,"col":18,"offset":12916},"end":{"line":634,"col":43,"offset":12941},"abstract_content":"FcStrListNext(lang_strs)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d659798429ee4a9fa281d18d9b6a0182474a7b3add9f9452977a6bd80eade49eeae0c09228ca6faa475eed7a3d6f9b07fa7d18532f24b91a54ab72e962004f08_0","lines":"\t    if ((lang = FcStrListNext (lang_strs)))\n\t    {\n\t\t/* XXX binding? */\n\t\tFcPatternAddString (subpat, os->objects[0], lang);\n\t\tdone = FcFalse;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":791,"col":10,"offset":15964},"end":{"line":791,"col":14,"offset":15968},"extra":{"metavars":{"$VAR":{"start":{"line":791,"col":10,"offset":15964},"end":{"line":791,"col":14,"offset":15968},"abstract_content":"*str"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8c8c1c3f73c9f7b70589b503df97f00070d4f51d265ac1f5b77cf4166cb6976b74ee2ca9b696b30e6fc806b854b946ad44b9a8b10bb4f6c4bc8c7cb67354349c_0","lines":"\tswitch (*str)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":939,"col":5,"offset":18608},"end":{"line":939,"col":28,"offset":18631},"extra":{"metavars":{"$NARROW":{"start":{"line":939,"col":5,"offset":18608},"end":{"line":939,"col":11,"offset":18614},"abstract_content":"repeat"},"$LARGE":{"start":{"line":939,"col":17,"offset":18620},"end":{"line":939,"col":23,"offset":18626},"abstract_content":"to_len","propagated_value":{"svalue_start":{"line":938,"col":14,"offset":18591},"svalue_end":{"line":938,"col":25,"offset":18602},"svalue_abstract_content":"strlen(to)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c6b85b3adc2297998dedcc48f8f1d7d9e72d0f8daba5a29ab0261c9db642d24b341595614ff3389e8c26723f4a58e7bf278a8c5e3c531970672ec0db382df776_0","lines":"    repeat = to[to_len - 1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":1084,"col":2,"offset":21477},"end":{"line":1086,"col":8,"offset":21552},"extra":{"metavars":{"$FUN":{"start":{"line":1084,"col":2,"offset":21477},"end":{"line":1084,"col":9,"offset":21484},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ebd34aea8d6a31cb5db77cd7ea031de46dd21ae750add388ad0fdcfda7e21560b77a7cea19874436399f14623431edb3ef3a6d6468257aef2a34517f41974742_0","lines":"\tmemmove (buf->buf + buf->len - len,\n\t\t buf->buf + buf->len - width,\n\t\t len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":1084,"col":2,"offset":21477},"end":{"line":1086,"col":8,"offset":21552},"extra":{"metavars":{"$DST":{"start":{"line":1084,"col":11,"offset":21486},"end":{"line":1084,"col":36,"offset":21511},"abstract_content":"buf->->buf+buf->->len-len"},"$SRC":{"start":{"line":1085,"col":4,"offset":21516},"end":{"line":1085,"col":31,"offset":21543},"abstract_content":"buf->->buf+buf->->len-width"},"$LEN":{"start":{"line":1086,"col":4,"offset":21548},"end":{"line":1086,"col":7,"offset":21551},"abstract_content":"len","propagated_value":{"svalue_start":{"line":1083,"col":8,"offset":21467},"svalue_end":{"line":1083,"col":15,"offset":21474},"svalue_abstract_content":"old_len"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c57d6b89edbf51a71e4259604cd562f0b3dc870ed10bf538debd2557cc22095396e131e9d88fcf8eef731f76da31fa807e82691eb8e78e9ea9f4bd0fbb478886_0","lines":"\tmemmove (buf->buf + buf->len - len,\n\t\t buf->buf + buf->len - width,\n\t\t len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":1087,"col":2,"offset":21555},"end":{"line":1089,"col":15,"offset":21613},"extra":{"metavars":{"$DST":{"start":{"line":1087,"col":10,"offset":21563},"end":{"line":1087,"col":37,"offset":21590},"abstract_content":"buf->->buf+buf->->len-width"},"$CHAR":{"start":{"line":1088,"col":3,"offset":21594},"end":{"line":1088,"col":6,"offset":21597},"abstract_content":"' '"},"$LEN":{"start":{"line":1089,"col":3,"offset":21601},"end":{"line":1089,"col":14,"offset":21612},"abstract_content":"width-len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"84df04d5c92a23f34b49e5c9ad86cf6d03f9d477f9a36df7aedc216ae0f6319d51cb40715573020ca11924c3b82809dcd8d2aacc8cedb40fb0a8cbdf48176150_0","lines":"\tmemset (buf->buf + buf->len - width,\n\t\t' ',\n\t\twidth - len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":1144,"col":10,"offset":22992},"end":{"line":1144,"col":20,"offset":23002},"extra":{"metavars":{"$VAR":{"start":{"line":1144,"col":10,"offset":22992},"end":{"line":1144,"col":20,"offset":23002},"abstract_content":"*c->->format"},"$VAL1":{"start":{"line":1146,"col":7,"offset":23013},"end":{"line":1146,"col":11,"offset":23017},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":1151,"col":7,"offset":23151},"end":{"line":1151,"col":10,"offset":23154},"abstract_content":"'%'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f6e987997a4c93c1b7ec92c53530fadfd2e139f16047dac502cffb8d8700b04b01f1e5f5d857e3f53a66b62780e6d625b69c87e9f591fa426c3b3f51a6d192b5_1","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":1144,"col":10,"offset":22992},"end":{"line":1144,"col":20,"offset":23002},"extra":{"metavars":{"$VAR":{"start":{"line":1144,"col":10,"offset":22992},"end":{"line":1144,"col":20,"offset":23002},"abstract_content":"*c->->format"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8557c856d61b1cd3f60797bfed10536bbf52c2268636ca119e4df04e3abff108cc5d2f63d9a67cb30a0d75be2b149b5b5a80d38069e7ebd987d2551dee2ea60a_2","lines":"\tswitch (*c->format)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":698,"col":2,"offset":35902},"end":{"line":699,"col":14,"offset":35946},"extra":{"metavars":{"$EXPR1":{"start":{"line":698,"col":6,"offset":35906},"end":{"line":698,"col":15,"offset":35915},"abstract_content":"*string++"},"$EXPR2":{"start":{"line":698,"col":18,"offset":35918},"end":{"line":698,"col":22,"offset":35922},"abstract_content":"0x80"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d612e5d948c63f2ad1a4680e3bfc95a3161b2e29f9fd558eb544d5faf326472055ebf8d87248cf7229558562c6df3303fd656c3586ce01f9687491b765c5ebf1_0","lines":"\tif (*string++ & 0x80) nhigh++;\n\telse nlow++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":780,"col":9,"offset":37852},"end":{"line":780,"col":43,"offset":37886},"extra":{"metavars":{"$FUN":{"start":{"line":780,"col":9,"offset":37852},"end":{"line":780,"col":15,"offset":37858},"abstract_content":"malloc"},"$X":{"start":{"line":780,"col":17,"offset":37860},"end":{"line":780,"col":38,"offset":37881},"abstract_content":"len*FC_UTF8_MAX_LEN"},"$Y":{"start":{"line":780,"col":41,"offset":37884},"end":{"line":780,"col":42,"offset":37885},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6fb232e7c89e55e62d1bb5fdfab8f102a26d472834564dc30510e1284721e2463922fb868f242833a5d830c95a46ac8e1339e86fe8bbe5cdb11dc4c158ca351e_0","lines":"\tutf8 = malloc (len * FC_UTF8_MAX_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":780,"col":9,"offset":37852},"end":{"line":780,"col":43,"offset":37886},"extra":{"metavars":{"$FUN":{"start":{"line":780,"col":9,"offset":37852},"end":{"line":780,"col":15,"offset":37858},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_0","lines":"\tutf8 = malloc (len * FC_UTF8_MAX_LEN + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":807,"col":9,"offset":38394},"end":{"line":807,"col":33,"offset":38418},"extra":{"metavars":{"$FUN":{"start":{"line":807,"col":9,"offset":38394},"end":{"line":807,"col":15,"offset":38400},"abstract_content":"malloc"},"$X":{"start":{"line":807,"col":17,"offset":38402},"end":{"line":807,"col":28,"offset":38413},"abstract_content":"src_len*2"},"$Y":{"start":{"line":807,"col":31,"offset":38416},"end":{"line":807,"col":32,"offset":38417},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d5ae34312865e2222d3087153f4b0d73576fc0de756290bb52de3dcb6f4dccba7b7d4bb81f336ba51c0ba5644c8a50e00c677da9b70aa37a6ce78c4f49e36e11_0","lines":"\tutf8 = malloc (src_len * 2 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":807,"col":9,"offset":38394},"end":{"line":807,"col":33,"offset":38418},"extra":{"metavars":{"$FUN":{"start":{"line":807,"col":9,"offset":38394},"end":{"line":807,"col":15,"offset":38400},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_1","lines":"\tutf8 = malloc (src_len * 2 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":833,"col":9,"offset":38848},"end":{"line":833,"col":33,"offset":38872},"extra":{"metavars":{"$FUN":{"start":{"line":833,"col":9,"offset":38848},"end":{"line":833,"col":15,"offset":38854},"abstract_content":"malloc"},"$X":{"start":{"line":833,"col":17,"offset":38856},"end":{"line":833,"col":28,"offset":38867},"abstract_content":"src_len*3"},"$Y":{"start":{"line":833,"col":31,"offset":38870},"end":{"line":833,"col":32,"offset":38871},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0bc091939a967d56c539c80e33def2e3caa0928e8a878781e9212b4f350ca3aaed316e09230fe2925057bc653d558ab0c14f8958883b230ce6a39e161ca7dc2e_0","lines":"\tutf8 = malloc (src_len * 3 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":833,"col":9,"offset":38848},"end":{"line":833,"col":33,"offset":38872},"extra":{"metavars":{"$FUN":{"start":{"line":833,"col":9,"offset":38848},"end":{"line":833,"col":15,"offset":38854},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_2","lines":"\tutf8 = malloc (src_len * 3 + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":852,"col":10,"offset":39165},"end":{"line":852,"col":40,"offset":39195},"extra":{"metavars":{"$FUN":{"start":{"line":852,"col":10,"offset":39165},"end":{"line":852,"col":20,"offset":39175},"abstract_content":"iconv_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bcc5c7845ae8d4d6075eb4cb6c0298448a5764a4f1eac1df0a62829ad8d99ac9bd2ab4df90225c3a64293c8b9f47a553a47a0750e372463ed968024280decb96_0","lines":"    cd = iconv_open (\"UTF-8\", fromcode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":859,"col":9,"offset":39389},"end":{"line":859,"col":36,"offset":39416},"extra":{"metavars":{"$FUN":{"start":{"line":859,"col":9,"offset":39389},"end":{"line":859,"col":15,"offset":39395},"abstract_content":"malloc"},"$X":{"start":{"line":859,"col":17,"offset":39397},"end":{"line":859,"col":31,"offset":39411},"abstract_content":"out_bytes_left"},"$Y":{"start":{"line":859,"col":34,"offset":39414},"end":{"line":859,"col":35,"offset":39415},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"50ea79c89ad39e9d7c918644dc69e677feffbddbad9428a28aa308cddd82a3032c2c958dc2bbdec01e081721910db0046858a860998a8ec4f3fdf7ddf6726bed_0","lines":"\tutf8 = malloc (out_bytes_left + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":859,"col":9,"offset":39389},"end":{"line":859,"col":36,"offset":39416},"extra":{"metavars":{"$FUN":{"start":{"line":859,"col":9,"offset":39389},"end":{"line":859,"col":15,"offset":39395},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_3","lines":"\tutf8 = malloc (out_bytes_left + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":890,"col":2,"offset":39904},"end":{"line":890,"col":14,"offset":39916},"extra":{"metavars":{"$PTR":{"start":{"line":890,"col":8,"offset":39910},"end":{"line":890,"col":12,"offset":39914},"abstract_content":"utf8"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046a0085af67bad890bfd0cf3ae2da844843298ca85e9a465becf426876040f8002055abb1dbea984bee86499de9cc7d0682b80792afd71f3ab6c42f69e1084e_0","lines":"\tfree (utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1171,"col":18,"offset":48030},"end":{"line":1171,"col":39,"offset":48051},"extra":{"metavars":{"$NARROW":{"start":{"line":1171,"col":18,"offset":48030},"end":{"line":1171,"col":21,"offset":48033},"abstract_content":"max"},"$LARGE":{"start":{"line":1171,"col":30,"offset":48042},"end":{"line":1171,"col":35,"offset":48047},"abstract_content":"count"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"11cc97b35c7bd28bf9e1d5e22522cf915c593980c4eab4b5d0cb0919ab2eaa0158319cfeb2415a1edf2bb1d8711d28585af593da8f7970a4e2b52af8c3eb8537_0","lines":"    int min = 0, max = (int) count - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1171,"col":18,"offset":48030},"end":{"line":1171,"col":39,"offset":48051},"extra":{"metavars":{"$SIGNED":{"start":{"line":1171,"col":18,"offset":48030},"end":{"line":1171,"col":21,"offset":48033},"abstract_content":"max"},"$UNSIGNED":{"start":{"line":1171,"col":30,"offset":48042},"end":{"line":1171,"col":35,"offset":48047},"abstract_content":"count"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f59e901327b9d749b15bb33f0e962c77c84e440cb33b0e4ade8c024fb2720cc0a3e7d0f81ad9e9021995c980528ef7d0a31d001ed3ad47fe0b48e1cbe0b2c299_0","lines":"    int min = 0, max = (int) count - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1291,"col":9,"offset":51031},"end":{"line":1291,"col":14,"offset":51036},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1291,"col":9,"offset":51031},"end":{"line":1291,"col":10,"offset":51032},"abstract_content":"i"},"$SIGNED":{"start":{"line":1291,"col":13,"offset":51035},"end":{"line":1291,"col":14,"offset":51036},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"803e3c0c85f8ad5e5ee5793f39bd3867607be99eb3b91cf0e72c805f2d455b32f13c1be922331570d6c56e8889a84a60ced627a61f1e271faf0421596be12144_0","lines":"\t  for (i = 0; i < master->num_axis; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1301,"col":16,"offset":51432},"end":{"line":1301,"col":35,"offset":51451},"extra":{"metavars":{"$VAR":{"start":{"line":1301,"col":16,"offset":51432},"end":{"line":1301,"col":35,"offset":51451},"abstract_content":"master->->axis[i].tag"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1cd12ffad381ffbb0b00abec536e4c88f3b5a8425b86cf2b7841f18bae715fc4024b02f0db4b60b6968ba0c4bf879969f1caf2346883a358f0eacd076d6ea282_0","lines":"\t      switch (master->axis[i].tag)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1350,"col":9,"offset":52637},"end":{"line":1350,"col":14,"offset":52642},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1350,"col":9,"offset":52637},"end":{"line":1350,"col":10,"offset":52638},"abstract_content":"i"},"$SIGNED":{"start":{"line":1350,"col":13,"offset":52641},"end":{"line":1350,"col":14,"offset":52642},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"803e3c0c85f8ad5e5ee5793f39bd3867607be99eb3b91cf0e72c805f2d455b32f13c1be922331570d6c56e8889a84a60ced627a61f1e271faf0421596be12144_1","lines":"\t  for (i = 0; i < master->num_axis; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1356,"col":16,"offset":52988},"end":{"line":1356,"col":35,"offset":53007},"extra":{"metavars":{"$VAR":{"start":{"line":1356,"col":16,"offset":52988},"end":{"line":1356,"col":35,"offset":53007},"abstract_content":"master->->axis[i].tag"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1cd12ffad381ffbb0b00abec536e4c88f3b5a8425b86cf2b7841f18bae715fc4024b02f0db4b60b6968ba0c4bf879969f1caf2346883a358f0eacd076d6ea282_1","lines":"\t      switch (master->axis[i].tag)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1396,"col":6,"offset":53924},"end":{"line":1396,"col":65,"offset":53983},"extra":{"metavars":{"$RET":{"start":{"line":1396,"col":6,"offset":53924},"end":{"line":1396,"col":14,"offset":53932},"abstract_content":"foundry_"},"$CAST":{"start":{"line":1396,"col":18,"offset":53936},"end":{"line":1396,"col":27,"offset":53945},"abstract_content":"FcChar8*"},"$FUN":{"start":{"line":1396,"col":29,"offset":53947},"end":{"line":1396,"col":35,"offset":53953},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0e2462abb220c3dadbfe9969cf2e42ed09060a0418e547810e040fd5c098633026ded565e55e5335a34f03ad19f5c4cd22edd8af3b00b171a38f82b82ea6e306_0","lines":"\t    foundry_ = (FcChar8 *) malloc (sizeof (os2->achVendID) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1396,"col":29,"offset":53947},"end":{"line":1396,"col":65,"offset":53983},"extra":{"metavars":{"$FUN":{"start":{"line":1396,"col":29,"offset":53947},"end":{"line":1396,"col":35,"offset":53953},"abstract_content":"malloc"},"$X":{"start":{"line":1396,"col":37,"offset":53955},"end":{"line":1396,"col":59,"offset":53977},"abstract_content":"sizeof os2->->achVendID"},"$Y":{"start":{"line":1396,"col":63,"offset":53981},"end":{"line":1396,"col":64,"offset":53982},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f61e358f9db3dab80564c249dfe5f6ea6d3306e5f74bc771a93f134c6cdf21b209e27bac9c3a60bdf306984ccf143fa38983287bd66a5e8bf9bdf14e5daf2809_0","lines":"\t    foundry_ = (FcChar8 *) malloc (sizeof (os2->achVendID) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1396,"col":29,"offset":53947},"end":{"line":1396,"col":65,"offset":53983},"extra":{"metavars":{"$FUN":{"start":{"line":1396,"col":29,"offset":53947},"end":{"line":1396,"col":35,"offset":53953},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_4","lines":"\t    foundry_ = (FcChar8 *) malloc (sizeof (os2->achVendID) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1397,"col":6,"offset":53990},"end":{"line":1397,"col":72,"offset":54056},"extra":{"metavars":{"$FUN":{"start":{"line":1397,"col":6,"offset":53990},"end":{"line":1397,"col":12,"offset":53996},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6736b6adf250db2432f70d76c786a925ddd9c9f8687303f374c6d194e5bf474df0b3afe61206f52089f06a922d1eb0fb42ffa420b5a9444048b0edde480f27c_0","lines":"\t    memcpy ((void *)foundry_, os2->achVendID, sizeof (os2->achVendID));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1403,"col":5,"offset":54141},"end":{"line":1404,"col":16,"offset":54187},"extra":{"metavars":{"$EXPR1":{"start":{"line":1403,"col":9,"offset":54145},"end":{"line":1403,"col":19,"offset":54155},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1403,"col":22,"offset":54158},"end":{"line":1403,"col":34,"offset":54170},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_0","lines":"    if (FcDebug () & FC_DBG_SCANV)\n\tprintf (\"\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1416,"col":17,"offset":54475},"end":{"line":1416,"col":61,"offset":54519},"extra":{"metavars":{"$FUN":{"start":{"line":1416,"col":17,"offset":54475},"end":{"line":1416,"col":23,"offset":54481},"abstract_content":"malloc"},"$X":{"start":{"line":1416,"col":25,"offset":54483},"end":{"line":1416,"col":35,"offset":54493},"abstract_content":"name_count","propagated_value":{"svalue_start":{"line":1410,"col":18,"offset":54342},"svalue_end":{"line":1410,"col":47,"offset":54371},"svalue_abstract_content":"FT_Get_Sfnt_Name_Count(face)"}},"$Y":{"start":{"line":1416,"col":38,"offset":54496},"end":{"line":1416,"col":59,"offset":54517},"abstract_content":"sizeof FcNameMapping"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f7414ab133362bd40c1c6404e82b894062ebdade38fca015d0780575bac38b24e6805da9bd1e17179501bc398ebffc27e6dc5f507be41bd8156155779c6e796_0","lines":"\tname_mapping = malloc (name_count * sizeof (FcNameMapping));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1416,"col":17,"offset":54475},"end":{"line":1416,"col":61,"offset":54519},"extra":{"metavars":{"$FUN":{"start":{"line":1416,"col":17,"offset":54475},"end":{"line":1416,"col":23,"offset":54481},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_5","lines":"\tname_mapping = malloc (name_count * sizeof (FcNameMapping));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1445,"col":10,"offset":55156},"end":{"line":1445,"col":15,"offset":55161},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1445,"col":10,"offset":55156},"end":{"line":1445,"col":11,"offset":55157},"abstract_content":"p"},"$SIGNED":{"start":{"line":1445,"col":14,"offset":55160},"end":{"line":1445,"col":15,"offset":55161},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a263740c8abc7fd545fefb54093dabd6824b7697ad2cd9f9be0be6318a43cc150e1c203f4de225ba802b47ba2f41e3eb3cba0120a17b11e39fed1eb4fe2d5e56_0","lines":"    for (p = 0; p < NUM_PLATFORM_ORDER; p++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1447,"col":6,"offset":55203},"end":{"line":1447,"col":34,"offset":55231},"extra":{"metavars":{"$NARROW":{"start":{"line":1447,"col":6,"offset":55203},"end":{"line":1447,"col":14,"offset":55211},"abstract_content":"platform"},"$LARGE":{"start":{"line":1447,"col":32,"offset":55229},"end":{"line":1447,"col":33,"offset":55230},"abstract_content":"p"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4ccf0872e00d32802ed5a81486875f7b7b845295d4df0877a3f322a2a28cdcd6c9a49e789f0b913bc6a27c04ab922e217995dc07dca50adfc7a049d74a6e6146_0","lines":"\tint platform = platform_order[p];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1447,"col":6,"offset":55203},"end":{"line":1447,"col":34,"offset":55231},"extra":{"metavars":{"$SIGNED":{"start":{"line":1447,"col":6,"offset":55203},"end":{"line":1447,"col":14,"offset":55211},"abstract_content":"platform"},"$UNSIGNED":{"start":{"line":1447,"col":32,"offset":55229},"end":{"line":1447,"col":33,"offset":55230},"abstract_content":"p"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5723a84fb260932ea2126fe82815d6333274eba4214f07fc582e5ef51d2b330ab2928bad5f695544e263ffba18d2c315744f713ef1c7d54940fba07b6af27a7f_0","lines":"\tint platform = platform_order[p];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1453,"col":7,"offset":55325},"end":{"line":1453,"col":12,"offset":55330},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1453,"col":7,"offset":55325},"end":{"line":1453,"col":8,"offset":55326},"abstract_content":"n"},"$SIGNED":{"start":{"line":1453,"col":11,"offset":55329},"end":{"line":1453,"col":12,"offset":55330},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4faab5acbd963e9328b38ecac79e76c1ee19fd92bc60441353f7279b54d3c7e2ac969e11f8b8c7bc9db2ea99e167ab8da08e8702a7fd5cae6e7329e3f5b98f28_0","lines":"\tfor (n = 0; n < NUM_NAMEID_ORDER; n++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1463,"col":6,"offset":55553},"end":{"line":1463,"col":41,"offset":55588},"extra":{"metavars":{"$NARROW":{"start":{"line":1463,"col":6,"offset":55553},"end":{"line":1463,"col":12,"offset":55559},"abstract_content":"nameid"},"$LARGE":{"start":{"line":1463,"col":39,"offset":55586},"end":{"line":1463,"col":40,"offset":55587},"abstract_content":"n"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"665f195ca9d7fd7cca19368ac8f1f6cc3231994b2c812377c637f845c51d51bee3a6e4328c43ba55a4f8f553e14861b9f3eae97ff6d23d212e6dd52de5fc2f2e_0","lines":"\t    nameid = lookupid = nameid_order[n];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1463,"col":6,"offset":55553},"end":{"line":1463,"col":41,"offset":55588},"extra":{"metavars":{"$SIGNED":{"start":{"line":1463,"col":6,"offset":55553},"end":{"line":1463,"col":12,"offset":55559},"abstract_content":"nameid"},"$UNSIGNED":{"start":{"line":1463,"col":39,"offset":55586},"end":{"line":1463,"col":40,"offset":55587},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"55b694b0d077d8c3e51d367f2bb547f05be52b94cf4c33f2014c5ebec4bd7da5feb27e1c900fe9abd47ba4101335246654bc9ca35f42a404c3e74f598d4ad5a7_0","lines":"\t    nameid = lookupid = nameid_order[n];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1463,"col":15,"offset":55562},"end":{"line":1463,"col":41,"offset":55588},"extra":{"metavars":{"$NARROW":{"start":{"line":1463,"col":15,"offset":55562},"end":{"line":1463,"col":23,"offset":55570},"abstract_content":"lookupid","propagated_value":{"svalue_start":{"line":1463,"col":26,"offset":55573},"svalue_end":{"line":1463,"col":41,"offset":55588},"svalue_abstract_content":"nameid_order[n]"}},"$LARGE":{"start":{"line":1463,"col":39,"offset":55586},"end":{"line":1463,"col":40,"offset":55587},"abstract_content":"n"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e687a9dc1f2ddbd4cf238b3c5e83dc4e5e6c484a249478385a89bd84d7dff926a4de0bfdd70c18adaf6a688cfa9acfcbd75d0b549389a1d2dd6b7ebb2fc57b33_0","lines":"\t    nameid = lookupid = nameid_order[n];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1463,"col":15,"offset":55562},"end":{"line":1463,"col":41,"offset":55588},"extra":{"metavars":{"$SIGNED":{"start":{"line":1463,"col":15,"offset":55562},"end":{"line":1463,"col":23,"offset":55570},"abstract_content":"lookupid","propagated_value":{"svalue_start":{"line":1463,"col":26,"offset":55573},"svalue_end":{"line":1463,"col":41,"offset":55588},"svalue_abstract_content":"nameid_order[n]"}},"$UNSIGNED":{"start":{"line":1463,"col":39,"offset":55586},"end":{"line":1463,"col":40,"offset":55587},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0fa5996e5f258ea71b571696906b2505c347b2d9785771a2f297cb1a6598dc073a7c93636a0ea7f82311f9752e39621c5c7201daedb9834254ff21d911698ec0_0","lines":"\t    nameid = lookupid = nameid_order[n];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1485,"col":11,"offset":56169},"end":{"line":1485,"col":17,"offset":56175},"extra":{"metavars":{"$VAR":{"start":{"line":1485,"col":11,"offset":56169},"end":{"line":1485,"col":17,"offset":56175},"abstract_content":"nameid"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c321061f593c2bfc30c09d466ee8f659e6ad856b54c7a65a4570cb9d5126bc364b9c8c7f159d77ebaaf1d4125ab666dfa4eea8bc07e0af1d8f0096fdddd6a7fa_0","lines":"\t\tswitch (nameid) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1492,"col":7,"offset":56325},"end":{"line":1495,"col":43,"offset":56490},"extra":{"metavars":{"$EXPR1":{"start":{"line":1492,"col":11,"offset":56329},"end":{"line":1492,"col":21,"offset":56339},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1492,"col":24,"offset":56342},"end":{"line":1492,"col":36,"offset":56354},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_1","lines":"\t\t    if (FcDebug () & FC_DBG_SCANV)\n\t\t\tprintf (\"found family (n %2d p %d e %d l 0x%04x)\",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1493,"col":4,"offset":56359},"end":{"line":1495,"col":42,"offset":56489},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":42,"offset":41},"abstract_content":"\"found family (n %2d p %d e %d l 0x%04x)\""},"$FMT":{"start":{"line":1493,"col":12,"offset":56367},"end":{"line":1493,"col":53,"offset":56408},"abstract_content":"\"found family (n %2d p %d e %d l 0x%04x)\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e3f62aa01f9f9cfb40dec9f815aeab165b2424b74a3702861310d7b894c161af12cfb4fe76b3274665eb02d49e71a297de5d11c6e5754ac2004a15c230c8b38e_0","lines":"\t\t\tprintf (\"found family (n %2d p %d e %d l 0x%04x)\",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1504,"col":7,"offset":56678},"end":{"line":1507,"col":43,"offset":56843},"extra":{"metavars":{"$EXPR1":{"start":{"line":1504,"col":11,"offset":56682},"end":{"line":1504,"col":21,"offset":56692},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1504,"col":24,"offset":56695},"end":{"line":1504,"col":36,"offset":56707},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_2","lines":"\t\t    if (FcDebug () & FC_DBG_SCANV)\n\t\t\tprintf (\"found full   (n %2d p %d e %d l 0x%04x)\",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1505,"col":4,"offset":56712},"end":{"line":1507,"col":42,"offset":56842},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":42,"offset":41},"abstract_content":"\"found full   (n %2d p %d e %d l 0x%04x)\""},"$FMT":{"start":{"line":1505,"col":12,"offset":56720},"end":{"line":1505,"col":53,"offset":56761},"abstract_content":"\"found full   (n %2d p %d e %d l 0x%04x)\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bee36e1733240043157f01810ae48a0b55759ba7d50f8c415228c857cc8474b743902e36cfd1e63e67ccd58d589738605b8c96bbd85e27ce24724070da81086d_0","lines":"\t\t\tprintf (\"found full   (n %2d p %d e %d l 0x%04x)\",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1519,"col":7,"offset":57113},"end":{"line":1522,"col":43,"offset":57279},"extra":{"metavars":{"$EXPR1":{"start":{"line":1519,"col":11,"offset":57117},"end":{"line":1519,"col":21,"offset":57127},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1519,"col":24,"offset":57130},"end":{"line":1519,"col":36,"offset":57142},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_3","lines":"\t\t    if (FcDebug () & FC_DBG_SCANV)\n\t\t\tprintf (\"found style  (n %2d p %d e %d l 0x%04x) \",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1520,"col":4,"offset":57147},"end":{"line":1522,"col":42,"offset":57278},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":43,"offset":42},"abstract_content":"\"found style  (n %2d p %d e %d l 0x%04x) \""},"$FMT":{"start":{"line":1520,"col":12,"offset":57155},"end":{"line":1520,"col":54,"offset":57197},"abstract_content":"\"found style  (n %2d p %d e %d l 0x%04x) \""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c31adcefb62f3f532e5bcf68c17b1494366d0c809e4128d1876c33fc9263bad41844fad3cff705054ddbd0b5618b206e07bb739275ef0d5d2431ebc2dbd4df79_0","lines":"\t\t\tprintf (\"found style  (n %2d p %d e %d l 0x%04x) \",\n\t\t\t\tsname.name_id, sname.platform_id,\n\t\t\t\tsname.encoding_id, sname.language_id);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1537,"col":4,"offset":57663},"end":{"line":1537,"col":16,"offset":57675},"extra":{"metavars":{"$PTR":{"start":{"line":1537,"col":10,"offset":57669},"end":{"line":1537,"col":14,"offset":57673},"abstract_content":"utf8"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046a0085af67bad890bfd0cf3ae2da844843298ca85e9a465becf426876040f8002055abb1dbea984bee86499de9cc7d0682b80792afd71f3ab6c42f69e1084e_1","lines":"\t\t\tfree (utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1548,"col":7,"offset":57836},"end":{"line":1549,"col":26,"offset":57892},"extra":{"metavars":{"$EXPR1":{"start":{"line":1548,"col":11,"offset":57840},"end":{"line":1548,"col":21,"offset":57850},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1548,"col":24,"offset":57853},"end":{"line":1548,"col":36,"offset":57865},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_4","lines":"\t\t    if (FcDebug () & FC_DBG_SCANV)\n\t\t\tprintf (\"%s\\n\", utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1559,"col":7,"offset":58063},"end":{"line":1559,"col":34,"offset":58090},"extra":{"metavars":{"$FUN":{"start":{"line":1559,"col":7,"offset":58063},"end":{"line":1559,"col":14,"offset":58070},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7b7984a24add63be0203920ad06c0e3abd99845ba7903891621b352e717eb1a66edcbf4cfad486a959f890d69af43b51286220975912449af5eb52747ff04f1c_0","lines":"\t\t    memmove (utf8, pp, len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1567,"col":4,"offset":58248},"end":{"line":1567,"col":16,"offset":58260},"extra":{"metavars":{"$PTR":{"start":{"line":1567,"col":10,"offset":58254},"end":{"line":1567,"col":14,"offset":58258},"abstract_content":"utf8"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046a0085af67bad890bfd0cf3ae2da844843298ca85e9a465becf426876040f8002055abb1dbea984bee86499de9cc7d0682b80792afd71f3ab6c42f69e1084e_2","lines":"\t\t\tfree (utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1574,"col":4,"offset":58370},"end":{"line":1574,"col":16,"offset":58382},"extra":{"metavars":{"$PTR":{"start":{"line":1574,"col":10,"offset":58376},"end":{"line":1574,"col":14,"offset":58380},"abstract_content":"utf8"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046a0085af67bad890bfd0cf3ae2da844843298ca85e9a465becf426876040f8002055abb1dbea984bee86499de9cc7d0682b80792afd71f3ab6c42f69e1084e_3","lines":"\t\t\tfree (utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1577,"col":7,"offset":58412},"end":{"line":1577,"col":19,"offset":58424},"extra":{"metavars":{"$PTR":{"start":{"line":1577,"col":13,"offset":58418},"end":{"line":1577,"col":17,"offset":58422},"abstract_content":"utf8"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046a0085af67bad890bfd0cf3ae2da844843298ca85e9a465becf426876040f8002055abb1dbea984bee86499de9cc7d0682b80792afd71f3ab6c42f69e1084e_4","lines":"\t\t    free (utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1600,"col":2,"offset":58957},"end":{"line":1600,"col":22,"offset":58977},"extra":{"metavars":{"$PTR":{"start":{"line":1600,"col":8,"offset":58963},"end":{"line":1600,"col":20,"offset":58975},"abstract_content":"name_mapping"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5ed37d79f7f962a628790a9629afbdc9def140e23d9ecc54f56f0d2f8a0bb0a740bd35ea03f1e7c8e3cdb88aba90e9a07d91958add36b120f7119030653e73ad_0","lines":"\tfree (name_mapping);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1605,"col":2,"offset":59110},"end":{"line":1606,"col":67,"offset":59207},"extra":{"metavars":{"$EXPR1":{"start":{"line":1605,"col":6,"offset":59114},"end":{"line":1605,"col":16,"offset":59124},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1605,"col":19,"offset":59127},"end":{"line":1605,"col":31,"offset":59139},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_5","lines":"\tif (FcDebug () & FC_DBG_SCANV)\n\t    printf (\"using FreeType family \\\"%s\\\"\\n\", face->family_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1617,"col":2,"offset":59540},"end":{"line":1618,"col":65,"offset":59635},"extra":{"metavars":{"$EXPR1":{"start":{"line":1617,"col":6,"offset":59544},"end":{"line":1617,"col":16,"offset":59554},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1617,"col":19,"offset":59557},"end":{"line":1617,"col":31,"offset":59569},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_6","lines":"\tif (FcDebug () & FC_DBG_SCANV)\n\t    printf (\"using FreeType style \\\"%s\\\"\\n\", face->style_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1641,"col":11,"offset":60157},"end":{"line":1641,"col":35,"offset":60181},"extra":{"metavars":{"$FUN":{"start":{"line":1641,"col":11,"offset":60157},"end":{"line":1641,"col":17,"offset":60163},"abstract_content":"malloc"},"$X":{"start":{"line":1641,"col":19,"offset":60165},"end":{"line":1641,"col":30,"offset":60176},"abstract_content":"end-start"},"$Y":{"start":{"line":1641,"col":33,"offset":60179},"end":{"line":1641,"col":34,"offset":60180},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cda71e0eb505e954eaa41c6abfbf930babdf8c34a0b0b189f0e002fc47abb33e042b390cd042072538b674508a6ad2e232312b1511c1d983329480c4f2d591ab_0","lines":"\tfamily = malloc (end - start + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1641,"col":11,"offset":60157},"end":{"line":1641,"col":35,"offset":60181},"extra":{"metavars":{"$FUN":{"start":{"line":1641,"col":11,"offset":60157},"end":{"line":1641,"col":17,"offset":60163},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_6","lines":"\tfamily = malloc (end - start + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1641,"col":19,"offset":60165},"end":{"line":1641,"col":30,"offset":60176},"extra":{"metavars":{"$TYPE":{"start":{"line":1629,"col":2,"offset":59867},"end":{"line":1629,"col":9,"offset":59874},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":1641,"col":19,"offset":60165},"end":{"line":1641,"col":22,"offset":60168},"abstract_content":"end"},"$PTR2":{"start":{"line":1641,"col":25,"offset":60171},"end":{"line":1641,"col":30,"offset":60176},"abstract_content":"start"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a7ca0f7f7969c45d392129ca948fd0635b4f33f57657962efab4fe9d71a4353ad5193038bedfd5501183e39df068ddfc24654d7526701f600800cb3d6b9beae_0","lines":"\tfamily = malloc (end - start + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1642,"col":2,"offset":60184},"end":{"line":1642,"col":56,"offset":60238},"extra":{"metavars":{"$FUN":{"start":{"line":1642,"col":2,"offset":60184},"end":{"line":1642,"col":9,"offset":60191},"abstract_content":"strncpy"},"$DST":{"start":{"line":1642,"col":11,"offset":60193},"end":{"line":1642,"col":26,"offset":60208},"abstract_content":"(char*family"},"$SRC":{"start":{"line":1642,"col":37,"offset":60219},"end":{"line":1642,"col":42,"offset":60224},"abstract_content":"start"}},"message":"The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/806","https://github.com/0xdea/advisories/blob/master/2020-07-solaris-whodo-w.txt","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"351e4ef235192c4dd1dc6ce3858c1a71929493d2d1a77d886a6e75f083cb1625d992aa9dd64ed071604a30956608c9109f474d4324f06104d665f22a8ddb4995_0","lines":"\tstrncpy ((char *) family, (char *) start, end - start);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1642,"col":2,"offset":60184},"end":{"line":1642,"col":56,"offset":60238},"extra":{"metavars":{"$FUN":{"start":{"line":1642,"col":2,"offset":60184},"end":{"line":1642,"col":9,"offset":60191},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"37ddae927eb2023bdadfe44e3fbf895d59d9b2eecc23617f1464f371dc730f596a2bb016643a6d6937a065345d2cb3ae4a75976a42da60a124552e6d13f9b4c2_0","lines":"\tstrncpy ((char *) family, (char *) start, end - start);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1642,"col":44,"offset":60226},"end":{"line":1642,"col":55,"offset":60237},"extra":{"metavars":{"$TYPE":{"start":{"line":1629,"col":2,"offset":59867},"end":{"line":1629,"col":9,"offset":59874},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":1642,"col":44,"offset":60226},"end":{"line":1642,"col":47,"offset":60229},"abstract_content":"end"},"$PTR2":{"start":{"line":1642,"col":50,"offset":60232},"end":{"line":1642,"col":55,"offset":60237},"abstract_content":"start"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a7ca0f7f7969c45d392129ca948fd0635b4f33f57657962efab4fe9d71a4353ad5193038bedfd5501183e39df068ddfc24654d7526701f600800cb3d6b9beae_1","lines":"\tstrncpy ((char *) family, (char *) start, end - start);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1643,"col":9,"offset":60248},"end":{"line":1643,"col":20,"offset":60259},"extra":{"metavars":{"$TYPE":{"start":{"line":1629,"col":2,"offset":59867},"end":{"line":1629,"col":9,"offset":59874},"abstract_content":"FcChar8"},"$PTR1":{"start":{"line":1643,"col":9,"offset":60248},"end":{"line":1643,"col":12,"offset":60251},"abstract_content":"end"},"$PTR2":{"start":{"line":1643,"col":15,"offset":60254},"end":{"line":1643,"col":20,"offset":60259},"abstract_content":"start"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a7ca0f7f7969c45d392129ca948fd0635b4f33f57657962efab4fe9d71a4353ad5193038bedfd5501183e39df068ddfc24654d7526701f600800cb3d6b9beae_2","lines":"\tfamily[end - start] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1644,"col":2,"offset":60270},"end":{"line":1645,"col":56,"offset":60356},"extra":{"metavars":{"$EXPR1":{"start":{"line":1644,"col":6,"offset":60274},"end":{"line":1644,"col":16,"offset":60284},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1644,"col":19,"offset":60287},"end":{"line":1644,"col":31,"offset":60299},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_7","lines":"\tif (FcDebug () & FC_DBG_SCANV)\n\t    printf (\"using filename for family %s\\n\", family);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1687,"col":11,"offset":61468},"end":{"line":1687,"col":16,"offset":61473},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1687,"col":11,"offset":61468},"end":{"line":1687,"col":12,"offset":61469},"abstract_content":"i"},"$SIGNED":{"start":{"line":1687,"col":15,"offset":61472},"end":{"line":1687,"col":16,"offset":61473},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"803e3c0c85f8ad5e5ee5793f39bd3867607be99eb3b91cf0e72c805f2d455b32f13c1be922331570d6c56e8889a84a60ced627a61f1e271faf0421596be12144_2","lines":"\t    for (i = 0; i < len && i < 255; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1701,"col":6,"offset":61805},"end":{"line":1701,"col":32,"offset":61831},"extra":{"metavars":{"$FUN":{"start":{"line":1701,"col":6,"offset":61805},"end":{"line":1701,"col":13,"offset":61812},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"37ddae927eb2023bdadfe44e3fbf895d59d9b2eecc23617f1464f371dc730f596a2bb016643a6d6937a065345d2cb3ae4a75976a42da60a124552e6d13f9b4c2_1","lines":"\t    strncpy (psname, tmp, 255);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1701,"col":6,"offset":61805},"end":{"line":1701,"col":32,"offset":61831},"extra":{"metavars":{"$DST":{"start":{"line":1701,"col":15,"offset":61814},"end":{"line":1701,"col":21,"offset":61820},"abstract_content":"psname"},"$SRC":{"start":{"line":1701,"col":23,"offset":61822},"end":{"line":1701,"col":26,"offset":61825},"abstract_content":"tmp","propagated_value":{"svalue_start":{"line":1660,"col":8,"offset":60612},"svalue_end":{"line":1660,"col":37,"offset":60641},"svalue_abstract_content":"FT_Get_Postscript_Name(face)"}},"$LEN":{"start":{"line":1701,"col":28,"offset":61827},"end":{"line":1701,"col":31,"offset":61830},"abstract_content":"255"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"420566f23f799e4376db9d762a0e84f7ecd366d1a165edbb67bb56963a8bcb7a1e7ddf89af09724e11a9250536379420c34a10f38c504a07b9493f5ac53e4c7e_0","lines":"\t    strncpy (psname, tmp, 255);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1701,"col":6,"offset":61805},"end":{"line":1701,"col":32,"offset":61831},"extra":{"metavars":{"$TYPE":{"start":{"line":1658,"col":2,"offset":60561},"end":{"line":1658,"col":6,"offset":60565},"abstract_content":"char"},"$LEN":{"start":{"line":1658,"col":18,"offset":60577},"end":{"line":1658,"col":21,"offset":60580},"abstract_content":"256"},"$FUN":{"start":{"line":1701,"col":6,"offset":61805},"end":{"line":1701,"col":13,"offset":61812},"abstract_content":"strncpy"},"$BUF":{"start":{"line":1701,"col":15,"offset":61814},"end":{"line":1701,"col":21,"offset":61820},"abstract_content":"psname"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"3b12351c5e419d745b199eb7dadf69ef85e834b7a2ace664a294dd95a0344da6f9e0052703e29ce7511fe4bd29fa7f60452549b0e08e9df2a9f05e4c99ef76d5_0","lines":"\t    strncpy (psname, tmp, 255);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1743,"col":7,"offset":62839},"end":{"line":1743,"col":12,"offset":62844},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1743,"col":7,"offset":62839},"end":{"line":1743,"col":8,"offset":62840},"abstract_content":"i"},"$SIGNED":{"start":{"line":1743,"col":11,"offset":62843},"end":{"line":1743,"col":12,"offset":62844},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"803e3c0c85f8ad5e5ee5793f39bd3867607be99eb3b91cf0e72c805f2d455b32f13c1be922331570d6c56e8889a84a60ced627a61f1e271faf0421596be12144_3","lines":"\tfor (i = 0; i < NUM_CODE_PAGE_RANGE; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1750,"col":3,"offset":62993},"end":{"line":1750,"col":31,"offset":63021},"extra":{"metavars":{"$NARROW":{"start":{"line":1750,"col":3,"offset":62993},"end":{"line":1750,"col":6,"offset":62996},"abstract_content":"bit"},"$LARGE":{"start":{"line":1750,"col":25,"offset":63015},"end":{"line":1750,"col":26,"offset":63016},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2d3b548e0f378bd7e2c5a8c5a08af601a7aa995c1a26b3e14aca85b0e6831a05e327c4ff1377ee52c53d5cbb815145e4926aedc65b6d4f52b5483c153a469c94_0","lines":"\t\tbit = FcCodePageRange[i].bit;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1750,"col":3,"offset":62993},"end":{"line":1750,"col":31,"offset":63021},"extra":{"metavars":{"$SIGNED":{"start":{"line":1750,"col":3,"offset":62993},"end":{"line":1750,"col":6,"offset":62996},"abstract_content":"bit"},"$UNSIGNED":{"start":{"line":1750,"col":25,"offset":63015},"end":{"line":1750,"col":26,"offset":63016},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4c999ce6cb656b633b2b2be91740442284ed6d8613efd6ff60c5ff361dc9f182959cd87c98a6b51fe8fbbb0147911de194f5cd9b56d6b60a04e44a3dfdb08465_0","lines":"\t\tbit = FcCodePageRange[i].bit;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1755,"col":3,"offset":63081},"end":{"line":1755,"col":36,"offset":63114},"extra":{"metavars":{"$NARROW":{"start":{"line":1755,"col":3,"offset":63081},"end":{"line":1755,"col":6,"offset":63084},"abstract_content":"bit"},"$LARGE":{"start":{"line":1755,"col":25,"offset":63103},"end":{"line":1755,"col":26,"offset":63104},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2d3b548e0f378bd7e2c5a8c5a08af601a7aa995c1a26b3e14aca85b0e6831a05e327c4ff1377ee52c53d5cbb815145e4926aedc65b6d4f52b5483c153a469c94_1","lines":"\t\tbit = FcCodePageRange[i].bit - 32;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1755,"col":3,"offset":63081},"end":{"line":1755,"col":36,"offset":63114},"extra":{"metavars":{"$SIGNED":{"start":{"line":1755,"col":3,"offset":63081},"end":{"line":1755,"col":6,"offset":63084},"abstract_content":"bit"},"$UNSIGNED":{"start":{"line":1755,"col":25,"offset":63103},"end":{"line":1755,"col":26,"offset":63104},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4c999ce6cb656b633b2b2be91740442284ed6d8613efd6ff60c5ff361dc9f182959cd87c98a6b51fe8fbbb0147911de194f5cd9b56d6b60a04e44a3dfdb08465_1","lines":"\t\tbit = FcCodePageRange[i].bit - 32;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1757,"col":6,"offset":63128},"end":{"line":1770,"col":7,"offset":63429},"extra":{"metavars":{"$EXPR1":{"start":{"line":1757,"col":10,"offset":63132},"end":{"line":1757,"col":14,"offset":63136},"abstract_content":"bits"},"$EXPR2":{"start":{"line":1757,"col":18,"offset":63140},"end":{"line":1757,"col":27,"offset":63149},"abstract_content":"1U<<bit"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d6b324ab4328d56ad8a1d0eabfb6e7d2feee6fc163a4585daefa8d117fdc81201f5adaf6cb7bb6137eca02a7bd66bc6127b17c18538399cca03ed7d14191d929_0","lines":"\t    if (bits & (1U << bit))\n\t    {\n\t\t/*\n\t\t * If the font advertises support for multiple\n\t\t * \"exclusive\" languages, then include support\n\t\t * for any language found to have coverage\n\t\t */\n\t\tif (exclusiveLang)\n\t\t{\n\t\t    exclusiveLang = 0;\n\t\t    break;\n\t\t}\n\t\texclusiveLang = FcCodePageRange[i].lang;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1778,"col":2,"offset":63577},"end":{"line":1780,"col":48,"offset":63744},"extra":{"metavars":{"$EXPR1":{"start":{"line":1778,"col":7,"offset":63582},"end":{"line":1778,"col":16,"offset":63591},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1778,"col":19,"offset":63594},"end":{"line":1778,"col":31,"offset":63606},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_8","lines":"\tif ((FcDebug() & FC_DBG_SCANV) && weight != -1)\n\t    printf (\"\\tos2 weight class %d multiplier %g maps to weight %g\\n\",\n\t\t    os2->usWeightClass, weight_mult, weight);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1782,"col":10,"offset":63755},"end":{"line":1782,"col":27,"offset":63772},"extra":{"metavars":{"$VAR":{"start":{"line":1782,"col":10,"offset":63755},"end":{"line":1782,"col":27,"offset":63772},"abstract_content":"os2->->usWidthClass"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f7e4395dd2b25dc8c9c927843f96cb75e1d112d9b51576df35e9855b6a6ae8385e79b642739a6da73584d520c4592aac21f818ef8f5ccece818d53f8beb45f00_0","lines":"\tswitch (os2->usWidthClass) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1794,"col":2,"offset":64219},"end":{"line":1796,"col":45,"offset":64380},"extra":{"metavars":{"$EXPR1":{"start":{"line":1794,"col":7,"offset":64224},"end":{"line":1794,"col":16,"offset":64233},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1794,"col":19,"offset":64236},"end":{"line":1794,"col":31,"offset":64248},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_9","lines":"\tif ((FcDebug() & FC_DBG_SCANV) && width != -1)\n\t    printf (\"\\tos2 width class %d multiplier %g maps to width %g\\n\",\n\t\t    os2->usWidthClass, width_mult, width);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1798,"col":5,"offset":64391},"end":{"line":1806,"col":6,"offset":64572},"extra":{"metavars":{"$EXPR1":{"start":{"line":1798,"col":17,"offset":64403},"end":{"line":1798,"col":25,"offset":64411},"abstract_content":"complex_"},"$EXPR2":{"start":{"line":1798,"col":28,"offset":64414},"end":{"line":1798,"col":52,"offset":64438},"abstract_content":"FcFontCapabilities(face)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7fe1b6cce5aaac8201dd6122b961f4ed05ed922f736ae41dc3d30817674b92fd0745a0d09d13a57b21b0342d7544c777b36a18952f60346cc29f7375111d66de_0","lines":"    if (os2 && (complex_ = FcFontCapabilities(face)))\n    {\n\tif (!FcPatternAddString (pat, FC_CAPABILITY, complex_))\n\t{\n\t    free (complex_);\n\t    goto bail1;\n\t}\n\tfree (complex_);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1802,"col":6,"offset":64512},"end":{"line":1802,"col":22,"offset":64528},"extra":{"metavars":{"$PTR":{"start":{"line":1802,"col":12,"offset":64518},"end":{"line":1802,"col":20,"offset":64526},"abstract_content":"complex_"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a0684ed3fb1fa00b7b015cd3a7f830260f79520b003ffa62b830bc1e0ee46bc487286fd20c50dece08c1cf8d8bbc7889111af5948943f21e5ef927d5c4d4d89_0","lines":"\t    free (complex_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1805,"col":2,"offset":64550},"end":{"line":1805,"col":18,"offset":64566},"extra":{"metavars":{"$PTR":{"start":{"line":1805,"col":8,"offset":64556},"end":{"line":1805,"col":16,"offset":64564},"abstract_content":"complex_"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a0684ed3fb1fa00b7b015cd3a7f830260f79520b003ffa62b830bc1e0ee46bc487286fd20c50dece08c1cf8d8bbc7889111af5948943f21e5ef927d5c4d4d89_1","lines":"\tfree (complex_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1845,"col":10,"offset":65507},"end":{"line":1847,"col":31,"offset":65611},"extra":{"metavars":{"$EXPR1":{"start":{"line":1845,"col":14,"offset":65511},"end":{"line":1845,"col":23,"offset":65520},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1845,"col":26,"offset":65523},"end":{"line":1845,"col":38,"offset":65535},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_10","lines":"    \t    if (FcDebug() & FC_DBG_SCANV)\n\t\tprintf (\"\\tType1 weight %s maps to %g\\n\",\n\t\t\tpsfontinfo.weight, weight);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1892,"col":15,"offset":66709},"end":{"line":1892,"col":30,"offset":66724},"extra":{"metavars":{"$VAR":{"start":{"line":1892,"col":15,"offset":66709},"end":{"line":1892,"col":30,"offset":66724},"abstract_content":"value+5/10"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aace944fc2aa8f7887fd5646d919d18d9651d3a99ae8e7e18bbce8ba0f48424c02f839df30ec055dc13d11c15c98e16def0da47eb21a63730adbb5b6a2df2290_0","lines":"\t    switch ((value + 5) / 10) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1909,"col":6,"offset":67398},"end":{"line":1910,"col":61,"offset":67489},"extra":{"metavars":{"$EXPR1":{"start":{"line":1909,"col":10,"offset":67402},"end":{"line":1909,"col":20,"offset":67412},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1909,"col":23,"offset":67415},"end":{"line":1909,"col":35,"offset":67427},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_11","lines":"\t    if (FcDebug () & FC_DBG_SCANV)\n\t\tprintf (\"\\tsetwidth %s maps to %g\\n\", prop.u.atom, width);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1923,"col":6,"offset":67748},"end":{"line":1924,"col":60,"offset":67837},"extra":{"metavars":{"$EXPR1":{"start":{"line":1923,"col":10,"offset":67752},"end":{"line":1923,"col":19,"offset":67761},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1923,"col":22,"offset":67764},"end":{"line":1923,"col":34,"offset":67776},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_12","lines":"\t    if (FcDebug() & FC_DBG_SCANV)\n\t\tprintf (\"\\tStyle %s maps to weight %g\\n\", style, weight);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1929,"col":6,"offset":67905},"end":{"line":1930,"col":58,"offset":67992},"extra":{"metavars":{"$EXPR1":{"start":{"line":1929,"col":10,"offset":67909},"end":{"line":1929,"col":19,"offset":67918},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1929,"col":22,"offset":67921},"end":{"line":1929,"col":34,"offset":67933},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_13","lines":"\t    if (FcDebug() & FC_DBG_SCANV)\n\t\tprintf (\"\\tStyle %s maps to width %g\\n\", style, width);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1935,"col":6,"offset":68060},"end":{"line":1936,"col":58,"offset":68147},"extra":{"metavars":{"$EXPR1":{"start":{"line":1935,"col":10,"offset":68064},"end":{"line":1935,"col":19,"offset":68073},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1935,"col":22,"offset":68076},"end":{"line":1935,"col":34,"offset":68088},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_14","lines":"\t    if (FcDebug() & FC_DBG_SCANV)\n\t\tprintf (\"\\tStyle %s maps to slant %d\\n\", style, slant);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1941,"col":6,"offset":68239},"end":{"line":1942,"col":68,"offset":68336},"extra":{"metavars":{"$EXPR1":{"start":{"line":1941,"col":10,"offset":68243},"end":{"line":1941,"col":19,"offset":68252},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1941,"col":22,"offset":68255},"end":{"line":1941,"col":34,"offset":68267},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_15","lines":"\t    if (FcDebug() & FC_DBG_SCANV)\n\t\tprintf (\"\\tStyle %s maps to decorative %d\\n\", style, decorative);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1952,"col":2,"offset":68512},"end":{"line":1953,"col":30,"offset":68587},"extra":{"metavars":{"$EXPR1":{"start":{"line":1952,"col":6,"offset":68516},"end":{"line":1952,"col":23,"offset":68533},"abstract_content":"face->->style_flags"},"$EXPR2":{"start":{"line":1952,"col":26,"offset":68536},"end":{"line":1952,"col":46,"offset":68556},"abstract_content":"FT_STYLE_FLAG_ITALIC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"01734a9096cae051a9ac98a5912df53e542950b0eafa1a73686fd3f925260380fd7a23091b636c582907e0e792c456c20733d9ce3b3a9e8717aa1c31f78b5381_0","lines":"\tif (face->style_flags & FT_STYLE_FLAG_ITALIC)\n\t    slant = FC_SLANT_ITALIC;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":1959,"col":2,"offset":68652},"end":{"line":1960,"col":30,"offset":68725},"extra":{"metavars":{"$EXPR1":{"start":{"line":1959,"col":6,"offset":68656},"end":{"line":1959,"col":23,"offset":68673},"abstract_content":"face->->style_flags"},"$EXPR2":{"start":{"line":1959,"col":26,"offset":68676},"end":{"line":1959,"col":44,"offset":68694},"abstract_content":"FT_STYLE_FLAG_BOLD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0f6ef3310298fc39e1d9bd6997f69b90a5d1aaa43698200a0b9bf24e0bdfc87dd74e3a5a85b0d723e1e0de4301aea0e2fa7e95d120599fa7a46aa6eb925376c9_0","lines":"\tif (face->style_flags & FT_STYLE_FLAG_BOLD)\n\t    weight = FC_WEIGHT_BOLD;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2000,"col":5,"offset":69567},"end":{"line":2000,"col":80,"offset":69642},"extra":{"metavars":{"$EXPR1":{"start":{"line":2000,"col":31,"offset":69593},"end":{"line":2000,"col":54,"offset":69616},"abstract_content":"face->->charmap->->encoding"},"$EXPR2":{"start":{"line":2000,"col":58,"offset":69620},"end":{"line":2000,"col":79,"offset":69641},"abstract_content":"FT_ENCODING_MS_SYMBOL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d70b1458085d47360b9a27d5c7542dc0888a508bad70d41e4c460f1ad63e4066e6c75c9270fa51867f765b72ead561301904cf1f2a18bdf4ede80973e27c11cb_0","lines":"    symbol = face->charmap && face->charmap->encoding == FT_ENCODING_MS_SYMBOL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2069,"col":5,"offset":71530},"end":{"line":2078,"col":6,"offset":71813},"extra":{"metavars":{"$EXPR1":{"start":{"line":2069,"col":11,"offset":71536},"end":{"line":2069,"col":27,"offset":71552},"abstract_content":"face->->face_flags"},"$EXPR2":{"start":{"line":2069,"col":30,"offset":71555},"end":{"line":2069,"col":51,"offset":71576},"abstract_content":"FT_FACE_FLAG_SCALABLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9fade95f0e10f531bf742368be95b39123394c3874a1475dcb3e5daf37826acfc8065b397c8256960f2ba379b650c4dba6315a5b5923354180bb009264779929_0","lines":"    if (!(face->face_flags & FT_FACE_FLAG_SCALABLE))\n    {\n\tint i;\n\tfor (i = 0; i < face->num_fixed_sizes; i++)\n\t    if (!FcPatternAddDouble (pat, FC_PIXEL_SIZE,\n\t\t\t\t     FcGetPixelSize (face, i)))\n\t\tgoto bail2;\n\tif (!FcPatternAddBool (pat, FC_ANTIALIAS, FcFalse))\n\t    goto bail2;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2097,"col":2,"offset":72270},"end":{"line":2097,"col":18,"offset":72286},"extra":{"metavars":{"$PTR":{"start":{"line":2097,"col":8,"offset":72276},"end":{"line":2097,"col":16,"offset":72284},"abstract_content":"foundry_"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d90b1483b45081a5d61910c684c84f1fc7e3877d5782407070dd976bd9e794ba2448b66b64d4ec2877de85b36dce6e79ed00155710d4a11dd7bef845050b82c_0","lines":"\tfree (foundry_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2111,"col":2,"offset":72460},"end":{"line":2111,"col":18,"offset":72476},"extra":{"metavars":{"$PTR":{"start":{"line":2111,"col":8,"offset":72466},"end":{"line":2111,"col":16,"offset":72474},"abstract_content":"foundry_"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d90b1483b45081a5d61910c684c84f1fc7e3877d5782407070dd976bd9e794ba2448b66b64d4ec2877de85b36dce6e79ed00155710d4a11dd7bef845050b82c_1","lines":"\tfree (foundry_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2138,"col":5,"offset":72989},"end":{"line":2139,"col":12,"offset":73069},"extra":{"metavars":{"$EXPR1":{"start":{"line":2138,"col":48,"offset":73032},"end":{"line":2138,"col":50,"offset":73034},"abstract_content":"id"},"$EXPR2":{"start":{"line":2138,"col":53,"offset":73037},"end":{"line":2138,"col":64,"offset":73048},"abstract_content":"0x7FFFFFFFF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bb2c27e80b716c31d96211195297957a30823c27999525c4230bc12f47766a155c9169ba344e22adb453071b3f9e9e62d79bc5ba0066dbfe75a230cfcce03e02_0","lines":"    if (FT_New_Face (ftLibrary, (char *) file, id & 0x7FFFFFFFF, &face))\n\tgoto bail;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2153,"col":1,"offset":73291},"end":{"line":2153,"col":19,"offset":73309},"extra":{"metavars":{"$FUN":{"start":{"line":2153,"col":1,"offset":73291},"end":{"line":2153,"col":19,"offset":73309},"abstract_content":"FcFreeTypeQueryAll"},"$SIGNED":{"start":{"line":2179,"col":9,"offset":74053},"end":{"line":2179,"col":10,"offset":74054},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a9384bf3bfa8792a9d4bbd8297a9d10d396899666259a2fa01cb290b754610bafa0c652a7c90e711333017530bc0f82c2334b868ad63c9ebeba6da1d245f271c_0","lines":"FcFreeTypeQueryAll(const FcChar8\t*file,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2166,"col":18,"offset":73667},"end":{"line":2166,"col":60,"offset":73709},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2166,"col":18,"offset":73667},"end":{"line":2166,"col":30,"offset":73679},"abstract_content":"set_face_num"},"$SIGNED":{"start":{"line":2166,"col":50,"offset":73699},"end":{"line":2166,"col":56,"offset":73705},"abstract_content":"0xFFFF"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3e2bea445f21700d5d7cc232dfaf2903a2e82b929c1a7616c80c5312bc8db2e87eee02a1610dcbde039e56e0613742414be66ae6a1d08a9ac89a704d8600a28_0","lines":"    unsigned int set_face_num = index_set ? id & 0xFFFF : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2167,"col":18,"offset":73728},"end":{"line":2167,"col":61,"offset":73771},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2167,"col":18,"offset":73728},"end":{"line":2167,"col":34,"offset":73744},"abstract_content":"set_instance_num"},"$SIGNED":{"start":{"line":2167,"col":55,"offset":73765},"end":{"line":2167,"col":57,"offset":73767},"abstract_content":"16"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6c9a76e86b8303ac410dc8827eb39824211e02bd6016e956f913874364b36158aa4cd0e7f523203b3f2462e8d3a53f31dbe3d6a63a204de8a23d5493cdab43ae_0","lines":"    unsigned int set_instance_num = index_set ? id >> 16 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2170,"col":18,"offset":73882},"end":{"line":2170,"col":31,"offset":73895},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2170,"col":18,"offset":73882},"end":{"line":2170,"col":27,"offset":73891},"abstract_content":"num_faces"},"$SIGNED":{"start":{"line":2170,"col":30,"offset":73894},"end":{"line":2170,"col":31,"offset":73895},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"47943a9c27818ee96ffcdff3f4aebf034ab2eb3a798d0ae78543edf3178d23aa6c308236481edf8a042737a5e8f4d1dcba4cb529ebb2cc6f40c61ca669b92f35_0","lines":"    unsigned int num_faces = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2171,"col":18,"offset":73914},"end":{"line":2171,"col":35,"offset":73931},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2171,"col":18,"offset":73914},"end":{"line":2171,"col":31,"offset":73927},"abstract_content":"num_instances"},"$SIGNED":{"start":{"line":2171,"col":34,"offset":73930},"end":{"line":2171,"col":35,"offset":73931},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"55275684d7bee1afef771411999e5a8396a17a944080599556d03c2ed20345fe8adbb6747ae8f7d8dcdfa3faa0a22595c19b6f4c6dfe6444651dd11ba4eea122_0","lines":"    unsigned int num_instances = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2172,"col":18,"offset":73950},"end":{"line":2172,"col":25,"offset":73957},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2172,"col":18,"offset":73950},"end":{"line":2172,"col":21,"offset":73953},"abstract_content":"ret"},"$SIGNED":{"start":{"line":2172,"col":24,"offset":73956},"end":{"line":2172,"col":25,"offset":73957},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4b38ed65369f0ca08cbfe84633abb84b8ecb8a008aed5fc5d7fa951137425632d303102e6e72200950a4ac77df8032e9085a2b309908f6d976177f255065f9f7_0","lines":"    unsigned int ret = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2185,"col":5,"offset":74178},"end":{"line":2185,"col":44,"offset":74217},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2185,"col":5,"offset":74178},"end":{"line":2185,"col":18,"offset":74191},"abstract_content":"num_instances"},"$SIGNED":{"start":{"line":2185,"col":42,"offset":74215},"end":{"line":2185,"col":44,"offset":74217},"abstract_content":"16"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4a6c8fa689f4dd7152b0f1f6810b54e5f12b3d8388a785148068fbef6d9b9eca244e7de6cbf7103b8831eba3accbab879bbfb1f043c287212825618b430b9c04_0","lines":"    num_instances = face->style_flags >> 16;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2190,"col":4,"offset":74329},"end":{"line":2190,"col":21,"offset":74346},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2190,"col":4,"offset":74329},"end":{"line":2190,"col":17,"offset":74342},"abstract_content":"num_instances"},"$SIGNED":{"start":{"line":2190,"col":20,"offset":74345},"end":{"line":2190,"col":21,"offset":74346},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"55275684d7bee1afef771411999e5a8396a17a944080599556d03c2ed20345fe8adbb6747ae8f7d8dcdfa3faa0a22595c19b6f4c6dfe6444651dd11ba4eea122_1","lines":"\t  num_instances = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2210,"col":11,"offset":74855},"end":{"line":2210,"col":16,"offset":74860},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2210,"col":11,"offset":74855},"end":{"line":2210,"col":12,"offset":74856},"abstract_content":"i"},"$SIGNED":{"start":{"line":2210,"col":15,"offset":74859},"end":{"line":2210,"col":16,"offset":74860},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"803e3c0c85f8ad5e5ee5793f39bd3867607be99eb3b91cf0e72c805f2d455b32f13c1be922331570d6c56e8889a84a60ced627a61f1e271faf0421596be12144_4","lines":"\t    for (i = 0; i < mm_var->num_axis; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2222,"col":2,"offset":75081},"end":{"line":2222,"col":39,"offset":75118},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2222,"col":2,"offset":75081},"end":{"line":2222,"col":4,"offset":75083},"abstract_content":"id"},"$SIGNED":{"start":{"line":2222,"col":25,"offset":75104},"end":{"line":2222,"col":27,"offset":75106},"abstract_content":"16"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1421d9281ac318119b8cc5652700642dc7b4ab775747ac583b30ed2ef13af517cc2a8cc78b323051dbe422953b353e86c6d74f063e41dbf03cefa32126a7936b_0","lines":"\tid = ((instance_num << 16) + face_num);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2239,"col":6,"offset":75492},"end":{"line":2239,"col":27,"offset":75513},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2239,"col":6,"offset":75492},"end":{"line":2239,"col":18,"offset":75504},"abstract_content":"instance_num"},"$SIGNED":{"start":{"line":2239,"col":21,"offset":75507},"end":{"line":2239,"col":27,"offset":75513},"abstract_content":"0x8000"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"42d8acb92987e844a338c60a03e8189e4d58c1cd29371e060a5476d49f27ded77bee0fc1a2a80998d9455bcb6777470cd5114bd58a7f7d88dad93e2ba1a00add_0","lines":"\t    instance_num = 0x8000; /* variable font */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2242,"col":6,"offset":75549},"end":{"line":2242,"col":16,"offset":75559},"extra":{"metavars":{"$PTR":{"start":{"line":2242,"col":12,"offset":75555},"end":{"line":2242,"col":14,"offset":75557},"abstract_content":"nm"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aa06e5493789ca4914f3c698b9a30d51a2c09aa6bfb16ca44585708ba6f0046846fd5af460274d6e4e91786d2f318a4d1d1a665c692b0713a5beab754633aa59_0","lines":"\t    free (nm);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2263,"col":5,"offset":76026},"end":{"line":2263,"col":19,"offset":76040},"extra":{"metavars":{"$PTR":{"start":{"line":2263,"col":11,"offset":76032},"end":{"line":2263,"col":17,"offset":76038},"abstract_content":"mm_var"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9e805724003de99eacaea9d143576430382f8cc7b607f86de7ac15f493cefe58f20795d5615cddd5f3f3d5941a86a1e8ebe0b791d2f2646ad3879de76efcfe1d_0","lines":"    free (mm_var);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2352,"col":21,"offset":78559},"end":{"line":2352,"col":37,"offset":78575},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2352,"col":21,"offset":78559},"end":{"line":2352,"col":33,"offset":78571},"abstract_content":"num_advances"},"$SIGNED":{"start":{"line":2352,"col":36,"offset":78574},"end":{"line":2352,"col":37,"offset":78575},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ef41d659a1980b3bd2e033fa4c530f9db1c9bb1651be0b32cee3e164e09153f39c294a638fcaec7494df443b01d805e86b1792851b6d3df4335ac247e5866cbf_0","lines":"    unsigned int    num_advances = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2361,"col":5,"offset":78864},"end":{"line":2362,"col":34,"offset":78943},"extra":{"metavars":{"$EXPR1":{"start":{"line":2361,"col":9,"offset":78868},"end":{"line":2361,"col":25,"offset":78884},"abstract_content":"face->->face_flags"},"$EXPR2":{"start":{"line":2361,"col":28,"offset":78887},"end":{"line":2361,"col":49,"offset":78908},"abstract_content":"FT_FACE_FLAG_SCALABLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9fade95f0e10f531bf742368be95b39123394c3874a1475dcb3e5daf37826acfc8065b397c8256960f2ba379b650c4dba6315a5b5923354180bb009264779929_1","lines":"    if (face->face_flags & FT_FACE_FLAG_SCALABLE)\n\tload_flags |= FT_LOAD_NO_BITMAP;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2364,"col":5,"offset":78949},"end":{"line":2378,"col":6,"offset":79381},"extra":{"metavars":{"$EXPR1":{"start":{"line":2364,"col":11,"offset":78955},"end":{"line":2364,"col":27,"offset":78971},"abstract_content":"face->->face_flags"},"$EXPR2":{"start":{"line":2364,"col":30,"offset":78974},"end":{"line":2364,"col":51,"offset":78995},"abstract_content":"FT_FACE_FLAG_SCALABLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9fade95f0e10f531bf742368be95b39123394c3874a1475dcb3e5daf37826acfc8065b397c8256960f2ba379b650c4dba6315a5b5923354180bb009264779929_2","lines":"    if (!(face->face_flags & FT_FACE_FLAG_SCALABLE) &&\n\tface->num_fixed_sizes > 0 &&\n\tFT_Get_Sfnt_Table (face, ft_sfnt_head))\n    {\n\tFT_Int strike_index = 0, i;\n\t/* Select the face closest to 16 pixels tall */\n\tfor (i = 1; i < face->num_fixed_sizes; i++)\n\t{\n\t    if (abs (face->available_sizes[i].height - 16) <\n\t\tabs (face->available_sizes[strike_index].height - 16))\n\t\tstrike_index = i;\n\t}\n\n\tFT_Select_Size (face, strike_index);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2395,"col":8,"offset":79755},"end":{"line":2395,"col":13,"offset":79760},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2395,"col":8,"offset":79755},"end":{"line":2395,"col":9,"offset":79756},"abstract_content":"j"},"$SIGNED":{"start":{"line":2395,"col":12,"offset":79759},"end":{"line":2395,"col":13,"offset":79760},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6751d66dad9bbc371c9e54e02a87ea93cf3e638245024c3f1549b1b330ad225cfead8e491329f10db3574c2c2ced983741d02fe286fd151bb1c80780d5e39dfa_0","lines":"\t\tfor (j = 0; j < num_advances; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2499,"col":3,"offset":82466},"end":{"line":2499,"col":66,"offset":82529},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":33,"offset":32},"abstract_content":"\"0x%08x FT says %d FC says %d\\n\""},"$FMT":{"start":{"line":2499,"col":11,"offset":82474},"end":{"line":2499,"col":43,"offset":82506},"abstract_content":"\"0x%08x FT says %d FC says %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f08e2e10eea0d2d670482a84f6e553127cd79db7099a462493989d0439c33361aea6ac6f105a45ccf7c5553fdd6660312a2b799e41eea7f1f3fb82e86773ce91_0","lines":"\t\tprintf (\"0x%08x FT says %d FC says %d\\n\", ucs4, FT_Has, FC_Has);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2562,"col":2,"offset":84045},"end":{"line":2562,"col":33,"offset":84076},"extra":{"metavars":{"$FUN":{"start":{"line":2562,"col":2,"offset":84045},"end":{"line":2562,"col":8,"offset":84051},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"33c28b67b94080aa3e15af04eb45d1b7ab4b8aef0352763213e006098d2d7884b2071b7ad7febfed17b5e2c86a940836badabd0bd15726c11a59485737ed494a_0","lines":"\tstrcat ((char *) complex_, \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2563,"col":5,"offset":84082},"end":{"line":2563,"col":46,"offset":84123},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1ba378b814b89bc322e6d5e368956b61d23a2140380304b217c27dab1ce4c01340430daa451c72e98e3c3cffe15c4b35cd4533e79fc0b444d27cd938de6a7eb2_0","lines":"    strcat ((char *) complex_, OTLAYOUT_HEAD);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2563,"col":5,"offset":84082},"end":{"line":2563,"col":46,"offset":84123},"extra":{"metavars":{"$FUN":{"start":{"line":2563,"col":5,"offset":84082},"end":{"line":2563,"col":11,"offset":84088},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"33c28b67b94080aa3e15af04eb45d1b7ab4b8aef0352763213e006098d2d7884b2071b7ad7febfed17b5e2c86a940836badabd0bd15726c11a59485737ed494a_1","lines":"    strcat ((char *) complex_, OTLAYOUT_HEAD);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2564,"col":5,"offset":84129},"end":{"line":2564,"col":51,"offset":84175},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1ba378b814b89bc322e6d5e368956b61d23a2140380304b217c27dab1ce4c01340430daa451c72e98e3c3cffe15c4b35cd4533e79fc0b444d27cd938de6a7eb2_1","lines":"    strcat ((char *) complex_, (char *) tagstring);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2564,"col":5,"offset":84129},"end":{"line":2564,"col":51,"offset":84175},"extra":{"metavars":{"$FUN":{"start":{"line":2564,"col":5,"offset":84129},"end":{"line":2564,"col":11,"offset":84135},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"33c28b67b94080aa3e15af04eb45d1b7ab4b8aef0352763213e006098d2d7884b2071b7ad7febfed17b5e2c86a940836badabd0bd15726c11a59485737ed494a_2","lines":"    strcat ((char *) complex_, (char *) tagstring);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2588,"col":5,"offset":84638},"end":{"line":2589,"col":11,"offset":84714},"extra":{"metavars":{"$EXPR1":{"start":{"line":2588,"col":11,"offset":84644},"end":{"line":2588,"col":16,"offset":84649},"abstract_content":"error","propagated_value":{"svalue_start":{"line":2588,"col":19,"offset":84652},"svalue_end":{"line":2588,"col":67,"offset":84700},"svalue_abstract_content":"ftglue_face_goto_table(face tabletag stream)"}},"$EXPR2":{"start":{"line":2588,"col":19,"offset":84652},"end":{"line":2588,"col":67,"offset":84700},"abstract_content":"ftglue_face_goto_table(face tabletag stream)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40c5c73d4d52e9ec46814803a40b15159c52a3294f4ad0dc68c5dc5c3703a1aa532799f52ac8bec16bc74e98e0cfb4b0f30970586970ff5491016b9425de3f57_0","lines":"    if (( error = ftglue_face_goto_table( face, tabletag, stream ) ))\n\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2616,"col":14,"offset":85314},"end":{"line":2616,"col":54,"offset":85354},"extra":{"metavars":{"$FUN":{"start":{"line":2616,"col":14,"offset":85314},"end":{"line":2616,"col":20,"offset":85320},"abstract_content":"malloc"},"$X":{"start":{"line":2616,"col":21,"offset":85321},"end":{"line":2616,"col":33,"offset":85333},"abstract_content":"script_count","propagated_value":{"svalue_start":{"line":2612,"col":20,"offset":85244},"svalue_end":{"line":2612,"col":33,"offset":85257},"svalue_abstract_content":"GET_UShort()"}},"$Y":{"start":{"line":2616,"col":36,"offset":85336},"end":{"line":2616,"col":52,"offset":85352},"abstract_content":"sizeof FT_ULong"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"001d7b923df8c3e405d35b5e5c7c5e20c029534668086e845b444935d0014e80c7b04fb77eee14ae967be58ae462298a330120c3dd5715f3acd20dc735e94323_0","lines":"    *stags = malloc(script_count * sizeof (FT_ULong));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2616,"col":14,"offset":85314},"end":{"line":2616,"col":54,"offset":85354},"extra":{"metavars":{"$FUN":{"start":{"line":2616,"col":14,"offset":85314},"end":{"line":2616,"col":20,"offset":85320},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_7","lines":"    *stags = malloc(script_count * sizeof (FT_ULong));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2668,"col":5,"offset":86407},"end":{"line":2668,"col":45,"offset":86447},"extra":{"metavars":{"$EXPR1":{"start":{"line":2668,"col":27,"offset":86429},"end":{"line":2668,"col":30,"offset":86432},"abstract_content":"err"},"$EXPR2":{"start":{"line":2668,"col":34,"offset":86436},"end":{"line":2668,"col":43,"offset":86445},"abstract_content":"FT_Err_Ok"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"004e35004979803e34ebb067f9d49adae50b51d8b8630e76711d79ea438371edf189492033e0bf4be6ec3a16e25eb2a94afd4f232b8f458a3ef805c5176c71bb_0","lines":"    issilgraphitefont = ( err == FT_Err_Ok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2678,"col":16,"offset":86779},"end":{"line":2678,"col":51,"offset":86814},"extra":{"metavars":{"$FUN":{"start":{"line":2678,"col":16,"offset":86779},"end":{"line":2678,"col":22,"offset":86785},"abstract_content":"malloc"},"$X":{"start":{"line":2678,"col":24,"offset":86787},"end":{"line":2678,"col":39,"offset":86802},"abstract_content":"sizeof FcChar8"},"$Y":{"start":{"line":2678,"col":43,"offset":86806},"end":{"line":2678,"col":50,"offset":86813},"abstract_content":"maxsize"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"741e9af9326c3a13a4a21575d66b0f6204f890d5e0254a1b479383a07303a9bf05d740720e5fdf4b4c208871e31db1dc273bdc9df27e9f62faa6aaf57c333085_0","lines":"    complex_ = malloc (sizeof (FcChar8) * maxsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2678,"col":16,"offset":86779},"end":{"line":2678,"col":51,"offset":86814},"extra":{"metavars":{"$FUN":{"start":{"line":2678,"col":16,"offset":86779},"end":{"line":2678,"col":22,"offset":86785},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ef7318864e6e7011dcc2a10e4eed0fa01ac43496eeafada8f8874e42f2bf39276257102aee233012404aec6efa7af60e74dbe9df0417d5381a4ed54e675d2c6_8","lines":"    complex_ = malloc (sizeof (FcChar8) * maxsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2684,"col":9,"offset":86907},"end":{"line":2684,"col":50,"offset":86948},"extra":{"metavars":{"$FUN":{"start":{"line":2684,"col":9,"offset":86907},"end":{"line":2684,"col":15,"offset":86913},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"50b1fff761077b84b8ab3b8acc9a52f8bfb19ac99b6e8233df4359ad5725553624bf34184f6d62877aacc5a03751e69ee875f0f56f23808f7c4c520e970c1da0_0","lines":"        strcpy((char *) complex_, \"ttable:Silf \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2702,"col":5,"offset":87417},"end":{"line":2703,"col":59,"offset":87506},"extra":{"metavars":{"$EXPR1":{"start":{"line":2702,"col":9,"offset":87421},"end":{"line":2702,"col":19,"offset":87431},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":2702,"col":22,"offset":87434},"end":{"line":2702,"col":34,"offset":87446},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a2374b6b4c8692152583654dd8650369aee0b88903377d8fe7b28185fde2e51838be969185f3f54a7022d286441e18daf94cceed7274a72c13f161b6688e862d_16","lines":"    if (FcDebug () & FC_DBG_SCANV)\n\tprintf(\"complex_ features in this font: %s\\n\", complex_);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2705,"col":5,"offset":87517},"end":{"line":2705,"col":20,"offset":87532},"extra":{"metavars":{"$PTR":{"start":{"line":2705,"col":10,"offset":87522},"end":{"line":2705,"col":18,"offset":87530},"abstract_content":"gsubtags"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5bcefc3c764254e0086c8fdb0ec01a161799e3cc3a1f2a2b47041ac400fdc3b00d438da0dee6e260972876247b9cd51e32d4a15aa4395ef721fe2a703e0a9298_0","lines":"    free(gsubtags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2706,"col":5,"offset":87537},"end":{"line":2706,"col":20,"offset":87552},"extra":{"metavars":{"$PTR":{"start":{"line":2706,"col":10,"offset":87542},"end":{"line":2706,"col":18,"offset":87550},"abstract_content":"gpostags"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ca696ac9ef2e26d32a485aa21a324dd0ce7a7ef13ba4448415d280b18aaea21b6f58498e3fc18db3f655bccfa5d9211386f27c2db6a52da082aa6c7c04cd31f5_0","lines":"    free(gpostags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":33,"col":23,"offset":1304},"end":{"line":33,"col":50,"offset":1331},"extra":{"metavars":{"$FUN":{"start":{"line":33,"col":23,"offset":1304},"end":{"line":33,"col":29,"offset":1310},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b31b139163f4bc3ce116e2ae4b904d9ece0cb2af378ea2e20c23e9100a7e4e16d47ad1f5138fe7fc78eaf670406b284edabed2da5736bf03afef2bce849ec47_0","lines":"    s = (FcFontSet *) malloc (sizeof (FcFontSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":50,"col":2,"offset":1569},"end":{"line":50,"col":18,"offset":1585},"extra":{"metavars":{"$PTR":{"start":{"line":50,"col":8,"offset":1575},"end":{"line":50,"col":16,"offset":1583},"abstract_content":"s->->fonts"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"85cb634b2f5601ee98227f4a3b08830b0c373ca42fa98ceb6478eb1ebc5e8d810a1638bd7bfeaffb1f881ce1fd03adfba82e9bede9bc8aea38d6266ed9685e98_0","lines":"\tfree (s->fonts);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":51,"col":5,"offset":1590},"end":{"line":51,"col":14,"offset":1599},"extra":{"metavars":{"$PTR":{"start":{"line":51,"col":11,"offset":1596},"end":{"line":51,"col":12,"offset":1597},"abstract_content":"s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e267987412d9e9263ba74c0f34f1ab957712b331b31a0f0c94b0aa3afb14d2d51a9dd2e2229853e64c17b37df7a28876e7bcbde36525858c2a85c92038523284_0","lines":"    free (s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":64,"col":6,"offset":1773},"end":{"line":64,"col":73,"offset":1840},"extra":{"metavars":{"$RET":{"start":{"line":64,"col":6,"offset":1773},"end":{"line":64,"col":7,"offset":1774},"abstract_content":"f"},"$CAST":{"start":{"line":64,"col":11,"offset":1778},"end":{"line":64,"col":23,"offset":1790},"abstract_content":"FcPattern**"},"$FUN":{"start":{"line":64,"col":25,"offset":1792},"end":{"line":64,"col":32,"offset":1799},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"00fd2426f6d6ea68bce95737d3c77d843c80ebbb9bad3acfbb839253c8ba2713ee9d7e3bae4e9c3bd670d37f750ce4019450ecd434fb9de63babb1e03418557a_0","lines":"\t    f = (FcPattern **) realloc (s->fonts, sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":64,"col":25,"offset":1792},"end":{"line":64,"col":73,"offset":1840},"extra":{"metavars":{"$FUN":{"start":{"line":64,"col":25,"offset":1792},"end":{"line":64,"col":32,"offset":1799},"abstract_content":"realloc"},"$ARG1":{"start":{"line":64,"col":34,"offset":1801},"end":{"line":64,"col":42,"offset":1809},"abstract_content":"s->->fonts"},"$X":{"start":{"line":64,"col":44,"offset":1811},"end":{"line":64,"col":49,"offset":1816},"abstract_content":"sfont"},"$Y":{"start":{"line":64,"col":52,"offset":1819},"end":{"line":64,"col":72,"offset":1839},"abstract_content":"sizeof(FcPattern*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"be416f835716302eb0fed7792134eb27fde4cf5c28187993d3818001f9ea12a58fce74e76f3dddebd666506e9117fd7679d04a66c81aff21445cdba84c03be5e_0","lines":"\t    f = (FcPattern **) realloc (s->fonts, sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":64,"col":25,"offset":1792},"end":{"line":64,"col":73,"offset":1840},"extra":{"metavars":{"$FUN":{"start":{"line":64,"col":25,"offset":1792},"end":{"line":64,"col":32,"offset":1799},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"902351e0fcd15062685971e6db9019a2f507b973213e1b5199714425caf6a43885cda65af5a58632ee18318aa9274cffcee9aa9ef0199b7e18fccbc9d47f1495_0","lines":"\t    f = (FcPattern **) realloc (s->fonts, sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":66,"col":6,"offset":1853},"end":{"line":66,"col":62,"offset":1909},"extra":{"metavars":{"$RET":{"start":{"line":66,"col":6,"offset":1853},"end":{"line":66,"col":7,"offset":1854},"abstract_content":"f"},"$CAST":{"start":{"line":66,"col":11,"offset":1858},"end":{"line":66,"col":23,"offset":1870},"abstract_content":"FcPattern**"},"$FUN":{"start":{"line":66,"col":25,"offset":1872},"end":{"line":66,"col":31,"offset":1878},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f1982a3734959e1f8b292fb883fcbcf4979519ef9cdf368f73ff101ff38af5bcb56e0a61a46fea4c03e4a3387828b61f2d66921c3e3a450104af588936fce2b_0","lines":"\t    f = (FcPattern **) malloc (sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":66,"col":25,"offset":1872},"end":{"line":66,"col":62,"offset":1909},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":25,"offset":1872},"end":{"line":66,"col":31,"offset":1878},"abstract_content":"malloc"},"$X":{"start":{"line":66,"col":33,"offset":1880},"end":{"line":66,"col":38,"offset":1885},"abstract_content":"sfont"},"$Y":{"start":{"line":66,"col":41,"offset":1888},"end":{"line":66,"col":61,"offset":1908},"abstract_content":"sizeof(FcPattern*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"81b05cff557f78241e1b1f4e10534fb32913af8554fcb19b13a74a8c622d6c72ad87c5ddc972710fac75ba55a8c069cdcbda1804208539d84143914a20244449_0","lines":"\t    f = (FcPattern **) malloc (sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","start":{"line":66,"col":25,"offset":1872},"end":{"line":66,"col":62,"offset":1909},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":25,"offset":1872},"end":{"line":66,"col":31,"offset":1878},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b31b139163f4bc3ce116e2ae4b904d9ece0cb2af378ea2e20c23e9100a7e4e16d47ad1f5138fe7fc78eaf670406b284edabed2da5736bf03afef2bce849ec47_1","lines":"\t    f = (FcPattern **) malloc (sfont * sizeof (FcPattern *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":60,"col":5,"offset":1883},"end":{"line":60,"col":37,"offset":1915},"extra":{"metavars":{"$RET":{"start":{"line":60,"col":5,"offset":1883},"end":{"line":60,"col":10,"offset":1888},"abstract_content":"*dest"},"$FUN":{"start":{"line":60,"col":13,"offset":1891},"end":{"line":60,"col":19,"offset":1897},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97bef754b5197fd2b562e5e3b7f8ff39c97ae9a11769bd77d6693fb435423701a2e76b6e02eaacd9a6ebfde17ab5b218419bef8740f8ad276a31ff6b80f2a4c9_0","lines":"    *dest = malloc (sizeof (uuid_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":60,"col":13,"offset":1891},"end":{"line":60,"col":37,"offset":1915},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":13,"offset":1891},"end":{"line":60,"col":19,"offset":1897},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b9055e0a8e6aaaa89644a6c872f3ba07eb8c40e2ebd0b826b62c0d3068d510cebf62027cdccef0007b44f2fcc74e2d1b6983a089a8e09976ca8e59b8aeaf267_0","lines":"    *dest = malloc (sizeof (uuid_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":69,"col":5,"offset":2013},"end":{"line":69,"col":17,"offset":2025},"extra":{"metavars":{"$PTR":{"start":{"line":69,"col":11,"offset":2019},"end":{"line":69,"col":15,"offset":2023},"abstract_content":"data"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"208573504c56b3c6503711dedcc971ec0c15a45774a56b5d84a3c3bbd51e4d1655ec7159f4a48de759a8080a2670ba6e02c645318358a60ed2d485288eddb77a_0","lines":"    free (data);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":80,"col":24,"offset":2291},"end":{"line":80,"col":53,"offset":2320},"extra":{"metavars":{"$FUN":{"start":{"line":80,"col":24,"offset":2291},"end":{"line":80,"col":30,"offset":2297},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b9055e0a8e6aaaa89644a6c872f3ba07eb8c40e2ebd0b826b62c0d3068d510cebf62027cdccef0007b44f2fcc74e2d1b6983a089a8e09976ca8e59b8aeaf267_1","lines":"    FcHashTable *ret = malloc (sizeof (FcHashTable));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":112,"col":6,"offset":3049},"end":{"line":112,"col":18,"offset":3061},"extra":{"metavars":{"$PTR":{"start":{"line":112,"col":12,"offset":3055},"end":{"line":112,"col":16,"offset":3059},"abstract_content":"prev","propagated_value":{"svalue_start":{"line":110,"col":13,"offset":3008},"svalue_end":{"line":110,"col":19,"offset":3014},"svalue_abstract_content":"bucket"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"43394641f444958b4b7b7ef968224c8222bc2ca5e9966238542be6c865e97d9904957a845fb2adc65041ff0e83724fdbd90675da93707bd4685811de68e9085c_0","lines":"\t    free (prev);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":116,"col":5,"offset":3102},"end":{"line":116,"col":18,"offset":3115},"extra":{"metavars":{"$PTR":{"start":{"line":116,"col":11,"offset":3108},"end":{"line":116,"col":16,"offset":3113},"abstract_content":"table"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a3bbbc850470770e5e8d77d0dcf2246668162b5f1692eb7213d868c234fa520d26e053883847a42817e4d7f7d2bd0ba6e598175c5fb132087ca853ec8b128bb_0","lines":"    free (table);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":154,"col":31,"offset":3902},"end":{"line":154,"col":61,"offset":3932},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":31,"offset":3902},"end":{"line":154,"col":37,"offset":3908},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b9055e0a8e6aaaa89644a6c872f3ba07eb8c40e2ebd0b826b62c0d3068d510cebf62027cdccef0007b44f2fcc74e2d1b6983a089a8e09976ca8e59b8aeaf267_2","lines":"    bucket = (FcHashBucket *) malloc (sizeof (FcHashBucket));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","start":{"line":238,"col":6,"offset":5882},"end":{"line":238,"col":20,"offset":5896},"extra":{"metavars":{"$PTR":{"start":{"line":238,"col":12,"offset":5888},"end":{"line":238,"col":18,"offset":5894},"abstract_content":"bucket","propagated_value":{"svalue_start":{"line":228,"col":13,"offset":5539},"svalue_end":{"line":228,"col":37,"offset":5563},"svalue_abstract_content":"fc_atomic_ptr_get(prev)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"da02150f41f03843f512d3810ff66475a727c1dab750738c16aa2e7cd4ce1b17bf1ea0c76174ce167bff8311525cbf81b889b2ebd3bedecb466854f9ee776dfc_0","lines":"\t    free (bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":106,"col":13,"offset":3159},"end":{"line":106,"col":39,"offset":3185},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":106,"col":13,"offset":3159},"end":{"line":106,"col":19,"offset":3165},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0bc81a1307054b35fd1dc8d679e2fa6ed355e77bcec74a816c6daffbc940ba470e1575c9c3a972b364e41902efa2f99f24332d3c2bc7ee64cf5242814a1e5821_0","lines":"\tenv_file = getenv (\"FONTCONFIG_FILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":107,"col":13,"offset":3199},"end":{"line":107,"col":39,"offset":3225},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":107,"col":13,"offset":3199},"end":{"line":107,"col":19,"offset":3205},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0bc81a1307054b35fd1dc8d679e2fa6ed355e77bcec74a816c6daffbc940ba470e1575c9c3a972b364e41902efa2f99f24332d3c2bc7ee64cf5242814a1e5821_1","lines":"\tenv_path = getenv (\"FONTCONFIG_PATH\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":124,"col":6,"offset":3687},"end":{"line":124,"col":33,"offset":3714},"extra":{"metavars":{"$FUN":{"start":{"line":124,"col":6,"offset":3687},"end":{"line":124,"col":13,"offset":3694},"abstract_content":"realloc"},"$ARG1":{"start":{"line":124,"col":15,"offset":3696},"end":{"line":124,"col":21,"offset":3702},"abstract_content":"prefix","propagated_value":{"svalue_start":{"line":120,"col":11,"offset":3588},"svalue_end":{"line":120,"col":34,"offset":3611},"svalue_abstract_content":"FcConfigXdgCacheHome()"}},"$X":{"start":{"line":124,"col":23,"offset":3704},"end":{"line":124,"col":27,"offset":3708},"abstract_content":"plen","propagated_value":{"svalue_start":{"line":123,"col":9,"offset":3651},"svalue_end":{"line":123,"col":38,"offset":3680},"svalue_abstract_content":"strlen((const char*prefix)"}},"$Y":{"start":{"line":124,"col":30,"offset":3711},"end":{"line":124,"col":32,"offset":3713},"abstract_content":"12"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99d1fe2242b0a69749c6fc7237e66a78a46882be0874af2b6d763c9de878499d155349a57c013eb49f038dee5ecf18183272dc593ff46000d64ed4fd03762f3e_0","lines":"\tp = realloc (prefix, plen + 12);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":124,"col":6,"offset":3687},"end":{"line":124,"col":33,"offset":3714},"extra":{"metavars":{"$FUN":{"start":{"line":124,"col":6,"offset":3687},"end":{"line":124,"col":13,"offset":3694},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8e3057563add6314e61877dc28748165d9e4b44dcaa66723bc78583d6f55702ee7e6c96613974d94e21254bd469661d2e8c5d45ec47494a744fb490b1eb44443_0","lines":"\tp = realloc (prefix, plen + 12);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":128,"col":2,"offset":3755},"end":{"line":128,"col":61,"offset":3814},"extra":{"metavars":{"$FUN":{"start":{"line":128,"col":2,"offset":3755},"end":{"line":128,"col":8,"offset":3761},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b2a8d16d66b5c4b1a6bf143dc59a4903862a8b5b2af0871fa39465be49ab8963f9af90721190e882daf3aa11eda01110da4b8d449aa75910cb53d43e36b2daf6_0","lines":"\tmemcpy (&prefix[plen], FC_DIR_SEPARATOR_S \"fontconfig\", 11);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","start":{"line":128,"col":2,"offset":3755},"end":{"line":128,"col":61,"offset":3814},"extra":{"metavars":{"$DST":{"start":{"line":128,"col":10,"offset":3763},"end":{"line":128,"col":23,"offset":3776},"abstract_content":"&prefix[plen]"},"$SRC":{"start":{"line":128,"col":25,"offset":3778},"end":{"line":128,"col":56,"offset":3809},"abstract_content":"FC_DIR_SEPARATOR_S\"fontconfig\""},"$LEN":{"start":{"line":128,"col":58,"offset":3811},"end":{"line":128,"col":60,"offset":3813},"abstract_content":"11"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7fc151a0e7db1f9f9866817b3d6fd596732e159b763268592bb6401f81d2a927ba6b248c5e15ff16f144c5276afb8cdcd387ae571237fc764c780aab70786fbf_0","lines":"\tmemcpy (&prefix[plen], FC_DIR_SEPARATOR_S \"fontconfig\", 11);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":58,"col":3,"offset":1756},"end":{"line":58,"col":19,"offset":1772},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":58,"col":3,"offset":1756},"end":{"line":58,"col":9,"offset":1762},"abstract_content":"bucket"},"$SIGNED":{"start":{"line":58,"col":18,"offset":1771},"end":{"line":58,"col":19,"offset":1772},"abstract_content":"5"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24db764dbf867c0e759152a05bb1875a975029de9f1c1ddd504beb20514fc5c2a0240e274429632d52406f1bafdec52777a2a11714be94071939e5cc9e4a8769_0","lines":"  bucket = id >> 5;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":72,"col":3,"offset":2040},"end":{"line":72,"col":19,"offset":2056},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":72,"col":3,"offset":2040},"end":{"line":72,"col":9,"offset":2046},"abstract_content":"bucket"},"$SIGNED":{"start":{"line":72,"col":18,"offset":2055},"end":{"line":72,"col":19,"offset":2056},"abstract_content":"5"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24db764dbf867c0e759152a05bb1875a975029de9f1c1ddd504beb20514fc5c2a0240e274429632d52406f1bafdec52777a2a11714be94071939e5cc9e4a8769_1","lines":"  bucket = id >> 5;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":86,"col":3,"offset":2313},"end":{"line":86,"col":19,"offset":2329},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":3,"offset":2313},"end":{"line":86,"col":9,"offset":2319},"abstract_content":"bucket"},"$SIGNED":{"start":{"line":86,"col":18,"offset":2328},"end":{"line":86,"col":19,"offset":2329},"abstract_content":"5"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24db764dbf867c0e759152a05bb1875a975029de9f1c1ddd504beb20514fc5c2a0240e274429632d52406f1bafdec52777a2a11714be94071939e5cc9e4a8769_2","lines":"  bucket = id >> 5;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":107,"col":5,"offset":2805},"end":{"line":112,"col":6,"offset":2917},"extra":{"metavars":{"$EXPR1":{"start":{"line":107,"col":9,"offset":2809},"end":{"line":107,"col":18,"offset":2818},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":107,"col":21,"offset":2821},"end":{"line":107,"col":35,"offset":2835},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_0","lines":"    if (FcDebug() & FC_DBG_LANGSET)\n    {\n\tprintf (\"font charset\");\n\tFcCharSetPrint (charset);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":115,"col":2,"offset":2969},"end":{"line":120,"col":3,"offset":3128},"extra":{"metavars":{"$EXPR1":{"start":{"line":115,"col":6,"offset":2973},"end":{"line":115,"col":15,"offset":2982},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":115,"col":18,"offset":2985},"end":{"line":115,"col":32,"offset":2999},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_1","lines":"\tif (FcDebug() & FC_DBG_LANGSET)\n\t{\n\t    printf (\"%s charset\", fcLangCharSets[i].lang);\n\t    FcCharSetPrint (&fcLangCharSets[i].charset);\n\t    printf (\"\\n\");\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":139,"col":9,"offset":3683},"end":{"line":169,"col":3,"offset":4471},"extra":{"metavars":{"$EXPR1":{"start":{"line":139,"col":13,"offset":3687},"end":{"line":139,"col":22,"offset":3696},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":139,"col":25,"offset":3699},"end":{"line":139,"col":37,"offset":3711},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7127eb16f6a573b998a6bc27a71c4b8f63aba734e10957d116ed629fcc30ecc51ab0158cee197a615026354d6aeff9aa851458637dd992e6685c9834cfea90b1_0","lines":"        if (FcDebug() & FC_DBG_SCANV)\n\t{\n\t    if (missing && missing < 10)\n\t    {\n\t\tFcCharSet   *missed = FcCharSetSubtract (&fcLangCharSets[i].charset,\n\t\t\t\t\t\t\t charset);\n\t\tFcChar32    ucs4;\n\t\tFcChar32    map[FC_CHARSET_MAP_SIZE];\n\t\tFcChar32    next;\n\n\t\tprintf (\"\\n%s(%u) \", fcLangCharSets[i].lang, missing);\n\t\tprintf (\"{\");\n\t\tfor (ucs4 = FcCharSetFirstPage (missed, map, &next);\n\t\t     ucs4 != FC_CHARSET_DONE;\n\t\t     ucs4 = FcCharSetNextPage (missed, map, &next))\n\t\t{\n\t\t    int\t    i, j;\n\t\t    for (i = 0; i < FC_CHARSET_MAP_SIZE; i++)\n\t\t\tif (map[i])\n\t\t\t{\n\t\t\t    for (j = 0; j < 32; j++)\n\t\t\t\tif (map[i] & (1U << j))\n\t\t\t\t    printf (\" %04x\", ucs4 + i * 32 + j);\n\t\t\t}\n\t\t}\n\t\tprintf (\" }\\n\\t\");\n\t\tFcCharSetDestroy (missed);\n\t    }\n\t    else\n\t\tprintf (\"%s(%u) \", fcLangCharSets[i].lang, missing);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":160,"col":5,"offset":4269},"end":{"line":161,"col":45,"offset":4337},"extra":{"metavars":{"$EXPR1":{"start":{"line":160,"col":9,"offset":4273},"end":{"line":160,"col":15,"offset":4279},"abstract_content":"map[i]"},"$EXPR2":{"start":{"line":160,"col":19,"offset":4283},"end":{"line":160,"col":26,"offset":4290},"abstract_content":"1U<<j"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f78513877eba9f925c5fab149ac8b2523cd880e3e6a985934bb362cd4cbc49b1718567d694bbd3915b20fbe8a9159520b29008a1561e8fd4f229524a0d23054_0","lines":"\t\t\t\tif (map[i] & (1U << j))\n\t\t\t\t    printf (\" %04x\", ucs4 + i * 32 + j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":161,"col":9,"offset":4301},"end":{"line":161,"col":44,"offset":4336},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\" %04x\""},"$FMT":{"start":{"line":161,"col":17,"offset":4309},"end":{"line":161,"col":24,"offset":4316},"abstract_content":"\" %04x\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5abcd14bf883035f3b08465af5fcf852fedc0d254bdc4e535e7aa24a0c23661b79b532eca79f82cc3d23f0e52ba4dc04ad6f031bc9be19074c5f9bc4955471c0_0","lines":"\t\t\t\t    printf (\" %04x\", ucs4 + i * 32 + j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":174,"col":5,"offset":4528},"end":{"line":175,"col":16,"offset":4573},"extra":{"metavars":{"$EXPR1":{"start":{"line":174,"col":9,"offset":4532},"end":{"line":174,"col":18,"offset":4541},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":174,"col":21,"offset":4544},"end":{"line":174,"col":33,"offset":4556},"abstract_content":"FC_DBG_SCANV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7127eb16f6a573b998a6bc27a71c4b8f63aba734e10957d116ed629fcc30ecc51ab0158cee197a615026354d6aeff9aa851458637dd992e6685c9834cfea90b1_1","lines":"    if (FcDebug() & FC_DBG_SCANV)\n\tprintf (\"\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":186,"col":18,"offset":4743},"end":{"line":186,"col":26,"offset":4751},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":186,"col":18,"offset":4743},"end":{"line":186,"col":22,"offset":4747},"abstract_content":"tlen"},"$SIGNED":{"start":{"line":186,"col":25,"offset":4750},"end":{"line":186,"col":26,"offset":4751},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9d362860d832e3018acdce6a425fb8b7d5ca85f6157183cc0a297c7778916b229717d772e1463a333c72c4ce1b0b778751e305868ea72e2e58900d9e24f40ae1_0","lines":"    size_t llen, tlen = 0, mlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":186,"col":28,"offset":4753},"end":{"line":186,"col":36,"offset":4761},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":186,"col":28,"offset":4753},"end":{"line":186,"col":32,"offset":4757},"abstract_content":"mlen"},"$SIGNED":{"start":{"line":186,"col":35,"offset":4760},"end":{"line":186,"col":36,"offset":4761},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"86e05fde71110527cc08d03d3be99ddc7be586f71c225a9c41e9ed3d6c2d63ad3355316c550c9590401cf2fba73ec4477b210b001d4054a928fdf3ae22faadde_0","lines":"    size_t llen, tlen = 0, mlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":245,"col":6,"offset":6355},"end":{"line":245,"col":44,"offset":6393},"extra":{"metavars":{"$FUN":{"start":{"line":245,"col":6,"offset":6355},"end":{"line":245,"col":13,"offset":6362},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c460b432f09fe07afffc46e7ab0378212dc3ea74336ed0ea775a309e6b5b36152e7c64dddaef0a8670cf652261707fcac2f3eb37ea409b6e8c0611a83d4b6e48_0","lines":"\t    memmove (encoding, modifier, mlen + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":281,"col":2,"offset":7179},"end":{"line":282,"col":55,"offset":7266},"extra":{"metavars":{"$EXPR1":{"start":{"line":281,"col":6,"offset":7183},"end":{"line":281,"col":16,"offset":7193},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":281,"col":19,"offset":7196},"end":{"line":281,"col":33,"offset":7210},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_2","lines":"\tif (FcDebug () & FC_DBG_LANGSET)\n\t    printf(\"Checking the existence of %s.orth\\n\", s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":285,"col":6,"offset":7304},"end":{"line":285,"col":78,"offset":7376},"extra":{"metavars":{"$FUN":{"start":{"line":285,"col":6,"offset":7304},"end":{"line":285,"col":13,"offset":7311},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c460b432f09fe07afffc46e7ab0378212dc3ea74336ed0ea775a309e6b5b36152e7c64dddaef0a8670cf652261707fcac2f3eb37ea409b6e8c0611a83d4b6e48_1","lines":"\t    memmove (territory - 1, territory + tlen, (mlen > 0 ? mlen + 1 : 0) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":301,"col":2,"offset":7646},"end":{"line":302,"col":55,"offset":7733},"extra":{"metavars":{"$EXPR1":{"start":{"line":301,"col":6,"offset":7650},"end":{"line":301,"col":16,"offset":7660},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":301,"col":19,"offset":7663},"end":{"line":301,"col":33,"offset":7677},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_3","lines":"\tif (FcDebug () & FC_DBG_LANGSET)\n\t    printf(\"Checking the existence of %s.orth\\n\", s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":315,"col":5,"offset":7987},"end":{"line":316,"col":51,"offset":8070},"extra":{"metavars":{"$EXPR1":{"start":{"line":315,"col":9,"offset":7991},"end":{"line":315,"col":19,"offset":8001},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":315,"col":22,"offset":8004},"end":{"line":315,"col":36,"offset":8018},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_4","lines":"    if (FcDebug () & FC_DBG_LANGSET)\n\tprintf(\"Checking the existence of %s.orth\\n\", s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":338,"col":2,"offset":8463},"end":{"line":338,"col":11,"offset":8472},"extra":{"metavars":{"$PTR":{"start":{"line":338,"col":8,"offset":8469},"end":{"line":338,"col":9,"offset":8470},"abstract_content":"s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"136a0ee0d4e9752b496d9c6e6c4b3d76970b25b181b2cdf3c2d796f4aa0f49c45437caee6f610b0387dc7e69bca5f71f739f008781e9a40a8fb2a87fe4100b38_0","lines":"\tfree (s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":340,"col":5,"offset":8485},"end":{"line":346,"col":6,"offset":8650},"extra":{"metavars":{"$EXPR1":{"start":{"line":340,"col":9,"offset":8489},"end":{"line":340,"col":19,"offset":8499},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":340,"col":22,"offset":8502},"end":{"line":340,"col":36,"offset":8516},"abstract_content":"FC_DBG_LANGSET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"259552e26565fee75c3baa3110ff1b010a475862019ed078fb6f29cb0345a92391ac176d4de56f297610e2932516ae97e08a1e17fd62c286162d34ed977d5f51_5","lines":"    if (FcDebug () & FC_DBG_LANGSET)\n    {\n\tif (result)\n\t    printf (\"normalized: %s -> %s\\n\", lang, result);\n\telse\n\t    printf (\"Unable to normalize %s\\n\", lang);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":361,"col":5,"offset":8928},"end":{"line":364,"col":25,"offset":9057},"extra":{"metavars":{"$EXPR1":{"start":{"line":361,"col":14,"offset":8937},"end":{"line":361,"col":31,"offset":8954},"abstract_content":"FcToLower(s1[0])"},"$EXPR2":{"start":{"line":361,"col":35,"offset":8958},"end":{"line":361,"col":38,"offset":8961},"abstract_content":"'u'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dbb6c230ddfa13de0b44106018192967b3a5094ff64ca142e2de964d01dc9ba6068d3c9efe95e7695c985b896019d3fd4bc2bbba6f51abb5cf631eadd6956db1_0","lines":"    is_und = FcToLower (s1[0]) == 'u' &&\n\t     FcToLower (s1[1]) == 'n' &&\n\t     FcToLower (s1[2]) == 'd' &&\n\t     FcLangEnd (s1[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":439,"col":10,"offset":10448},"end":{"line":439,"col":54,"offset":10492},"extra":{"metavars":{"$VAR":{"start":{"line":439,"col":10,"offset":10448},"end":{"line":439,"col":54,"offset":10492},"abstract_content":"FcLangCompare(lang fcLangCharSets[i].lang)"},"$VAL2":{"start":{"line":440,"col":7,"offset":10502},"end":{"line":440,"col":18,"offset":10513},"abstract_content":"FcLangEqual"},"$VAL1":{"start":{"line":442,"col":7,"offset":10561},"end":{"line":442,"col":31,"offset":10585},"abstract_content":"FcLangDifferentTerritory"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b13d21f95b5ecfb47b6155ac759cf3d9e13d434b795c27d010a2617d5c8f7d7f5b4b2478569e56c0c612b727655cabc461a7804f14467dbd344774ea3604eb70_0","lines":"\tswitch (FcLangCompare (lang, fcLangCharSets[i].lang)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":439,"col":10,"offset":10448},"end":{"line":439,"col":54,"offset":10492},"extra":{"metavars":{"$VAR":{"start":{"line":439,"col":10,"offset":10448},"end":{"line":439,"col":54,"offset":10492},"abstract_content":"FcLangCompare(lang fcLangCharSets[i].lang)"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2809eec05906b90045a1391f0e1aa0d14dccf1d9ced39e60a75a59d00a452a3d01d2d644290f1d07f59e88d8a2d1c4039389a5bc72b95f6fbedbc26d2f7ab241_0","lines":"\tswitch (FcLangCompare (lang, fcLangCharSets[i].lang)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":476,"col":10,"offset":11066},"end":{"line":476,"col":37,"offset":11093},"extra":{"metavars":{"$FUN":{"start":{"line":476,"col":10,"offset":11066},"end":{"line":476,"col":16,"offset":11072},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"de6dd668a862589a1b599e9c07828ef6ae2c65fc0bb5de604ebcbc13319a1da8513055d92ff1d847d22cb24f71dde83bb4d4fe24f1f34c6e69b9817d3713e9a5_0","lines":"    ls = malloc (sizeof (FcLangSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":493,"col":5,"offset":11355},"end":{"line":493,"col":15,"offset":11365},"extra":{"metavars":{"$PTR":{"start":{"line":493,"col":11,"offset":11361},"end":{"line":493,"col":13,"offset":11363},"abstract_content":"ls"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ab8ae3fd1521d8e4839e8d1f76ad5e1585de55793708e8bd96dbc63fcb7c5a24dbcad018b47bcef7e462e47ee94d370a19e71573085347e6614d9b46bcdc69b5_0","lines":"    free (ls);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":508,"col":5,"offset":11577},"end":{"line":508,"col":95,"offset":11667},"extra":{"metavars":{"$FUN":{"start":{"line":508,"col":5,"offset":11577},"end":{"line":508,"col":11,"offset":11583},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7326d0b3d72c852765a18c01d61c4b8688f3cb7c67cbaeb4fc373f2bf4a24c31331ffd03a8e798fd9e96d3e498f284b149582a9d1775d409efff5f145aa5230f_0","lines":"    memcpy (new->map, ls->map, FC_MIN (sizeof (new->map), ls->map_size * sizeof (ls->map[0])));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":717,"col":2,"offset":16213},"end":{"line":718,"col":25,"offset":16268},"extra":{"metavars":{"$EXPR1":{"start":{"line":717,"col":6,"offset":16217},"end":{"line":717,"col":17,"offset":16228},"abstract_content":"lsa->->map[i]"},"$EXPR2":{"start":{"line":717,"col":20,"offset":16231},"end":{"line":717,"col":31,"offset":16242},"abstract_content":"lsb->->map[i]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"638a52c3c32c2fc34149996a32e6b9d4a3de4b3c0bd7f9619fe53de14a417774d30445226dada4e721551e83a5e11fa86abb9af69e7660b01f8a9c739c0a2c76_0","lines":"\tif (lsa->map[i] & lsb->map[i])\n\t    return FcLangEqual;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":766,"col":5,"offset":17256},"end":{"line":766,"col":92,"offset":17343},"extra":{"metavars":{"$ASSERT":{"start":{"line":766,"col":5,"offset":17256},"end":{"line":766,"col":21,"offset":17272},"abstract_content":"FC_ASSERT_STATIC"},"$A":{"start":{"line":766,"col":23,"offset":17274},"end":{"line":766,"col":56,"offset":17307},"abstract_content":"sizeof(FcLangSetPromotionBuffer)"},"$B":{"start":{"line":766,"col":60,"offset":17311},"end":{"line":766,"col":91,"offset":17342},"abstract_content":"sizeof(FcValuePromotionBuffer)"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"378eb25a0c24ade7e91847461b1d32041113337f782c8ad99aa1f70b4be8888f78d617baf044ddbcc9e1394d587eedbcc9bca5584b153269e16b12f080e57853_0","lines":"    FC_ASSERT_STATIC (sizeof (FcLangSetPromotionBuffer) <= sizeof (FcValuePromotionBuffer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":848,"col":2,"offset":18776},"end":{"line":861,"col":3,"offset":19107},"extra":{"metavars":{"$EXPR1":{"start":{"line":848,"col":7,"offset":18781},"end":{"line":848,"col":11,"offset":18785},"abstract_content":"bits"},"$EXPR2":{"start":{"line":848,"col":14,"offset":18788},"end":{"line":848,"col":24,"offset":18798},"abstract_content":"ls->->map[i]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"45bf701e47e82958453acf7b589df4a30fb42fb04c1d4119dfc1434b3f4429847867c56de6a35dfa7a0dcf2950aaa8cb0b880c24b879412917ac9163e2b75f16_0","lines":"\tif ((bits = ls->map[i]))\n\t{\n\t    for (bit = 0; bit <= 31; bit++)\n\t\tif (bits & (1U << bit))\n\t\t{\n\t\t    int id = (i << 5) | bit;\n\t\t    if (!first)\n\t\t\tif (!FcStrBufChar (buf, '|'))\n\t\t\t    return FcFalse;\n\t\t    if (!FcStrBufString (buf, fcLangCharSets[fcLangCharSetIndicesInv[id]].lang))\n\t\t\treturn FcFalse;\n\t\t    first = FcFalse;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":851,"col":3,"offset":18843},"end":{"line":860,"col":4,"offset":19104},"extra":{"metavars":{"$EXPR1":{"start":{"line":851,"col":7,"offset":18847},"end":{"line":851,"col":11,"offset":18851},"abstract_content":"bits"},"$EXPR2":{"start":{"line":851,"col":15,"offset":18855},"end":{"line":851,"col":24,"offset":18864},"abstract_content":"1U<<bit"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5bfc20fbdf06772709b1028a6743104e58b57d2ca7f787caf48d57b31983012993671aac753ae14cef248caba338e6049a8706b2967089e7541bb5de3d517ed8_0","lines":"\t\tif (bits & (1U << bit))\n\t\t{\n\t\t    int id = (i << 5) | bit;\n\t\t    if (!first)\n\t\t\tif (!FcStrBufChar (buf, '|'))\n\t\t\t    return FcFalse;\n\t\t    if (!FcStrBufString (buf, fcLangCharSets[fcLangCharSetIndicesInv[id]].lang))\n\t\t\treturn FcFalse;\n\t\t    first = FcFalse;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":968,"col":5,"offset":21408},"end":{"line":973,"col":6,"offset":21558},"extra":{"metavars":{"$EXPR1":{"start":{"line":968,"col":9,"offset":21412},"end":{"line":968,"col":18,"offset":21421},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":968,"col":21,"offset":21424},"end":{"line":968,"col":34,"offset":21437},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"72a7d8b9ee285680e96acb8d7212a503a67d0c6b9403deebaac39c1ca46d75e131d6a4d2bc33a530805882779c5979e58fff5b62a08dbcd549d334031bc1eaee_0","lines":"    if (FcDebug() & FC_DBG_MATCHV)\n    {\n\tprintf (\"FcLangSet \"); FcLangSetPrint (lsa);\n\tprintf (\" contains \"); FcLangSetPrint (lsb);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":985,"col":3,"offset":21847},"end":{"line":994,"col":4,"offset":22145},"extra":{"metavars":{"$EXPR1":{"start":{"line":985,"col":7,"offset":21851},"end":{"line":985,"col":14,"offset":21858},"abstract_content":"missing"},"$EXPR2":{"start":{"line":985,"col":18,"offset":21862},"end":{"line":985,"col":25,"offset":21869},"abstract_content":"1U<<j"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7f78fac9cd9da98ed241c99fed828123578aef720f856a12e4795cf539b42ae24a0e789847482c1d344f7d9367faf06818c84169fd1765086b9eb3798e505b79_0","lines":"\t\tif (missing & (1U << j))\n\t\t{\n\t\t    if (!FcLangSetContainsLang (lsa,\n\t\t\t\t\t\tfcLangCharSets[fcLangCharSetIndicesInv[i*32 + j]].lang))\n\t\t    {\n\t\t\tif (FcDebug() & FC_DBG_MATCHV)\n\t\t\t    printf (\"\\tMissing bitmap %s\\n\", fcLangCharSets[fcLangCharSetIndicesInv[i*32+j]].lang);\n\t\t\treturn FcFalse;\n\t\t    }\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":990,"col":4,"offset":21989},"end":{"line":991,"col":95,"offset":22114},"extra":{"metavars":{"$EXPR1":{"start":{"line":990,"col":8,"offset":21993},"end":{"line":990,"col":17,"offset":22002},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":990,"col":20,"offset":22005},"end":{"line":990,"col":33,"offset":22018},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"72a7d8b9ee285680e96acb8d7212a503a67d0c6b9403deebaac39c1ca46d75e131d6a4d2bc33a530805882779c5979e58fff5b62a08dbcd549d334031bc1eaee_1","lines":"\t\t\tif (FcDebug() & FC_DBG_MATCHV)\n\t\t\t    printf (\"\\tMissing bitmap %s\\n\", fcLangCharSets[fcLangCharSetIndicesInv[i*32+j]].lang);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":1008,"col":7,"offset":22372},"end":{"line":1009,"col":44,"offset":22446},"extra":{"metavars":{"$EXPR1":{"start":{"line":1008,"col":11,"offset":22376},"end":{"line":1008,"col":20,"offset":22385},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1008,"col":23,"offset":22388},"end":{"line":1008,"col":36,"offset":22401},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"72a7d8b9ee285680e96acb8d7212a503a67d0c6b9403deebaac39c1ca46d75e131d6a4d2bc33a530805882779c5979e58fff5b62a08dbcd549d334031bc1eaee_2","lines":"\t\t    if (FcDebug() & FC_DBG_MATCHV)\n\t\t\tprintf (\"\\tMissing string %s\\n\", extra);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","start":{"line":1037,"col":5,"offset":22984},"end":{"line":1037,"col":108,"offset":23087},"extra":{"metavars":{"$FUN":{"start":{"line":1037,"col":5,"offset":22984},"end":{"line":1037,"col":11,"offset":22990},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7326d0b3d72c852765a18c01d61c4b8688f3cb7c67cbaeb4fc373f2bf4a24c31331ffd03a8e798fd9e96d3e498f284b149582a9d1775d409efff5f145aa5230f_1","lines":"    memcpy (l_serialize->map, l->map, FC_MIN (sizeof (l_serialize->map), l->map_size * sizeof (l->map[0])));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":33,"col":26,"offset":1319},"end":{"line":33,"col":55,"offset":1348},"extra":{"metavars":{"$FUN":{"start":{"line":33,"col":26,"offset":1319},"end":{"line":33,"col":32,"offset":1325},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03e1ba30ca12b37c804a5e06417e27cb8a5c853cfdf63d9d68ab5fa56831420f9d7f6c94164259d2294460403d2f7386ef10dfaf426e31fade5583f856ded152_0","lines":"    os = (FcObjectSet *) malloc (sizeof (FcObjectSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":53,"col":6,"offset":1671},"end":{"line":54,"col":39,"offset":1766},"extra":{"metavars":{"$RET":{"start":{"line":53,"col":6,"offset":1671},"end":{"line":53,"col":13,"offset":1678},"abstract_content":"objects"},"$CAST":{"start":{"line":53,"col":17,"offset":1682},"end":{"line":53,"col":30,"offset":1695},"abstract_content":"const char**"},"$FUN":{"start":{"line":53,"col":32,"offset":1697},"end":{"line":53,"col":39,"offset":1704},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4e4f404cf8bad51dee4e5d2cfec013103657ae13cdbfa528040ace4e0c863a4560f0a856cad73b05e4f0f1da28cf7ca752f5cde56245f15a02ada5ffe938909c_0","lines":"\t    objects = (const char **) realloc ((void *) os->objects,\n\t\t\t\t\t       s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":53,"col":32,"offset":1697},"end":{"line":54,"col":39,"offset":1766},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":32,"offset":1697},"end":{"line":53,"col":39,"offset":1704},"abstract_content":"realloc"},"$ARG1":{"start":{"line":53,"col":41,"offset":1706},"end":{"line":53,"col":61,"offset":1726},"abstract_content":"(void*os->->objects"},"$X":{"start":{"line":54,"col":13,"offset":1740},"end":{"line":54,"col":14,"offset":1741},"abstract_content":"s"},"$Y":{"start":{"line":54,"col":17,"offset":1744},"end":{"line":54,"col":38,"offset":1765},"abstract_content":"sizeof(const char*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d4197a5989b97594a9c411f1460c69741ccc47c7f631085eb9db45cbab1627b5798bb39d487baa1cc20d9554f6276bce324a6bd9e9aed206088ccae5163b3424_0","lines":"\t    objects = (const char **) realloc ((void *) os->objects,\n\t\t\t\t\t       s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":53,"col":32,"offset":1697},"end":{"line":54,"col":39,"offset":1766},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":32,"offset":1697},"end":{"line":53,"col":39,"offset":1704},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53b61a91d6c298d62bc55aba5d02cbc4a6be66b5852af00b939e2d0f36c0638bf0604fa855f02ab4115cd1e03a6fbbfa9b48693e6165e0cb2ce3076b9c36a41a_0","lines":"\t    objects = (const char **) realloc ((void *) os->objects,\n\t\t\t\t\t       s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":56,"col":6,"offset":1779},"end":{"line":56,"col":66,"offset":1839},"extra":{"metavars":{"$RET":{"start":{"line":56,"col":6,"offset":1779},"end":{"line":56,"col":13,"offset":1786},"abstract_content":"objects"},"$CAST":{"start":{"line":56,"col":17,"offset":1790},"end":{"line":56,"col":30,"offset":1803},"abstract_content":"const char**"},"$FUN":{"start":{"line":56,"col":32,"offset":1805},"end":{"line":56,"col":38,"offset":1811},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5e183af2eac0ec2bcf67ab36804e4f98bb7a4ac7183106a3f11a3832f3d4be6284af78525460c1ee5202625531b76f299e70fc3b63caca7d01120af14b093a6b_0","lines":"\t    objects = (const char **) malloc (s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":56,"col":32,"offset":1805},"end":{"line":56,"col":66,"offset":1839},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":32,"offset":1805},"end":{"line":56,"col":38,"offset":1811},"abstract_content":"malloc"},"$X":{"start":{"line":56,"col":40,"offset":1813},"end":{"line":56,"col":41,"offset":1814},"abstract_content":"s"},"$Y":{"start":{"line":56,"col":44,"offset":1817},"end":{"line":56,"col":65,"offset":1838},"abstract_content":"sizeof(const char*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3cf78527b6498da4a275f56d90e706c0bdf11541bd3284bf999dbdcc8c9811c6ee063323936a5c7a30f28b0f655555d9522254b527a301cb7b3f21cae1ce2e3_0","lines":"\t    objects = (const char **) malloc (s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":56,"col":32,"offset":1805},"end":{"line":56,"col":66,"offset":1839},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":32,"offset":1805},"end":{"line":56,"col":38,"offset":1811},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03e1ba30ca12b37c804a5e06417e27cb8a5c853cfdf63d9d68ab5fa56831420f9d7f6c94164259d2294460403d2f7386ef10dfaf426e31fade5583f856ded152_1","lines":"\t    objects = (const char **) malloc (s * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":66,"col":5,"offset":1994},"end":{"line":66,"col":29,"offset":2018},"extra":{"metavars":{"$RET":{"start":{"line":66,"col":5,"offset":1994},"end":{"line":66,"col":11,"offset":2000},"abstract_content":"object"},"$FUN":{"start":{"line":66,"col":14,"offset":2003},"end":{"line":66,"col":20,"offset":2009},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5ef268aa0f44f12694a798c6b1d71bfb83aa11eab0875a9004b2b2cded4f4e368ea31f62685cff4e096d6b9ce6fdb2a100ee64858de690913bcd658c2083dc1f_0","lines":"    object = strdup (object);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":83,"col":5,"offset":2261},"end":{"line":84,"col":51,"offset":2362},"extra":{"metavars":{"$FUN":{"start":{"line":83,"col":5,"offset":2261},"end":{"line":83,"col":12,"offset":2268},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f73e4e2a1771ce3dfc035e1dd8c316f55f2c03a24d938714c5f58ff2f15730d8a8873eea6e0417d558b19aabcff3079169ad65f162ec605106c7d0ade433f98b_0","lines":"    memmove (os->objects + mid + 1, os->objects + mid,\n\t     (os->nobject - mid) * sizeof (const char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":100,"col":2,"offset":2586},"end":{"line":100,"col":30,"offset":2614},"extra":{"metavars":{"$PTR":{"start":{"line":100,"col":8,"offset":2592},"end":{"line":100,"col":28,"offset":2612},"abstract_content":"(void*os->->objects"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"013b7dfe07c066fddbc2b14859c484d0f2f356efe65501d1fadea0c73b5e62921b7c6c1739411d954c60d2480528804ad6129d99675dc610f22299e130a1443d_0","lines":"\tfree ((void *) os->objects);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":102,"col":5,"offset":2625},"end":{"line":102,"col":15,"offset":2635},"extra":{"metavars":{"$PTR":{"start":{"line":102,"col":11,"offset":2631},"end":{"line":102,"col":13,"offset":2633},"abstract_content":"os"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57b0bc9a76fd59134374f43f6e850ab93ff44db366e03fc9221a65508bb3e819c43819b413988f62b13b5ff7fd05e9b99cc8c6d80c5594b5eb290ca4d4e5795c_0","lines":"    free (os);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":256,"col":13,"offset":6211},"end":{"line":256,"col":19,"offset":6217},"extra":{"metavars":{"$VAR":{"start":{"line":256,"col":13,"offset":6211},"end":{"line":256,"col":19,"offset":6217},"abstract_content":"v.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"136731876a5036f01088a21846fd06c5fa6d7ba038a7910581414461419872efac673396a090d0abb8317cf44e42b2d22b51123b5902febdeefc598ec6909618_0","lines":"    switch (v.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":344,"col":6,"offset":8065},"end":{"line":344,"col":20,"offset":8079},"extra":{"metavars":{"$PTR":{"start":{"line":344,"col":12,"offset":8071},"end":{"line":344,"col":18,"offset":8077},"abstract_content":"bucket"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc3875b4dc3550372d8c443459023d8d40d388b815a343aa7eafdb6301e6c3f4ae535d19924340a0de45b32f1995b8a90e17d19fac1aa3211d2ef4e972ecc11f_0","lines":"\t    free (bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":416,"col":31,"offset":9791},"end":{"line":416,"col":61,"offset":9821},"extra":{"metavars":{"$FUN":{"start":{"line":416,"col":31,"offset":9791},"end":{"line":416,"col":37,"offset":9797},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03e1ba30ca12b37c804a5e06417e27cb8a5c853cfdf63d9d68ab5fa56831420f9d7f6c94164259d2294460403d2f7386ef10dfaf426e31fade5583f856ded152_2","lines":"    bucket = (FcListBucket *) malloc (sizeof (FcListBucket));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":538,"col":6,"offset":12439},"end":{"line":549,"col":7,"offset":12615},"extra":{"metavars":{"$EXPR1":{"start":{"line":538,"col":11,"offset":12444},"end":{"line":538,"col":17,"offset":12450},"abstract_content":"bucket","propagated_value":{"svalue_start":{"line":538,"col":20,"offset":12453},"svalue_end":{"line":538,"col":36,"offset":12469},"svalue_abstract_content":"table.buckets[i]"}},"$EXPR2":{"start":{"line":538,"col":20,"offset":12453},"end":{"line":538,"col":36,"offset":12469},"abstract_content":"table.buckets[i]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a6bae6997af05efdf5399668a248928b44b27f530144e3ee77042e9854bae8f9c185cc45398998537eb20e5aed9f254369c511d55d433027201f7509a1be19ba_0","lines":"\t    if ((bucket = table.buckets[i]))\n\t    {\n\t\tlen = 0;\n\t\tfor (; bucket; bucket = bucket->next)\n\t\t{\n\t\t    ents++;\n\t\t    len++;\n\t\t}\n\t\tif (len > max)\n\t\t    max = len;\n\t\tfull++;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","start":{"line":568,"col":6,"offset":13035},"end":{"line":568,"col":20,"offset":13049},"extra":{"metavars":{"$PTR":{"start":{"line":568,"col":12,"offset":13041},"end":{"line":568,"col":18,"offset":13047},"abstract_content":"bucket","propagated_value":{"svalue_start":{"line":563,"col":19,"offset":12909},"svalue_end":{"line":563,"col":35,"offset":12925},"svalue_abstract_content":"table.buckets[i]"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc3875b4dc3550372d8c443459023d8d40d388b815a343aa7eafdb6301e6c3f4ae535d19924340a0de45b32f1995b8a90e17d19fac1aa3211d2ef4e972ecc11f_1","lines":"\t    free (bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":140,"col":13,"offset":3997},"end":{"line":140,"col":19,"offset":4003},"extra":{"metavars":{"$VAR":{"start":{"line":140,"col":13,"offset":3997},"end":{"line":140,"col":19,"offset":4003},"abstract_content":"result"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb89b0a1e6c7ff24ab52dc34df3e6acc705e6093bdadf89e4de7c149e686587294568aa97be78c7298d792f740e12e46a82a4fcc85cdd1e1681183e0e751bd38_0","lines":"    switch (result) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":379,"col":10,"offset":9482},"end":{"line":379,"col":16,"offset":9488},"extra":{"metavars":{"$VAR":{"start":{"line":379,"col":10,"offset":9482},"end":{"line":379,"col":16,"offset":9488},"abstract_content":"object"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9d6cea801a21f87c3b837845bd392a989220a60ba0bfeba2899148f7dae28d8e96ada50d8d84fe99716b0ee27a71d3413e10f8d975f20f56a44b17ab85fea691_0","lines":"\tswitch (object) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":455,"col":5,"offset":11043},"end":{"line":462,"col":6,"offset":11225},"extra":{"metavars":{"$EXPR1":{"start":{"line":455,"col":9,"offset":11047},"end":{"line":455,"col":19,"offset":11057},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":455,"col":22,"offset":11060},"end":{"line":455,"col":35,"offset":11073},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_0","lines":"    if (FcDebug () & FC_DBG_MATCHV)\n    {\n\tprintf (\" %s: %g \", FcObjectName (object), best);\n\tFcValueListPrint (v1orig);\n\tprintf (\", \");\n\tFcValueListPrint (v2orig);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":565,"col":6,"offset":13371},"end":{"line":565,"col":72,"offset":13437},"extra":{"metavars":{"$EXPR1":{"start":{"line":565,"col":25,"offset":13390},"end":{"line":565,"col":45,"offset":13410},"abstract_content":"FC_FAMILY_OBJECT+1"},"$EXPR2":{"start":{"line":565,"col":50,"offset":13415},"end":{"line":565,"col":70,"offset":13435},"abstract_content":"FC_FAMILYLANG_OBJECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56579d5c8f46f293de2021bf2f14b1ba3d4f722a0b78fe3a290b0362055abf790fbcc097e0863fbbd6380ffbac1f9b3426ac3a4044e59c50889ba6cd01269f4d_0","lines":"\t    FC_ASSERT_STATIC ((FC_FAMILY_OBJECT + 1) == FC_FAMILYLANG_OBJECT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":566,"col":6,"offset":13443},"end":{"line":566,"col":70,"offset":13507},"extra":{"metavars":{"$EXPR1":{"start":{"line":566,"col":25,"offset":13462},"end":{"line":566,"col":44,"offset":13481},"abstract_content":"FC_STYLE_OBJECT+1"},"$EXPR2":{"start":{"line":566,"col":49,"offset":13486},"end":{"line":566,"col":68,"offset":13505},"abstract_content":"FC_STYLELANG_OBJECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9e6eef401a16bfeeb0bcf05d643bad27bdfcade0d0e06b82880d9683ef5a2b01cfa562cac6403a0da7a7836d010da41561ea4abbd52182d0cc26b8d529b5cb3a_0","lines":"\t    FC_ASSERT_STATIC ((FC_STYLE_OBJECT + 1) == FC_STYLELANG_OBJECT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":567,"col":6,"offset":13513},"end":{"line":567,"col":76,"offset":13583},"extra":{"metavars":{"$EXPR1":{"start":{"line":567,"col":25,"offset":13532},"end":{"line":567,"col":47,"offset":13554},"abstract_content":"FC_FULLNAME_OBJECT+1"},"$EXPR2":{"start":{"line":567,"col":52,"offset":13559},"end":{"line":567,"col":74,"offset":13581},"abstract_content":"FC_FULLNAMELANG_OBJECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"333fb6016479137d43ca418dd3e004766a0c36369026142b92cef898acbd76bb638658682ff9243e22c9e3b09fb941b01ac0064446398511c8dcecfb430fdd69_0","lines":"\t    FC_ASSERT_STATIC ((FC_FULLNAME_OBJECT + 1) == FC_FULLNAMELANG_OBJECT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":664,"col":11,"offset":16389},"end":{"line":664,"col":21,"offset":16399},"extra":{"metavars":{"$VAR":{"start":{"line":664,"col":11,"offset":16389},"end":{"line":664,"col":21,"offset":16399},"abstract_content":"fe->->object"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"be8b4382c059d2c09c3cf3f50d75118fdaf420d506e83bf3e16b193a81a40425b822df4cb39ffe97aeb92184d818046e2a2f632562ccf7061d9f6dd8b8cb990d_0","lines":"\t\tswitch (fe->object)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":679,"col":3,"offset":16613},"end":{"line":679,"col":46,"offset":16656},"extra":{"metavars":{"$FUN":{"start":{"line":679,"col":3,"offset":16613},"end":{"line":679,"col":10,"offset":16620},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d400239b51f3d1cb6abe63fe763e0623a708d907599dca7be31130fdf05e2ab31768dbf2835a072c31faeb8fd71da1c1519b575d1eab1c2e4ce36ba8a09be0e9_0","lines":"\t\tsprintf ((char *) temp, \"%4s=%g\", tag, num);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":694,"col":2,"offset":16964},"end":{"line":702,"col":3,"offset":17227},"extra":{"metavars":{"$COND":{"start":{"line":694,"col":6,"offset":16968},"end":{"line":697,"col":42,"offset":17101},"abstract_content":"!fe&&pe->->object!=FC_FAMILYLANG_OBJECT&&pe->->object!=FC_STYLELANG_OBJECT&&pe->->object!=FC_FULLNAMELANG_OBJECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"71fdba758680cdcb875dcf7025c8e19aae3317f523b2f6c9fa85dd68019e03ba1a3f65e6480342b70a8ff04446d86f6db9e9b4eb56b9f85436f172776a52a716_0","lines":"\tif (!fe &&\n\t    pe->object != FC_FAMILYLANG_OBJECT &&\n\t    pe->object != FC_STYLELANG_OBJECT &&\n\t    pe->object != FC_FULLNAMELANG_OBJECT)\n\t{\n\t    FcPatternObjectListAdd (new, pe->object,\n\t\t\t\t    FcValueListDuplicate (FcPatternEltValues(pe)),\n\t\t\t\t    FcFalse);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":739,"col":5,"offset":18100},"end":{"line":743,"col":6,"offset":18183},"extra":{"metavars":{"$EXPR1":{"start":{"line":739,"col":9,"offset":18104},"end":{"line":739,"col":19,"offset":18114},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":739,"col":22,"offset":18117},"end":{"line":739,"col":34,"offset":18129},"abstract_content":"FC_DBG_MATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"896c3ee6e07052f040a510ff0e7f0b19ed99f748e7304d9755a9818a5b3dffcf3d26fcba6265b4d0404269ae5c5d2ad84be10de72d7a1f6c5b3fc4d10c8d93b8_0","lines":"    if (FcDebug () & FC_DBG_MATCH)\n    {\n\tprintf (\"Match \");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":751,"col":6,"offset":18308},"end":{"line":755,"col":7,"offset":18411},"extra":{"metavars":{"$EXPR1":{"start":{"line":751,"col":10,"offset":18312},"end":{"line":751,"col":20,"offset":18322},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":751,"col":23,"offset":18325},"end":{"line":751,"col":36,"offset":18338},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_1","lines":"\t    if (FcDebug () & FC_DBG_MATCHV)\n\t    {\n\t\tprintf (\"Font %d \", f);\n\t\tFcPatternPrint (s->fonts[f]);\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":758,"col":6,"offset":18482},"end":{"line":766,"col":7,"offset":18636},"extra":{"metavars":{"$EXPR1":{"start":{"line":758,"col":10,"offset":18486},"end":{"line":758,"col":20,"offset":18496},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":758,"col":23,"offset":18499},"end":{"line":758,"col":36,"offset":18512},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_2","lines":"\t    if (FcDebug () & FC_DBG_MATCHV)\n\t    {\n\t\tprintf (\"Score\");\n\t\tfor (i = 0; i < PRI_END; i++)\n\t\t{\n\t\t    printf (\" %g\", score[i]);\n\t\t}\n\t\tprintf (\"\\n\");\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":781,"col":5,"offset":18902},"end":{"line":788,"col":6,"offset":19074},"extra":{"metavars":{"$EXPR1":{"start":{"line":781,"col":9,"offset":18906},"end":{"line":781,"col":19,"offset":18916},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":781,"col":22,"offset":18919},"end":{"line":781,"col":34,"offset":18931},"abstract_content":"FC_DBG_MATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"896c3ee6e07052f040a510ff0e7f0b19ed99f748e7304d9755a9818a5b3dffcf3d26fcba6265b4d0404269ae5c5d2ad84be10de72d7a1f6c5b3fc4d10c8d93b8_1","lines":"    if (FcDebug () & FC_DBG_MATCH)\n    {\n\tprintf (\"Best score\");\n\tfor (i = 0; i < PRI_END; i++)\n\t    printf (\" %g\", bestscore[i]);\n\tprintf (\"\\n\");\n\tFcPatternPrint (best);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":789,"col":5,"offset":19079},"end":{"line":831,"col":6,"offset":19762},"extra":{"metavars":{"$EXPR1":{"start":{"line":789,"col":9,"offset":19083},"end":{"line":789,"col":19,"offset":19093},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":789,"col":22,"offset":19096},"end":{"line":789,"col":35,"offset":19109},"abstract_content":"FC_DBG_MATCH2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"674d589a365813fcd647db09be8d450fedde62780726357cc3f2defa4966b9cd1714de20b026057e775aa350f6a281d1a48696a3def90679ece30d4224d8399c_0","lines":"    if (FcDebug () & FC_DBG_MATCH2)\n    {\n\tchar *env = getenv (\"FC_DBG_MATCH_FILTER\");\n\tFcObjectSet *os = NULL;\n\n\tif (env)\n\t{\n\t    char *ss, *s;\n\t    char *p;\n\t    FcBool f = FcTrue;\n\n\t    ss = s = strdup (env);\n\t    os = FcObjectSetCreate ();\n\t    while (f)\n\t    {\n\t\tsize_t len;\n\t\tchar *x;\n\n\t\tif (!(p = strchr (s, ',')))\n\t\t{\n\t\t    f = FcFalse;\n\t\t    len = strlen (s);\n\t\t}\n\t\telse\n\t\t{\n\t\t    len = (p - s);\n\t\t}\n\t\tx = malloc (sizeof (char) * (len + 1));\n\t\tif (x)\n\t\t{\n\t\t    strcpy (x, s);\n\t\t    if (FcObjectFromName (x) > 0)\n\t\t\tFcObjectSetAdd (os, x);\n\t\t    s = p + 1;\n\t\t    free (x);\n\t\t}\n\t    }\n\t    free (ss);\n\t}\n\tFcPatternPrint2 (p, best, os);\n\tif (os)\n\t    FcObjectSetDestroy (os);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":791,"col":14,"offset":19130},"end":{"line":791,"col":44,"offset":19160},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":791,"col":14,"offset":19130},"end":{"line":791,"col":20,"offset":19136},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0388ad97a90fcaf12af628da344edeeab402bd2ebec123ac9b5fa8f1a059f33c0447c5bd90eb22ab689cb5cd33d3cc27b54a057127e0ab08afbdaa17963e2646_0","lines":"\tchar *env = getenv (\"FC_DBG_MATCH_FILTER\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":807,"col":3,"offset":19369},"end":{"line":815,"col":4,"offset":19483},"extra":{"metavars":{"$EXPR1":{"start":{"line":807,"col":9,"offset":19375},"end":{"line":807,"col":10,"offset":19376},"abstract_content":"p","propagated_value":{"svalue_start":{"line":807,"col":13,"offset":19379},"svalue_end":{"line":807,"col":28,"offset":19394},"svalue_abstract_content":"strchr(s',')"}},"$EXPR2":{"start":{"line":807,"col":13,"offset":19379},"end":{"line":807,"col":28,"offset":19394},"abstract_content":"strchr(s',')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c3e7deb2b63b3768572c51f2962c5c88773c4094de3f4dd719167744160de5dee025f3838ee5fa2e078f00ea6b2dfd9914d86e0151c08e5b8393277bc18e3e1_0","lines":"\t\tif (!(p = strchr (s, ',')))\n\t\t{\n\t\t    f = FcFalse;\n\t\t    len = strlen (s);\n\t\t}\n\t\telse\n\t\t{\n\t\t    len = (p - s);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":814,"col":14,"offset":19472},"end":{"line":814,"col":19,"offset":19477},"extra":{"metavars":{"$PTR1":{"start":{"line":814,"col":14,"offset":19472},"end":{"line":814,"col":15,"offset":19473},"abstract_content":"p","propagated_value":{"svalue_start":{"line":807,"col":13,"offset":19379},"svalue_end":{"line":807,"col":28,"offset":19394},"svalue_abstract_content":"strchr(s',')"}},"$PTR2":{"start":{"line":814,"col":18,"offset":19476},"end":{"line":814,"col":19,"offset":19477},"abstract_content":"s"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"08028939b83e5c156990f98fbe16e118383927cc08ef1aa94bdbc2f1fe6e831280888db0d5a422bd3831e8e3f7c024e9fa7b6b9dd76be2bd018feed2e3226a7e_0","lines":"\t\t    len = (p - s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":816,"col":7,"offset":19490},"end":{"line":816,"col":41,"offset":19524},"extra":{"metavars":{"$FUN":{"start":{"line":816,"col":7,"offset":19490},"end":{"line":816,"col":13,"offset":19496},"abstract_content":"malloc"},"$X":{"start":{"line":816,"col":15,"offset":19498},"end":{"line":816,"col":28,"offset":19511},"abstract_content":"sizeof(char)"},"$Y":{"start":{"line":816,"col":32,"offset":19515},"end":{"line":816,"col":39,"offset":19522},"abstract_content":"len+1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7d4bfd0c0d342217503cc7ef83a64af16c7a02237193908abd959ec7125917e84fb27c186c1ad25de872109d684769d3fe8817d05d23f545010fc947577ba124_0","lines":"\t\tx = malloc (sizeof (char) * (len + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":816,"col":7,"offset":19490},"end":{"line":816,"col":41,"offset":19524},"extra":{"metavars":{"$FUN":{"start":{"line":816,"col":7,"offset":19490},"end":{"line":816,"col":13,"offset":19496},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fe7703c09b6de0cffa346664e354de4f8f30577b0ac593f663338aeba975755d8755917737b4d944a01947b51d6386cc713e4544cad5c14c0ceb8527c9f30f3c_0","lines":"\t\tx = malloc (sizeof (char) * (len + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":819,"col":7,"offset":19545},"end":{"line":819,"col":20,"offset":19558},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0ec9cb9198120e6b0385de8379a3078871123cba11619881278891b35438fd0487de394a64871bfb8c5bc1b79d6fa0d1dd6185aa632b9901cfedc9bffeff8ee3_0","lines":"\t\t    strcpy (x, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":819,"col":7,"offset":19545},"end":{"line":819,"col":20,"offset":19558},"extra":{"metavars":{"$FUN":{"start":{"line":819,"col":7,"offset":19545},"end":{"line":819,"col":13,"offset":19551},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ad679fd269f0540d341d058d6670d0c1d18dcd097488bdae03d81c8b4b14627f427745dc82185cbd5cdfacd24340af280aabbc948bf0fb71ebbde44f3652deca_0","lines":"\t\t    strcpy (x, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":826,"col":6,"offset":19672},"end":{"line":826,"col":16,"offset":19682},"extra":{"metavars":{"$PTR":{"start":{"line":826,"col":12,"offset":19678},"end":{"line":826,"col":14,"offset":19680},"abstract_content":"ss"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70385be5785b76c5de3809617805172608c62ba1c75b3f3402b6c3a327d815082550f72a48281a637036eb09722cfef19bb6f90ebe24be94128eed5e556eaa39_0","lines":"\t    free (ss);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":964,"col":6,"offset":22342},"end":{"line":968,"col":7,"offset":22440},"extra":{"metavars":{"$EXPR1":{"start":{"line":964,"col":10,"offset":22346},"end":{"line":964,"col":20,"offset":22356},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":964,"col":23,"offset":22359},"end":{"line":964,"col":36,"offset":22372},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_3","lines":"\t    if (FcDebug () & FC_DBG_MATCHV)\n\t    {\n\t\tprintf (\"Add \");\n\t\tFcPatternPrint (node->pattern);\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1032,"col":5,"offset":23685},"end":{"line":1036,"col":6,"offset":23767},"extra":{"metavars":{"$EXPR1":{"start":{"line":1032,"col":9,"offset":23689},"end":{"line":1032,"col":19,"offset":23699},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1032,"col":22,"offset":23702},"end":{"line":1032,"col":34,"offset":23714},"abstract_content":"FC_DBG_MATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"896c3ee6e07052f040a510ff0e7f0b19ed99f748e7304d9755a9818a5b3dffcf3d26fcba6265b4d0404269ae5c5d2ad84be10de72d7a1f6c5b3fc4d10c8d93b8_2","lines":"    if (FcDebug () & FC_DBG_MATCH)\n    {\n\tprintf (\"Sort \");\n\tFcPatternPrint (p);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1048,"col":5,"offset":23945},"end":{"line":1051,"col":3,"offset":24062},"extra":{"metavars":{"$EXPR1":{"start":{"line":1048,"col":10,"offset":23950},"end":{"line":1048,"col":26,"offset":23966},"abstract_content":"nPatternLang=0"},"$EXPR2":{"start":{"line":1049,"col":3,"offset":23970},"end":{"line":1049,"col":73,"offset":24040},"abstract_content":"FcPatternGet(p FC_LANG nPatternLang&patternLang)==FcResultMatch"},"$EXPR3":{"start":{"line":1050,"col":3,"offset":24044},"end":{"line":1050,"col":17,"offset":24058},"abstract_content":"nPatternLang++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8f7529c4e445d4fee332da2e663dc01a2315a1362b9f902d21fd1abf7be097e5e645518f96194f516a029a494776fe9013b6046ed3de1bb8e320647461585c2e_0","lines":"    for (nPatternLang = 0;\n\t FcPatternGet (p, FC_LANG, nPatternLang, &patternLang) == FcResultMatch;\n\t nPatternLang++)\n\t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1054,"col":13,"offset":24099},"end":{"line":1056,"col":38,"offset":24214},"extra":{"metavars":{"$FUN":{"start":{"line":1054,"col":13,"offset":24099},"end":{"line":1054,"col":19,"offset":24105},"abstract_content":"malloc"},"$X":{"start":{"line":1054,"col":21,"offset":24107},"end":{"line":1055,"col":37,"offset":24174},"abstract_content":"nnodes*sizeof FcSortNode+nnodes*sizeof(FcSortNode*)"},"$Y":{"start":{"line":1056,"col":7,"offset":24183},"end":{"line":1056,"col":36,"offset":24212},"abstract_content":"nPatternLang*sizeof FcBool"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7384c88e76bd08ca862f0c86209ebd013c66112fc8c82f528d571e925263bcc7c8a1d32b4e7c288935a5315d858c78f72b6880d02f51b65db07065fc5c2a3111_0","lines":"    nodes = malloc (nnodes * sizeof (FcSortNode) +\n\t\t    nnodes * sizeof (FcSortNode *) +\n\t\t    nPatternLang * sizeof (FcBool));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1054,"col":13,"offset":24099},"end":{"line":1056,"col":38,"offset":24214},"extra":{"metavars":{"$FUN":{"start":{"line":1054,"col":13,"offset":24099},"end":{"line":1054,"col":19,"offset":24105},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fe7703c09b6de0cffa346664e354de4f8f30577b0ac593f663338aeba975755d8755917737b4d944a01947b51d6386cc713e4544cad5c14c0ceb8527c9f30f3c_1","lines":"    nodes = malloc (nnodes * sizeof (FcSortNode) +\n\t\t    nnodes * sizeof (FcSortNode *) +\n\t\t    nPatternLang * sizeof (FcBool));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1071,"col":6,"offset":24505},"end":{"line":1075,"col":7,"offset":24608},"extra":{"metavars":{"$EXPR1":{"start":{"line":1071,"col":10,"offset":24509},"end":{"line":1071,"col":20,"offset":24519},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1071,"col":23,"offset":24522},"end":{"line":1071,"col":36,"offset":24535},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_4","lines":"\t    if (FcDebug () & FC_DBG_MATCHV)\n\t    {\n\t\tprintf (\"Font %d \", f);\n\t\tFcPatternPrint (s->fonts[f]);\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1079,"col":6,"offset":24720},"end":{"line":1087,"col":7,"offset":24879},"extra":{"metavars":{"$EXPR1":{"start":{"line":1079,"col":10,"offset":24724},"end":{"line":1079,"col":20,"offset":24734},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1079,"col":23,"offset":24737},"end":{"line":1079,"col":36,"offset":24750},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_5","lines":"\t    if (FcDebug () & FC_DBG_MATCHV)\n\t    {\n\t\tprintf (\"Score\");\n\t\tfor (i = 0; i < PRI_END; i++)\n\t\t{\n\t\t    printf (\" %g\", new->score[i]);\n\t\t}\n\t\tprintf (\"\\n\");\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1123,"col":4,"offset":25722},"end":{"line":1131,"col":5,"offset":26055},"extra":{"metavars":{"$EXPR1":{"start":{"line":1123,"col":8,"offset":25726},"end":{"line":1123,"col":18,"offset":25736},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1123,"col":21,"offset":25739},"end":{"line":1123,"col":34,"offset":25752},"abstract_content":"FC_DBG_MATCHV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c15f07a79fdb1b5bbd972d3d9ba50dd5e10d835ed4e0ce77df2612793da628c98b49521f2651d84eb7c563c301ae3da838cf458403d959c4e3faf692f093f95_6","lines":"\t\t\tif (FcDebug () & FC_DBG_MATCHV)\n\t\t\t{\n\t\t\t    FcChar8 *family;\n\t\t\t    FcChar8 *style;\n\n\t\t\t    if (FcPatternGetString (nodeps[f]->pattern, FC_FAMILY, 0, &family) == FcResultMatch &&\n\t\t\t\tFcPatternGetString (nodeps[f]->pattern, FC_STYLE, 0, &style) == FcResultMatch)\n\t\t\t\tprintf (\"Font %s:%s matches language %d\\n\", family, style, i);\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1160,"col":5,"offset":26508},"end":{"line":1164,"col":6,"offset":26607},"extra":{"metavars":{"$EXPR1":{"start":{"line":1160,"col":9,"offset":26512},"end":{"line":1160,"col":18,"offset":26521},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1160,"col":21,"offset":26524},"end":{"line":1160,"col":33,"offset":26536},"abstract_content":"FC_DBG_MATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"896c3ee6e07052f040a510ff0e7f0b19ed99f748e7304d9755a9818a5b3dffcf3d26fcba6265b4d0404269ae5c5d2ad84be10de72d7a1f6c5b3fc4d10c8d93b8_3","lines":"    if (FcDebug() & FC_DBG_MATCH)\n    {\n\tprintf (\"First font \");\n\tFcPatternPrint (ret->fonts[0]);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1173,"col":5,"offset":26722},"end":{"line":1173,"col":9,"offset":26726},"extra":{"metavars":{"$PTR":{"start":{"line":1158,"col":11,"offset":26495},"end":{"line":1158,"col":16,"offset":26500},"abstract_content":"nodes"},"$FREE":{"start":{"line":1173,"col":5,"offset":26722},"end":{"line":1173,"col":9,"offset":26726},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"28c3cb8dacf3db240bb2b274ec40e32f6b8ded9f674a890ec9f7ca52637ff969d5a82bbc2f110cb0406a39813c2af7469e5913a5e0c32a21a3cb4e07c713c971_0","lines":"    free (nodes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatrix.c","start":{"line":38,"col":22,"offset":1432},"end":{"line":38,"col":43,"offset":1453},"extra":{"metavars":{"$FUN":{"start":{"line":38,"col":22,"offset":1432},"end":{"line":38,"col":28,"offset":1438},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7b917316eb452b3932fab0dbc4f4f75ce8cad6a4f5dba782ed2982fc09f8270142253950ebed0c4750fa2594f82474af0c28ae0e78652248ea520fb8848e834c_0","lines":"    r = (FcMatrix *) malloc (sizeof (*r) );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatrix.c","start":{"line":49,"col":2,"offset":1581},"end":{"line":49,"col":13,"offset":1592},"extra":{"metavars":{"$PTR":{"start":{"line":49,"col":8,"offset":1587},"end":{"line":49,"col":11,"offset":1590},"abstract_content":"mat"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04ca2019b88d385ec966eb0e685a19b734d9c15f2e4dcf223a6678374d3019e99da6ee656f99393bb58db5518b5e5430a7736c0dadb7bdf63560e08f82b5777c_0","lines":"\tfree (mat);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":225,"col":10,"offset":7562},"end":{"line":225,"col":15,"offset":7567},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":225,"col":10,"offset":7562},"end":{"line":225,"col":11,"offset":7563},"abstract_content":"i"},"$SIGNED":{"start":{"line":225,"col":14,"offset":7566},"end":{"line":225,"col":15,"offset":7567},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"795fa0e21d5c3a86a2aab3255bcd689c69336949c86626e01b14972aff2f0ecafff4cb604243ff471a69c1da9e5d9fdc3c508745836159d1946d0070a22194c6_0","lines":"    for (i = 0; i < NUM_FC_CONSTANTS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":237,"col":5,"offset":7800},"end":{"line":241,"col":6,"offset":7885},"extra":{"metavars":{"$EXPR1":{"start":{"line":237,"col":10,"offset":7805},"end":{"line":237,"col":11,"offset":7806},"abstract_content":"c","propagated_value":{"svalue_start":{"line":237,"col":14,"offset":7809},"svalue_end":{"line":237,"col":39,"offset":7834},"svalue_abstract_content":"FcNameGetConstant(string)"}},"$EXPR2":{"start":{"line":237,"col":14,"offset":7809},"end":{"line":237,"col":39,"offset":7834},"abstract_content":"FcNameGetConstant(string)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c92c244742d5ef5ff0ae6b69457fcbf8759f99806a40a0a41e9660bc102125ade51207d7a65509275bf20a4a755f917e05511c2bdcc03f141290ad28277400c_0","lines":"    if ((c = FcNameGetConstant(string)))\n    {\n\t*result = c->value;\n\treturn FcTrue;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":269,"col":2,"offset":8330},"end":{"line":269,"col":11,"offset":8339},"extra":{"metavars":{"$NARROW":{"start":{"line":269,"col":2,"offset":8330},"end":{"line":269,"col":4,"offset":8332},"abstract_content":"c1"},"$LARGE":{"start":{"line":269,"col":9,"offset":8337},"end":{"line":269,"col":10,"offset":8338},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"76c6117e5ab87ec4687b4ac20813189418d29613d8f62fdcfd220a00916855ec72ed064a9319271b18b9a52f576997350130f0d7d1c9cf94522a9321f48ccc4d_0","lines":"\tc1 = v[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":302,"col":14,"offset":8839},"end":{"line":302,"col":36,"offset":8861},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"8fe84b3a59f594773f82da388b138271a35e18e1da155510231fb62b2db7d20961ff79cac0d25f4ab67ec499e2b4bef3ff60744a00f82736d8525a5e65a0f0e3_0","lines":"\t    v.u.i = atoi ((char *) string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":318,"col":2,"offset":9168},"end":{"line":318,"col":73,"offset":9239},"extra":{"metavars":{"$FUN":{"start":{"line":318,"col":2,"offset":9168},"end":{"line":318,"col":8,"offset":9174},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf4835d3856fc8c56ec963daff6f9ae07cbe065efae0a0ef00d2a6a8bff22fdbfb6d2969f2825da439080b937fcd06254a24870a089f6a1cbcdb48256cc009b1_0","lines":"\tsscanf ((char *) string, \"%lg %lg %lg %lg\", &m.xx, &m.xy, &m.yx, &m.yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-scanf-etc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":318,"col":2,"offset":9168},"end":{"line":318,"col":73,"offset":9239},"extra":{"metavars":{"$FUN":{"start":{"line":318,"col":2,"offset":9168},"end":{"line":318,"col":8,"offset":9174},"abstract_content":"sscanf"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://codeql.github.com/codeql-query-help/cpp/cpp-missing-check-scanf/"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"92564643bd9abcd979854d215d71582ae032652fdbd932602bc7449fbb5d96d81a0f8f1ca6a7f727b97d842aa823d4f63c91b45f434263e04d302874eb22d381_0","lines":"\tsscanf ((char *) string, \"%lg %lg %lg %lg\", &m.xx, &m.xy, &m.yx, &m.yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":332,"col":6,"offset":9522},"end":{"line":332,"col":51,"offset":9567},"extra":{"metavars":{"$FUN":{"start":{"line":332,"col":6,"offset":9522},"end":{"line":332,"col":12,"offset":9528},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf4835d3856fc8c56ec963daff6f9ae07cbe065efae0a0ef00d2a6a8bff22fdbfb6d2969f2825da439080b937fcd06254a24870a089f6a1cbcdb48256cc009b1_1","lines":"\tif (sscanf ((char *) string, \"[%lg %lg]\", &b, &e) != 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":338,"col":11,"offset":9675},"end":{"line":338,"col":27,"offset":9691},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":11,"offset":9675},"end":{"line":338,"col":17,"offset":9681},"abstract_content":"malloc"},"$X":{"start":{"line":338,"col":19,"offset":9683},"end":{"line":338,"col":22,"offset":9686},"abstract_content":"len","propagated_value":{"svalue_start":{"line":335,"col":19,"offset":9615},"svalue_end":{"line":335,"col":49,"offset":9645},"svalue_abstract_content":"strlen((const char*string)"}},"$Y":{"start":{"line":338,"col":25,"offset":9689},"end":{"line":338,"col":26,"offset":9690},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"69cb97d0a3ebe3a22d1c5bd184990a0eb36196e1cb7aff288933137c3129487930a08793ffd9010a326e51bbfc349ca7df040ec23bac437412b3d43e0b1266ea_0","lines":"\t    sc = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":338,"col":11,"offset":9675},"end":{"line":338,"col":27,"offset":9691},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":11,"offset":9675},"end":{"line":338,"col":17,"offset":9681},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7be70da7fa11e5d82b4f4d3c85ab170a2a5bc1086eec7de88b44a1eecff32f9c2416fefa420424a36aae3856673f76be290c258dec305328d847e4d253e50873_0","lines":"\t    sc = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":339,"col":11,"offset":9703},"end":{"line":339,"col":27,"offset":9719},"extra":{"metavars":{"$FUN":{"start":{"line":339,"col":11,"offset":9703},"end":{"line":339,"col":17,"offset":9709},"abstract_content":"malloc"},"$X":{"start":{"line":339,"col":19,"offset":9711},"end":{"line":339,"col":22,"offset":9714},"abstract_content":"len","propagated_value":{"svalue_start":{"line":335,"col":19,"offset":9615},"svalue_end":{"line":335,"col":49,"offset":9645},"svalue_abstract_content":"strlen((const char*string)"}},"$Y":{"start":{"line":339,"col":25,"offset":9717},"end":{"line":339,"col":26,"offset":9718},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"69cb97d0a3ebe3a22d1c5bd184990a0eb36196e1cb7aff288933137c3129487930a08793ffd9010a326e51bbfc349ca7df040ec23bac437412b3d43e0b1266ea_1","lines":"\t    ec = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":339,"col":11,"offset":9703},"end":{"line":339,"col":27,"offset":9719},"extra":{"metavars":{"$FUN":{"start":{"line":339,"col":11,"offset":9703},"end":{"line":339,"col":17,"offset":9709},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7be70da7fa11e5d82b4f4d3c85ab170a2a5bc1086eec7de88b44a1eecff32f9c2416fefa420424a36aae3856673f76be290c258dec305328d847e4d253e50873_1","lines":"\t    ec = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-scanf-etc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":340,"col":22,"offset":9742},"end":{"line":340,"col":68,"offset":9788},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"[%s %[^]]]\""},"$BUF":{"start":{"line":340,"col":30,"offset":9750},"end":{"line":340,"col":45,"offset":9765},"abstract_content":"(char*string"},"$FMT":{"start":{"line":340,"col":47,"offset":9767},"end":{"line":340,"col":59,"offset":9779},"abstract_content":"\"[%s %[^]]]\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"374d45ae3ca734e7b8bdf259ed9fbb4bce5f9c6073b27f197a539aa3440667e7b96081d28efb881e34ce03beb30de7c69460b5925347fbce48722dbbdb428d46_0","lines":"\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":340,"col":22,"offset":9742},"end":{"line":340,"col":68,"offset":9788},"extra":{"metavars":{"$FUN":{"start":{"line":340,"col":22,"offset":9742},"end":{"line":340,"col":28,"offset":9748},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf4835d3856fc8c56ec963daff6f9ae07cbe065efae0a0ef00d2a6a8bff22fdbfb6d2969f2825da439080b937fcd06254a24870a089f6a1cbcdb48256cc009b1_2","lines":"\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":391,"col":6,"offset":10648},"end":{"line":392,"col":9,"offset":10673},"extra":{"metavars":{"$EXPR1":{"start":{"line":391,"col":12,"offset":10654},"end":{"line":391,"col":13,"offset":10655},"abstract_content":"c"},"$EXPR2":{"start":{"line":391,"col":16,"offset":10658},"end":{"line":391,"col":20,"offset":10662},"abstract_content":"*cur"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a436a26827ab0392ef9683bd7a5eb42d8c760f10f7964d67822dc87f5b494de99b8b66d10ebab0469a76cfc778a7484a4b9156f04aeb58f6bbd5e736787985d1_0","lines":"\t    if (!(c = *cur))\n\t\tbreak;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":419,"col":12,"offset":11063},"end":{"line":419,"col":47,"offset":11098},"extra":{"metavars":{"$FUN":{"start":{"line":419,"col":12,"offset":11063},"end":{"line":419,"col":18,"offset":11069},"abstract_content":"malloc"},"$X":{"start":{"line":419,"col":20,"offset":11071},"end":{"line":419,"col":42,"offset":11093},"abstract_content":"strlen((char*name)"},"$Y":{"start":{"line":419,"col":45,"offset":11096},"end":{"line":419,"col":46,"offset":11097},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"38652333cc2e2bedaa21e7316d227c27620e87076767f35b7070ee48db057edc3f5e3bb0b6ad41522ffefbf59317d4f1d28e02fa18f284434260cea5161ddfd8_0","lines":"    save = malloc (strlen ((char *) name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":419,"col":12,"offset":11063},"end":{"line":419,"col":47,"offset":11098},"extra":{"metavars":{"$FUN":{"start":{"line":419,"col":12,"offset":11063},"end":{"line":419,"col":18,"offset":11069},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7be70da7fa11e5d82b4f4d3c85ab170a2a5bc1086eec7de88b44a1eecff32f9c2416fefa420424a36aae3856673f76be290c258dec305328d847e4d253e50873_2","lines":"    save = malloc (strlen ((char *) name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":479,"col":3,"offset":12183},"end":{"line":501,"col":4,"offset":12728},"extra":{"metavars":{"$EXPR1":{"start":{"line":479,"col":8,"offset":12188},"end":{"line":479,"col":9,"offset":12189},"abstract_content":"c","propagated_value":{"svalue_start":{"line":479,"col":12,"offset":12192},"svalue_end":{"line":479,"col":36,"offset":12216},"svalue_abstract_content":"FcNameGetConstant(save)"}},"$EXPR2":{"start":{"line":479,"col":12,"offset":12192},"end":{"line":479,"col":36,"offset":12216},"abstract_content":"FcNameGetConstant(save)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3e469a20c00169033aa62a5e251846a3bb1ffb11427db9b4eef9a9ac26798b6b98ddd7e2dd9ddde763ed664ad1247fe53e4b674f55f2ba8ee690954bdd72b475_0","lines":"\t\tif ((c = FcNameGetConstant (save)))\n\t\t{\n\t\t    t = FcNameGetObjectType ((char *) c->object);\n\t\t    if (t == NULL)\n\t\t\tgoto bail2;\n\t\t    switch ((int) t->type) {\n\t\t    case FcTypeInteger:\n\t\t    case FcTypeDouble:\n\t\t\tif (!FcPatternAddInteger (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    case FcTypeBool:\n\t\t\tif (!FcPatternAddBool (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    case FcTypeRange:\n\t\t\tif (!FcPatternAddInteger (pat, c->object, c->value))\n\t\t\t    goto bail2;\n\t\t\tbreak;\n\t\t    default:\n\t\t\tbreak;\n\t\t    }\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":512,"col":5,"offset":12826},"end":{"line":512,"col":9,"offset":12830},"extra":{"metavars":{"$PTR":{"start":{"line":506,"col":11,"offset":12756},"end":{"line":506,"col":15,"offset":12760},"abstract_content":"save"},"$FREE":{"start":{"line":512,"col":5,"offset":12826},"end":{"line":512,"col":9,"offset":12830},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"93e3744faf8cef5c1623f103894f8bdf8f2d08b4ae35fda841f2d7a827d9f2780bdd66aaa9fa3b0f890520ee51de6b334d4e65d6fd35dd1f3ec250fe372a6cad_0","lines":"    free (save);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":543,"col":13,"offset":13387},"end":{"line":543,"col":19,"offset":13393},"extra":{"metavars":{"$VAR":{"start":{"line":543,"col":13,"offset":13387},"end":{"line":543,"col":19,"offset":13393},"abstract_content":"v.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fcf55b359e56708802c95c566ccc701cc01a92c265396a4cedb50c63f0be662dd8399700df88740258d07ef4c82438ad367e3a28f63b970179ae411154eadb20_0","lines":"    switch (v.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":548,"col":2,"offset":13483},"end":{"line":548,"col":38,"offset":13519},"extra":{"metavars":{"$FUN":{"start":{"line":548,"col":2,"offset":13483},"end":{"line":548,"col":9,"offset":13490},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6630262476b21ab3763ff277d553a821294a6e11f56df1edecadd2e31cf2fe12a9d98ab90d152ceba2c7b0db5c0d491cd9c1950bf44baeb8852e7b385f196e23_0","lines":"\tsprintf ((char *) temp, \"%d\", v.u.i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":551,"col":2,"offset":13589},"end":{"line":551,"col":38,"offset":13625},"extra":{"metavars":{"$FUN":{"start":{"line":551,"col":2,"offset":13589},"end":{"line":551,"col":9,"offset":13596},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6630262476b21ab3763ff277d553a821294a6e11f56df1edecadd2e31cf2fe12a9d98ab90d152ceba2c7b0db5c0d491cd9c1950bf44baeb8852e7b385f196e23_1","lines":"\tsprintf ((char *) temp, \"%g\", v.u.d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":561,"col":2,"offset":13975},"end":{"line":562,"col":47,"offset":14060},"extra":{"metavars":{"$FUN":{"start":{"line":561,"col":2,"offset":13975},"end":{"line":561,"col":9,"offset":13982},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6630262476b21ab3763ff277d553a821294a6e11f56df1edecadd2e31cf2fe12a9d98ab90d152ceba2c7b0db5c0d491cd9c1950bf44baeb8852e7b385f196e23_2","lines":"\tsprintf ((char *) temp, \"%g %g %g %g\",\n\t\t v.u.m->xx, v.u.m->xy, v.u.m->yx, v.u.m->yy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":571,"col":2,"offset":14302},"end":{"line":571,"col":62,"offset":14362},"extra":{"metavars":{"$FUN":{"start":{"line":571,"col":2,"offset":14302},"end":{"line":571,"col":9,"offset":14309},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6630262476b21ab3763ff277d553a821294a6e11f56df1edecadd2e31cf2fe12a9d98ab90d152ceba2c7b0db5c0d491cd9c1950bf44baeb8852e7b385f196e23_3","lines":"\tsprintf ((char *) temp, \"[%g %g]\", v.u.r->begin, v.u.r->end);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":33,"col":23,"offset":1321},"end":{"line":33,"col":50,"offset":1348},"extra":{"metavars":{"$FUN":{"start":{"line":33,"col":23,"offset":1321},"end":{"line":33,"col":29,"offset":1327},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd0a2abdd14ec76a6257cf1b9fe7d19bb7b5016dc3afd9f205996a25a23f8245ecaebea82f25d91b096d98bb8e182e37044d299c6ecce4072f4d2c10cabb2361_0","lines":"    p = (FcPattern *) malloc (sizeof (FcPattern));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":136,"col":12,"offset":3136},"end":{"line":136,"col":44,"offset":3168},"extra":{"metavars":{"$FUN":{"start":{"line":136,"col":12,"offset":3136},"end":{"line":136,"col":18,"offset":3142},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb351569fd64b4a79f5e18538f38c300991ca97bd48640b5bfa79adc739e41ecc3b9462125bec33bb638317a82fc385bbd6e703dae7fed179671080cb3c9ffb2_0","lines":"    return calloc (1, sizeof (FcValueList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":136,"col":12,"offset":3136},"end":{"line":136,"col":44,"offset":3168},"extra":{"metavars":{"$CNT":{"start":{"line":136,"col":20,"offset":3144},"end":{"line":136,"col":21,"offset":3145},"abstract_content":"1"},"$LEN":{"start":{"line":136,"col":23,"offset":3147},"end":{"line":136,"col":43,"offset":3167},"abstract_content":"sizeof(FcValueList)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"451fe5256472f2dcfbd876a6d28cb2c49e307e10088a74e625e236f965463305e7a480e321d0fad81e5b284c56e606921ce9657148d8b26bf6cd911adb0fd7f1_0","lines":"    return calloc (1, sizeof (FcValueList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":167,"col":2,"offset":3756},"end":{"line":167,"col":10,"offset":3764},"extra":{"metavars":{"$PTR":{"start":{"line":167,"col":7,"offset":3761},"end":{"line":167,"col":8,"offset":3762},"abstract_content":"l"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b29a2d5c8f406992cd3e191ca2c368fda6f5fc6a0e6777f29d441721b55505db1d642582bf6abfe61c7fe66f79ff4c6888944cdf337934df212aedb955664cd6_0","lines":"\tfree(l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":210,"col":2,"offset":4519},"end":{"line":210,"col":78,"offset":4595},"extra":{"metavars":{"$EXPR1":{"start":{"line":210,"col":7,"offset":4524},"end":{"line":210,"col":21,"offset":4538},"abstract_content":"last=vallist"},"$EXPR2":{"start":{"line":210,"col":23,"offset":4540},"end":{"line":210,"col":45,"offset":4562},"abstract_content":"FcValueListNext(last)"},"$EXPR3":{"start":{"line":210,"col":47,"offset":4564},"end":{"line":210,"col":76,"offset":4593},"abstract_content":"last=FcValueListNext(last)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e3eb489a2bf2ba9f50c8ab26957c9c45f024cf71d9c89e2e3b69bdbf28ae315642e2c21ca5286afa2e6c917f9c15dbecbdb285e97af5028adf1ec49df9ab6ec6_0","lines":"\tfor (last = vallist; FcValueListNext (last); last = FcValueListNext (last));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":264,"col":13,"offset":5439},"end":{"line":264,"col":20,"offset":5446},"extra":{"metavars":{"$VAR":{"start":{"line":264,"col":13,"offset":5439},"end":{"line":264,"col":20,"offset":5446},"abstract_content":"va.type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4892c6030ff5a66ea2e8ab9a9f5634e81f4f0a5ad01db56030a7a467fef6a8d6ae06cb9b038c5c59e4cb3da7903c95683f210b671dc5136ddab666458b2788e_0","lines":"    switch (va.type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":316,"col":13,"offset":6487},"end":{"line":316,"col":20,"offset":6494},"extra":{"metavars":{"$VAR":{"start":{"line":316,"col":13,"offset":6487},"end":{"line":316,"col":20,"offset":6494},"abstract_content":"v->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"355471db5e8442ae3871761ae0a663dd509b643e515a9b4cd397b4a00d90d84a99761cfd92b01f1438398bdb3d6dbd48afddc3f1e4b43ca70019656a64b73791_0","lines":"    switch (v->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":420,"col":10,"offset":9249},"end":{"line":420,"col":15,"offset":9254},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":420,"col":10,"offset":9249},"end":{"line":420,"col":11,"offset":9250},"abstract_content":"i"},"$SIGNED":{"start":{"line":420,"col":14,"offset":9253},"end":{"line":420,"col":15,"offset":9254},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cdf919e183a077d2fc18f4bee95884e6ef5d6f46b4bd603bb99a7caad160e27dfbe59561aea98789349032ee072a1c66889236f0675169d7099fbbf40c25d99a_0","lines":"    for (i = 0, j = 0; i < p->num; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":420,"col":17,"offset":9256},"end":{"line":420,"col":22,"offset":9261},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":420,"col":17,"offset":9256},"end":{"line":420,"col":18,"offset":9257},"abstract_content":"j"},"$SIGNED":{"start":{"line":420,"col":21,"offset":9260},"end":{"line":420,"col":22,"offset":9261},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"876fd2bef72ad569be044325c25d8755fbc5081c19a9a68e97753cc697fd3b6e4948308183fb08c07a9cf4aacc43c2221931f8d0dae477cb3537ce0c97f8bd12_0","lines":"    for (i = 0, j = 0; i < p->num; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":436,"col":5,"offset":9715},"end":{"line":436,"col":59,"offset":9769},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"79b714fd6030e9fd935ebe711a0e4f1fba4d7188296b3545fceb1fbcedb6901326e93c3e170b2997874262d1e0f3a6d8346dc1b22aaada1ab9423b337c9f1c67_0","lines":"    strcpy ((char *)new_path, (char *)relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":436,"col":5,"offset":9715},"end":{"line":436,"col":59,"offset":9769},"extra":{"metavars":{"$FUN":{"start":{"line":436,"col":5,"offset":9715},"end":{"line":436,"col":11,"offset":9721},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"975d5d01e5cecb41efa762cbf5bb1c9c7ea32ed850b8d469e01a9e69d896c0c7c579f5b27121ebea9998543872bb5ad917ee83a6764459805d059354f0041af5_0","lines":"    strcpy ((char *)new_path, (char *)relocated_font_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":463,"col":5,"offset":10189},"end":{"line":463,"col":17,"offset":10201},"extra":{"metavars":{"$PTR":{"start":{"line":463,"col":11,"offset":10195},"end":{"line":463,"col":15,"offset":10199},"abstract_content":"elts"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba0787f6ea7f6cd40568012b61df88d611e9872ce26a328aa120c483e1f5f588380abab9d617fff5093b18804c18ac1f990b4f87129a622e6be0fbb8f51884e5_0","lines":"    free (elts);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":464,"col":5,"offset":10206},"end":{"line":464,"col":14,"offset":10215},"extra":{"metavars":{"$PTR":{"start":{"line":464,"col":11,"offset":10212},"end":{"line":464,"col":12,"offset":10213},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"be7a8c7dee177200fb6240814663003a71be1c572d0937b0a7eaaa08f8b99c6ad61f5fa454efed2f5593764f63be5b4426e4c9f709cf1be075919e9107728bf8_0","lines":"    free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":536,"col":24,"offset":11491},"end":{"line":536,"col":63,"offset":11530},"extra":{"metavars":{"$FUN":{"start":{"line":536,"col":24,"offset":11491},"end":{"line":536,"col":31,"offset":11498},"abstract_content":"realloc"},"$ARG1":{"start":{"line":536,"col":33,"offset":11500},"end":{"line":536,"col":35,"offset":11502},"abstract_content":"e0","propagated_value":{"svalue_start":{"line":535,"col":22,"offset":11450},"svalue_end":{"line":535,"col":38,"offset":11466},"svalue_abstract_content":"FcPatternElts(p)"}},"$X":{"start":{"line":536,"col":37,"offset":11504},"end":{"line":536,"col":38,"offset":11505},"abstract_content":"s"},"$Y":{"start":{"line":536,"col":41,"offset":11508},"end":{"line":536,"col":62,"offset":11529},"abstract_content":"sizeof(FcPatternElt)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4efb55ebe5ce79f3a38cfc5cdc6cc16198f9544911dfefebb071cd07d1b69fa914053039f5d55421b08c0347d777c66be6a2ed21e993c20d4dec9e4e04673e9c_0","lines":"\t\te = (FcPatternElt *) realloc (e0, s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":536,"col":24,"offset":11491},"end":{"line":536,"col":63,"offset":11530},"extra":{"metavars":{"$FUN":{"start":{"line":536,"col":24,"offset":11491},"end":{"line":536,"col":31,"offset":11498},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"30db2d6e28dc14bd4ed6aab50853525a80ad33c1e2585fd9fe52d59f2176ef7b045dfd57275a57bbab38e6d031c5984fb0dda2080acaad769d294ab31a964585_0","lines":"\t\te = (FcPatternElt *) realloc (e0, s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":539,"col":11,"offset":11583},"end":{"line":539,"col":44,"offset":11616},"extra":{"metavars":{"$FUN":{"start":{"line":539,"col":11,"offset":11583},"end":{"line":539,"col":17,"offset":11589},"abstract_content":"malloc"},"$X":{"start":{"line":539,"col":18,"offset":11590},"end":{"line":539,"col":19,"offset":11591},"abstract_content":"s"},"$Y":{"start":{"line":539,"col":22,"offset":11594},"end":{"line":539,"col":43,"offset":11615},"abstract_content":"sizeof(FcPatternElt)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f14f8ec2a6578166ff1ee8f9b3c32cabe01346fd17284882a0e21ab7cf735651f5a3685b0e06d2708e6d84fff83d352ab4ccfc00a5d21307779dd5bf60bf038d_0","lines":"\t\t    e = malloc(s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":539,"col":11,"offset":11583},"end":{"line":539,"col":44,"offset":11616},"extra":{"metavars":{"$FUN":{"start":{"line":539,"col":11,"offset":11583},"end":{"line":539,"col":17,"offset":11589},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd0a2abdd14ec76a6257cf1b9fe7d19bb7b5016dc3afd9f205996a25a23f8245ecaebea82f25d91b096d98bb8e182e37044d299c6ecce4072f4d2c10cabb2361_1","lines":"\t\t    e = malloc(s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":541,"col":4,"offset":11634},"end":{"line":541,"col":67,"offset":11697},"extra":{"metavars":{"$FUN":{"start":{"line":541,"col":4,"offset":11634},"end":{"line":541,"col":10,"offset":11640},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c9b88b689319c600cca25ddf0775074a0e0d10ad6c20724e48bdc3042d769057f30c9c8cf358a4b406206bec022ab75891877c10a46e616cca7652918d784fce_0","lines":"\t\t\tmemcpy(e, e0, FcPatternObjectCount (p) * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":545,"col":3,"offset":11722},"end":{"line":545,"col":58,"offset":11777},"extra":{"metavars":{"$RET":{"start":{"line":545,"col":3,"offset":11722},"end":{"line":545,"col":4,"offset":11723},"abstract_content":"e"},"$CAST":{"start":{"line":545,"col":8,"offset":11727},"end":{"line":545,"col":22,"offset":11741},"abstract_content":"FcPatternElt*"},"$FUN":{"start":{"line":545,"col":24,"offset":11743},"end":{"line":545,"col":30,"offset":11749},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f6fefa4079c57dc4f18bfbc649f6df88dbaac68c15773bc9bf53b6feef221a360cfa897bb395d9ea10b105ff845fa8cbb0227f7546323cf5bf0fbf8f3616fc5f_0","lines":"\t\te = (FcPatternElt *) malloc (s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":545,"col":24,"offset":11743},"end":{"line":545,"col":58,"offset":11777},"extra":{"metavars":{"$FUN":{"start":{"line":545,"col":24,"offset":11743},"end":{"line":545,"col":30,"offset":11749},"abstract_content":"malloc"},"$X":{"start":{"line":545,"col":32,"offset":11751},"end":{"line":545,"col":33,"offset":11752},"abstract_content":"s"},"$Y":{"start":{"line":545,"col":36,"offset":11755},"end":{"line":545,"col":57,"offset":11776},"abstract_content":"sizeof(FcPatternElt)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f14f8ec2a6578166ff1ee8f9b3c32cabe01346fd17284882a0e21ab7cf735651f5a3685b0e06d2708e6d84fff83d352ab4ccfc00a5d21307779dd5bf60bf038d_1","lines":"\t\te = (FcPatternElt *) malloc (s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":545,"col":24,"offset":11743},"end":{"line":545,"col":58,"offset":11777},"extra":{"metavars":{"$FUN":{"start":{"line":545,"col":24,"offset":11743},"end":{"line":545,"col":30,"offset":11749},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd0a2abdd14ec76a6257cf1b9fe7d19bb7b5016dc3afd9f205996a25a23f8245ecaebea82f25d91b096d98bb8e182e37044d299c6ecce4072f4d2c10cabb2361_2","lines":"\t\te = (FcPatternElt *) malloc (s * sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":559,"col":2,"offset":12008},"end":{"line":562,"col":35,"offset":12099},"extra":{"metavars":{"$FUN":{"start":{"line":559,"col":2,"offset":12008},"end":{"line":559,"col":9,"offset":12015},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"46efafe1ff582dfc151c23e01021a2ab2a171cd825d9727d1883ef7ce6ffb4181ad8ef6a7419645b2ea5b3e415afce7cb4d3c3aa0fd6088ddbf51c55ab29888f_0","lines":"\tmemmove (e + i + 1,\n\t\t e + i,\n\t\t sizeof (FcPatternElt) *\n\t\t (FcPatternObjectCount (p) - i));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":676,"col":2,"offset":14297},"end":{"line":677,"col":7,"offset":14357},"extra":{"metavars":{"$EXPR1":{"start":{"line":676,"col":7,"offset":14302},"end":{"line":676,"col":24,"offset":14319},"abstract_content":"prev=&e->->values"},"$EXPR2":{"start":{"line":676,"col":26,"offset":14321},"end":{"line":676,"col":31,"offset":14326},"abstract_content":"*prev"},"$EXPR3":{"start":{"line":676,"col":33,"offset":14328},"end":{"line":676,"col":54,"offset":14349},"abstract_content":"prev=&*prev->->next"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f6d00edf5d1ccbd7c3cb917dfdb2fbf7890a90cf3f9bd0233979050cd001ef0532b7c5d22eca2143c39dab0d5e384f32b147593ec2b73c7ecfdbb5022cc3675_0","lines":"\tfor (prev = &e->values; *prev; prev = &(*prev)->next)\n\t    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":682,"col":2,"offset":14395},"end":{"line":683,"col":7,"offset":14450},"extra":{"metavars":{"$EXPR1":{"start":{"line":682,"col":7,"offset":14400},"end":{"line":682,"col":19,"offset":14412},"abstract_content":"prev=&list"},"$EXPR2":{"start":{"line":682,"col":21,"offset":14414},"end":{"line":682,"col":26,"offset":14419},"abstract_content":"*prev"},"$EXPR3":{"start":{"line":682,"col":28,"offset":14421},"end":{"line":682,"col":49,"offset":14442},"abstract_content":"prev=&*prev->->next"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65c3e48ad6b6f9cd04ae81f6211e93dae8bbf9551cbaedd8a53d06927234a1edc0563e3e7dcd9a90121d1d1a6eeddc67c9e4fbea61d5c1813ad1675b8256d31c_0","lines":"\tfor (prev = &list; *prev; prev = &(*prev)->next)\n\t    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":738,"col":2,"offset":15430},"end":{"line":739,"col":7,"offset":15490},"extra":{"metavars":{"$EXPR1":{"start":{"line":738,"col":7,"offset":15435},"end":{"line":738,"col":24,"offset":15452},"abstract_content":"prev=&e->->values"},"$EXPR2":{"start":{"line":738,"col":26,"offset":15454},"end":{"line":738,"col":31,"offset":15459},"abstract_content":"*prev"},"$EXPR3":{"start":{"line":738,"col":33,"offset":15461},"end":{"line":738,"col":54,"offset":15482},"abstract_content":"prev=&*prev->->next"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f6d00edf5d1ccbd7c3cb917dfdb2fbf7890a90cf3f9bd0233979050cd001ef0532b7c5d22eca2143c39dab0d5e384f32b147593ec2b73c7ecfdbb5022cc3675_1","lines":"\tfor (prev = &e->values; *prev; prev = &(*prev)->next)\n\t    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":753,"col":5,"offset":15641},"end":{"line":753,"col":16,"offset":15652},"extra":{"metavars":{"$PTR":{"start":{"line":753,"col":11,"offset":15647},"end":{"line":753,"col":14,"offset":15650},"abstract_content":"new","propagated_value":{"svalue_start":{"line":707,"col":11,"offset":14803},"svalue_end":{"line":707,"col":31,"offset":14823},"svalue_abstract_content":"FcValueListCreate()"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"52b6b41553685fb246408df0fc9676d982fbcf005fa457d8a08304ab14a1a77691940a6328ad78712579e405b5f95f7b97726f0ad347f701e1eed4874ea09606_0","lines":"    free (new);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":792,"col":5,"offset":16551},"end":{"line":794,"col":29,"offset":16660},"extra":{"metavars":{"$FUN":{"start":{"line":792,"col":5,"offset":16551},"end":{"line":792,"col":12,"offset":16558},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"46efafe1ff582dfc151c23e01021a2ab2a171cd825d9727d1883ef7ce6ffb4181ad8ef6a7419645b2ea5b3e415afce7cb4d3c3aa0fd6088ddbf51c55ab29888f_1","lines":"    memmove (e, e+1,\n\t     (FcPatternElts(p) + FcPatternObjectCount (p) - (e + 1)) *\n\t     sizeof (FcPatternElt));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","start":{"line":1508,"col":5,"offset":32173},"end":{"line":1514,"col":6,"offset":32347},"extra":{"metavars":{"$EXPR1":{"start":{"line":1508,"col":9,"offset":32177},"end":{"line":1508,"col":18,"offset":32186},"abstract_content":"FcDebug()"},"$EXPR2":{"start":{"line":1508,"col":21,"offset":32189},"end":{"line":1508,"col":34,"offset":32202},"abstract_content":"FC_DBG_CACHEV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58e3e79bf35aca08f91629d417d3a0ce339fad2b0c77ac18bd8162a8cc81ba0b31eaf2f0f160b0254e2d792f9a73531c1b87db1d02a99a8c2ce70c93deb72d68_0","lines":"    if (FcDebug() & FC_DBG_CACHEV) {\n\tprintf (\"Raw pattern:\\n\");\n\tFcPatternPrint (pat);\n\tprintf (\"Serialized pattern:\\n\");\n\tFcPatternPrint (pat_serialized);\n\tprintf (\"\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcptrlist.c","start":{"line":44,"col":36,"offset":1625},"end":{"line":44,"col":63,"offset":1652},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":36,"offset":1625},"end":{"line":44,"col":42,"offset":1631},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"290c80ae1459ca84fbd4a78a8b83c8510583a1c1924e8f79a0dab05c2a6376d9703174b1b586efd587d547c911a03bb3fbd8147e70a6f5539fc7d032cddc2223_0","lines":"    FcPtrList *ret = (FcPtrList *) malloc (sizeof (FcPtrList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcptrlist.c","start":{"line":68,"col":5,"offset":2059},"end":{"line":68,"col":17,"offset":2071},"extra":{"metavars":{"$PTR":{"start":{"line":68,"col":11,"offset":2065},"end":{"line":68,"col":15,"offset":2069},"abstract_content":"list"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"252b8b49a485c094a7452cb9071573d75d64464abcac90ec957ef17711f6a3962f3241967179bb8e2c9c99187b474a9ce26969adbed547aaaee9f0e1df1422d6_0","lines":"    free (list);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcptrlist.c","start":{"line":145,"col":28,"offset":3589},"end":{"line":145,"col":60,"offset":3621},"extra":{"metavars":{"$FUN":{"start":{"line":145,"col":28,"offset":3589},"end":{"line":145,"col":34,"offset":3595},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"290c80ae1459ca84fbd4a78a8b83c8510583a1c1924e8f79a0dab05c2a6376d9703174b1b586efd587d547c911a03bb3fbd8147e70a6f5539fc7d032cddc2223_1","lines":"    e = (FcPtrListEntry *) malloc (sizeof (FcPtrListEntry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcptrlist.c","start":{"line":193,"col":5,"offset":4436},"end":{"line":193,"col":14,"offset":4445},"extra":{"metavars":{"$PTR":{"start":{"line":193,"col":11,"offset":4442},"end":{"line":193,"col":12,"offset":4443},"abstract_content":"e"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9168e6e49d29e69818b800ccb84f0de59ecf1a1fabb83b040713b5abe3b74ef1dd52462ca37a4ad86cda768edb236e78a966ff508912fb652f40f0ffb936a3ec_0","lines":"    free (e);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","start":{"line":31,"col":20,"offset":1288},"end":{"line":31,"col":45,"offset":1313},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":20,"offset":1288},"end":{"line":31,"col":26,"offset":1294},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a01df2d0a903feb969ec1729db2a47ac39194178e1b718a96e162712d4e2542a798aa3c73fef922cf907a179c044f7bcd889cbf12b3fda347eb398fb9d9b34eb_0","lines":"    FcRange *ret = malloc (sizeof (FcRange));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","start":{"line":45,"col":20,"offset":1482},"end":{"line":45,"col":45,"offset":1507},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":20,"offset":1482},"end":{"line":45,"col":26,"offset":1488},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a01df2d0a903feb969ec1729db2a47ac39194178e1b718a96e162712d4e2542a798aa3c73fef922cf907a179c044f7bcd889cbf12b3fda347eb398fb9d9b34eb_1","lines":"    FcRange *ret = malloc (sizeof (FcRange));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","start":{"line":59,"col":5,"offset":1636},"end":{"line":59,"col":18,"offset":1649},"extra":{"metavars":{"$PTR":{"start":{"line":59,"col":11,"offset":1642},"end":{"line":59,"col":16,"offset":1647},"abstract_content":"range"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"baf5dceb5b5ad940ce3df5ca91feef5af78f9cb82451709b6b517064fb10dabec223c4ad35de4013279ae77379670c402aac5acffe0e1b26e8d13befb3b1cd7d_0","lines":"    free (range);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","start":{"line":89,"col":5,"offset":2169},"end":{"line":89,"col":90,"offset":2254},"extra":{"metavars":{"$ASSERT":{"start":{"line":89,"col":5,"offset":2169},"end":{"line":89,"col":21,"offset":2185},"abstract_content":"FC_ASSERT_STATIC"},"$A":{"start":{"line":89,"col":23,"offset":2187},"end":{"line":89,"col":53,"offset":2217},"abstract_content":"sizeof FcRangePromotionBuffer"},"$B":{"start":{"line":89,"col":58,"offset":2222},"end":{"line":89,"col":88,"offset":2252},"abstract_content":"sizeof FcValuePromotionBuffer"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2210a64d4dc8bc94f2a48797db8da91db6ae806bdbc2f7bd3915ba2422e7612e21b92e8c84bdf2c0181196c5c27668c8d716c058354003e485695a9f167f34ac_0","lines":"    FC_ASSERT_STATIC (sizeof (FcRangePromotionBuffer) <= sizeof (FcValuePromotionBuffer));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","start":{"line":153,"col":5,"offset":3558},"end":{"line":153,"col":46,"offset":3599},"extra":{"metavars":{"$FUN":{"start":{"line":153,"col":5,"offset":3558},"end":{"line":153,"col":11,"offset":3564},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9decd9cf8d10362e38498ff6bd709e2b36238de248e615e2e28389cbdc79d83aeab1f557a04f536c4a2bfc74df1c6a1c47c31a0a7a689c397692ffad57518019_0","lines":"    memcpy (r_serialize, r, sizeof (FcRange));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":44,"col":17,"offset":1570},"end":{"line":44,"col":46,"offset":1599},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":17,"offset":1570},"end":{"line":44,"col":23,"offset":1576},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f0ec68ef0cce37708a27d59159af91fa0b7fa055ac7f58e9b700c12c7da2139fedead4f23daa971ef7454da30e309b0f42667cd24a6cea8a56f11c4f588a3f2_0","lines":"    serialize = malloc (sizeof (FcSerialize));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":65,"col":6,"offset":2088},"end":{"line":65,"col":18,"offset":2100},"extra":{"metavars":{"$PTR":{"start":{"line":65,"col":12,"offset":2094},"end":{"line":65,"col":16,"offset":2098},"abstract_content":"buck"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"147f8a155e59073df825c2dfd2b5216915310cf3418ed432171785d0b8047a98e3bb016c0505b091d73993b4ef5c02ddb059c8f666b42ae10b553b3b0cb0621f_0","lines":"\t    free (buck);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":70,"col":5,"offset":2195},"end":{"line":70,"col":22,"offset":2212},"extra":{"metavars":{"$PTR":{"start":{"line":70,"col":11,"offset":2201},"end":{"line":70,"col":20,"offset":2210},"abstract_content":"serialize"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"33d1a1f7a41d56facc3efdadaac1fe38135ef11436c2f0670ad4df732e20e63e828e1b023828f16ffc8402d028c648a6d041321c19b72b46615eb86ad2d3da41_0","lines":"    free (serialize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":87,"col":12,"offset":2678},"end":{"line":87,"col":47,"offset":2713},"extra":{"metavars":{"$FUN":{"start":{"line":87,"col":12,"offset":2678},"end":{"line":87,"col":18,"offset":2684},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f0ec68ef0cce37708a27d59159af91fa0b7fa055ac7f58e9b700c12c7da2139fedead4f23daa971ef7454da30e309b0f42667cd24a6cea8a56f11c4f588a3f2_1","lines":"    buck = malloc (sizeof (FcSerializeBucket));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":151,"col":5,"offset":4285},"end":{"line":151,"col":56,"offset":4336},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"cbfdc1e0e52c5441ddb8f0d78af12e09179a8d3d406b2e2be03a5b3e2130d21fea0a7289ceb16b943af526c3e61c9d89c920a6502cd80dcb5dace9b210a53719_0","lines":"    strcpy ((char *) str_serialize, (const char *) str);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","start":{"line":151,"col":5,"offset":4285},"end":{"line":151,"col":56,"offset":4336},"extra":{"metavars":{"$FUN":{"start":{"line":151,"col":5,"offset":4285},"end":{"line":151,"col":11,"offset":4291},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c77757910c233d1b933bfd3eded0396df369dbea7416a1fe4acc40975a107189b6cc7e018060eae18a064545acce6b8376973d3c130efb55797a8b2f6ed3932_0","lines":"    strcpy ((char *) str_serialize, (const char *) str);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":45,"col":18,"offset":1569},"end":{"line":45,"col":28,"offset":1579},"extra":{"metavars":{"$X":{"start":{"line":44,"col":17,"offset":1537},"end":{"line":44,"col":26,"offset":1546},"abstract_content":"s1l+s2l"},"$Y":{"start":{"line":44,"col":29,"offset":1549},"end":{"line":44,"col":30,"offset":1550},"abstract_content":"1"},"$FUN":{"start":{"line":45,"col":18,"offset":1569},"end":{"line":45,"col":24,"offset":1575},"abstract_content":"malloc"},"$N":{"start":{"line":45,"col":26,"offset":1577},"end":{"line":45,"col":27,"offset":1578},"abstract_content":"l","propagated_value":{"svalue_start":{"line":44,"col":17,"offset":1537},"svalue_end":{"line":44,"col":30,"offset":1550},"svalue_abstract_content":"s1l+s2l+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cd2d1644fb6fe8a2728d26a472c6fdee89e71344103df3e37b8d8fc8dd2726101bd491e8e4d97278ab4290e333e463cc6c55d6cde42b846445266e5d4b12f5fe_0","lines":"    FcChar8 *s = malloc (l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":45,"col":18,"offset":1569},"end":{"line":45,"col":28,"offset":1579},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":18,"offset":1569},"end":{"line":45,"col":24,"offset":1575},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_0","lines":"    FcChar8 *s = malloc (l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":45,"col":18,"offset":1569},"end":{"line":45,"col":28,"offset":1579},"extra":{"metavars":{"$LEN":{"start":{"line":45,"col":26,"offset":1577},"end":{"line":45,"col":27,"offset":1578},"abstract_content":"l","propagated_value":{"svalue_start":{"line":44,"col":17,"offset":1537},"svalue_end":{"line":44,"col":30,"offset":1550},"svalue_abstract_content":"s1l+s2l+1"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9277983c03e8931d9da9407e60df97f07a3adf81b95f86725853d13430d797f6270855f5ade5ab5125ee27a73512058d87b47b72052b928a74453763a7ddbf5d_0","lines":"    FcChar8 *s = malloc (l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":49,"col":5,"offset":1609},"end":{"line":49,"col":24,"offset":1628},"extra":{"metavars":{"$FUN":{"start":{"line":49,"col":5,"offset":1609},"end":{"line":49,"col":11,"offset":1615},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_0","lines":"    memcpy (s, s1, s1l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":49,"col":5,"offset":1609},"end":{"line":49,"col":24,"offset":1628},"extra":{"metavars":{"$DST":{"start":{"line":49,"col":13,"offset":1617},"end":{"line":49,"col":14,"offset":1618},"abstract_content":"s","propagated_value":{"svalue_start":{"line":45,"col":18,"offset":1569},"svalue_end":{"line":45,"col":28,"offset":1579},"svalue_abstract_content":"malloc(l)"}},"$SRC":{"start":{"line":49,"col":16,"offset":1620},"end":{"line":49,"col":18,"offset":1622},"abstract_content":"s1"},"$LEN":{"start":{"line":49,"col":20,"offset":1624},"end":{"line":49,"col":23,"offset":1627},"abstract_content":"s1l","propagated_value":{"svalue_start":{"line":42,"col":19,"offset":1459},"svalue_end":{"line":42,"col":39,"offset":1479},"svalue_abstract_content":"strlen((char*s1)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a82069e753c1f1fce6d591e3f5bc8489f6848405e031ec240bb9187dbc269b48183da45a12ed6430db49f73aa839f41c6ede235c8760316875966246e098c9b_0","lines":"    memcpy (s, s1, s1l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":50,"col":5,"offset":1634},"end":{"line":50,"col":34,"offset":1663},"extra":{"metavars":{"$FUN":{"start":{"line":50,"col":5,"offset":1634},"end":{"line":50,"col":11,"offset":1640},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_1","lines":"    memcpy (s + s1l, s2, s2l + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":50,"col":5,"offset":1634},"end":{"line":50,"col":34,"offset":1663},"extra":{"metavars":{"$DST":{"start":{"line":50,"col":13,"offset":1642},"end":{"line":50,"col":20,"offset":1649},"abstract_content":"s+s1l"},"$SRC":{"start":{"line":50,"col":22,"offset":1651},"end":{"line":50,"col":24,"offset":1653},"abstract_content":"s2"},"$LEN":{"start":{"line":50,"col":26,"offset":1655},"end":{"line":50,"col":33,"offset":1662},"abstract_content":"s2l+1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"aed6205c708cd69e4fb7dee2ed3f39db61baed89461f88675e51d9b16b471211d445d3ef3fb9a496940b05526542b18b15452321cdf79dc49d47d92e95235af1_0","lines":"    memcpy (s + s1l, s2, s2l + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":57,"col":5,"offset":1716},"end":{"line":57,"col":14,"offset":1725},"extra":{"metavars":{"$PTR":{"start":{"line":57,"col":11,"offset":1722},"end":{"line":57,"col":12,"offset":1723},"abstract_content":"s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d34e33f3c0ebbd806a4dc2ac75dd12344cb4233bdbd03b0eaae1664bb3730fd325c6d398d53eac7e2d44353539ab30c306fa1a885f60560ebfcded5c62d5a77_0","lines":"    free (s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":109,"col":11,"offset":2806},"end":{"line":109,"col":23,"offset":2818},"extra":{"metavars":{"$VAR":{"start":{"line":109,"col":11,"offset":2806},"end":{"line":109,"col":23,"offset":2818},"abstract_content":"fold->->method"},"$VAL1":{"start":{"line":110,"col":9,"offset":2830},"end":{"line":110,"col":30,"offset":2851},"abstract_content":"FC_CASE_FOLD_EVEN_ODD"},"$VAL2":{"start":{"line":117,"col":8,"offset":3027},"end":{"line":117,"col":25,"offset":3044},"abstract_content":"FC_CASE_FOLD_FULL"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"49f16895718e8fb1493989361f560d3555177029d44fa08e5205c3c2d7479343f1ea5cedd9d4c8fab71a7a3d774df67bdefe1e317e6f804beff25601eb4165a3_0","lines":"\t\tswitch (fold->method) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":111,"col":7,"offset":2859},"end":{"line":112,"col":13,"offset":2908},"extra":{"metavars":{"$EXPR1":{"start":{"line":111,"col":26,"offset":2878},"end":{"line":111,"col":37,"offset":2889},"abstract_content":"fold->->upper"},"$EXPR2":{"start":{"line":111,"col":40,"offset":2892},"end":{"line":111,"col":41,"offset":2893},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"01243c01e224d8cd2aa8178257005b83240b120f8c246c2907b80f426bd382b500b47f5063dce5b82089183f69163849d5a25c927a10ecec4413e50ea55745a5_0","lines":"\t\t    if ((ucs4 & 1) != (fold->upper & 1))\n\t\t\treturn r;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":119,"col":7,"offset":3078},"end":{"line":119,"col":61,"offset":3132},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":7,"offset":3078},"end":{"line":119,"col":13,"offset":3084},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_2","lines":"\t\t    memcpy (w->utf8, fcCaseFoldChars + fold->offset, dlen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":119,"col":7,"offset":3078},"end":{"line":119,"col":61,"offset":3132},"extra":{"metavars":{"$DST":{"start":{"line":119,"col":15,"offset":3086},"end":{"line":119,"col":22,"offset":3093},"abstract_content":"w->->utf8"},"$SRC":{"start":{"line":119,"col":24,"offset":3095},"end":{"line":119,"col":54,"offset":3125},"abstract_content":"fcCaseFoldChars+fold->->offset"},"$LEN":{"start":{"line":119,"col":56,"offset":3127},"end":{"line":119,"col":60,"offset":3131},"abstract_content":"dlen"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c53b16c830486c5d266df523f2f0530e5db120a6ccf693b09c0ac1c761b1a0dac95c90b6eaf836768536d1409d6e4d0189549f4e1b4c11dabf3d3456a741fde6_0","lines":"\t\t    memcpy (w->utf8, fcCaseFoldChars + fold->offset, dlen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":143,"col":2,"offset":3463},"end":{"line":144,"col":15,"offset":3499},"extra":{"metavars":{"$EXPR1":{"start":{"line":143,"col":7,"offset":3468},"end":{"line":143,"col":8,"offset":3469},"abstract_content":"r"},"$EXPR2":{"start":{"line":143,"col":11,"offset":3472},"end":{"line":143,"col":21,"offset":3482},"abstract_content":"*w->->read++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c544c6a61b9b974b71ce594d4b032f583820ea7874c87fe7e2c80bb388a0f428c2cd63276cef5d025ca80f9bae6cfd39ded946a1808ff45b80182e686baa7912_0","lines":"\tif ((r = *w->read++))\n\t    return r;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":169,"col":9,"offset":3951},"end":{"line":169,"col":31,"offset":3973},"extra":{"metavars":{"$RET":{"start":{"line":169,"col":9,"offset":3951},"end":{"line":169,"col":12,"offset":3954},"abstract_content":"dst","propagated_value":{"svalue_start":{"line":169,"col":15,"offset":3957},"svalue_end":{"line":169,"col":31,"offset":3973},"svalue_abstract_content":"malloc(len+1)"}},"$FUN":{"start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":21,"offset":3963},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"62e1d8b1d97f997b8b6b20eae9a58ca04ab9ec9d9f211e323171183fb4f346bb80876adec183d297a952ae5010786636c73694439f686dc860402e980e4edafb_0","lines":"    d = dst = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":31,"offset":3973},"extra":{"metavars":{"$FUN":{"start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":21,"offset":3963},"abstract_content":"malloc"},"$X":{"start":{"line":169,"col":23,"offset":3965},"end":{"line":169,"col":26,"offset":3968},"abstract_content":"len"},"$Y":{"start":{"line":169,"col":29,"offset":3971},"end":{"line":169,"col":30,"offset":3972},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0c4b3cc8f397613d1aeb645046c1dd6ee107174107e4b8d259b94a87f1d54faf1aec1cdb11f70dc9d0a26767b12018cc20f71e4af23966dbb9d378a455c15db6_0","lines":"    d = dst = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":31,"offset":3973},"extra":{"metavars":{"$FUN":{"start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":21,"offset":3963},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_1","lines":"    d = dst = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":169,"col":15,"offset":3957},"end":{"line":169,"col":31,"offset":3973},"extra":{"metavars":{"$LEN":{"start":{"line":169,"col":23,"offset":3965},"end":{"line":169,"col":30,"offset":3972},"abstract_content":"len+1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2f66614edaf5f8cdc4397dd2ec6d655a0999068d8e68bd7e1b52e2b7940016a872e027f726eb1327f639eb379d6122a3ae6361b10f7233931baa83030e62b545_0","lines":"    d = dst = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":565,"col":5,"offset":10707},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":565,"col":11,"offset":10713},"end":{"line":565,"col":12,"offset":10714},"abstract_content":"s"},"$EXPR2":{"start":{"line":565,"col":15,"offset":10717},"end":{"line":565,"col":19,"offset":10721},"abstract_content":"0x80"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d14adb21c4a7ba14614dfeeb418fb28198e30b3daa0c3438c16e9459dcea5ff72167713d770c1fc885bdcb82db2a1b801fe961b4e9c712001081c0001cd5ce0a_0","lines":"    if (!(s & 0x80))\n    {\n\tresult = s;\n\textra = 0;\n    }\n    else if (!(s & 0x40))\n    {\n\treturn -1;\n    }\n    else if (!(s & 0x20))\n    {\n\tresult = s & 0x1f;\n\textra = 1;\n    }\n    else if (!(s & 0x10))\n    {\n\tresult = s & 0xf;\n\textra = 2;\n    }\n    else if (!(s & 0x08))\n    {\n\tresult = s & 0x07;\n\textra = 3;\n    }\n    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":570,"col":10,"offset":10770},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":570,"col":16,"offset":10776},"end":{"line":570,"col":17,"offset":10777},"abstract_content":"s"},"$EXPR2":{"start":{"line":570,"col":20,"offset":10780},"end":{"line":570,"col":24,"offset":10784},"abstract_content":"0x40"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce0ed625ca4e2f5f851e19642ae9b8be4d7ce808e6d58a01c39f164c944a9e95c0107352c15747c454b82af21abba76dd06356a11e35728511a7cd7b015e7240_0","lines":"    else if (!(s & 0x40))\n    {\n\treturn -1;\n    }\n    else if (!(s & 0x20))\n    {\n\tresult = s & 0x1f;\n\textra = 1;\n    }\n    else if (!(s & 0x10))\n    {\n\tresult = s & 0xf;\n\textra = 2;\n    }\n    else if (!(s & 0x08))\n    {\n\tresult = s & 0x07;\n\textra = 3;\n    }\n    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":574,"col":10,"offset":10820},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":574,"col":16,"offset":10826},"end":{"line":574,"col":17,"offset":10827},"abstract_content":"s"},"$EXPR2":{"start":{"line":574,"col":20,"offset":10830},"end":{"line":574,"col":24,"offset":10834},"abstract_content":"0x20"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc27d3bb185902bf7480c63c6848149087083e5e93959973360035f76ceef4add90384a4ce4514061692ae45aae34a779727f0d7f9088827048b3995b73cebdd_0","lines":"    else if (!(s & 0x20))\n    {\n\tresult = s & 0x1f;\n\textra = 1;\n    }\n    else if (!(s & 0x10))\n    {\n\tresult = s & 0xf;\n\textra = 2;\n    }\n    else if (!(s & 0x08))\n    {\n\tresult = s & 0x07;\n\textra = 3;\n    }\n    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":579,"col":10,"offset":10890},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":579,"col":16,"offset":10896},"end":{"line":579,"col":17,"offset":10897},"abstract_content":"s"},"$EXPR2":{"start":{"line":579,"col":20,"offset":10900},"end":{"line":579,"col":24,"offset":10904},"abstract_content":"0x10"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"98dfc5b91c543807bcb44513015c2c62afc481dce02654ccdbda9963ebc290fd7bdaae43409604b8643d9a849d7b7563b28ee26fe705b77ce208b789b8aa6cce_0","lines":"    else if (!(s & 0x10))\n    {\n\tresult = s & 0xf;\n\textra = 2;\n    }\n    else if (!(s & 0x08))\n    {\n\tresult = s & 0x07;\n\textra = 3;\n    }\n    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":584,"col":10,"offset":10959},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":584,"col":16,"offset":10965},"end":{"line":584,"col":17,"offset":10966},"abstract_content":"s"},"$EXPR2":{"start":{"line":584,"col":20,"offset":10969},"end":{"line":584,"col":24,"offset":10973},"abstract_content":"0x08"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b4e2507d4307c5d12725132ad8a37df9243009f966a55290d86181d2c3f64f7f45a2fc25764c1ebe5bb17da04b3cb9bc4f88dce7b6e6a78e4b7fe99a3204e524_0","lines":"    else if (!(s & 0x08))\n    {\n\tresult = s & 0x07;\n\textra = 3;\n    }\n    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":589,"col":10,"offset":11029},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":589,"col":16,"offset":11035},"end":{"line":589,"col":17,"offset":11036},"abstract_content":"s"},"$EXPR2":{"start":{"line":589,"col":20,"offset":11039},"end":{"line":589,"col":24,"offset":11043},"abstract_content":"0x04"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"824dd75f16a5131723e7bc1d8d0ec0fe91d3c773648b5a5b5b2b969cfcea59902ba9683030c95bbc6e74e2a367642e4b9400bdb872e209fa66c3527c98b76209_0","lines":"    else if (!(s & 0x04))\n    {\n\tresult = s & 0x03;\n\textra = 4;\n    }\n    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":594,"col":10,"offset":11099},"end":{"line":602,"col":6,"offset":11194},"extra":{"metavars":{"$EXPR1":{"start":{"line":594,"col":18,"offset":11107},"end":{"line":594,"col":19,"offset":11108},"abstract_content":"s"},"$EXPR2":{"start":{"line":594,"col":22,"offset":11111},"end":{"line":594,"col":26,"offset":11115},"abstract_content":"0x02"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8000aacb21445a1e3071b7795e16f47305dfb4272699f0c26b177492878a9d1ecdefcb5bde8fdcec544dd63a056be63d22469cfd27a3332b30efe264dbc04e3c_0","lines":"    else if ( ! (s & 0x02))\n    {\n\tresult = s & 0x01;\n\textra = 5;\n    }\n    else\n    {\n\treturn -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":773,"col":2,"offset":14466},"end":{"line":773,"col":18,"offset":14482},"extra":{"metavars":{"$PTR":{"start":{"line":773,"col":8,"offset":14472},"end":{"line":773,"col":16,"offset":14480},"abstract_content":"buf->->buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"583cef2bd710e7a2b1669b756626b5756321815f1eecb3e64ab72e0704b3b90b13cbf34d620d815b01d1d9a603a08b67b8a1d56bf5f08d89227a327fa85670be_0","lines":"\tfree (buf->buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":786,"col":2,"offset":14623},"end":{"line":786,"col":29,"offset":14650},"extra":{"metavars":{"$RET":{"start":{"line":786,"col":2,"offset":14623},"end":{"line":786,"col":5,"offset":14626},"abstract_content":"ret"},"$FUN":{"start":{"line":786,"col":8,"offset":14629},"end":{"line":786,"col":14,"offset":14635},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"08f70616b708f85d68d32fca58b7cf92b1b85a7cf9d1006d1f033b79b16c930e32d8537e53093ffe4677af54dda234bacce7f3198f57c6b112c42ed845d52538_0","lines":"\tret = malloc (buf->len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":786,"col":8,"offset":14629},"end":{"line":786,"col":29,"offset":14650},"extra":{"metavars":{"$FUN":{"start":{"line":786,"col":8,"offset":14629},"end":{"line":786,"col":14,"offset":14635},"abstract_content":"malloc"},"$X":{"start":{"line":786,"col":16,"offset":14637},"end":{"line":786,"col":24,"offset":14645},"abstract_content":"buf->->len"},"$Y":{"start":{"line":786,"col":27,"offset":14648},"end":{"line":786,"col":28,"offset":14649},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ad38ba91f825f0cd17ed0ab44380e42c0bd498b81ec1ab5e4e22ded42b19b53a769b3aa2b5c6f52ce32081e658ceb470d0dd55ddce7293f33f707609cc7eee28_0","lines":"\tret = malloc (buf->len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":786,"col":8,"offset":14629},"end":{"line":786,"col":29,"offset":14650},"extra":{"metavars":{"$FUN":{"start":{"line":786,"col":8,"offset":14629},"end":{"line":786,"col":14,"offset":14635},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_2","lines":"\tret = malloc (buf->len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":789,"col":2,"offset":14672},"end":{"line":789,"col":34,"offset":14704},"extra":{"metavars":{"$FUN":{"start":{"line":789,"col":2,"offset":14672},"end":{"line":789,"col":8,"offset":14678},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_3","lines":"\tmemcpy (ret, buf->buf, buf->len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":821,"col":6,"offset":15136},"end":{"line":821,"col":36,"offset":15166},"extra":{"metavars":{"$RET":{"start":{"line":821,"col":6,"offset":15136},"end":{"line":821,"col":9,"offset":15139},"abstract_content":"new"},"$FUN":{"start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":19,"offset":15149},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"04940431730f5a767df52a8c8ec8e5361382012cfb818edc95da58e8bf2ccc7e67e81374380bfd9b390dd7a3661064d6f0d2239403a2c8da123f529fd4d54035_0","lines":"\t    new = realloc (buf->buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":36,"offset":15166},"extra":{"metavars":{"$X":{"start":{"line":820,"col":13,"offset":15116},"end":{"line":820,"col":22,"offset":15125},"abstract_content":"buf->->size"},"$Y":{"start":{"line":820,"col":25,"offset":15128},"end":{"line":820,"col":26,"offset":15129},"abstract_content":"2"},"$FUN":{"start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":19,"offset":15149},"abstract_content":"realloc"},"$ARG1":{"start":{"line":821,"col":21,"offset":15151},"end":{"line":821,"col":29,"offset":15159},"abstract_content":"buf->->buf"},"$N":{"start":{"line":821,"col":31,"offset":15161},"end":{"line":821,"col":35,"offset":15165},"abstract_content":"size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"65d1af2e4f32f2cbe4c769a7b3bfba05d2efe368543be29a54d1db74a8be0897e6a57f3bdb185163de7af011352850af53579c111bcb3f4f7561836ce04b5f5b_0","lines":"\t    new = realloc (buf->buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":36,"offset":15166},"extra":{"metavars":{"$FUN":{"start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":19,"offset":15149},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"327cbe20ef4287a013e9ac8658e65566700cc65317f085e4276c20e95a2d9d90f9738dda00ecc764a012d20c4387d01dcc4008580556c121093aae6c5b5014ac_0","lines":"\t    new = realloc (buf->buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":821,"col":12,"offset":15142},"end":{"line":821,"col":36,"offset":15166},"extra":{"metavars":{"$PTR":{"start":{"line":821,"col":21,"offset":15151},"end":{"line":821,"col":29,"offset":15159},"abstract_content":"buf->->buf"},"$LEN":{"start":{"line":821,"col":31,"offset":15161},"end":{"line":821,"col":35,"offset":15165},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af46300bf77a42ba61551b1007d30de38b1eac0244922744f634ca812fcc12038b423c0a004066acd86c43a7ebc2a99af2c4e9df4471c00b43e29f8595af3c04_0","lines":"\t    new = realloc (buf->buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":826,"col":12,"offset":15219},"end":{"line":826,"col":25,"offset":15232},"extra":{"metavars":{"$X":{"start":{"line":825,"col":13,"offset":15192},"end":{"line":825,"col":22,"offset":15201},"abstract_content":"buf->->size"},"$Y":{"start":{"line":825,"col":25,"offset":15204},"end":{"line":825,"col":27,"offset":15206},"abstract_content":"64"},"$FUN":{"start":{"line":826,"col":12,"offset":15219},"end":{"line":826,"col":18,"offset":15225},"abstract_content":"malloc"},"$N":{"start":{"line":826,"col":20,"offset":15227},"end":{"line":826,"col":24,"offset":15231},"abstract_content":"size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ebc8a3897a2a9a1380d61b0a166332c58af18c9ebf10e309adaaf6f05d121b907015a9a7721d8bcbf02421d183ed27e62e8ea552d7234def85161721f2c91f28_0","lines":"\t    new = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":826,"col":12,"offset":15219},"end":{"line":826,"col":25,"offset":15232},"extra":{"metavars":{"$FUN":{"start":{"line":826,"col":12,"offset":15219},"end":{"line":826,"col":18,"offset":15225},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_3","lines":"\t    new = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":826,"col":12,"offset":15219},"end":{"line":826,"col":25,"offset":15232},"extra":{"metavars":{"$LEN":{"start":{"line":826,"col":20,"offset":15227},"end":{"line":826,"col":24,"offset":15231},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44dcf44b7c7707ef5f166712c19329b6ed29a04d87b13d10a808b956ba6eb6d76285579c93416ec87e14a87a21c33e6bf5ef091df5e84b3a66599be7222e56e4_0","lines":"\t    new = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":830,"col":3,"offset":15284},"end":{"line":830,"col":35,"offset":15316},"extra":{"metavars":{"$FUN":{"start":{"line":830,"col":3,"offset":15284},"end":{"line":830,"col":9,"offset":15290},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_4","lines":"\t\tmemcpy (new, buf->buf, buf->len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":889,"col":12,"offset":16250},"end":{"line":889,"col":19,"offset":16257},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":889,"col":12,"offset":16250},"end":{"line":889,"col":15,"offset":16253},"abstract_content":"len"},"$SIGNED":{"start":{"line":889,"col":18,"offset":16256},"end":{"line":889,"col":19,"offset":16257},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"58555fb848debc427b5a013606b14f234128dd78b591e0959e6224ba2f5a7812dd6c7d24dada1eebb562e55fcd443b41a6f8c1902fa0da0aa61abcdcc8ded104_0","lines":"    size_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":916,"col":11,"offset":16749},"end":{"line":916,"col":48,"offset":16786},"extra":{"metavars":{"$FUN":{"start":{"line":916,"col":11,"offset":16749},"end":{"line":916,"col":17,"offset":16755},"abstract_content":"malloc"},"$X":{"start":{"line":916,"col":19,"offset":16757},"end":{"line":916,"col":35,"offset":16773},"abstract_content":"sizeof(FcChar8)"},"$Y":{"start":{"line":916,"col":39,"offset":16777},"end":{"line":916,"col":46,"offset":16784},"abstract_content":"len+1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0a0afc8195b3dc09d2daee7af288a1eacbca1ce207d55113584e62092370f4ae0854b3b4668ae64a4eb924931b6117c8d19bec1c099cf7e99728c5837a117e09_0","lines":"    ret = malloc (sizeof (FcChar8) * (len + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":916,"col":11,"offset":16749},"end":{"line":916,"col":48,"offset":16786},"extra":{"metavars":{"$FUN":{"start":{"line":916,"col":11,"offset":16749},"end":{"line":916,"col":17,"offset":16755},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_4","lines":"    ret = malloc (sizeof (FcChar8) * (len + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":928,"col":2,"offset":16968},"end":{"line":928,"col":20,"offset":16986},"extra":{"metavars":{"$FUN":{"start":{"line":928,"col":2,"offset":16968},"end":{"line":928,"col":8,"offset":16974},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_5","lines":"\tmemcpy (p, s, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":956,"col":21,"offset":17388},"end":{"line":956,"col":38,"offset":17405},"extra":{"metavars":{"$FUN":{"start":{"line":956,"col":21,"offset":17388},"end":{"line":956,"col":27,"offset":17394},"abstract_content":"malloc"},"$X":{"start":{"line":956,"col":29,"offset":17396},"end":{"line":956,"col":33,"offset":17400},"abstract_content":"size","propagated_value":{"svalue_start":{"line":955,"col":9,"offset":17322},"svalue_end":{"line":955,"col":53,"offset":17366},"svalue_abstract_content":"strlen((char*home)+strlen((char*s)"}},"$Y":{"start":{"line":956,"col":36,"offset":17403},"end":{"line":956,"col":37,"offset":17404},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba91d68ecfd1fb7e9dedbbcb50225e58c827d25f8248f58f53329ec5f95537cd31a2873807e66c1f0dc447846b7ab6e0d8b1ec651441ea4b3a5f72d660372036_0","lines":"\tfull = (FcChar8 *) malloc (size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":956,"col":21,"offset":17388},"end":{"line":956,"col":38,"offset":17405},"extra":{"metavars":{"$FUN":{"start":{"line":956,"col":21,"offset":17388},"end":{"line":956,"col":27,"offset":17394},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_5","lines":"\tfull = (FcChar8 *) malloc (size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":956,"col":21,"offset":17388},"end":{"line":956,"col":38,"offset":17405},"extra":{"metavars":{"$LEN":{"start":{"line":956,"col":29,"offset":17396},"end":{"line":956,"col":37,"offset":17404},"abstract_content":"size+1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9e850153f868e3e8e07a0462ee3ac9b5e36148612a76b3f5091da4dfc0250310e48201a50fea78347ef9d4cd13d0ac88d416022b4284ac6fb7f3465ea0c68c91_0","lines":"\tfull = (FcChar8 *) malloc (size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":959,"col":2,"offset":17438},"end":{"line":959,"col":39,"offset":17475},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"4e8b3e1821ac4dfb4bb3e584dc63ed5c6643d0553cd5b0d6c5c493ccf3ec0f79eb3bb5a388cd243084cc887639165adf3c0539862e900773784e471c80de710b_0","lines":"\tstrcpy ((char *) full, (char *) home);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":959,"col":2,"offset":17438},"end":{"line":959,"col":39,"offset":17475},"extra":{"metavars":{"$FUN":{"start":{"line":959,"col":2,"offset":17438},"end":{"line":959,"col":8,"offset":17444},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aabd37a324d7bde51a6bcb119a7f95b90322f663dfd1662b12107ccbda8ffc43ff64b764b17a2c77a7b0eee7218f8176ad8ca4d5ea84d2702575601c845beffb_0","lines":"\tstrcpy ((char *) full, (char *) home);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":960,"col":2,"offset":17478},"end":{"line":960,"col":40,"offset":17516},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"4e8b3e1821ac4dfb4bb3e584dc63ed5c6643d0553cd5b0d6c5c493ccf3ec0f79eb3bb5a388cd243084cc887639165adf3c0539862e900773784e471c80de710b_1","lines":"\tstrcat ((char *) full, (char *) s + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":960,"col":2,"offset":17478},"end":{"line":960,"col":40,"offset":17516},"extra":{"metavars":{"$FUN":{"start":{"line":960,"col":2,"offset":17478},"end":{"line":960,"col":8,"offset":17484},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43adec0ce300c06e661959b668f0e8c2e66ef80846a3817b5ee4b24206af8fd52511dc7e414f04de8bc42c043e572bbc4276aaf0671c6b670f09644a8d644701_0","lines":"\tstrcat ((char *) full, (char *) s + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":998,"col":11,"offset":18174},"end":{"line":998,"col":38,"offset":18201},"extra":{"metavars":{"$FUN":{"start":{"line":998,"col":11,"offset":18174},"end":{"line":998,"col":17,"offset":18180},"abstract_content":"malloc"},"$X":{"start":{"line":998,"col":20,"offset":18183},"end":{"line":998,"col":32,"offset":18195},"abstract_content":"slash-file"},"$Y":{"start":{"line":998,"col":36,"offset":18199},"end":{"line":998,"col":37,"offset":18200},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99839b00359bf8f1c586ee5766d5f8079493128174fdc505ce5f3312a3c0ca597e0a9dde1a3f5e7e67e5157f8269d2df7789f9acff6152aec689cdbeca11a59b_0","lines":"    dir = malloc ((slash - file) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":998,"col":11,"offset":18174},"end":{"line":998,"col":38,"offset":18201},"extra":{"metavars":{"$FUN":{"start":{"line":998,"col":11,"offset":18174},"end":{"line":998,"col":17,"offset":18180},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_6","lines":"    dir = malloc ((slash - file) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-strncpy-stpncpy-strlcpy","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1001,"col":5,"offset":18232},"end":{"line":1001,"col":62,"offset":18289},"extra":{"metavars":{"$FUN":{"start":{"line":1001,"col":5,"offset":18232},"end":{"line":1001,"col":12,"offset":18239},"abstract_content":"strncpy"},"$DST":{"start":{"line":1001,"col":14,"offset":18241},"end":{"line":1001,"col":26,"offset":18253},"abstract_content":"(char*dir"},"$SRC":{"start":{"line":1001,"col":43,"offset":18270},"end":{"line":1001,"col":47,"offset":18274},"abstract_content":"file"}},"message":"The software uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/806","https://github.com/0xdea/advisories/blob/master/2020-07-solaris-whodo-w.txt","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"77188afd3205c49ea622e7238e6d0ae061036d12476ca17c6a04d438825b230148dea6a4a694ddbf631a9b8b9070cb74e30f2cfc73d063b3fcf1616168a14299_0","lines":"    strncpy ((char *) dir, (const char *) file, slash - file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1001,"col":5,"offset":18232},"end":{"line":1001,"col":62,"offset":18289},"extra":{"metavars":{"$FUN":{"start":{"line":1001,"col":5,"offset":18232},"end":{"line":1001,"col":12,"offset":18239},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2b8526b22bef827fe4cf224129431248b99c6dd1d2df90de298752cfc3f3944a97cbdfd12dbca9f1e314c85efafb56eed0913511031c40e71f92d1945f63a911_0","lines":"    strncpy ((char *) dir, (const char *) file, slash - file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1026,"col":12,"offset":18711},"end":{"line":1026,"col":25,"offset":18724},"extra":{"metavars":{"$X":{"start":{"line":1025,"col":12,"offset":18675},"end":{"line":1025,"col":31,"offset":18694},"abstract_content":"strlen((char*s)"},"$Y":{"start":{"line":1025,"col":34,"offset":18697},"end":{"line":1025,"col":35,"offset":18698},"abstract_content":"1"},"$FUN":{"start":{"line":1026,"col":12,"offset":18711},"end":{"line":1026,"col":18,"offset":18717},"abstract_content":"malloc"},"$N":{"start":{"line":1026,"col":20,"offset":18719},"end":{"line":1026,"col":24,"offset":18723},"abstract_content":"size","propagated_value":{"svalue_start":{"line":1025,"col":12,"offset":18675},"svalue_end":{"line":1025,"col":35,"offset":18698},"svalue_abstract_content":"strlen((char*s)+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d177efcf254c3a1be848603d309e1d4d654e0a00215b7a9f83ef56a32e55bdb96fc8d2cac47be49cff2746379bc42132c5c5b1754ce9702df34e8414e8c00df6_0","lines":"    file = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1026,"col":12,"offset":18711},"end":{"line":1026,"col":25,"offset":18724},"extra":{"metavars":{"$FUN":{"start":{"line":1026,"col":12,"offset":18711},"end":{"line":1026,"col":18,"offset":18717},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_7","lines":"    file = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1026,"col":12,"offset":18711},"end":{"line":1026,"col":25,"offset":18724},"extra":{"metavars":{"$LEN":{"start":{"line":1026,"col":20,"offset":18719},"end":{"line":1026,"col":24,"offset":18723},"abstract_content":"size","propagated_value":{"svalue_start":{"line":1025,"col":12,"offset":18675},"svalue_end":{"line":1025,"col":35,"offset":18698},"svalue_abstract_content":"strlen((char*s)+1"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44dcf44b7c7707ef5f166712c19329b6ed29a04d87b13d10a808b956ba6eb6d76285579c93416ec87e14a87a21c33e6bf5ef091df5e84b3a66599be7222e56e4_1","lines":"    file = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1040,"col":11,"offset":18976},"end":{"line":1040,"col":20,"offset":18985},"extra":{"metavars":{"$VAR":{"start":{"line":1040,"col":11,"offset":18976},"end":{"line":1040,"col":20,"offset":18985},"abstract_content":"s-slash"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5ca0411ce11afe17f4f2fe3030ee3bca0b4eafc52893df07edf6b603595f5af5bfba2ffa839dfe274aa5f96d240f23585109b7285cebd60d4254418420d5b79_0","lines":"\t\tswitch (s - slash) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1064,"col":2,"offset":19404},"end":{"line":1065,"col":12,"offset":19435},"extra":{"metavars":{"$EXPR1":{"start":{"line":1064,"col":8,"offset":19410},"end":{"line":1064,"col":12,"offset":19414},"abstract_content":"*f++"},"$EXPR2":{"start":{"line":1064,"col":15,"offset":19417},"end":{"line":1064,"col":19,"offset":19421},"abstract_content":"*s++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7675b85d3c3b4b819537b67927331dc08b71e6616c748d09ce05edf3c9147ad2752522cf0d6a9eb0b2355d465bab46522aa43b27a597bb41f4cb9abe216acdd_0","lines":"\tif (!(*f++ = *s++))\n\t    break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1081,"col":8,"offset":19667},"end":{"line":1081,"col":16,"offset":19675},"extra":{"metavars":{"$NARROW":{"start":{"line":1081,"col":8,"offset":19667},"end":{"line":1081,"col":12,"offset":19671},"abstract_content":"last"},"$LARGE":{"start":{"line":1081,"col":15,"offset":19674},"end":{"line":1081,"col":16,"offset":19675},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc6f9c19d3201e99346f3358fcf0533c7490acc2822d6d6788a8a115fc84a557bd0c58c2a2983eac9ec4c54b36637184ac655d03bfd97b15edbd7898847076be_0","lines":"  char last = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1130,"col":6,"offset":20407},"end":{"line":1130,"col":44,"offset":20445},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":1130,"col":6,"offset":20407},"end":{"line":1130,"col":12,"offset":20413},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3958cfd4ad6b1252e2cfa5d98b809606a9a9007a8f3a15d99f0073b19628713289857db50c817e8914bd6a3d123370ddac1faa4ddb5967462c699bbb12d88a98_0","lines":"\tif (getcwd ((char *) cwd, FC_MAX_FILE_LEN) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1150,"col":21,"offset":20764},"end":{"line":1150,"col":47,"offset":20790},"extra":{"metavars":{"$FUN":{"start":{"line":1150,"col":21,"offset":20764},"end":{"line":1150,"col":27,"offset":20770},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_8","lines":"    FcStrSet\t*set = malloc (sizeof (FcStrSet));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1165,"col":22,"offset":21106},"end":{"line":1165,"col":82,"offset":21166},"extra":{"metavars":{"$FUN":{"start":{"line":1165,"col":22,"offset":21106},"end":{"line":1165,"col":28,"offset":21112},"abstract_content":"malloc"},"$X":{"start":{"line":1165,"col":31,"offset":21115},"end":{"line":1165,"col":59,"offset":21143},"abstract_content":"set->->size+growElements+1"},"$Y":{"start":{"line":1165,"col":63,"offset":21147},"end":{"line":1165,"col":81,"offset":21165},"abstract_content":"sizeof(FcChar8*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"93df2a7f63885d4ef595d82f2bda033f5b47d0d8e5385fc3761937485e2945ab0035b806d64842b47e2507fb8946ba666cc7d491cfd8bc3a773e30128422aa2b_0","lines":"    FcChar8 **strs = malloc ((set->size + growElements + 1) * sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1165,"col":22,"offset":21106},"end":{"line":1165,"col":82,"offset":21166},"extra":{"metavars":{"$FUN":{"start":{"line":1165,"col":22,"offset":21106},"end":{"line":1165,"col":28,"offset":21112},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_9","lines":"    FcChar8 **strs = malloc ((set->size + growElements + 1) * sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1169,"col":9,"offset":21233},"end":{"line":1169,"col":64,"offset":21288},"extra":{"metavars":{"$FUN":{"start":{"line":1169,"col":9,"offset":21233},"end":{"line":1169,"col":15,"offset":21239},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e7705bb993027ed566c95d92daa6ea7427117c53e2c3666eb8d7212f0c18e15d7f7f86599520dd48e30a45296ac4d0c72223fc09f91b5f5170d7924e1a06b94_6","lines":"        memcpy (strs, set->strs, set->num * sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1171,"col":9,"offset":21317},"end":{"line":1171,"col":26,"offset":21334},"extra":{"metavars":{"$PTR":{"start":{"line":1171,"col":15,"offset":21323},"end":{"line":1171,"col":24,"offset":21332},"abstract_content":"set->->strs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"159556a2676b7b28d8b1fdb2b50bf0ddcad8e7c64c77f53968a9517c5e94d720cfb6ece5da2e623e33d9ac520b72469b66b1d61c29394087cf051c3268b0defc_0","lines":"        free (set->strs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1263,"col":8,"offset":23104},"end":{"line":1263,"col":16,"offset":23112},"extra":{"metavars":{"$TYPE":{"start":{"line":1253,"col":11,"offset":22898},"end":{"line":1253,"col":15,"offset":22902},"abstract_content":"char"},"$EXPR2":{"start":{"line":1253,"col":21,"offset":22908},"end":{"line":1253,"col":30,"offset":22917},"abstract_content":"languages"},"$PTR1":{"start":{"line":1263,"col":8,"offset":23104},"end":{"line":1263,"col":12,"offset":23108},"abstract_content":"next","propagated_value":{"svalue_start":{"line":1261,"col":20,"offset":23073},"svalue_end":{"line":1261,"col":35,"offset":23088},"svalue_abstract_content":"strchr(p':')"}},"$PTR2":{"start":{"line":1263,"col":15,"offset":23111},"end":{"line":1263,"col":16,"offset":23112},"abstract_content":"p"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0103ce98641688668de4beaf217572ab1a07b5d0198aa4054a3824b36bba82c9401ad2d25f21e5d1605b625a156bbeff129a598a7c849427d0176d7779aafaba_0","lines":"\tlen = next - p;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1264,"col":2,"offset":23115},"end":{"line":1264,"col":25,"offset":23138},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1264,"col":2,"offset":23115},"end":{"line":1264,"col":5,"offset":23118},"abstract_content":"len"},"$SIGNED":{"start":{"line":1264,"col":21,"offset":23134},"end":{"line":1264,"col":24,"offset":23137},"abstract_content":"127"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"543928fa952ec1ec24a4360c1279afc4566b444098fec114bd1a6e234722a0fd448ee4af31b1598b49f61e37b334c0e6969f340e4ed46ecb7ae8ccd613ad47e2_0","lines":"\tlen = FC_MIN (len, 127);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1265,"col":2,"offset":23141},"end":{"line":1265,"col":33,"offset":23172},"extra":{"metavars":{"$FUN":{"start":{"line":1265,"col":2,"offset":23141},"end":{"line":1265,"col":9,"offset":23148},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2b8526b22bef827fe4cf224129431248b99c6dd1d2df90de298752cfc3f3944a97cbdfd12dbca9f1e314c85efafb56eed0913511031c40e71f92d1945f63a911_1","lines":"\tstrncpy ((char *) lang, p, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1307,"col":6,"offset":23930},"end":{"line":1308,"col":44,"offset":24014},"extra":{"metavars":{"$FUN":{"start":{"line":1307,"col":6,"offset":23930},"end":{"line":1307,"col":13,"offset":23937},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f16bd5c460e59aba1aea17c6a75ff7aeac3217d13b6fc1d146fe2d1e4fe1cca912937539a4c1c549202580db07fd7c4cecca28527d1c87a690b0bf620ddb22ee_0","lines":"\t    memmove (&set->strs[i], &set->strs[i+1],\n\t\t     (set->num - i) * sizeof (FcChar8 *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1341,"col":2,"offset":24531},"end":{"line":1341,"col":19,"offset":24548},"extra":{"metavars":{"$PTR":{"start":{"line":1341,"col":8,"offset":24537},"end":{"line":1341,"col":17,"offset":24546},"abstract_content":"set->->strs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"159556a2676b7b28d8b1fdb2b50bf0ddcad8e7c64c77f53968a9517c5e94d720cfb6ece5da2e623e33d9ac520b72469b66b1d61c29394087cf051c3268b0defc_1","lines":"\tfree (set->strs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1342,"col":5,"offset":24553},"end":{"line":1342,"col":16,"offset":24564},"extra":{"metavars":{"$PTR":{"start":{"line":1342,"col":11,"offset":24559},"end":{"line":1342,"col":14,"offset":24562},"abstract_content":"set"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c15ee5709955bbd353bc77bbc474a2dea14761540e72b2ec5ab2ebf0bcb1fb3ee4cc681b4c8a28911388739321a7f868b01ce97f924c11443632cbbfed68457d_0","lines":"    free (set);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1350,"col":12,"offset":24647},"end":{"line":1350,"col":39,"offset":24674},"extra":{"metavars":{"$FUN":{"start":{"line":1350,"col":12,"offset":24647},"end":{"line":1350,"col":18,"offset":24653},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b5cbdd4d6b34ee96dbada2c515ced5f5a8990dc59a1d4e0e94e590ac5248d5172f9c575510e3f8d9e783c20ccade69365da21a59128fffde4a087bcdde46151_10","lines":"    list = malloc (sizeof (FcStrList));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","start":{"line":1377,"col":5,"offset":25057},"end":{"line":1377,"col":17,"offset":25069},"extra":{"metavars":{"$PTR":{"start":{"line":1377,"col":11,"offset":25063},"end":{"line":1377,"col":15,"offset":25067},"abstract_content":"list"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"037902754007bfa575165bae09d72dc80d2b2ca6bb437b6a99312b6f2f9afe0f4aa52d685051280620e595cba32c426f8d9446fd1f944f9cfbefcf7f5c04b933_0","lines":"    free (list);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcweight.c","start":{"line":48,"col":3,"offset":1745},"end":{"line":48,"col":51,"offset":1793},"extra":{"metavars":{"$ASSERT":{"start":{"line":48,"col":3,"offset":1745},"end":{"line":48,"col":9,"offset":1751},"abstract_content":"assert"},"$A":{"start":{"line":48,"col":11,"offset":1753},"end":{"line":48,"col":13,"offset":1755},"abstract_content":"dx","propagated_value":{"svalue_start":{"line":46,"col":12,"offset":1714},"svalue_end":{"line":46,"col":19,"offset":1721},"svalue_abstract_content":"x2-x1"}},"$B":{"start":{"line":48,"col":16,"offset":1758},"end":{"line":48,"col":17,"offset":1759},"abstract_content":"0"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"94b880ebbd0a7bcf0df0f69553793581bb4544e7fc196c8a70bd96665abf317beba4c049dccbc230912e4e60af4c70c74488f089a55c543c44a68fead53c752b_0","lines":"  assert (dx > 0 && dy >= 0 && x1 <= x && x <= x2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcweight.c","start":{"line":62,"col":2,"offset":2019},"end":{"line":63,"col":5,"offset":2063},"extra":{"metavars":{"$EXPR1":{"start":{"line":62,"col":7,"offset":2024},"end":{"line":62,"col":12,"offset":2029},"abstract_content":"i=1"},"$EXPR2":{"start":{"line":62,"col":14,"offset":2031},"end":{"line":62,"col":35,"offset":2052},"abstract_content":"ot_weight>map[i].ot"},"$EXPR3":{"start":{"line":62,"col":37,"offset":2054},"end":{"line":62,"col":40,"offset":2057},"abstract_content":"i++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d2bda4d741be2926a23cacb44e494174596f33f434a5355010eec512cd4786ea3253aa148afaab2a345ef9cf825480ef15c4315448b95bde97ec11381ce82b53_0","lines":"\tfor (i = 1; ot_weight > map[i].ot; i++)\n\t  ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcweight.c","start":{"line":79,"col":2,"offset":2366},"end":{"line":80,"col":5,"offset":2410},"extra":{"metavars":{"$EXPR1":{"start":{"line":79,"col":7,"offset":2371},"end":{"line":79,"col":12,"offset":2376},"abstract_content":"i=1"},"$EXPR2":{"start":{"line":79,"col":14,"offset":2378},"end":{"line":79,"col":35,"offset":2399},"abstract_content":"fc_weight>map[i].fc"},"$EXPR3":{"start":{"line":79,"col":37,"offset":2401},"end":{"line":79,"col":40,"offset":2404},"abstract_content":"i++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"17df069968edd248e560582b27f0cd2823eb6767ccd4c657316b11d6b395ac67400d6ac3ba397f64eb2487db9f0e701a9803185d5a7243e5544af7c6d8b0d2c7_0","lines":"\tfor (i = 1; fc_weight > map[i].fc; i++)\n\t  ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","start":{"line":23,"col":3,"offset":464},"end":{"line":23,"col":33,"offset":494},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"8fd7fefd665a525d5b2b7e532d03c46776cdc3b13beff22decfc9285fe169f7b2441d661e8dac44fc84dcb33bc32d0cb016ba726a91501005a194ecc321b8421_0","lines":"  vfprintf( stderr, format, ap );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","start":{"line":131,"col":10,"offset":2873},"end":{"line":132,"col":44,"offset":2954},"extra":{"metavars":{"$X":{"start":{"line":131,"col":10,"offset":2873},"end":{"line":131,"col":21,"offset":2884},"abstract_content":"stream->->pos"},"$MAX":{"start":{"line":131,"col":25,"offset":2888},"end":{"line":131,"col":37,"offset":2900},"abstract_content":"stream->->size"},"$Y":{"start":{"line":132,"col":24,"offset":2934},"end":{"line":132,"col":29,"offset":2939},"abstract_content":"count"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dbceffc3a0c01a52c39fde0316d000290124a797d6ca0304488a37dc78891c42d054fb959f6c37fcaed0fc15872fbbfe175ba3e8ef3810c9346b45103cfb6122_0","lines":"    if ( stream->pos >= stream->size        ||\n         stream->pos + count > stream->size )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.tmpl.h","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":4,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.tmpl.h:25:\n `@@@` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.tmpl.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.tmpl.h","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":4,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":39,"col":11,"offset":0},"end":{"line":39,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":42,"col":11,"offset":0},"end":{"line":42,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":45,"col":11,"offset":0},"end":{"line":45,"col":19,"offset":8}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":48,"col":11,"offset":0},"end":{"line":48,"col":19,"offset":8}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":51,"col":17,"offset":0},"end":{"line":51,"col":26,"offset":9}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h:39:\n `FcBool` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":39,"col":11,"offset":0},"end":{"line":39,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":42,"col":11,"offset":0},"end":{"line":42,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":45,"col":11,"offset":0},"end":{"line":45,"col":19,"offset":8}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":48,"col":11,"offset":0},"end":{"line":48,"col":19,"offset":8}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","start":{"line":51,"col":17,"offset":0},"end":{"line":51,"col":26,"offset":9}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":117,"col":1,"offset":0},"end":{"line":117,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c:117:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":117,"col":1,"offset":0},"end":{"line":117,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":165,"col":23,"offset":0},"end":{"line":165,"col":28,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":166,"col":20,"offset":0},"end":{"line":166,"col":26,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":168,"col":17,"offset":0},"end":{"line":168,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":269,"col":22,"offset":0},"end":{"line":269,"col":27,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":270,"col":19,"offset":0},"end":{"line":270,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":272,"col":16,"offset":0},"end":{"line":272,"col":21,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":387,"col":9,"offset":0},"end":{"line":387,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":394,"col":5,"offset":0},"end":{"line":394,"col":34,"offset":29}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":405,"col":12,"offset":0},"end":{"line":405,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":23,"offset":0},"end":{"line":436,"col":26,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":49,"offset":0},"end":{"line":436,"col":53,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":65,"offset":0},"end":{"line":436,"col":70,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":80,"offset":0},"end":{"line":436,"col":83,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c:165:\n `cache` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":165,"col":23,"offset":0},"end":{"line":165,"col":28,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":166,"col":20,"offset":0},"end":{"line":166,"col":26,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":168,"col":17,"offset":0},"end":{"line":168,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":269,"col":22,"offset":0},"end":{"line":269,"col":27,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":270,"col":19,"offset":0},"end":{"line":270,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":272,"col":16,"offset":0},"end":{"line":272,"col":21,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":387,"col":9,"offset":0},"end":{"line":387,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":394,"col":5,"offset":0},"end":{"line":394,"col":34,"offset":29}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":405,"col":12,"offset":0},"end":{"line":405,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":23,"offset":0},"end":{"line":436,"col":26,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":49,"offset":0},"end":{"line":436,"col":53,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":65,"offset":0},"end":{"line":436,"col":70,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","start":{"line":436,"col":80,"offset":0},"end":{"line":436,"col":83,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":35,"offset":34}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":32,"col":41,"offset":0},"end":{"line":32,"col":47,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":33,"col":1,"offset":0},"end":{"line":34,"col":7,"offset":26}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c:32:\n `#define FC_OBJECT(NAME, Type, Cmp)` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":35,"offset":34}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":32,"col":41,"offset":0},"end":{"line":32,"col":47,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","start":{"line":33,"col":1,"offset":0},"end":{"line":34,"col":7,"offset":26}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":248,"col":1,"offset":0},"end":{"line":248,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":253,"col":1,"offset":0},"end":{"line":253,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":478,"col":1,"offset":0},"end":{"line":478,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":481,"col":1,"offset":0},"end":{"line":481,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":495,"col":1,"offset":0},"end":{"line":495,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":508,"col":1,"offset":0},"end":{"line":508,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":512,"col":1,"offset":0},"end":{"line":512,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":522,"col":1,"offset":0},"end":{"line":522,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":527,"col":1,"offset":0},"end":{"line":527,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2120,"col":22,"offset":0},"end":{"line":2120,"col":28,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2128,"col":13,"offset":0},"end":{"line":2128,"col":19,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2418,"col":44,"offset":0},"end":{"line":2418,"col":50,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2513,"col":54,"offset":0},"end":{"line":2513,"col":60,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c:248:\n `#if 0` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":248,"col":1,"offset":0},"end":{"line":248,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":253,"col":1,"offset":0},"end":{"line":253,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":478,"col":1,"offset":0},"end":{"line":478,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":481,"col":1,"offset":0},"end":{"line":481,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":495,"col":1,"offset":0},"end":{"line":495,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":508,"col":1,"offset":0},"end":{"line":508,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":512,"col":1,"offset":0},"end":{"line":512,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":522,"col":1,"offset":0},"end":{"line":522,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":527,"col":1,"offset":0},"end":{"line":527,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2120,"col":22,"offset":0},"end":{"line":2120,"col":28,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2128,"col":13,"offset":0},"end":{"line":2128,"col":19,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2418,"col":44,"offset":0},"end":{"line":2418,"col":50,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","start":{"line":2513,"col":54,"offset":0},"end":{"line":2513,"col":60,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","start":{"line":30,"col":10,"offset":0},"end":{"line":30,"col":13,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","start":{"line":33,"col":10,"offset":0},"end":{"line":33,"col":16,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h:30:\n `int` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","start":{"line":30,"col":10,"offset":0},"end":{"line":30,"col":13,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","start":{"line":33,"col":10,"offset":0},"end":{"line":33,"col":16,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":36,"col":1,"offset":0},"end":{"line":36,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":39,"col":10,"offset":0},"end":{"line":39,"col":19,"offset":9}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":42,"col":10,"offset":0},"end":{"line":42,"col":19,"offset":9}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":45,"col":10,"offset":0},"end":{"line":45,"col":18,"offset":8}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":16,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":51,"col":10,"offset":0},"end":{"line":51,"col":19,"offset":9}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h:36:\n `FcPublic FT_UInt` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":36,"col":1,"offset":0},"end":{"line":36,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":39,"col":10,"offset":0},"end":{"line":39,"col":19,"offset":9}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":42,"col":10,"offset":0},"end":{"line":42,"col":19,"offset":9}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":45,"col":10,"offset":0},"end":{"line":45,"col":18,"offset":8}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":16,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","start":{"line":51,"col":10,"offset":0},"end":{"line":51,"col":19,"offset":9}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":8,"offset":7}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":38,"offset":77}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":98,"col":1,"offset":0},"end":{"line":99,"col":46,"offset":92}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":101,"col":1,"offset":0},"end":{"line":102,"col":46,"offset":64}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":105,"col":1,"offset":0},"end":{"line":109,"col":14,"offset":140}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h:54:\n `#define` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":8,"offset":7}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":38,"offset":77}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":98,"col":1,"offset":0},"end":{"line":99,"col":46,"offset":92}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":101,"col":1,"offset":0},"end":{"line":102,"col":46,"offset":64}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h","start":{"line":105,"col":1,"offset":0},"end":{"line":109,"col":14,"offset":140}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","start":{"line":150,"col":1,"offset":0},"end":{"line":150,"col":22,"offset":21}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c:150:\n `FTGLUE_APIDEF( void )` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","start":{"line":150,"col":1,"offset":0},"end":{"line":150,"col":22,"offset":21}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":351,"col":1,"offset":0},"end":{"line":351,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":545,"col":9,"offset":0},"end":{"line":545,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":617,"col":3,"offset":0},"end":{"line":617,"col":56,"offset":53}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":618,"col":3,"offset":0},"end":{"line":618,"col":57,"offset":54}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":630,"col":3,"offset":0},"end":{"line":630,"col":56,"offset":53}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":631,"col":3,"offset":0},"end":{"line":631,"col":57,"offset":54}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":648,"col":6,"offset":0},"end":{"line":648,"col":54,"offset":48}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":685,"col":6,"offset":0},"end":{"line":687,"col":16,"offset":112}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":699,"col":6,"offset":0},"end":{"line":701,"col":17,"offset":112}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":708,"col":35,"offset":0},"end":{"line":708,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":712,"col":6,"offset":0},"end":{"line":712,"col":57,"offset":51}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":715,"col":2,"offset":0},"end":{"line":715,"col":93,"offset":91}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":719,"col":5,"offset":0},"end":{"line":719,"col":62,"offset":57}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":720,"col":12,"offset":0},"end":{"line":720,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":998,"col":30,"offset":0},"end":{"line":998,"col":36,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1000,"col":9,"offset":0},"end":{"line":1000,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1002,"col":20,"offset":0},"end":{"line":1002,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1005,"col":1,"offset":0},"end":{"line":1006,"col":14,"offset":15}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1062,"col":9,"offset":0},"end":{"line":1062,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1077,"col":28,"offset":0},"end":{"line":1077,"col":30,"offset":2}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1077,"col":42,"offset":0},"end":{"line":1077,"col":44,"offset":2}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1084,"col":25,"offset":0},"end":{"line":1084,"col":27,"offset":2}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1094,"col":18,"offset":0},"end":{"line":1094,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1176,"col":1,"offset":0},"end":{"line":1176,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c:351:\n `} FcMatcherPriority` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":351,"col":1,"offset":0},"end":{"line":351,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":545,"col":9,"offset":0},"end":{"line":545,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":617,"col":3,"offset":0},"end":{"line":617,"col":56,"offset":53}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":618,"col":3,"offset":0},"end":{"line":618,"col":57,"offset":54}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":630,"col":3,"offset":0},"end":{"line":630,"col":56,"offset":53}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":631,"col":3,"offset":0},"end":{"line":631,"col":57,"offset":54}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":648,"col":6,"offset":0},"end":{"line":648,"col":54,"offset":48}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":685,"col":6,"offset":0},"end":{"line":687,"col":16,"offset":112}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":699,"col":6,"offset":0},"end":{"line":701,"col":17,"offset":112}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":708,"col":35,"offset":0},"end":{"line":708,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":712,"col":6,"offset":0},"end":{"line":712,"col":57,"offset":51}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":715,"col":2,"offset":0},"end":{"line":715,"col":93,"offset":91}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":719,"col":5,"offset":0},"end":{"line":719,"col":62,"offset":57}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":720,"col":12,"offset":0},"end":{"line":720,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":998,"col":30,"offset":0},"end":{"line":998,"col":36,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1000,"col":9,"offset":0},"end":{"line":1000,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1002,"col":20,"offset":0},"end":{"line":1002,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1005,"col":1,"offset":0},"end":{"line":1006,"col":14,"offset":15}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1062,"col":9,"offset":0},"end":{"line":1062,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1077,"col":28,"offset":0},"end":{"line":1077,"col":30,"offset":2}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1077,"col":42,"offset":0},"end":{"line":1077,"col":44,"offset":2}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1084,"col":25,"offset":0},"end":{"line":1084,"col":27,"offset":2}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1094,"col":18,"offset":0},"end":{"line":1094,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","start":{"line":1176,"col":1,"offset":0},"end":{"line":1176,"col":2,"offset":1}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fontconfig.h:1:\n Failure: unallowed declarator as RHS to scope resolution","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fontconfig.h"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcint.h:1:\n Failure: unallowed declarator as RHS to scope resolution","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcint.h"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcxml.c:1:\n `/*\n * fontconfig/src/fcxml.c\n *\n * Copyright © 2002 Keith Packard\n *\n * Permission to use, copy, modify, distribute, and sell this software and its\n * documentation for any purpose is hereby granted without fee, provided that\n * the above copyright notice appear in all copies and that both that\n * copyright notice and this permission notice appear in supporting\n * documentation, and that the name of the author(s) not be used in\n * advertising or publicity pertaining to distribution of the software without\n * specific, written prior permission.  The authors make no\n * representations about the suitability of this software for any purpose.  It\n * is provided \"as is\" without express or implied warranty.\n *\n * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\n * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\n * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR\n * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n#include <string.h>\n#include \"fcint.h\"\n#include <fcntl.h>\n#include <stdarg.h>\n#include <dirent.h>\n\n#ifdef ENABLE_LIBXML2\n\n#include <libxml/parser.h>\n\n#define XML_Char\t\t\txmlChar\n#define XML_Parser\t\t\txmlParserCtxtPtr\n#define XML_ParserFree\t\t\txmlFreeParserCtxt\n#define XML_GetCurrentLineNumber\txmlSAX2GetLineNumber\n#define XML_GetErrorCode\t\txmlCtxtGetLastError\n#define XML_ErrorString(Error)\t\t(Error)->message\n\n#else /* ENABLE_LIBXML2 */\n\n#ifndef HAVE_XMLPARSE_H\n#define HAVE_XMLPARSE_H 0\n#endif\n\n#if HAVE_XMLPARSE_H\n#include <xmlparse.h>\n#else\n#include <expat.h>\n#endif\n\n#endif /* ENABLE_LIBXML2 */\n\n#ifdef _WIN32\n#include <mbstring.h>\nextern FcChar8 fontconfig_instprefix[];\n#endif\n\nstatic FcChar8  *__fc_userdir = NULL;\nstatic FcChar8  *__fc_userconf = NULL;\n\nstatic void\nFcExprDestroy (FcExpr *e);\nstatic FcBool\n_FcConfigParse (FcConfig\t*config,\n\t\tconst FcChar8\t*name,\n\t\tFcBool\t\tcomplain,\n\t\tFcBool\t\tload);\n\nvoid\nFcTestDestroy (FcTest *test)\n{\n    FcExprDestroy (test->expr);\n    free (test);\n}\n\nvoid\nFcRuleDestroy (FcRule *rule)\n{\n    FcRule *n = rule->next;\n\n    switch (rule->type) {\n    case FcRuleTest:\n\tFcTestDestroy (rule->u.test);\n\tbreak;\n    case FcRuleEdit:\n\tFcEditDestroy (rule->u.edit);\n\tbreak;\n    case FcRuleUnknown:\n    default:\n\tbreak;\n    }\n    free (rule);\n    if (n)\n\tFcRuleDestroy (n);\n}\n\nstatic FcExpr *\nFcExprCreateInteger (FcConfig *config, int i)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpInteger;\n\te->u.ival = i;\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateDouble (FcConfig *config, double d)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpDouble;\n\te->u.dval = d;\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateString (FcConfig *config, const FcChar8 *s)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpString;\n\te->u.sval = FcStrdup (s);\n    }\n    return e;\n}\n\nstatic FcExprMatrix *\nFcExprMatrixCopyShallow (const FcExprMatrix *matrix)\n{\n  FcExprMatrix *m = malloc (sizeof (FcExprMatrix));\n  if (m)\n  {\n    *m = *matrix;\n  }\n  return m;\n}\n\nstatic void\nFcExprMatrixFreeShallow (FcExprMatrix *m)\n{\n  if (!m)\n    return;\n\n  free (m);\n}\n\nstatic void\nFcExprMatrixFree (FcExprMatrix *m)\n{\n  if (!m)\n    return;\n\n  FcExprDestroy (m->xx);\n  FcExprDestroy (m->xy);\n  FcExprDestroy (m->yx);\n  FcExprDestroy (m->yy);\n\n  free (m);\n}\n\nstatic FcExpr *\nFcExprCreateMatrix (FcConfig *config, const FcExprMatrix *matrix)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpMatrix;\n\te->u.mexpr = FcExprMatrixCopyShallow (matrix);\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateRange (FcConfig *config, FcRange *range)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpRange;\n\te->u.rval = FcRangeCopy (range);\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateBool (FcConfig *config, FcBool b)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpBool;\n\te->u.bval = b;\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateCharSet (FcConfig *config, FcCharSet *charset)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpCharSet;\n\te->u.cval = FcCharSetCopy (charset);\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateLangSet (FcConfig *config, FcLangSet *langset)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpLangSet;\n\te->u.lval = FcLangSetCopy (langset);\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateName (FcConfig *config, FcExprName name)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpField;\n\te->u.name = name;\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateConst (FcConfig *config, const FcChar8 *constant)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = FcOpConst;\n\te->u.constant = FcStrdup (constant);\n    }\n    return e;\n}\n\nstatic FcExpr *\nFcExprCreateOp (FcConfig *config, FcExpr *left, FcOp op, FcExpr *right)\n{\n    FcExpr *e = FcConfigAllocExpr (config);\n    if (e)\n    {\n\te->op = op;\n\te->u.tree.left = left;\n\te->u.tree.right = right;\n    }\n    return e;\n}\n\nstatic void\nFcExprDestroy (FcExpr *e)\n{\n    if (!e)\n\treturn;\n    switch (FC_OP_GET_OP (e->op)) {\n    case FcOpInteger:\n\tbreak;\n    case FcOpDouble:\n\tbreak;\n    case FcOpString:\n\tFcFree (e->u.sval);\n\tbreak;\n    case FcOpMatrix:\n\tFcExprMatrixFree (e->u.mexpr);\n\tbreak;\n    case FcOpRange:\n\tFcRangeDestroy (e->u.rval);\n\tbreak;\n    case FcOpCharSet:\n\tFcCharSetDestroy (e->u.cval);\n\tbreak;\n    case FcOpLangSet:\n\tFcLangSetDestroy (e->u.lval);\n\tbreak;\n    case FcOpBool:\n\tbreak;\n    case FcOpField:\n\tbreak;\n    case FcOpConst:\n\tFcFree (e->u.constant);\n\tbreak;\n    case FcOpAssign:\n    case FcOpAssignReplace:\n    case FcOpPrepend:\n    case FcOpPrependFirst:\n    case FcOpAppend:\n    case FcOpAppendLast:\n    case FcOpDelete:\n    case FcOpDeleteAll:\n\tbreak;\n    case FcOpOr:\n    case FcOpAnd:\n    case FcOpEqual:\n    case FcOpNotEqual:\n    case FcOpLess:\n    case FcOpLessEqual:\n    case FcOpMore:\n    case FcOpMoreEqual:\n    case FcOpContains:\n    case FcOpListing:\n    case FcOpNotContains:\n    case FcOpPlus:\n    case FcOpMinus:\n    case FcOpTimes:\n    case FcOpDivide:\n    case FcOpQuest:\n    case FcOpComma:\n\tFcExprDestroy (e->u.tree.right);\n\t/* fall through */\n    case FcOpNot:\n    case FcOpFloor:\n    case FcOpCeil:\n    case FcOpRound:\n    case FcOpTrunc:\n\tFcExprDestroy (e->u.tree.left);\n\tbreak;\n    case FcOpNil:\n    case FcOpInvalid:\n\tbreak;\n    }\n\n    e->op = FcOpNil;\n}\n\nvoid\nFcEditDestroy (FcEdit *e)\n{\n    if (e->expr)\n\tFcExprDestroy (e->expr);\n    free (e);\n}\n\ntypedef enum _FcElement {\n    FcElementNone,\n    FcElementFontconfig,\n    FcElementDir,\n    FcElementCacheDir,\n    FcElementCache,\n    FcElementInclude,\n    FcElementConfig,\n    FcElementMatch,\n    FcElementAlias,\n    FcElementDescription,\n\t\n    FcElementRescan,\n\n    FcElementPrefer,\n    FcElementAccept,\n    FcElementDefault,\n    FcElementFamily,\n\n    FcElementSelectfont,\n    FcElementAcceptfont,\n    FcElementRejectfont,\n    FcElementGlob,\n    FcElementPattern,\n    FcElementPatelt,\n\n    FcElementTest,\n    FcElementEdit,\n    FcElementInt,\n    FcElementDouble,\n    FcElementString,\n    FcElementMatrix,\n    FcElementRange,\n    FcElementBool,\n    FcElementCharSet,\n    FcElementLangSet,\n    FcElementName,\n    FcElementConst,\n    FcElementOr,\n    FcElementAnd,\n    FcElementEq,\n    FcElementNotEq,\n    FcElementLess,\n    FcElementLessEq,\n    FcElementMore,\n    FcElementMoreEq,\n    FcElementContains,\n    FcElementNotContains,\n    FcElementPlus,\n    FcElementMinus,\n    FcElementTimes,\n    FcElementDivide,\n    FcElementNot,\n    FcElementIf,\n    FcElementFloor,\n    FcElementCeil,\n    FcElementRound,\n    FcElementTrunc,\n    FcElementUnknown\n} FcElement;\n\nstatic const struct {\n    const char  name[16];\n    FcElement   element;\n} fcElementMap[] = {\n    { \"fontconfig\",\tFcElementFontconfig },\n    { \"dir\",\t\tFcElementDir },\n    { \"cachedir\",\tFcElementCacheDir },\n    { \"cache\",\t\tFcElementCache },\n    { \"include\",\tFcElementInclude },\n    { \"config\",\t\tFcElementConfig },\n    { \"match\",\t\tFcElementMatch },\n    { \"alias\",\t\tFcElementAlias },\n    { \"description\",\tFcElementDescription },\n\n    { \"rescan\",\t\tFcElementRescan },\n\n    { \"prefer\",\t\tFcElementPrefer },\n    { \"accept\",\t\tFcElementAccept },\n    { \"default\",\tFcElementDefault },\n    { \"family\",\t\tFcElementFamily },\n\n    { \"selectfont\",\tFcElementSelectfont },\n    { \"acceptfont\",\tFcElementAcceptfont },\n    { \"rejectfont\",\tFcElementRejectfont },\n    { \"glob\",\t\tFcElementGlob },\n    { \"pattern\",\tFcElementPattern },\n    { \"patelt\",\t\tFcElementPatelt },\n\n    { \"test\",\t\tFcElementTest },\n    { \"edit\",\t\tFcElementEdit },\n    { \"int\",\t\tFcElementInt },\n    { \"double\",\t\tFcElementDouble },\n    { \"string\",\t\tFcElementString },\n    { \"matrix\",\t\tFcElementMatrix },\n    { \"range\",\t\tFcElementRange },\n    { \"bool\",\t\tFcElementBool },\n    { \"charset\",\tFcElementCharSet },\n    { \"langset\",\tFcElementLangSet },\n    { \"name\",\t\tFcElementName },\n    { \"const\",\t\tFcElementConst },\n    { \"or\",\t\tFcElementOr },\n    { \"and\",\t\tFcElementAnd },\n    { \"eq\",\t\tFcElementEq },\n    { \"not_eq\",\t\tFcElementNotEq },\n    { \"less\",\t\tFcElementLess },\n    { \"less_eq\",\tFcElementLessEq },\n    { \"more\",\t\tFcElementMore },\n    { \"more_eq\",\tFcElementMoreEq },\n    { \"contains\",\tFcElementContains },\n    { \"not_contains\",\tFcElementNotContains },\n    { \"plus\",\t\tFcElementPlus },\n    { \"minus\",\t\tFcElementMinus },\n    { \"times\",\t\tFcElementTimes },\n    { \"divide\",\t\tFcElementDivide },\n    { \"not\",\t\tFcElementNot },\n    { \"if\",\t\tFcElementIf },\n    { \"floor\",\t\tFcElementFloor },\n    { \"ceil\",\t\tFcElementCeil },\n    { \"round\",\t\tFcElementRound },\n    { \"trunc\",\t\tFcElementTrunc },\n};\n#define NUM_ELEMENT_MAPS (int) (sizeof fcElementMap / sizeof fcElementMap[0])\n\nstatic const char *fcElementIgnoreName[16] = {\n    \"its:\",\n    NULL\n};\n\nstatic FcElement\nFcElementMap (const XML_Char *name)\n{\n\n    int\t    i;\n    for (i = 0; i < NUM_ELEMENT_MAPS; i++)\n\tif (!strcmp ((char *) name, fcElementMap[i].name))\n\t    return fcElementMap[i].element;\n    for (i = 0; fcElementIgnoreName[i] != NULL; i++)\n\tif (!strncmp ((char *) name, fcElementIgnoreName[i], strlen (fcElementIgnoreName[i])))\n\t    return FcElementNone;\n    return FcElementUnknown;\n}\n\ntypedef struct _FcPStack {\n    struct _FcPStack   *prev;\n    FcElement\t\telement;\n    FcChar8\t\t**attr;\n    FcStrBuf\t\tstr;\n    FcChar8            *attr_buf_static[16];\n} FcPStack;\n\ntypedef enum _FcVStackTag {\n    FcVStackNone,\n\n    FcVStackString,\n    FcVStackFamily,\n    FcVStackConstant,\n    FcVStackGlob,\n    FcVStackName,\n    FcVStackPattern,\n\n    FcVStackPrefer,\n    FcVStackAccept,\n    FcVStackDefault,\n\n    FcVStackInteger,\n    FcVStackDouble,\n    FcVStackMatrix,\n    FcVStackRange,\n    FcVStackBool,\n    FcVStackCharSet,\n    FcVStackLangSet,\n\n    FcVStackTest,\n    FcVStackExpr,\n    FcVStackEdit\n} FcVStackTag;\n\ntypedef struct _FcVStack {\n    struct _FcVStack\t*prev;\n    FcPStack\t\t*pstack;\t/* related parse element */\n    FcVStackTag\t\ttag;\n    union {\n\tFcChar8\t\t*string;\n\n\tint\t\tinteger;\n\tdouble\t\t_double;\n\tFcExprMatrix\t*matrix;\n\tFcRange\t\t*range;\n\tFcBool\t\tbool_;\n\tFcCharSet\t*charset;\n\tFcLangSet\t*langset;\n\tFcExprName\tname;\n\n\tFcTest\t\t*test;\n\tFcQual\t\tqual;\n\tFcOp\t\top;\n\tFcExpr\t\t*expr;\n\tFcEdit\t\t*edit;\n\n\tFcPattern\t*pattern;\n    } u;\n} FcVStack;\n\ntypedef struct _FcConfigParse {\n    FcPStack\t    *pstack;\n    FcVStack\t    *vstack;\n    FcBool\t    error;\n    const FcChar8   *name;\n    FcConfig\t    *config;\n    FcRuleSet\t    *ruleset;\n    XML_Parser\t    parser;\n    unsigned int    pstack_static_used;\n    FcPStack        pstack_static[8];\n    unsigned int    vstack_static_used;\n    FcVStack        vstack_static[64];\n    FcBool          scanOnly;\n} FcConfigParse;\n\ntypedef enum _FcConfigSeverity {\n    FcSevereInfo, FcSevereWarning, FcSevereError\n} FcConfigSeverity;\n\nstatic void\nFcConfigMessage (FcConfigParse *parse, FcConfigSeverity severe, const char *fmt, ...)\n{\n    const char\t*s = \"unknown\";\n    va_list\targs;\n\n    va_start (args, fmt);\n\n    switch (severe) {\n    case FcSevereInfo: s = \"info\"; break;\n    case FcSevereWarning: s = \"warning\"; break;\n    case FcSevereError: s = \"error\"; break;\n    }\n    if (parse)\n    {\n\tif (parse->name)\n\t    fprintf (stderr, \"Fontconfig %s: \\\"%s\\\", line %d: \", s,\n\t\t     parse->name, (int)XML_GetCurrentLineNumber (parse->parser));\n\telse\n\t    fprintf (stderr, \"Fontconfig %s: line %d: \", s,\n\t\t     (int)XML_GetCurrentLineNumber (parse->parser));\n\tif (severe >= FcSevereError)\n\t    parse->error = FcTrue;\n    }\n    else\n\tfprintf (stderr, \"Fontconfig %s: \", s);\n    vfprintf (stderr, fmt, args);\n    fprintf (stderr, \"\\n\");\n    va_end (args);\n}\n\n\nstatic FcExpr *\nFcPopExpr (FcConfigParse *parse);\n\n\nstatic const char *\nFcTypeName (FcType type)\n{\n    switch (type) {\n    case FcTypeVoid:\n\treturn \"void\";\n    case FcTypeInteger:\n    case FcTypeDouble:\n\treturn \"number\";\n    case FcTypeString:\n\treturn \"string\";\n    case FcTypeBool:\n\treturn \"bool\";\n    case FcTypeMatrix:\n\treturn \"matrix\";\n    case FcTypeCharSet:\n\treturn \"charset\";\n    case FcTypeFTFace:\n\treturn \"FT_Face\";\n    case FcTypeLangSet:\n\treturn \"langset\";\n    case FcTypeRange:\n\treturn \"range\";\n    case FcTypeUnknown:\n    default:\n\treturn \"unknown\";\n    }\n}\n\nstatic void\nFcTypecheckValue (FcConfigParse *parse, FcType value, FcType type)\n{\n    if (value == FcTypeInteger)\n\tvalue = FcTypeDouble;\n    if (type == FcTypeInteger)\n\ttype = FcTypeDouble;\n    if (value != type)\n    {\n\tif ((value == FcTypeLangSet && type == FcTypeString) ||\n\t    (value == FcTypeString && type == FcTypeLangSet) ||\n\t    (value == FcTypeDouble && type == FcTypeRange))\n\t    return;\n\tif (type ==  FcTypeUnknown)\n\t    return;\n\t/* It's perfectly fine to use user-define elements in expressions,\n\t * so don't warn in that case. */\n\tif (value == FcTypeUnknown)\n\t    return;\n\tFcConfigMessage (parse, FcSevereWarning, \"saw %s, expected %s\",\n\t\t\t FcTypeName (value), FcTypeName (type));\n    }\n}\n\nstatic void\nFcTypecheckExpr (FcConfigParse *parse, FcExpr *expr, FcType type)\n{\n    const FcObjectType\t*o;\n    const FcConstant\t*c;\n\n    /* If parsing the expression failed, some nodes may be NULL */\n    if (!expr)\n\treturn;\n\n    switch (FC_OP_GET_OP (expr->op)) {\n    case FcOpInteger:\n    case FcOpDouble:\n\tFcTypecheckValue (parse, FcTypeDouble, type);\n\tbreak;\n    case FcOpString:\n\tFcTypecheckValue (parse, FcTypeString, type);\n\tbreak;\n    case FcOpMatrix:\n\tFcTypecheckValue (parse, FcTypeMatrix, type);\n\tbreak;\n    case FcOpBool:\n\tFcTypecheckValue (parse, FcTypeBool, type);\n\tbreak;\n    case FcOpCharSet:\n\tFcTypecheckValue (parse, FcTypeCharSet, type);\n\tbreak;\n    case FcOpLangSet:\n\tFcTypecheckValue (parse, FcTypeLangSet, type);\n\tbreak;\n    case FcOpRange:\n\tFcTypecheckValue (parse, FcTypeRange, type);\n\tbreak;\n    case FcOpNil:\n\tbreak;\n    case FcOpField:\n\to = FcNameGetObjectType (FcObjectName (expr->u.name.object));\n\tif (o)\n\t    FcTypecheckValue (parse, o->type, type);\n\tbreak;\n    case FcOpConst:\n\tc = FcNameGetConstant (expr->u.constant);\n\tif (c)\n\t{\n\t    o = FcNameGetObjectType (c->object);\n\t    if (o)\n\t\tFcTypecheckValue (parse, o->type, type);\n\t}\n        else\n            FcConfigMessage (parse, FcSevereWarning,\n                             \"invalid constant used : %s\",\n                             expr->u.constant);\n\tbreak;\n    case FcOpQuest:\n\tFcTypecheckExpr (parse, expr->u.tree.left, FcTypeBool);\n\tFcTypecheckExpr (parse, expr->u.tree.right->u.tree.left, type);\n\tFcTypecheckExpr (parse, expr->u.tree.right->u.tree.right, type);\n\tbreak;\n    case FcOpAssign:\n    case FcOpAssignReplace:\n\tbreak;\n    case FcOpEqual:\n    case FcOpNotEqual:\n    case FcOpLess:\n    case FcOpLessEqual:\n    case FcOpMore:\n    case FcOpMoreEqual:\n    case FcOpContains:\n    case FcOpNotContains:\n    case FcOpListing:\n\tFcTypecheckValue (parse, FcTypeBool, type);\n\tbreak;\n    case FcOpComma:\n    case FcOpOr:\n    case FcOpAnd:\n    case FcOpPlus:\n    case FcOpMinus:\n    case FcOpTimes:\n    case FcOpDivide:\n\tFcTypecheckExpr (parse, expr->u.tree.left, type);\n\tFcTypecheckExpr (parse, expr->u.tree.right, type);\n\tbreak;\n    case FcOpNot:\n\tFcTypecheckValue (parse, FcTypeBool, type);\n\tFcTypecheckExpr (parse, expr->u.tree.left, FcTypeBool);\n\tbreak;\n    case FcOpFloor:\n    case FcOpCeil:\n    case FcOpRound:\n    case FcOpTrunc:\n\tFcTypecheckValue (parse, FcTypeDouble, type);\n\tFcTypecheckExpr (parse, expr->u.tree.left, FcTypeDouble);\n\tbreak;\n    default:\n\tbreak;\n    }\n}\n\nstatic FcTest *\nFcTestCreate (FcConfigParse *parse,\n\t      FcMatchKind   kind,\n\t      FcQual\t    qual,\n\t      const FcChar8 *field,\n\t      unsigned int  compare,\n\t      FcExpr\t    *expr)\n{\n    FcTest\t*test = (FcTest *) malloc (sizeof (FcTest));\n\n    if (test)\n    {\n\tconst FcObjectType\t*o;\n\t\n\ttest->kind = kind;\n\ttest->qual = qual;\n\ttest->object = FcObjectFromName ((const char *) field);\n\ttest->op = compare;\n\ttest->expr = expr;\n\to = FcNameGetObjectType (FcObjectName (test->object));\n\tif (o)\n\t    FcTypecheckExpr (parse, expr, o->type);\n    }\n    return test;\n}\n\nstatic FcEdit *\nFcEditCreate (FcConfigParse\t*parse,\n\t      FcObject\t\tobject,\n\t      FcOp\t\top,\n\t      FcExpr\t\t*expr,\n\t      FcValueBinding\tbinding)\n{\n    FcEdit *e = (FcEdit *) malloc (sizeof (FcEdit));\n\n    if (e)\n    {\n\tconst FcObjectType\t*o;\n\n\te->object = object;\n\te->op = op;\n\te->expr = expr;\n\te->binding = binding;\n\to = FcNameGetObjectType (FcObjectName (e->object));\n\tif (o)\n\t    FcTypecheckExpr (parse, expr, o->type);\n    }\n    return e;\n}\n\nstatic FcRule *\nFcRuleCreate (FcRuleType type,\n\t      void       *p)\n{\n    FcRule *r = (FcRule *) malloc (sizeof (FcRule));\n\n    if (!r)\n\treturn NULL;\n\n    r->next = NULL;\n    r->type = type;\n    switch (type)\n    {\n    case FcRuleTest:\n\tr->u.test = (FcTest *) p;\n\tbreak;\n    case FcRuleEdit:\n\tr->u.edit = (FcEdit *) p;\n\tbreak;\n    case FcRuleUnknown:\n    default:\n\tfree (r);\n\tr = NULL;\n\tbreak;\n    }\n\n    return r;\n}\n\nstatic FcVStack *\nFcVStackCreateAndPush (FcConfigParse *parse)\n{\n    FcVStack    *new;\n\n    if (parse->vstack_static_used < sizeof (parse->vstack_static) / sizeof (parse->vstack_static[0]))\n\tnew = &parse->vstack_static[parse->vstack_static_used++];\n    else\n    {\n\tnew = malloc (sizeof (FcVStack));\n\tif (!new)\n\t    return 0;\n    }\n    new->tag = FcVStackNone;\n    new->prev = 0;\n\n    new->prev = parse->vstack;\n    new->pstack = parse->pstack ? parse->pstack->prev : 0;\n    parse->vstack = new;\n\n    return new;\n}\n\nstatic FcBool\nFcVStackPushString (FcConfigParse *parse, FcVStackTag tag, FcChar8 *string)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.string = string;\n    vstack->tag = tag;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushInteger (FcConfigParse *parse, int integer)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.integer = integer;\n    vstack->tag = FcVStackInteger;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushDouble (FcConfigParse *parse, double _double)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u._double = _double;\n    vstack->tag = FcVStackDouble;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushMatrix (FcConfigParse *parse, FcExprMatrix *matrix)\n{\n    FcVStack    *vstack;\n    vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.matrix = FcExprMatrixCopyShallow (matrix);\n    vstack->tag = FcVStackMatrix;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushRange (FcConfigParse *parse, FcRange *range)\n{\n    FcVStack \t*vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.range = range;\n    vstack->tag = FcVStackRange;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushBool (FcConfigParse *parse, FcBool bool_)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.bool_ = bool_;\n    vstack->tag = FcVStackBool;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushCharSet (FcConfigParse *parse, FcCharSet *charset)\n{\n    FcVStack\t*vstack;\n    if (!charset)\n\treturn FcFalse;\n    vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.charset = charset;\n    vstack->tag = FcVStackCharSet;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushLangSet (FcConfigParse *parse, FcLangSet *langset)\n{\n    FcVStack\t*vstack;\n    if (!langset)\n\treturn FcFalse;\n    vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.langset = langset;\n    vstack->tag = FcVStackLangSet;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushName (FcConfigParse *parse, FcMatchKind kind, FcObject object)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.name.object = object;\n    vstack->u.name.kind = kind;\n    vstack->tag = FcVStackName;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushTest (FcConfigParse *parse, FcTest *test)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.test = test;\n    vstack->tag = FcVStackTest;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushExpr (FcConfigParse *parse, FcVStackTag tag, FcExpr *expr)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.expr = expr;\n    vstack->tag = tag;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushEdit (FcConfigParse *parse, FcEdit *edit)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.edit = edit;\n    vstack->tag = FcVStackEdit;\n    return FcTrue;\n}\n\nstatic FcBool\nFcVStackPushPattern (FcConfigParse *parse, FcPattern *pattern)\n{\n    FcVStack    *vstack = FcVStackCreateAndPush (parse);\n    if (!vstack)\n\treturn FcFalse;\n    vstack->u.pattern = pattern;\n    vstack->tag = FcVStackPattern;\n    return FcTrue;\n}\n\nstatic FcVStack *\nFcVStackFetch (FcConfigParse *parse, int off)\n{\n    FcVStack    *vstack;\n\n    for (vstack = parse->vstack; vstack && off-- > 0; vstack = vstack->prev);\n    return vstack;\n}\n\nstatic FcVStack *\nFcVStackPeek (FcConfigParse *parse)\n{\n    FcVStack\t*vstack = parse->vstack;\n\n    return vstack && vstack->pstack == parse->pstack ? vstack : 0;\n}\n\nstatic void\nFcVStackPopAndDestroy (FcConfigParse *parse)\n{\n    FcVStack\t*vstack = parse->vstack;\n\n    if (!vstack || vstack->pstack != parse->pstack)\n\treturn;\n\n    parse->vstack = vstack->prev;\n\n    switch (vstack->tag) {\n    case FcVStackNone:\n\tbreak;\n    case FcVStackName:\n\tbreak;\n    case FcVStackFamily:\n\tbreak;\n    case FcVStackString:\n    case FcVStackConstant:\n    case FcVStackGlob:\n\tFcStrFree (vstack->u.string);\n\tbreak;\n    case FcVStackPattern:\n\tFcPatternDestroy (vstack->u.pattern);\n\tbreak;\n    case FcVStackInteger:\n    case FcVStackDouble:\n\tbreak;\n    case FcVStackMatrix:\n\tFcExprMatrixFreeShallow (vstack->u.matrix);\n\tbreak;\n    case FcVStackBool:\n\tbreak;\n    case FcVStackRange:\n\tFcRangeDestroy (vstack->u.range);\n\tbreak;\n    case FcVStackCharSet:\n\tFcCharSetDestroy (vstack->u.charset);\n\tbreak;\n    case FcVStackLangSet:\n\tFcLangSetDestroy (vstack->u.langset);\n\tbreak;\n    case FcVStackTest:\n\tFcTestDestroy (vstack->u.test);\n\tbreak;\n    case FcVStackExpr:\n    case FcVStackPrefer:\n    case FcVStackAccept:\n    case FcVStackDefault:\n\tFcExprDestroy (vstack->u.expr);\n\tbreak;\n    case FcVStackEdit:\n\tFcEditDestroy (vstack->u.edit);\n\tbreak;\n    }\n\n    if (vstack == &parse->vstack_static[parse->vstack_static_used - 1])\n\tparse->vstack_static_used--;\n    else\n\tfree (vstack);\n}\n\nstatic void\nFcVStackClear (FcConfigParse *parse)\n{\n    while (FcVStackPeek (parse))\n\tFcVStackPopAndDestroy (parse);\n}\n\nstatic int\nFcVStackElements (FcConfigParse *parse)\n{\n    int\t\th = 0;\n    FcVStack\t*vstack = parse->vstack;\n    while (vstack && vstack->pstack == parse->pstack)\n    {\n\th++;\n\tvstack = vstack->prev;\n    }\n    return h;\n}\n\nstatic FcChar8 **\nFcConfigSaveAttr (const XML_Char **attr, FcChar8 **buf, int size_bytes)\n{\n    int\t\tslen;\n    int\t\ti;\n    FcChar8\t**new;\n    FcChar8\t*s;\n\n    if (!attr)\n\treturn 0;\n    slen = 0;\n    for (i = 0; attr[i]; i++)\n\tslen += strlen ((char *) attr[i]) + 1;\n    if (i == 0)\n\treturn 0;\n    slen += (i + 1) * sizeof (FcChar8 *);\n    if (slen <= size_bytes)\n\tnew = buf;\n    else\n    {\n\tnew = malloc (slen);\n\tif (!new)\n\t{\n\t    FcConfigMessage (0, FcSevereError, \"out of memory\");\n\t    return 0;\n\t}\n    }\n    s = (FcChar8 *) (new + (i + 1));\n    for (i = 0; attr[i]; i++)\n    {\n\tnew[i] = s;\n\tstrcpy ((char *) s, (char *) attr[i]);\n\ts += strlen ((char *) s) + 1;\n    }\n    new[i] = 0;\n    return new;\n}\n\nstatic FcBool\nFcPStackPush (FcConfigParse *parse, FcElement element, const XML_Char **attr)\n{\n    FcPStack   *new;\n\n    if (parse->pstack_static_used < sizeof (parse->pstack_static) / sizeof (parse->pstack_static[0]))\n\tnew = &parse->pstack_static[parse->pstack_static_used++];\n    else\n    {\n\tnew = malloc (sizeof (FcPStack));\n\tif (!new)\n\t    return FcFalse;\n    }\n\n    new->prev = parse->pstack;\n    new->element = element;\n    new->attr = FcConfigSaveAttr (attr, new->attr_buf_static, sizeof (new->attr_buf_static));\n    FcStrBufInit (&new->str, 0, 0);\n    parse->pstack = new;\n    return FcTrue;\n}\n\nstatic FcBool\nFcPStackPop (FcConfigParse *parse)\n{\n    FcPStack   *old;\n\n    if (!parse->pstack)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"mismatching element\");\n\treturn FcFalse;\n    }\n\n    /* Don't check the attributes for FcElementNone */\n    if (parse->pstack->element != FcElementNone &&\n\tparse->pstack->attr)\n    {\n\t/* Warn about unused attrs. */\n\tFcChar8 **attrs = parse->pstack->attr;\n\twhile (*attrs)\n\t{\n\t    if (attrs[0][0])\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"invalid attribute '%s'\", attrs[0]);\n\t    }\n\t    attrs += 2;\n\t}\n    }\n\n    FcVStackClear (parse);\n    old = parse->pstack;\n    parse->pstack = old->prev;\n    FcStrBufDestroy (&old->str);\n\n    if (old->attr && old->attr != old->attr_buf_static)\n\tfree (old->attr);\n\n    if (old == &parse->pstack_static[parse->pstack_static_used - 1])\n\tparse->pstack_static_used--;\n    else\n\tfree (old);\n    return FcTrue;\n}\n\nstatic FcBool\nFcConfigParseInit (FcConfigParse\t*parse,\n\t\t   const FcChar8\t*name,\n\t\t   FcConfig\t\t*config,\n\t\t   XML_Parser\t\tparser,\n\t\t   FcBool\t\tenabled)\n{\n    parse->pstack = 0;\n    parse->pstack_static_used = 0;\n    parse->vstack = 0;\n    parse->vstack_static_used = 0;\n    parse->error = FcFalse;\n    parse->name = name;\n    parse->config = config;\n    parse->ruleset = FcRuleSetCreate (name);\n    parse->parser = parser;\n    parse->scanOnly = !enabled;\n    FcRuleSetEnable (parse->ruleset, enabled);\n\n    return FcTrue;\n}\n\nstatic void\nFcConfigCleanup (FcConfigParse\t*parse)\n{\n    while (parse->pstack)\n\tFcPStackPop (parse);\n    FcRuleSetDestroy (parse->ruleset);\n    parse->ruleset = NULL;\n}\n\nstatic const FcChar8 *\nFcConfigGetAttribute (FcConfigParse *parse, const char *attr)\n{\n    FcChar8 **attrs;\n    if (!parse->pstack)\n\treturn 0;\n\n    attrs = parse->pstack->attr;\n    if (!attrs)\n        return 0;\n\n    while (*attrs)\n    {\n\tif (!strcmp ((char *) *attrs, attr))\n\t{\n\t    attrs[0][0] = '\\0'; /* Mark as used. */\n\t    return attrs[1];\n\t}\n\tattrs += 2;\n    }\n    return 0;\n}\n\nstatic void\nFcStartElement(void *userData, const XML_Char *name, const XML_Char **attr)\n{\n    FcConfigParse   *parse = userData;\n    FcElement\t    element;\n\n    element = FcElementMap (name);\n    if (element == FcElementUnknown)\n\tFcConfigMessage (parse, FcSevereWarning, \"unknown element \\\"%s\\\"\", name);\n\n    if (!FcPStackPush (parse, element, attr))\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    return;\n}\n\nstatic void\nFcParseRescan (FcConfigParse *parse)\n{\n    int\t    n = FcVStackElements (parse);\n    while (n-- > 0)\n    {\n\tFcVStack    *v = FcVStackFetch (parse, n);\n\tif (v->tag != FcVStackInteger)\n\t    FcConfigMessage (parse, FcSevereWarning, \"non-integer rescan\");\n\telse\n\t    parse->config->rescanInterval = v->u.integer;\n    }\n}\n\nstatic void\nFcParseInt (FcConfigParse *parse)\n{\n    FcChar8 *s, *end;\n    int\t    l;\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    end = 0;\n    l = (int) strtol ((char *) s, (char **)&end, 0);\n    if (end != s + strlen ((char *) s))\n\tFcConfigMessage (parse, FcSevereError, \"\\\"%s\\\": not a valid integer\", s);\n    else\n\tFcVStackPushInteger (parse, l);\n    FcStrBufDestroy (&parse->pstack->str);\n}\n\n/*\n * idea copied from glib g_ascii_strtod with\n * permission of the author (Alexander Larsson)\n */\n\n#include <locale.h>\n\nstatic double\nFcStrtod (char *s, char **end)\n{\n#ifndef __BIONIC__\n    struct lconv    *locale_data;\n#endif\n    const char\t    *decimal_point;\n    int\t\t    dlen;\n    char\t    *dot;\n    double\t    v;\n\n    /*\n     * Have to swap the decimal point to match the current locale\n     * if that locale doesn't use 0x2e\n     */\n#ifndef __BIONIC__\n    locale_data = localeconv ();\n    decimal_point = locale_data->decimal_point;\n    dlen = strlen (decimal_point);\n#else\n    decimal_point = \".\";\n    dlen = 1;\n#endif\n\n    if ((dot = strchr (s, 0x2e)) &&\n\t(decimal_point[0] != 0x2e ||\n\t decimal_point[1] != 0))\n    {\n\tchar\tbuf[128];\n\tint\tslen = strlen (s);\n\t\n\tif (slen + dlen > (int) sizeof (buf))\n\t{\n\t    if (end)\n\t\t*end = s;\n\t    v = 0;\n\t}\n\telse\n\t{\n\t    char\t*buf_end;\n\t    /* mantissa */\n\t    strncpy (buf, s, dot - s);\n\t    /* decimal point */\n\t    strcpy (buf + (dot - s), decimal_point);\n\t    /* rest of number */\n\t    strcpy (buf + (dot - s) + dlen, dot + 1);\n\t    buf_end = 0;\n\t    v = strtod (buf, &buf_end);\n\t    if (buf_end) {\n\t\tbuf_end = s + (buf_end - buf);\n\t\tif (buf_end > dot)\n\t\t    buf_end -= dlen - 1;\n\t    }\n\t    if (end)\n\t\t*end = buf_end;\n\t}\n    }\n    else\n\tv = strtod (s, end);\n    return v;\n}\n\nstatic void\nFcParseDouble (FcConfigParse *parse)\n{\n    FcChar8 *s, *end;\n    double  d;\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    end = 0;\n    d = FcStrtod ((char *) s, (char **)&end);\n    if (end != s + strlen ((char *) s))\n\tFcConfigMessage (parse, FcSevereError, \"\\\"%s\\\": not a valid double\", s);\n    else\n\tFcVStackPushDouble (parse, d);\n    FcStrBufDestroy (&parse->pstack->str);\n}\n\nstatic void\nFcParseString (FcConfigParse *parse, FcVStackTag tag)\n{\n    FcChar8 *s;\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDone (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    if (!FcVStackPushString (parse, tag, s))\n\tFcStrFree (s);\n}\n\nstatic void\nFcParseName (FcConfigParse *parse)\n{\n    const FcChar8   *kind_string;\n    FcMatchKind\t    kind;\n    FcChar8 *s;\n    FcObject object;\n\n    kind_string = FcConfigGetAttribute (parse, \"target\");\n    if (!kind_string)\n\tkind = FcMatchDefault;\n    else\n    {\n\tif (!strcmp ((char *) kind_string, \"pattern\"))\n\t    kind = FcMatchPattern;\n\telse if (!strcmp ((char *) kind_string, \"font\"))\n\t    kind = FcMatchFont;\n\telse if (!strcmp ((char *) kind_string, \"default\"))\n\t    kind = FcMatchDefault;\n\telse\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid name target \\\"%s\\\"\", kind_string);\n\t    return;\n\t}\n    }\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDone (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    object = FcObjectFromName ((const char *) s);\n\n    FcVStackPushName (parse, kind, object);\n\n    FcStrFree (s);\n}\n\nstatic void\nFcParseMatrix (FcConfigParse *parse)\n{\n    FcExprMatrix m;\n\n    m.yy = FcPopExpr (parse);\n    m.yx = FcPopExpr (parse);\n    m.xy = FcPopExpr (parse);\n    m.xx = FcPopExpr (parse);\n\n    if (FcPopExpr (parse))\n      FcConfigMessage (parse, FcSevereError, \"wrong number of matrix elements\");\n    else\n      FcVStackPushMatrix (parse, &m);\n}\n\nstatic void\nFcParseRange (FcConfigParse *parse)\n{\n    FcVStack\t*vstack;\n    FcRange\t*r;\n    FcChar32\tn[2] = {0, 0};\n    int\t\tcount = 1;\n    double\td[2] = {0.0L, 0.0L};\n    FcBool\tdflag = FcFalse;\n\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tif (count < 0)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"too many elements in range\");\n\t    return;\n\t}\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackInteger:\n\t    if (dflag)\n\t\td[count] = (double)vstack->u.integer;\n\t    else\n\t\tn[count] = vstack->u.integer;\n\t    break;\n\tcase FcVStackDouble:\n\t    if (count == 0 && !dflag)\n\t\td[1] = (double)n[1];\n\t    d[count] = vstack->u._double;\n\t    dflag = FcTrue;\n\t    break;\n\tdefault:\n\t    FcConfigMessage (parse, FcSevereError, \"invalid element in range\");\n\t    if (dflag)\n\t\td[count] = 0.0L;\n\t    else\n\t\tn[count] = 0;\n\t    break;\n\t}\n\tcount--;\n\tFcVStackPopAndDestroy (parse);\n    }\n    if (count >= 0)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"invalid range\");\n\treturn;\n    }\n    if (dflag)\n    {\n\tif (d[0] > d[1])\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"invalid range\");\n\t    return;\n\t}\n\tr = FcRangeCreateDouble (d[0], d[1]);\n    }\n    else\n    {\n\tif (n[0] > n[1])\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"invalid range\");\n\t    return;\n\t}\n\tr = FcRangeCreateInteger (n[0], n[1]);\n    }\n    FcVStackPushRange (parse, r);\n}\n\nstatic FcBool\nFcConfigLexBool (FcConfigParse *parse, const FcChar8 *bool_)\n{\n    FcBool  result = FcFalse;\n\n    if (!FcNameBool (bool_, &result))\n\tFcConfigMessage (parse, FcSevereWarning, \"\\\"%s\\\" is not known boolean\",\n\t\t\t bool_);\n    return result;\n}\n\nstatic void\nFcParseBool (FcConfigParse *parse)\n{\n    FcChar8 *s;\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    FcVStackPushBool (parse, FcConfigLexBool (parse, s));\n    FcStrBufDestroy (&parse->pstack->str);\n}\n\nstatic void\nFcParseCharSet (FcConfigParse *parse)\n{\n    FcVStack\t*vstack;\n    FcCharSet\t*charset = FcCharSetCreate ();\n    FcChar32\ti, begin, end;\n    int n = 0;\n\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackInteger:\n\t    if (!FcCharSetAddChar (charset, vstack->u.integer))\n\t    {\n\t\tFcConfigMessage (parse, FcSevereWarning, \"invalid character: 0x%04x\", vstack->u.integer);\n\t    }\n\t    else\n\t\tn++;\n\t    break;\n\tcase FcVStackRange:\n\t    begin = (FcChar32) vstack->u.range->begin;\n\t    end = (FcChar32) vstack->u.range->end;\n\n\t    if (begin <= end)\n\t    {\n\t      for (i = begin; i <= end; i++)\n\t      {\n\t\t  if (!FcCharSetAddChar (charset, i))\n\t\t  {\n\t\t      FcConfigMessage (parse, FcSevereWarning, \"invalid character: 0x%04x\", i);\n\t\t  }\n\t\t  else\n\t\t      n++;\n\t      }\n\t    }\n\t    break;\n\tdefault:\n\t\tFcConfigMessage (parse, FcSevereError, \"invalid element in charset\");\n\t\tbreak;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n    if (n > 0)\n\t    FcVStackPushCharSet (parse, charset);\n    else\n\t    FcCharSetDestroy (charset);\n}\n\nstatic void\nFcParseLangSet (FcConfigParse *parse)\n{\n    FcVStack\t*vstack;\n    FcLangSet\t*langset = FcLangSetCreate ();\n    int n = 0;\n\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackString:\n\t    if (!FcLangSetAdd (langset, vstack->u.string))\n\t    {\n\t\tFcConfigMessage (parse, FcSevereWarning, \"invalid langset: %s\", vstack->u.string);\n\t    }\n\t    else\n\t\tn++;\n\t    break;\n\tdefault:\n\t\tFcConfigMessage (parse, FcSevereError, \"invalid element in langset\");\n\t\tbreak;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n    if (n > 0)\n\t    FcVStackPushLangSet (parse, langset);\n    else\n\t    FcLangSetDestroy (langset);\n}\n\nstatic FcBool\nFcConfigLexBinding (FcConfigParse   *parse,\n\t\t    const FcChar8   *binding_string,\n\t\t    FcValueBinding  *binding_ret)\n{\n    FcValueBinding binding;\n\n    if (!binding_string)\n\tbinding = FcValueBindingWeak;\n    else\n    {\n\tif (!strcmp ((char *) binding_string, \"weak\"))\n\t    binding = FcValueBindingWeak;\n\telse if (!strcmp ((char *) binding_string, \"strong\"))\n\t    binding = FcValueBindingStrong;\n\telse if (!strcmp ((char *) binding_string, \"same\"))\n\t    binding = FcValueBindingSame;\n\telse\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid binding \\\"%s\\\"\", binding_string);\n\t    return FcFalse;\n\t}\n    }\n    *binding_ret = binding;\n    return FcTrue;\n}\n\nstatic void\nFcParseFamilies (FcConfigParse *parse, FcVStackTag tag)\n{\n    FcVStack\t*vstack;\n    FcExpr\t*left, *expr = 0, *new;\n\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tif (vstack->tag != FcVStackFamily)\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"non-family\");\n\t    FcVStackPopAndDestroy (parse);\n\t    continue;\n\t}\n\tleft = vstack->u.expr;\n\tvstack->tag = FcVStackNone;\n\tFcVStackPopAndDestroy (parse);\n\tif (expr)\n\t{\n\t    new = FcExprCreateOp (parse->config, left, FcOpComma, expr);\n\t    if (!new)\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t\tFcExprDestroy (left);\n\t\tFcExprDestroy (expr);\n\t\tbreak;\n\t    }\n\t    expr = new;\n\t}\n\telse\n\t    expr = left;\n    }\n    if (expr)\n    {\n\tif (!FcVStackPushExpr (parse, tag, expr))\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n            FcExprDestroy (expr);\n\t}\n    }\n}\n\nstatic void\nFcParseFamily (FcConfigParse *parse)\n{\n    FcChar8 *s;\n    FcExpr  *expr;\n\n    if (!parse->pstack)\n\treturn;\n    s = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    expr = FcExprCreateString (parse->config, s);\n    FcStrBufDestroy (&parse->pstack->str);\n    if (expr)\n\tFcVStackPushExpr (parse, FcVStackFamily, expr);\n}\n\nstatic void\nFcParseAlias (FcConfigParse *parse)\n{\n    FcExpr\t*family = 0, *accept = 0, *prefer = 0, *def = 0, *new = 0;\n    FcEdit\t*edit = 0;\n    FcVStack\t*vstack;\n    FcRule\t*rule = NULL, *r;\n    FcValueBinding  binding;\n    int\t\t    n;\n\n    if (!FcConfigLexBinding (parse, FcConfigGetAttribute (parse, \"binding\"), &binding))\n\treturn;\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackFamily:\n\t    if (family)\n\t    {\n\t\tFcConfigMessage (parse, FcSevereWarning, \"Having multiple <family> in <alias> isn't supported and may not work as expected\");\n\t\tnew = FcExprCreateOp (parse->config, vstack->u.expr, FcOpComma, family);\n\t\tif (!new)\n\t\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t\telse\n\t\t    family = new;\n\t    }\n\t    else\n\t\tnew = vstack->u.expr;\n\t    if (new)\n\t    {\n\t\tfamily = new;\n\t\tvstack->tag = FcVStackNone;\n\t    }\n\t    break;\n\tcase FcVStackPrefer:\n\t    if (prefer)\n\t\tFcExprDestroy (prefer);\n\t    prefer = vstack->u.expr;\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tcase FcVStackAccept:\n\t    if (accept)\n\t\tFcExprDestroy (accept);\n\t    accept = vstack->u.expr;\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tcase FcVStackDefault:\n\t    if (def)\n\t\tFcExprDestroy (def);\n\t    def = vstack->u.expr;\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tcase FcVStackTest:\n\t    if (rule)\n\t    {\n\t\tr = FcRuleCreate (FcRuleTest, vstack->u.test);\n\t\tr->next = rule;\n\t\trule = r;\n\t    }\n\t    else\n\t\trule = FcRuleCreate (FcRuleTest, vstack->u.test);\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tdefault:\n\t    FcConfigMessage (parse, FcSevereWarning, \"bad alias\");\n\t    break;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n    if (!family)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"missing family in alias\");\n\tif (prefer)\n\t    FcExprDestroy (prefer);\n\tif (accept)\n\t    FcExprDestroy (accept);\n\tif (def)\n\t    FcExprDestroy (def);\n\tif (rule)\n\t    FcRuleDestroy (rule);\n\treturn;\n    }\n    if (!prefer &&\n\t!accept &&\n\t!def)\n    {\n\tFcExprDestroy (family);\n\tif (rule)\n\t    FcRuleDestroy (rule);\n\treturn;\n    }\n    else\n    {\n\tFcTest *t = FcTestCreate (parse, FcMatchPattern,\n\t\t\t\t  FcQualAny,\n\t\t\t\t  (FcChar8 *) FC_FAMILY,\n\t\t\t\t  FC_OP (FcOpEqual, FcOpFlagIgnoreBlanks),\n\t\t\t\t  family);\n\tif (rule)\n\t{\n\t    for (r = rule; r->next; r = r->next);\n\t    r->next = FcRuleCreate (FcRuleTest, t);\n\t    r = r->next;\n\t}\n\telse\n\t{\n\t    r = rule = FcRuleCreate (FcRuleTest, t);\n\t}\n    }\n    if (prefer)\n    {\n\tedit = FcEditCreate (parse,\n\t\t\t     FC_FAMILY_OBJECT,\n\t\t\t     FcOpPrepend,\n\t\t\t     prefer,\n\t\t\t     binding);\n\tif (!edit)\n\t    FcExprDestroy (prefer);\n\telse\n\t{\n\t    r->next = FcRuleCreate (FcRuleEdit, edit);\n\t    r = r->next;\n\t}\n    }\n    if (accept)\n    {\n\tedit = FcEditCreate (parse,\n\t\t\t     FC_FAMILY_OBJECT,\n\t\t\t     FcOpAppend,\n\t\t\t     accept,\n\t\t\t     binding);\n\tif (!edit)\n\t    FcExprDestroy (accept);\n\telse\n\t{\n\t    r->next = FcRuleCreate (FcRuleEdit, edit);\n\t    r = r->next;\n\t}\n    }\n    if (def)\n    {\n\tedit = FcEditCreate (parse,\n\t\t\t     FC_FAMILY_OBJECT,\n\t\t\t     FcOpAppendLast,\n\t\t\t     def,\n\t\t\t     binding);\n\tif (!edit)\n\t    FcExprDestroy (def);\n\telse\n\t{\n\t    r->next = FcRuleCreate (FcRuleEdit, edit);\n\t    r = r->next;\n\t}\n    }\n    if ((n = FcRuleSetAdd (parse->ruleset, rule, FcMatchPattern)) == -1)\n\tFcRuleDestroy (rule);\n    else\n\tif (parse->config->maxObjects < n)\n\t    parse->config->maxObjects = n;\n}\n\nstatic void\nFcParseDescription (FcConfigParse *parse)\n{\n    const FcChar8 *domain;\n    FcChar8 *desc;\n\n    domain = FcConfigGetAttribute (parse, \"domain\");\n    desc = FcStrBufDone (&parse->pstack->str);\n    if (!desc)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    FcRuleSetAddDescription (parse->ruleset, domain, desc);\n\n    FcStrFree (desc);\n}\n\nstatic FcExpr *\nFcPopExpr (FcConfigParse *parse)\n{\n    FcVStack\t*vstack = FcVStackPeek (parse);\n    FcExpr\t*expr = 0;\n    if (!vstack)\n\treturn 0;\n    switch ((int) vstack->tag) {\n    case FcVStackNone:\n\tbreak;\n    case FcVStackString:\n    case FcVStackFamily:\n\texpr = FcExprCreateString (parse->config, vstack->u.string);\n\tbreak;\n    case FcVStackName:\n\texpr = FcExprCreateName (parse->config, vstack->u.name);\n\tbreak;\n    case FcVStackConstant:\n\texpr = FcExprCreateConst (parse->config, vstack->u.string);\n\tbreak;\n    case FcVStackGlob:\n\t/* XXX: What's the correct action here? (CDW) */\n\tbreak;\n    case FcVStackPrefer:\n    case FcVStackAccept:\n    case FcVStackDefault:\n\texpr = vstack->u.expr;\n\tvstack->tag = FcVStackNone;\n\tbreak;\n    case FcVStackInteger:\n\texpr = FcExprCreateInteger (parse->config, vstack->u.integer);\n\tbreak;\n    case FcVStackDouble:\n\texpr = FcExprCreateDouble (parse->config, vstack->u._double);\n\tbreak;\n    case FcVStackMatrix:\n\texpr = FcExprCreateMatrix (parse->config, vstack->u.matrix);\n\tbreak;\n    case FcVStackRange:\n\texpr = FcExprCreateRange (parse->config, vstack->u.range);\n\tbreak;\n    case FcVStackBool:\n\texpr = FcExprCreateBool (parse->config, vstack->u.bool_);\n\tbreak;\n    case FcVStackCharSet:\n\texpr = FcExprCreateCharSet (parse->config, vstack->u.charset);\n\tbreak;\n    case FcVStackLangSet:\n\texpr = FcExprCreateLangSet (parse->config, vstack->u.langset);\n\tbreak;\n    case FcVStackTest:\n\tbreak;\n    case FcVStackExpr:\n\texpr = vstack->u.expr;\n\tvstack->tag = FcVStackNone;\n\tbreak;\n    case FcVStackEdit:\n\tbreak;\n    default:\n\tbreak;\n    }\n    FcVStackPopAndDestroy (parse);\n    return expr;\n}\n\n/*\n * This builds a tree of binary operations.  Note\n * that every operator is defined so that if only\n * a single operand is contained, the value of the\n * whole expression is the value of the operand.\n *\n * This code reduces in that case to returning that\n * operand.\n */\nstatic FcExpr *\nFcPopBinary (FcConfigParse *parse, FcOp op)\n{\n    FcExpr  *left, *expr = 0, *new;\n\n    while ((left = FcPopExpr (parse)))\n    {\n\tif (expr)\n\t{\n\t    new = FcExprCreateOp (parse->config, left, op, expr);\n\t    if (!new)\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t\tFcExprDestroy (left);\n\t\tFcExprDestroy (expr);\n\t\treturn 0;\n\t    }\n\t    expr = new;\n\t}\n\telse\n\t    expr = left;\n    }\n    return expr;\n}\n\nstatic void\nFcParseBinary (FcConfigParse *parse, FcOp op)\n{\n    FcExpr  *expr = FcPopBinary (parse, op);\n    if (expr)\n\tFcVStackPushExpr (parse, FcVStackExpr, expr);\n}\n\n/*\n * This builds a a unary operator, it consumes only\n * a single operand\n */\n\nstatic FcExpr *\nFcPopUnary (FcConfigParse *parse, FcOp op)\n{\n    FcExpr  *operand, *new = 0;\n\n    if ((operand = FcPopExpr (parse)))\n    {\n\tnew = FcExprCreateOp (parse->config, operand, op, 0);\n\tif (!new)\n\t{\n\t    FcExprDestroy (operand);\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t}\n    }\n    return new;\n}\n\nstatic void\nFcParseUnary (FcConfigParse *parse, FcOp op)\n{\n    FcExpr  *expr = FcPopUnary (parse, op);\n    if (expr)\n\tFcVStackPushExpr (parse, FcVStackExpr, expr);\n}\n\nstatic void\nFcParseDir (FcConfigParse *parse)\n{\n    const FcChar8 *attr, *data;\n    FcChar8 *prefix = NULL, *p;\n#ifdef _WIN32\n    FcChar8         buffer[1000];\n#endif\n\n    attr = FcConfigGetAttribute (parse, \"prefix\");\n    if (attr && FcStrCmp (attr, (const FcChar8 *)\"xdg\") == 0)\n    {\n\tprefix = FcConfigXdgDataHome ();\n\t/* home directory might be disabled.\n\t * simply ignore this element.\n\t */\n\tif (!prefix)\n\t    goto bail;\n    }\n    data = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!data)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\tdata = prefix;\n\tgoto bail;\n    }\n    if (prefix)\n    {\n\tsize_t plen = strlen ((const char *)prefix);\n\tsize_t dlen = strlen ((const char *)data);\n\n\tp = realloc (prefix, plen + 1 + dlen + 1);\n\tif (!p)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    goto bail;\n\t}\n\tprefix = p;\n\tprefix[plen] = FC_DIR_SEPARATOR;\n\tmemcpy (&prefix[plen + 1], data, dlen);\n\tprefix[plen + 1 + dlen] = 0;\n\tdata = prefix;\n    }\n#ifdef _WIN32\n    if (strcmp ((const char *) data, \"CUSTOMFONTDIR\") == 0)\n    {\n\tFcChar8 *p;\n\tdata = buffer;\n\tif (!GetModuleFileName (NULL, (LPCH) buffer, sizeof (buffer) - 20))\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"GetModuleFileName failed\");\n\t    goto bail;\n\t}\n\t/*\n\t * Must use the multi-byte aware function to search\n\t * for backslash because East Asian double-byte code\n\t * pages have characters with backslash as the second\n\t * byte.\n\t */\n\tp = _mbsrchr (data, '\\\\');\n\tif (p) *p = '\\0';\n\tstrcat ((char *) data, \"\\\\fonts\");\n    }\n    else if (strcmp ((const char *) data, \"APPSHAREFONTDIR\") == 0)\n    {\n\tFcChar8 *p;\n\tdata = buffer;\n\tif (!GetModuleFileName (NULL, (LPCH) buffer, sizeof (buffer) - 20))\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"GetModuleFileName failed\");\n\t    goto bail;\n\t}\n\tp = _mbsrchr (data, '\\\\');\n\tif (p) *p = '\\0';\n\tstrcat ((char *) data, \"\\\\..\\\\share\\\\fonts\");\n    }\n    else if (strcmp ((const char *) data, \"WINDOWSFONTDIR\") == 0)\n    {\n\tint rc;\n\tdata = buffer;\n\trc = pGetSystemWindowsDirectory ((LPSTR) buffer, sizeof (buffer) - 20);\n\tif (rc == 0 || rc > sizeof (buffer) - 20)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"GetSystemWindowsDirectory failed\");\n\t    goto bail;\n\t}\n\tif (data [strlen ((const char *) data) - 1] != '\\\\')\n\t    strcat ((char *) data, \"\\\\\");\n\tstrcat ((char *) data, \"fonts\");\n    }\n#endif\n    if (strlen ((char *) data) == 0)\n\tFcConfigMessage (parse, FcSevereWarning, \"empty font directory name ignored\");\n    else if (!parse->scanOnly && (!FcStrUsesHome (data) || FcConfigHome ()))\n    {\n\tif (!FcConfigAddFontDir (parse->config, data))\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory; cannot add directory %s\", data);\n    }\n    FcStrBufDestroy (&parse->pstack->str);\n\n  bail:\n    if (prefix)\n\tFcStrFree (prefix);\n}\n\nstatic void\nFcParseCacheDir (FcConfigParse *parse)\n{\n    const FcChar8 *attr;\n    FcChar8 *prefix = NULL, *p, *data = NULL;\n\n    attr = FcConfigGetAttribute (parse, \"prefix\");\n    if (attr && FcStrCmp (attr, (const FcChar8 *)\"xdg\") == 0)\n    {\n\tprefix = FcConfigXdgCacheHome ();\n\t/* home directory might be disabled.\n\t * simply ignore this element.\n\t */\n\tif (!prefix)\n\t    goto bail;\n    }\n    data = FcStrBufDone (&parse->pstack->str);\n    if (!data)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\tdata = prefix;\n\tgoto bail;\n    }\n    if (prefix)\n    {\n\tsize_t plen = strlen ((const char *)prefix);\n\tsize_t dlen = strlen ((const char *)data);\n\n\tp = realloc (prefix, plen + 1 + dlen + 1);\n\tif (!p)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    FcStrFree (prefix);\n\t    goto bail;\n\t}\n\tprefix = p;\n\tprefix[plen] = FC_DIR_SEPARATOR;\n\tmemcpy (&prefix[plen + 1], data, dlen);\n\tprefix[plen + 1 + dlen] = 0;\n\tFcStrFree (data);\n\tdata = prefix;\n    }\n#ifdef _WIN32\n    else if (data[0] == '/' && fontconfig_instprefix[0] != '\\0')\n    {\n\tsize_t plen = strlen ((const char *)fontconfig_instprefix);\n\tsize_t dlen = strlen ((const char *)data);\n\n\tprefix = malloc (plen + 1 + dlen + 1);\n\tif (!prefix)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    goto bail;\n\t}\n\tstrcpy ((char *) prefix, (char *) fontconfig_instprefix);\n\tprefix[plen] = FC_DIR_SEPARATOR;\n\tmemcpy (&prefix[plen + 1], data, dlen);\n\tprefix[plen + 1 + dlen] = 0;\n\tFcStrFree (data);\n\tdata = prefix;\n    }\n    else if (strcmp ((const char *) data, \"WINDOWSTEMPDIR_FONTCONFIG_CACHE\") == 0)\n    {\n\tint rc;\n\n\tFcStrFree (data);\n\tdata = malloc (1000);\n\tif (!data)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    goto bail;\n\t}\n\trc = GetTempPath (800, (LPSTR) data);\n\tif (rc == 0 || rc > 800)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"GetTempPath failed\");\n\t    goto bail;\n\t}\n\tif (data [strlen ((const char *) data) - 1] != '\\\\')\n\t    strcat ((char *) data, \"\\\\\");\n\tstrcat ((char *) data, \"fontconfig\\\\cache\");\n    }\n    else if (strcmp ((const char *) data, \"LOCAL_APPDATA_FONTCONFIG_CACHE\") == 0)\n    {\n\tchar szFPath[MAX_PATH + 1];\n\tsize_t len;\n\n\tif (!(pSHGetFolderPathA && SUCCEEDED(pSHGetFolderPathA(NULL, /* CSIDL_LOCAL_APPDATA */ 28, NULL, 0, szFPath))))\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"SHGetFolderPathA failed\");\n\t    goto bail;\n\t}\n\tstrncat(szFPath, \"\\\\fontconfig\\\\cache\", MAX_PATH - 1 - strlen(szFPath));\n\tlen = strlen(szFPath) + 1;\n\tFcStrFree (data);\n\tdata = malloc(len);\n\tif (!data)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    goto bail;\n\t}\n\tstrncpy((char *) data, szFPath, len);\n    }\n#endif\n    if (strlen ((char *) data) == 0)\n\tFcConfigMessage (parse, FcSevereWarning, \"empty cache directory name ignored\");\n    else if (!parse->scanOnly && (!FcStrUsesHome (data) || FcConfigHome ()))\n    {\n\tif (!FcConfigAddCacheDir (parse->config, data))\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory; cannot add cache directory %s\", data);\n    }\n    FcStrBufDestroy (&parse->pstack->str);\n\n  bail:\n    if (data)\n\tFcStrFree (data);\n}\n\nvoid\nFcConfigPathFini (void)\n{\n    FcChar8 *s;\n\nretry_dir:\n    s = fc_atomic_ptr_get (&__fc_userdir);\n    if (!fc_atomic_ptr_cmpexch (&__fc_userdir, s, NULL))\n\tgoto retry_dir;\n    free (s);\n\nretry_conf:\n    s = fc_atomic_ptr_get (&__fc_userconf);\n    if (!fc_atomic_ptr_cmpexch (&__fc_userconf, s, NULL))\n\tgoto retry_conf;\n    free (s);\n}\n\nstatic void\nFcParseInclude (FcConfigParse *parse)\n{\n    FcChar8\t    *s;\n    const FcChar8   *attr;\n    FcBool\t    ignore_missing = FcFalse;\n#ifndef _WIN32\n    FcBool\t    deprecated = FcFalse;\n#endif\n    FcChar8\t    *prefix = NULL, *p;\n    FcChar8\t    *userdir = NULL, *userconf = NULL;\n    FcRuleSet\t    *ruleset;\n    FcMatchKind\t    k;\n\n    s = FcStrBufDoneStatic (&parse->pstack->str);\n    if (!s)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\tgoto bail;\n    }\n    attr = FcConfigGetAttribute (parse, \"ignore_missing\");\n    if (attr && FcConfigLexBool (parse, (FcChar8 *) attr) == FcTrue)\n\tignore_missing = FcTrue;\n    attr = FcConfigGetAttribute (parse, \"deprecated\");\n#ifndef _WIN32\n    if (attr && FcConfigLexBool (parse, (FcChar8 *) attr) == FcTrue)\n        deprecated = FcTrue;\n#endif\n    attr = FcConfigGetAttribute (parse, \"prefix\");\n    if (attr && FcStrCmp (attr, (const FcChar8 *)\"xdg\") == 0)\n    {\n\tprefix = FcConfigXdgConfigHome ();\n\t/* home directory might be disabled.\n\t * simply ignore this element.\n\t */\n\tif (!prefix)\n\t    goto bail;\n    }\n    if (prefix)\n    {\n\tsize_t plen = strlen ((const char *)prefix);\n\tsize_t dlen = strlen ((const char *)s);\n\tFcChar8 *u;\n\n\tp = realloc (prefix, plen + 1 + dlen + 1);\n\tif (!p)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    goto bail;\n\t}\n\tprefix = p;\n\tprefix[plen] = FC_DIR_SEPARATOR;\n\tmemcpy (&prefix[plen + 1], s, dlen);\n\tprefix[plen + 1 + dlen] = 0;\n\ts = prefix;\n\tif (FcFileIsDir (s))\n\t{\n\tuserdir:\n\t    userdir = fc_atomic_ptr_get (&__fc_userdir);\n\t    if (!userdir)\n\t    {\n\t\tu = FcStrdup (s);\n\t\tif (!fc_atomic_ptr_cmpexch (&__fc_userdir, userdir, u))\n\t\t{\n\t\t    free (u);\n\t\t    goto userdir;\n\t\t}\n\t\tuserdir = u;\n\t    }\n\t}\n\telse if (FcFileIsFile (s))\n\t{\n\tuserconf:\n\t    userconf = fc_atomic_ptr_get (&__fc_userconf);\n\t    if (!userconf)\n\t    {\n\t\tu = FcStrdup (s);\n\t\tif (!fc_atomic_ptr_cmpexch (&__fc_userconf, userconf, u))\n\t\t{\n\t\t    free (u);\n\t\t    goto userconf;\n\t\t}\n\t\tuserconf = u;\n\t    }\n\t}\n\telse\n\t{\n\t    /* No config dir nor file on the XDG directory spec compliant place\n\t     * so need to guess what it is supposed to be.\n\t     */\n\t    if (FcStrStr (s, (const FcChar8 *)\"conf.d\") != NULL)\n\t\tgoto userdir;\n\t    else\n\t\tgoto userconf;\n\t}\n    }\n    /* flush the ruleset into the queue */\n    ruleset = parse->ruleset;\n    parse->ruleset = FcRuleSetCreate (ruleset->name);\n    FcRuleSetEnable (parse->ruleset, ruleset->enabled);\n    FcRuleSetAddDescription (parse->ruleset, ruleset->domain, ruleset->description);\n    for (k = FcMatchKindBegin; k < FcMatchKindEnd; k++)\n    {\n\tFcPtrListIter iter;\n\n\tFcPtrListIterInit (ruleset->subst[k], &iter);\n\tif (FcPtrListIterIsValid (ruleset->subst[k], &iter))\n\t{\n\t    FcPtrListIterInitAtLast (parse->config->subst[k], &iter);\n\t    FcRuleSetReference (ruleset);\n\t    FcPtrListIterAdd (parse->config->subst[k], &iter, ruleset);\n\t}\n    }\n    FcRuleSetDestroy (ruleset);\n    if (!_FcConfigParse (parse->config, s, !ignore_missing, !parse->scanOnly))\n\tparse->error = FcTrue;\n#ifndef _WIN32\n    else\n    {\n        FcChar8 *filename;\n\tstatic FcBool warn_conf = FcFalse, warn_confd = FcFalse;\n\n        filename = FcConfigFilename(s);\n\tif (deprecated == FcTrue &&\n\t    filename != NULL &&\n\t    userdir != NULL &&\n\t    !FcFileIsLink (filename))\n\t{\n\t    if (FcFileIsDir (filename))\n\t    {\n\t\tFcChar8 *parent = FcStrDirname (userdir);\n\n\t\tif (!FcFileIsDir (parent))\n\t\t    FcMakeDirectory (parent);\n\t\tFcStrFree (parent);\n\t\tif (FcFileIsDir (userdir) ||\n\t\t    rename ((const char *)filename, (const char *)userdir) != 0 ||\n\t\t    symlink ((const char *)userdir, (const char *)filename) != 0)\n\t\t{\n\t\t    if (!warn_confd)\n\t\t    {\n\t\t\tFcConfigMessage (parse, FcSevereWarning, \"reading configurations from %s is deprecated. please move it to %s manually\", s, userdir);\n\t\t\twarn_confd = FcTrue;\n\t\t    }\n\t\t}\n\t    }\n\t    else\n\t    {\n\t\tFcChar8 *parent = FcStrDirname (userconf);\n\n\t\tif (!FcFileIsDir (parent))\n\t\t    FcMakeDirectory (parent);\n\t\tFcStrFree (parent);\n\t\tif (FcFileIsFile (userconf) ||\n\t\t    rename ((const char *)filename, (const char *)userconf) != 0 ||\n\t\t    symlink ((const char *)userconf, (const char *)filename) != 0)\n\t\t{\n\t\t    if (!warn_conf)\n\t\t    {\n\t\t\tFcConfigMessage (parse, FcSevereWarning, \"reading configurations from %s is deprecated. please move it to %s manually\", s, userconf);\n\t\t\twarn_conf = FcTrue;\n\t\t    }\n\t\t}\n\t    }\n        }\n        if(filename)\n            FcStrFree(filename);\n    }\n#endif\n    FcStrBufDestroy (&parse->pstack->str);\n\n  bail:\n    if (prefix)\n\tFcStrFree (prefix);\n}\n\ntypedef struct _FcOpMap {\n    char    name[16];\n    FcOp    op;\n} FcOpMap;\n\nstatic FcOp\nFcConfigLexOp (const FcChar8 *op, const FcOpMap\t*map, int nmap)\n{\n    int\ti;\n\n    for (i = 0; i < nmap; i++)\n\tif (!strcmp ((char *) op, map[i].name))\n\t    return map[i].op;\n    return FcOpInvalid;\n}\n\nstatic const FcOpMap fcCompareOps[] = {\n    { \"eq\",\t\tFcOpEqual\t    },\n    { \"not_eq\",\t\tFcOpNotEqual\t    },\n    { \"less\",\t\tFcOpLess\t    },\n    { \"less_eq\",\tFcOpLessEqual\t    },\n    { \"more\",\t\tFcOpMore\t    },\n    { \"more_eq\",\tFcOpMoreEqual\t    },\n    { \"contains\",\tFcOpContains\t    },\n    { \"not_contains\",\tFcOpNotContains\t    }\n};\n\n#define NUM_COMPARE_OPS\t(int) (sizeof fcCompareOps / sizeof fcCompareOps[0])\n\nstatic FcOp\nFcConfigLexCompare (const FcChar8 *compare)\n{\n    return FcConfigLexOp (compare, fcCompareOps, NUM_COMPARE_OPS);\n}\n\nstatic void\nFcParseTest (FcConfigParse *parse)\n{\n    const FcChar8   *kind_string;\n    FcMatchKind\t    kind;\n    const FcChar8   *qual_string;\n    FcQual\t    qual;\n    const FcChar8   *name;\n    const FcChar8   *compare_string;\n    FcOp\t    compare;\n    FcExpr\t    *expr;\n    FcTest\t    *test;\n    const FcChar8   *iblanks_string;\n    int              flags = 0;\n\n    kind_string = FcConfigGetAttribute (parse, \"target\");\n    if (!kind_string)\n\tkind = FcMatchDefault;\n    else\n    {\n\tif (!strcmp ((char *) kind_string, \"pattern\"))\n\t    kind = FcMatchPattern;\n\telse if (!strcmp ((char *) kind_string, \"font\"))\n\t    kind = FcMatchFont;\n\telse if (!strcmp ((char *) kind_string, \"scan\"))\n\t    kind = FcMatchScan;\n\telse if (!strcmp ((char *) kind_string, \"default\"))\n\t    kind = FcMatchDefault;\n\telse\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid test target \\\"%s\\\"\", kind_string);\n\t    return;\n\t}\n    }\n    qual_string = FcConfigGetAttribute (parse, \"qual\");\n    if (!qual_string)\n\tqual = FcQualAny;\n    else\n    {\n\tif (!strcmp ((char *) qual_string, \"any\"))\n\t    qual = FcQualAny;\n\telse if (!strcmp ((char *) qual_string, \"all\"))\n\t    qual = FcQualAll;\n\telse if (!strcmp ((char *) qual_string, \"first\"))\n\t    qual = FcQualFirst;\n\telse if (!strcmp ((char *) qual_string, \"not_first\"))\n\t    qual = FcQualNotFirst;\n\telse\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid test qual \\\"%s\\\"\", qual_string);\n\t    return;\n\t}\n    }\n    name = FcConfigGetAttribute (parse, \"name\");\n    if (!name)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"missing test name\");\n\treturn;\n    }\n    compare_string = FcConfigGetAttribute (parse, \"compare\");\n    if (!compare_string)\n\tcompare = FcOpEqual;\n    else\n    {\n\tcompare = FcConfigLexCompare (compare_string);\n\tif (compare == FcOpInvalid)\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid test compare \\\"%s\\\"\", compare_string);\n\t    return;\n\t}\n    }\n    iblanks_string = FcConfigGetAttribute (parse, \"ignore-blanks\");\n    if (iblanks_string)\n    {\n\tFcBool f = FcFalse;\n\n\tif (!FcNameBool (iblanks_string, &f))\n\t{\n\t    FcConfigMessage (parse,\n\t\t\t     FcSevereWarning,\n\t\t\t     \"invalid test ignore-blanks \\\"%s\\\"\", iblanks_string);\n\t}\n\tif (f)\n\t    flags |= FcOpFlagIgnoreBlanks;\n    }\n    expr = FcPopBinary (parse, FcOpComma);\n    if (!expr)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"missing test expression\");\n\treturn;\n    }\n    if (expr->op == FcOpComma)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"Having multiple values in <test> isn't supported and may not work as expected\");\n    }\n    test = FcTestCreate (parse, kind, qual, name, FC_OP (compare, flags), expr);\n    if (!test)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n    FcVStackPushTest (parse, test);\n}\n\nstatic const FcOpMap fcModeOps[] = {\n    { \"assign\",\t\tFcOpAssign\t    },\n    { \"assign_replace\",\tFcOpAssignReplace   },\n    { \"prepend\",\tFcOpPrepend\t    },\n    { \"prepend_first\",\tFcOpPrependFirst    },\n    { \"append\",\t\tFcOpAppend\t    },\n    { \"append_last\",\tFcOpAppendLast\t    },\n    { \"delete\",\t\tFcOpDelete\t    },\n    { \"delete_all\",\tFcOpDeleteAll\t    },\n};\n\n#define NUM_MODE_OPS (int) (sizeof fcModeOps / sizeof fcModeOps[0])\n\nstatic FcOp\nFcConfigLexMode (const FcChar8 *mode)\n{\n    return FcConfigLexOp (mode, fcModeOps, NUM_MODE_OPS);\n}\n\nstatic void\nFcParseEdit (FcConfigParse *parse)\n{\n    const FcChar8   *name;\n    const FcChar8   *mode_string;\n    FcOp\t    mode;\n    FcValueBinding  binding;\n    FcExpr\t    *expr;\n    FcEdit\t    *edit;\n\n    name = FcConfigGetAttribute (parse, \"name\");\n    if (!name)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"missing edit name\");\n\treturn;\n    }\n    mode_string = FcConfigGetAttribute (parse, \"mode\");\n    if (!mode_string)\n\tmode = FcOpAssign;\n    else\n    {\n\tmode = FcConfigLexMode (mode_string);\n\tif (mode == FcOpInvalid)\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid edit mode \\\"%s\\\"\", mode_string);\n\t    return;\n\t}\n    }\n    if (!FcConfigLexBinding (parse, FcConfigGetAttribute (parse, \"binding\"), &binding))\n\treturn;\n\n    expr = FcPopBinary (parse, FcOpComma);\n    if ((mode == FcOpDelete || mode == FcOpDeleteAll) &&\n\texpr != NULL)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"Expression doesn't take any effects for delete and delete_all\");\n\tFcExprDestroy (expr);\n\texpr = NULL;\n    }\n    edit = FcEditCreate (parse, FcObjectFromName ((char *) name),\n\t\t\t mode, expr, binding);\n    if (!edit)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\tFcExprDestroy (expr);\n\treturn;\n    }\n    if (!FcVStackPushEdit (parse, edit))\n\tFcEditDestroy (edit);\n}\n\nstatic void\nFcParseMatch (FcConfigParse *parse)\n{\n    const FcChar8   *kind_name;\n    FcMatchKind\t    kind;\n    FcVStack\t    *vstack;\n    FcRule\t    *rule = NULL, *r;\n    int\t\t    n;\n\n    kind_name = FcConfigGetAttribute (parse, \"target\");\n    if (!kind_name)\n\tkind = FcMatchPattern;\n    else\n    {\n\tif (!strcmp ((char *) kind_name, \"pattern\"))\n\t    kind = FcMatchPattern;\n\telse if (!strcmp ((char *) kind_name, \"font\"))\n\t    kind = FcMatchFont;\n\telse if (!strcmp ((char *) kind_name, \"scan\"))\n\t    kind = FcMatchScan;\n\telse\n\t{\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid match target \\\"%s\\\"\", kind_name);\n\t    return;\n\t}\n    }\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackTest:\n\t    r = FcRuleCreate (FcRuleTest, vstack->u.test);\n\t    if (rule)\n\t\tr->next = rule;\n\t    rule = r;\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tcase FcVStackEdit:\n\t    if (kind == FcMatchScan && vstack->u.edit->object > FC_MAX_BASE_OBJECT)\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError,\n\t\t\t\t \"<match target=\\\"scan\\\"> cannot edit user-defined object \\\"%s\\\"\",\n\t\t\t\t FcObjectName(vstack->u.edit->object));\n\t\tif (rule)\n\t\t    FcRuleDestroy (rule);\n\t\treturn;\n\t    }\n\t    r = FcRuleCreate (FcRuleEdit, vstack->u.edit);\n\t    if (rule)\n\t\tr->next = rule;\n\t    rule = r;\n\t    vstack->tag = FcVStackNone;\n\t    break;\n\tdefault:\n\t    FcConfigMessage (parse, FcSevereWarning, \"invalid match element\");\n\t    break;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n    if (!rule)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"No <test> nor <edit> elements in <match>\");\n\treturn;\n    }\n    if ((n = FcRuleSetAdd (parse->ruleset, rule, kind)) == -1)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\tFcRuleDestroy (rule);\n    }\n    else\n\tif (parse->config->maxObjects < n)\n\t    parse->config->maxObjects = n;\n}\n\nstatic void\nFcParseAcceptRejectFont (FcConfigParse *parse, FcElement element)\n{\n    FcVStack\t*vstack;\n\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackGlob:\n\t    if (!parse->scanOnly && !FcConfigGlobAdd (parse->config,\n\t\t\t\t\t\t      vstack->u.string,\n\t\t\t\t\t\t      element == FcElementAcceptfont))\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    }\n\t    else\n\t    {\n\t\tif (parse->scanOnly && vstack->u.string)\n\t\t{\n\t\t    FcStrFree (vstack->u.string);\n\t\t    vstack->tag = FcVStackNone;\n\t\t}\n\t    }\n\t    break;\n\tcase FcVStackPattern:\n\t    if (!parse->scanOnly && !FcConfigPatternsAdd (parse->config,\n\t\t\t\t\t\t\t  vstack->u.pattern,\n\t\t\t\t\t\t\t  element == FcElementAcceptfont))\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    }\n\t    else\n\t    {\n\t\tif (parse->scanOnly && vstack->u.pattern)\n\t\t    FcPatternDestroy (vstack->u.pattern);\n\t\tvstack->tag = FcVStackNone;\n\t    }\n\t    break;\n\tdefault:\n\t    FcConfigMessage (parse, FcSevereWarning, \"bad font selector\");\n\t    break;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n}\n\n\nstatic FcValue\nFcPopValue (FcConfigParse *parse)\n{\n    FcVStack\t*vstack = FcVStackPeek (parse);\n    FcValue\tvalue;\n\n    value.type = FcTypeVoid;\n\n    if (!vstack)\n\treturn value;\n\n    switch ((int) vstack->tag) {\n    case FcVStackString:\n\tvalue.u.s = FcStrdup (vstack->u.string);\n\tif (value.u.s)\n\t    value.type = FcTypeString;\n\tbreak;\n    case FcVStackConstant:\n\tif (FcNameConstant (vstack->u.string, &value.u.i))\n\t    value.type = FcTypeInteger;\n\tbreak;\n    case FcVStackInteger:\n\tvalue.u.i = vstack->u.integer;\n\tvalue.type = FcTypeInteger;\n\tbreak;\n    case FcVStackDouble:\n\tvalue.u.d = vstack->u._double;\n\tvalue.type = FcTypeDouble;\n\tbreak;\n    case FcVStackBool:\n\tvalue.u.b = vstack->u.bool_;\n\tvalue.type = FcTypeBool;\n\tbreak;\n    case FcVStackCharSet:\n\tvalue.u.c = FcCharSetCopy (vstack->u.charset);\n\tif (value.u.c)\n\t    value.type = FcTypeCharSet;\n\tbreak;\n    case FcVStackLangSet:\n\tvalue.u.l = FcLangSetCopy (vstack->u.langset);\n\tif (value.u.l)\n\t    value.type = FcTypeLangSet;\n\tbreak;\n    case FcVStackRange:\n\tvalue.u.r = FcRangeCopy (vstack->u.range);\n\tif (value.u.r)\n\t    value.type = FcTypeRange;\n\tbreak;\n    default:\n\tFcConfigMessage (parse, FcSevereWarning, \"unknown pattern element %d\",\n\t\t\t vstack->tag);\n\tbreak;\n    }\n    FcVStackPopAndDestroy (parse);\n\n    return value;\n}\n\nstatic void\nFcParsePatelt (FcConfigParse *parse)\n{\n    FcValue\tvalue;\n    FcPattern\t*pattern = FcPatternCreate ();\n    const char\t*name;\n\n    if (!pattern)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n\n    name = (char *) FcConfigGetAttribute (parse, \"name\");\n    if (!name)\n    {\n\tFcConfigMessage (parse, FcSevereWarning, \"missing pattern element name\");\n\tFcPatternDestroy (pattern);\n\treturn;\n    }\n\n    for (;;)\n    {\n\tvalue = FcPopValue (parse);\n\tif (value.type == FcTypeVoid)\n\t    break;\n\tif (!FcPatternAdd (pattern, name, value, FcTrue))\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n            FcValueDestroy(value);\n\t    break;\n\t}\n        FcValueDestroy(value);\n    }\n\n    FcVStackPushPattern (parse, pattern);\n}\n\nstatic void\nFcParsePattern (FcConfigParse *parse)\n{\n    FcVStack\t*vstack;\n    FcPattern\t*pattern = FcPatternCreate ();\n\n    if (!pattern)\n    {\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\treturn;\n    }\n\t\n    while ((vstack = FcVStackPeek (parse)))\n    {\n\tswitch ((int) vstack->tag) {\n\tcase FcVStackPattern:\n\t    if (!FcPatternAppend (pattern, vstack->u.pattern))\n\t    {\n\t\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t\tFcPatternDestroy (pattern);\n\t\treturn;\n\t    }\n\t    break;\n\tdefault:\n\t    FcConfigMessage (parse, FcSevereWarning, \"unknown pattern element\");\n\t    break;\n\t}\n\tFcVStackPopAndDestroy (parse);\n    }\n\n    FcVStackPushPattern (parse, pattern);\n}\n\nstatic void\nFcEndElement(void *userData, const XML_Char *name FC_UNUSED)\n{\n    FcConfigParse   *parse = userData;\n    FcChar8\t    *data;\n\n    if (!parse->pstack)\n\treturn;\n    switch (parse->pstack->element) {\n    case FcElementNone:\n\tbreak;\n    case FcElementFontconfig:\n\tbreak;\n    case FcElementDir:\n\tFcParseDir (parse);\n\tbreak;\n    case FcElementCacheDir:\n\tFcParseCacheDir (parse);\n\tbreak;\n    case FcElementCache:\n\tdata = FcStrBufDoneStatic (&parse->pstack->str);\n\tif (!data)\n\t{\n\t    FcConfigMessage (parse, FcSevereError, \"out of memory\");\n\t    break;\n\t}\n\t/* discard this data; no longer used */\n\tFcStrBufDestroy (&parse->pstack->str);\n\tbreak;\n    case FcElementInclude:\n\tFcParseInclude (parse);\n\tbreak;\n    case FcElementConfig:\n\tbreak;\n    case FcElementMatch:\n\tFcParseMatch (parse);\n\tbreak;\n    case FcElementAlias:\n\tFcParseAlias (parse);\n\tbreak;\n    case FcElementDescription:\n\tFcParseDescription (parse);\n\tbreak;\n\n    case FcElementRescan:\n\tFcParseRescan (parse);\n\tbreak;\n\t\n    case FcElementPrefer:\n\tFcParseFamilies (parse, FcVStackPrefer);\n\tbreak;\n    case FcElementAccept:\n\tFcParseFamilies (parse, FcVStackAccept);\n\tbreak;\n    case FcElementDefault:\n\tFcParseFamilies (parse, FcVStackDefault);\n\tbreak;\n    case FcElementFamily:\n\tFcParseFamily (parse);\n\tbreak;\n\n    case FcElementTest:\n\tFcParseTest (parse);\n\tbreak;\n    case FcElementEdit:\n\tFcParseEdit (parse);\n\tbreak;\n\n    case FcElementInt:\n\tFcParseInt (parse);\n\tbreak;\n    case FcElementDouble:\n\tFcParseDouble (parse);\n\tbreak;\n    case FcElementString:\n\tFcParseString (parse, FcVStackString);\n\tbreak;\n    case FcElementMatrix:\n\tFcParseMatrix (parse);\n\tbreak;\n    case FcElementRange:\n\tFcParseRange (parse);\n\tbreak;\n    case FcElementBool:\n\tFcParseBool (parse);\n\tbreak;\n    case FcElementCharSet:\n\tFcParseCharSet (parse);\n\tbreak;\n    case FcElementLangSet:\n\tFcParseLangSet (parse);\n\tbreak;\n    case FcElementSelectfont:\n\tbreak;\n    case FcElementAcceptfont:\n    case FcElementRejectfont:\n\tFcParseAcceptRejectFont (parse, parse->pstack->element);\n\tbreak;\n    case FcElementGlob:\n\tFcParseString (parse, FcVStackGlob);\n\tbreak;\n    case FcElementPattern:\n\tFcParsePattern (parse);\n\tbreak;\n    case FcElementPatelt:\n\tFcParsePatelt (parse);\n\tbreak;\n    case FcElementName:\n\tFcParseName (parse);\n\tbreak;\n    case FcElementConst:\n\tFcParseString (parse, FcVStackConstant);\n\tbreak;\n    case FcElementOr:\n\tFcParseBinary (parse, FcOpOr);\n\tbreak;\n    case FcElementAnd:\n\tFcParseBinary (parse, FcOpAnd);\n\tbreak;\n    case FcElementEq:\n\tFcParseBinary (parse, FcOpEqual);\n\tbreak;\n    case FcElementNotEq:\n\tFcParseBinary (parse, FcOpNotEqual);\n\tbreak;\n    case FcElementLess:\n\tFcParseBinary (parse, FcOpLess);\n\tbreak;\n    case FcElementLessEq:\n\tFcParseBinary (parse, FcOpLessEqual);\n\tbreak;\n    case FcElementMore:\n\tFcParseBinary (parse, FcOpMore);\n\tbreak;\n    case FcElementMoreEq:\n\tFcParseBinary (parse, FcOpMoreEqual);\n\tbreak;\n    case FcElementContains:\n\tFcParseBinary (parse, FcOpContains);\n\tbreak;\n    case FcElementNotContains:\n\tFcParseBinary (parse, FcOpNotContains);\n\tbreak;\n    case FcElementPlus:\n\tFcParseBinary (parse, FcOpPlus);\n\tbreak;\n    case FcElementMinus:\n\tFcParseBinary (parse, FcOpMinus);\n\tbreak;\n    case FcElementTimes:\n\tFcParseBinary (parse, FcOpTimes);\n\tbreak;\n    case FcElementDivide:\n\tFcParseBinary (parse, FcOpDivide);\n\tbreak;\n    case FcElementNot:\n\tFcParseUnary (parse, FcOpNot);\n\tbreak;\n    case FcElementIf:\n\tFcParseBinary (parse, FcOpQuest);\n\tbreak;\n    case FcElementFloor:\n\tFcParseUnary (parse, FcOpFloor);\n\tbreak;\n    case FcElementCeil:\n\tFcParseUnary (parse, FcOpCeil);\n\tbreak;\n    case FcElementRound:\n\tFcParseUnary (parse, FcOpRound);\n\tbreak;\n    case FcElementTrunc:\n\tFcParseUnary (parse, FcOpTrunc);\n\tbreak;\n    case FcElementUnknown:\n\tbreak;\n    }\n    (void) FcPStackPop (parse);\n}\n\nstatic void\nFcCharacterData (void *userData, const XML_Char *s, int len)\n{\n    FcConfigParse   *parse = userData;\n\n    if (!parse->pstack)\n\treturn;\n    if (!FcStrBufData (&parse->pstack->str, (FcChar8 *) s, len))\n\tFcConfigMessage (parse, FcSevereError, \"out of memory\");\n}\n\nstatic void\nFcStartDoctypeDecl (void\t    *userData,\n\t\t    const XML_Char  *doctypeName,\n\t\t    const XML_Char  *sysid FC_UNUSED,\n\t\t    const XML_Char  *pubid FC_UNUSED,\n\t\t    int\t\t    has_internal_subset FC_UNUSED)\n{\n    FcConfigParse   *parse = userData;\n\n    if (strcmp ((char *) doctypeName, \"fontconfig\") != 0)\n\tFcConfigMessage (parse, FcSevereError, \"invalid doctype \\\"%s\\\"\", doctypeName);\n}\n\n#ifdef ENABLE_LIBXML2\n\nstatic void\nFcInternalSubsetDecl (void            *userData,\n\t\t      const XML_Char  *doctypeName,\n\t\t      const XML_Char  *sysid,\n\t\t      const XML_Char  *pubid)\n{\n    FcStartDoctypeDecl (userData, doctypeName, sysid, pubid, 1);\n}\n\nstatic void\nFcExternalSubsetDecl (void            *userData,\n\t\t      const XML_Char  *doctypeName,\n\t\t      const XML_Char  *sysid,\n\t\t      const XML_Char  *pubid)\n{\n    FcStartDoctypeDecl (userData, doctypeName, sysid, pubid, 0);\n}\n\n#else /* ENABLE_LIBXML2 */\n\nstatic void\nFcEndDoctypeDecl (void *userData FC_UNUSED)\n{\n}\n\n#endif /* ENABLE_LIBXML2 */\n\nstatic int\nFcSortCmpStr (const void *a, const void *b)\n{\n    const FcChar8    *as = *((FcChar8 **) a);\n    const FcChar8    *bs = *((FcChar8 **) b);\n    return FcStrCmp (as, bs);\n}\n\nstatic FcBool\nFcConfigParseAndLoadDir (FcConfig\t*config,\n\t\t\t const FcChar8\t*name,\n\t\t\t const FcChar8\t*dir,\n\t\t\t FcBool\t\tcomplain,\n\t\t\t FcBool\t\tload)\n{\n    DIR\t\t    *d;\n    struct dirent   *e;\n    FcBool\t    ret = FcTrue;\n    FcChar8\t    *file;\n    FcChar8\t    *base;\n    FcStrSet\t    *files;\n\n    d = opendir ((char *) dir);\n    if (!d)\n    {\n\tif (complain)\n\t    FcConfigMessage (0, FcSevereError, \"Cannot open config dir \\\"%s\\\"\",\n\t\t\t     name);\n\tret = FcFalse;\n\tgoto bail0;\n    }\n    /* freed below */\n    file = (FcChar8 *) malloc (strlen ((char *) dir) + 1 + FC_MAX_FILE_LEN + 1);\n    if (!file)\n    {\n\tret = FcFalse;\n\tgoto bail1;\n    }\n\n    strcpy ((char *) file, (char *) dir);\n    strcat ((char *) file, \"/\");\n    base = file + strlen ((char *) file);\n\n    files = FcStrSetCreateEx (FCSS_GROW_BY_64);\n    if (!files)\n    {\n\tret = FcFalse;\n\tgoto bail2;\n    }\n\n    if (FcDebug () & FC_DBG_CONFIG)\n\tprintf (\"\\tScanning config dir %s\\n\", dir);\n\n    if (load)\n\tFcConfigAddConfigDir (config, dir);\n\n    while (ret && (e = readdir (d)))\n    {\n\tint d_len;\n#define TAIL\t    \".conf\"\n#define TAIL_LEN    5\n\t/*\n\t * Add all files of the form [0-9]*.conf\n\t */\n\tif ('0' <= e->d_name[0] && e->d_name[0] <= '9' &&\n\t    (d_len = strlen (e->d_name)) < FC_MAX_FILE_LEN &&\n\t    d_len > TAIL_LEN &&\n\t    strcmp (e->d_name + d_len - TAIL_LEN, TAIL) == 0)\n\t{\n\t    strcpy ((char *) base, (char *) e->d_name);\n\t    if (!FcStrSetAdd (files, file))\n\t    {\n\t\tret = FcFalse;\n\t\tgoto bail3;\n\t    }\n\t}\n    }\n    if (ret)\n    {\n\tint i;\n\tqsort (files->strs, files->num, sizeof (FcChar8 *),\n\t       (int (*)(const void *, const void *)) FcSortCmpStr);\n\tfor (i = 0; ret && i < files->num; i++)\n\t    ret = _FcConfigParse (config, files->strs[i], complain, load);\n    }\nbail3:\n    FcStrSetDestroy (files);\nbail2:\n    free (file);\nbail1:\n    closedir (d);\nbail0:\n    return ret || !complain;\n}\n\n#ifdef _WIN32\npfnGetSystemWindowsDirectory pGetSystemWindowsDirectory = NULL;\npfnSHGetFolderPathA pSHGetFolderPathA = NULL;\n#endif\n\nstatic FcBool\nFcConfigParseAndLoadFromMemoryInternal (FcConfig       *config,\n\t\t\t\t\tconst FcChar8  *filename,\n\t\t\t\t\tconst FcChar8  *buffer,\n\t\t\t\t\tFcBool         complain,\n\t\t\t\t\tFcBool         load)\n{\n\n    XML_Parser\t    p;\n    size_t\t    len;\n    FcConfigParse   parse;\n    FcBool\t    error = FcTrue;\n    FcMatchKind\t    k;\n    FcPtrListIter   liter;\n\n#ifdef ENABLE_LIBXML2\n    xmlSAXHandler   sax;\n#else\n    void            *buf;\n    const FcChar8   *s;\n    size_t\t    buflen;\n#endif\n\n    if (!buffer)\n\treturn FcFalse;\n    len = strlen ((const char *) buffer);\n    if (FcDebug () & FC_DBG_CONFIG)\n\tprintf (\"\\t%s config file from %s\\n\", load ? \"Loading\" : \"Scanning\", filename);\n\n#ifdef ENABLE_LIBXML2\n    memset(&sax, 0, sizeof(sax));\n\n    sax.internalSubset = FcInternalSubsetDecl;\n    sax.externalSubset = FcExternalSubsetDecl;\n    sax.startElement = FcStartElement;\n    sax.endElement = FcEndElement;\n    sax.characters = FcCharacterData;\n\n    p = xmlCreatePushParserCtxt (&sax, &parse, NULL, 0, (const char *) filename);\n#else\n    p = XML_ParserCreate (\"UTF-8\");\n#endif\n\n    if (!p)\n\tgoto bail1;\n\n    if (!FcConfigParseInit (&parse, filename, config, p, load))\n\tgoto bail2;\n\n#ifndef ENABLE_LIBXML2\n\n    XML_SetUserData (p, &parse);\n\n    XML_SetDoctypeDeclHandler (p, FcStartDoctypeDecl, FcEndDoctypeDecl);\n    XML_SetElementHandler (p, FcStartElement, FcEndElement);\n    XML_SetCharacterDataHandler (p, FcCharacterData);\n\t\n#endif /* ENABLE_LIBXML2 */\n\n#ifndef ENABLE_LIBXML2\n    s = buffer;\n    do {\n\tbuf = XML_GetBuffer (p, BUFSIZ);\n\tif (!buf)\n\t{\n\t    FcConfigMessage (&parse, FcSevereError, \"cannot get parse buffer\");\n\t    goto bail3;\n\t}\n\tif (len > BUFSIZ)\n\t{\n\t    buflen = BUFSIZ;\n\t    len -= BUFSIZ;\n\t}\n\telse\n\t{\n\t    buflen = len;\n\t    len = 0;\n\t}\n\tmemcpy (buf, s, buflen);\n\ts = s + buflen;\n#endif\n\n#ifdef ENABLE_LIBXML2\n\tif (xmlParseChunk (p, (const char *)buffer, len, len == 0))\n#else\n\tif (!XML_ParseBuffer (p, buflen, buflen == 0))\n#endif\n\t{\n\t    FcConfigMessage (&parse, FcSevereError, \"%s\",\n\t\t\t   XML_ErrorString (XML_GetErrorCode (p)));\n\t    goto bail3;\n\t}\n#ifndef ENABLE_LIBXML2\n    } while (buflen != 0);\n#endif\n    error = parse.error;\n    if (load)\n    {\n\tfor (k = FcMatchKindBegin; k < FcMatchKindEnd; k++)\n\t{\n\t    FcPtrListIter iter;\n\n\t    FcPtrListIterInit (parse.ruleset->subst[k], &iter);\n\t    if (FcPtrListIterIsValid (parse.ruleset->subst[k], &iter))\n\t    {\n\t\tFcPtrListIterInitAtLast (parse.config->subst[k], &iter);\n\t\tFcRuleSetReference (parse.ruleset);\n\t\tFcPtrListIterAdd (parse.config->subst[k], &iter, parse.ruleset);\n\t    }\n\t}\n    }\n    FcPtrListIterInitAtLast (parse.config->rulesetList, &liter);\n    FcRuleSetReference (parse.ruleset);\n    FcPtrListIterAdd (parse.config->rulesetList, &liter, parse.ruleset);\nbail3:\n    FcConfigCleanup (&parse);\nbail2:\n    XML_ParserFree (p);\nbail1:\n    if (error && complain)\n    {\n\tFcConfigMessage (0, FcSevereError, \"Cannot %s config file from %s\", load ? \"load\" : \"scan\", filename);\n\treturn FcFalse;\n    }\n    if (FcDebug () & FC_DBG_CONFIG)\n\tprintf (\"\\t%s config file from %s done\\n\", load ? \"Loading\" : \"Scanning\", filename);\n    return FcTrue;\n}\n\nstatic FcBool\n_FcConfigParse (FcConfig\t*config,\n\t\tconst FcChar8\t*name,\n\t\tFcBool\t\tcomplain,\n\t\tFcBool\t\tload)\n{\n    FcChar8\t    *filename = NULL, *realfilename = NULL;\n    int\t\t    fd;\n    int\t\t    len;\n    FcStrBuf\t    sbuf;\n    char            buf[BUFSIZ];\n    FcBool\t    ret = FcFalse;\n\n#ifdef _WIN32\n    if (!pGetSystemWindowsDirectory)\n    {\n        HMODULE hk32 = GetModuleHandleA(\"kernel32.dll\");\n        if (!(pGetSystemWindowsDirectory = (pfnGetSystemWindowsDirectory) GetProcAddress(hk32, \"GetSystemWindowsDirectoryA\")))\n            pGetSystemWindowsDirectory = (pfnGetSystemWindowsDirectory) GetWindowsDirectory;\n    }\n    if (!pSHGetFolderPathA)\n    {\n        HMODULE hSh = LoadLibraryA(\"shfolder.dll\");\n        /* the check is done later, because there is no provided fallback */\n        if (hSh)\n            pSHGetFolderPathA = (pfnSHGetFolderPathA) GetProcAddress(hSh, \"SHGetFolderPathA\");\n    }\n#endif\n\n    filename = FcConfigFilename (name);\n    if (!filename)\n\tgoto bail0;\n    realfilename = FcConfigRealFilename (config, name);\n    if (!realfilename)\n\tgoto bail0;\n    if (FcStrSetMember (config->availConfigFiles, realfilename))\n    {\n        FcStrFree (filename);\n\tFcStrFree (realfilename);\n        return FcTrue;\n    }\n\n    if (load)\n    {\n\tif (!FcStrSetAdd (config->configFiles, filename))\n\t    goto bail0;\n    }\n    if (!FcStrSetAdd (config->availConfigFiles, realfilename))\n\tgoto bail0;\n\n    if (FcFileIsDir (realfilename))\n    {\n\tret = FcConfigParseAndLoadDir (config, name, realfilename, complain, load);\n\tFcStrFree (filename);\n\tFcStrFree (realfilename);\n\treturn ret;\n    }\n\n    FcStrBufInit (&sbuf, NULL, 0);\n\n    fd = FcOpen ((char *) realfilename, O_RDONLY);\n    if (fd == -1)\n\tgoto bail1;\n\n    do {\n\tlen = read (fd, buf, BUFSIZ);\n\tif (len < 0)\n\t{\n\t    int errno_ = errno;\n\t    char ebuf[BUFSIZ+1];\n\n#if HAVE_STRERROR_R\n\t    strerror_r (errno_, ebuf, BUFSIZ);\n#elif HAVE_STRERROR\n\t    char *tmp = strerror (errno_);\n\t    size_t len = strlen (tmp);\n\t    strncpy (ebuf, tmp, FC_MIN (BUFSIZ, len));\n\t    ebuf[FC_MIN (BUFSIZ, len)] = 0;\n#else\n\t    ebuf[0] = 0;\n#endif\n\t    FcConfigMessage (0, FcSevereError, \"failed reading config file: %s: %s (errno %d)\", realfilename, ebuf, errno_);\n\t    close (fd);\n\t    goto bail1;\n\t}\n\tFcStrBufData (&sbuf, (const FcChar8 *)buf, len);\n    } while (len != 0);\n    close (fd);\n\n    ret = FcConfigParseAndLoadFromMemoryInternal (config, filename, FcStrBufDoneStatic (&sbuf), complain, load);\n    complain = FcFalse; /* no need to reclaim here */\nbail1:\n    FcStrBufDestroy (&sbuf);\nbail0:\n    if (filename)\n\tFcStrFree (filename);\n    if (realfilename)\n\tFcStrFree (realfilename);\n    if (!ret && complain)\n    {\n\tif (name)\n\t    FcConfigMessage (0, FcSevereError, \"Cannot %s config file \\\"%s\\\"\", load ? \"load\" : \"scan\", name);\n\telse\n\t    FcConfigMessage (0, FcSevereError, \"Cannot %s default config file\", load ? \"load\" : \"scan\");\n\treturn FcFalse;\n    }\n    return FcTrue;\n}\n\nFcBool\nFcConfigParseOnly (FcConfig\t\t*config,\n\t\t   const FcChar8\t*name,\n\t\t   FcBool\t\tcomplain)\n{\n    return _FcConfigParse (config, name, complain, FcFalse);\n}\n\nFcBool\nFcConfigParseAndLoad (FcConfig\t    *config,\n\t\t      const FcChar8 *name,\n\t\t      FcBool\t    complain)\n{\n    return _FcConfigParse (config, name, complain, FcTrue);\n}\n\nFcBool\nFcConfigParseAndLoadFromMemory (FcConfig       *config,\n\t\t\t\tconst FcChar8  *buffer,\n\t\t\t\tFcBool         complain)\n{\n    return FcConfigParseAndLoadFromMemoryInternal (config, (const FcChar8 *)\"memory\", buffer, complain, FcTrue);\n}\n\n#define __fcxml__\n#include \"fcaliastail.h\"\n#undef __fcxml__\n` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcxml.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":55,"col":11,"offset":0},"end":{"line":55,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":55,"col":34,"offset":0},"end":{"line":55,"col":38,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c:55:\n `argc` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":55,"col":11,"offset":0},"end":{"line":55,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","start":{"line":55,"col":34,"offset":0},"end":{"line":55,"col":38,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":120,"col":1,"offset":0},"end":{"line":120,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":176,"col":11,"offset":0},"end":{"line":176,"col":12,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c:118:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":120,"col":1,"offset":0},"end":{"line":120,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","start":{"line":176,"col":11,"offset":0},"end":{"line":176,"col":12,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":165,"col":23,"offset":0},"end":{"line":165,"col":28,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":166,"col":20,"offset":0},"end":{"line":166,"col":26,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":168,"col":17,"offset":0},"end":{"line":168,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":269,"col":22,"offset":0},"end":{"line":269,"col":27,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":270,"col":19,"offset":0},"end":{"line":270,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":272,"col":16,"offset":0},"end":{"line":272,"col":21,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":387,"col":9,"offset":0},"end":{"line":387,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":394,"col":5,"offset":0},"end":{"line":394,"col":34,"offset":29}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":405,"col":12,"offset":0},"end":{"line":405,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":23,"offset":0},"end":{"line":429,"col":26,"offset":3}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":49,"offset":0},"end":{"line":429,"col":53,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":65,"offset":0},"end":{"line":429,"col":70,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":80,"offset":0},"end":{"line":429,"col":83,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c:165:\n `cache` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":165,"col":23,"offset":0},"end":{"line":165,"col":28,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":166,"col":20,"offset":0},"end":{"line":166,"col":26,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":168,"col":17,"offset":0},"end":{"line":168,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":269,"col":22,"offset":0},"end":{"line":269,"col":27,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":270,"col":19,"offset":0},"end":{"line":270,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":272,"col":16,"offset":0},"end":{"line":272,"col":21,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":387,"col":9,"offset":0},"end":{"line":387,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":394,"col":5,"offset":0},"end":{"line":394,"col":34,"offset":29}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":405,"col":12,"offset":0},"end":{"line":405,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":23,"offset":0},"end":{"line":429,"col":26,"offset":3}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":49,"offset":0},"end":{"line":429,"col":53,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":65,"offset":0},"end":{"line":429,"col":70,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","start":{"line":429,"col":80,"offset":0},"end":{"line":429,"col":83,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":309,"col":1,"offset":0},"end":{"line":309,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":311,"col":1,"offset":0},"end":{"line":311,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c:309:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":309,"col":1,"offset":0},"end":{"line":309,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","start":{"line":311,"col":1,"offset":0},"end":{"line":311,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":47,"offset":56}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":649,"col":28,"offset":0},"end":{"line":649,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":655,"col":24,"offset":0},"end":{"line":655,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":655,"col":37,"offset":0},"end":{"line":655,"col":50,"offset":13}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":662,"col":29,"offset":0},"end":{"line":662,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":662,"col":42,"offset":0},"end":{"line":662,"col":55,"offset":13}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":668,"col":1,"offset":0},"end":{"line":669,"col":47,"offset":57}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":676,"col":29,"offset":0},"end":{"line":676,"col":35,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":677,"col":18,"offset":0},"end":{"line":677,"col":33,"offset":15}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1895,"col":6,"offset":0},"end":{"line":1895,"col":12,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1900,"col":6,"offset":0},"end":{"line":1900,"col":12,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c:611:\n `FcChar8 *\nFcConfigGetCache (FcConfig  *config FC_UNUSED)` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":47,"offset":56}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":649,"col":28,"offset":0},"end":{"line":649,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":655,"col":24,"offset":0},"end":{"line":655,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":655,"col":37,"offset":0},"end":{"line":655,"col":50,"offset":13}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":662,"col":29,"offset":0},"end":{"line":662,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":662,"col":42,"offset":0},"end":{"line":662,"col":55,"offset":13}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":668,"col":1,"offset":0},"end":{"line":669,"col":47,"offset":57}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":676,"col":29,"offset":0},"end":{"line":676,"col":35,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":677,"col":18,"offset":0},"end":{"line":677,"col":33,"offset":15}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1895,"col":6,"offset":0},"end":{"line":1895,"col":12,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","start":{"line":1900,"col":6,"offset":0},"end":{"line":1900,"col":12,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.tmpl.h","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":4,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.tmpl.h:25:\n `@@@` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.tmpl.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.tmpl.h","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":4,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":3,"offset":2}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":34,"col":9,"offset":0},"end":{"line":34,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":34,"col":14,"offset":0},"end":{"line":34,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":35,"col":9,"offset":0},"end":{"line":35,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":35,"col":23,"offset":0},"end":{"line":35,"col":27,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":36,"col":9,"offset":0},"end":{"line":36,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":36,"col":25,"offset":0},"end":{"line":36,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":39,"col":9,"offset":0},"end":{"line":39,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":39,"col":21,"offset":0},"end":{"line":41,"col":7,"offset":33}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":42,"col":2,"offset":0},"end":{"line":43,"col":9,"offset":18}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":3,"offset":2}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h:24:\n `%` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":3,"offset":2}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":34,"col":9,"offset":0},"end":{"line":34,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":34,"col":14,"offset":0},"end":{"line":34,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":35,"col":9,"offset":0},"end":{"line":35,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":35,"col":23,"offset":0},"end":{"line":35,"col":27,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":36,"col":9,"offset":0},"end":{"line":36,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":36,"col":25,"offset":0},"end":{"line":36,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":39,"col":9,"offset":0},"end":{"line":39,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":39,"col":21,"offset":0},"end":{"line":41,"col":7,"offset":33}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":42,"col":2,"offset":0},"end":{"line":43,"col":9,"offset":18}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":3,"offset":2}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":122,"col":1,"offset":0},"end":{"line":122,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c:122:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":122,"col":1,"offset":0},"end":{"line":122,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":126,"col":1,"offset":0},"end":{"line":126,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c:124:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","start":{"line":126,"col":1,"offset":0},"end":{"line":126,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":128,"col":1,"offset":0},"end":{"line":128,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":130,"col":1,"offset":0},"end":{"line":130,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c:128:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":128,"col":1,"offset":0},"end":{"line":128,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","start":{"line":130,"col":1,"offset":0},"end":{"line":130,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstat.c:1:\n `/*\n * Copyright © 2000 Keith Packard\n * Copyright © 2005 Patrick Lam\n *\n * Permission to use, copy, modify, distribute, and sell this software and its\n * documentation for any purpose is hereby granted without fee, provided that\n * the above copyright notice appear in all copies and that both that\n * copyright notice and this permission notice appear in supporting\n * documentation, and that the name of the author(s) not be used in\n * advertising or publicity pertaining to distribution of the software without\n * specific, written prior permission.  The authors make no\n * representations about the suitability of this software for any purpose.  It\n * is provided \"as is\" without express or implied warranty.\n *\n * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\n * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\n * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR\n * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n#include \"fcint.h\"\n#include \"fcarch.h\"\n#include <dirent.h>\n#include <limits.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#ifdef HAVE_SYS_VFS_H\n#include <sys/vfs.h>\n#endif\n#ifdef HAVE_SYS_STATVFS_H\n#include <sys/statvfs.h>\n#endif\n#ifdef HAVE_SYS_STATFS_H\n#include <sys/statfs.h>\n#endif\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n#ifdef HAVE_SYS_MOUNT_H\n#include <sys/mount.h>\n#endif\n#include <errno.h>\n\n#ifdef _WIN32\n#ifdef __GNUC__\ntypedef long long INT64;\n#define EPOCH_OFFSET 11644473600ll\n#else\n#define EPOCH_OFFSET 11644473600i64\ntypedef __int64 INT64;\n#endif\n\n/* Workaround for problems in the stat() in the Microsoft C library:\n *\n * 1) stat() uses FindFirstFile() to get the file\n * attributes. Unfortunately this API doesn't return correct values\n * for modification time of a directory until some time after a file\n * or subdirectory has been added to the directory. (This causes\n * run-test.sh to fail, for instance.) GetFileAttributesEx() is\n * better, it returns the updated timestamp right away.\n *\n * 2) stat() does some strange things related to backward\n * compatibility with the local time timestamps on FAT volumes and\n * daylight saving time. This causes problems after the switches\n * to/from daylight saving time. See\n * http://bugzilla.gnome.org/show_bug.cgi?id=154968 , especially\n * comment #30, and http://www.codeproject.com/datetime/dstbugs.asp .\n * We don't need any of that, FAT and Win9x are as good as dead. So\n * just use the UTC timestamps from NTFS, converted to the Unix epoch.\n */\n\nint\nFcStat (const FcChar8 *file, struct stat *statb)\n{\n    WIN32_FILE_ATTRIBUTE_DATA wfad;\n    char full_path_name[MAX_PATH];\n    char *basename;\n    DWORD rc;\n\n    if (!GetFileAttributesEx ((LPCSTR) file, GetFileExInfoStandard, &wfad))\n\treturn -1;\n\n    statb->st_dev = 0;\n\n    /* Calculate a pseudo inode number as a hash of the full path name.\n     * Call GetLongPathName() to get the spelling of the path name as it\n     * is on disk.\n     */\n    rc = GetFullPathName ((LPCSTR) file, sizeof (full_path_name), full_path_name, &basename);\n    if (rc == 0 || rc > sizeof (full_path_name))\n\treturn -1;\n\n    rc = GetLongPathName (full_path_name, full_path_name, sizeof (full_path_name));\n    statb->st_ino = FcStringHash ((const FcChar8 *) full_path_name);\n\n    statb->st_mode = _S_IREAD | _S_IWRITE;\n    statb->st_mode |= (statb->st_mode >> 3) | (statb->st_mode >> 6);\n\n    if (wfad.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)\n\tstatb->st_mode |= _S_IFDIR;\n    else\n\tstatb->st_mode |= _S_IFREG;\n\n    statb->st_nlink = 1;\n    statb->st_uid = statb->st_gid = 0;\n    statb->st_rdev = 0;\n\n    if (wfad.nFileSizeHigh > 0)\n\treturn -1;\n    statb->st_size = wfad.nFileSizeLow;\n\n    statb->st_atime = (*(INT64 *)&wfad.ftLastAccessTime)/10000000 - EPOCH_OFFSET;\n    statb->st_mtime = (*(INT64 *)&wfad.ftLastWriteTime)/10000000 - EPOCH_OFFSET;\n    statb->st_ctime = statb->st_mtime;\n\n    return 0;\n}\n\n#else\n\nint\nFcStat (const FcChar8 *file, struct stat *statb)\n{\n  return stat ((char *) file, statb);\n}\n\n/* Adler-32 checksum implementation */\nstruct Adler32 {\n    int a;\n    int b;\n};\n\nstatic void\nAdler32Init (struct Adler32 *ctx)\n{\n    ctx->a = 1;\n    ctx->b = 0;\n}\n\nstatic void\nAdler32Update (struct Adler32 *ctx, const char *data, int data_len)\n{\n    while (data_len--)\n    {\n\tctx->a = (ctx->a + *data++) % 65521;\n\tctx->b = (ctx->b + ctx->a) % 65521;\n    }\n}\n\nstatic int\nAdler32Finish (struct Adler32 *ctx)\n{\n    return ctx->a + (ctx->b << 16);\n}\n\n#ifdef HAVE_STRUCT_DIRENT_D_TYPE\n/* dirent.d_type can be relied upon on FAT filesystem */\nstatic FcBool\nFcDirChecksumScandirFilter(const struct dirent *entry)\n{\n    return entry->d_type != DT_DIR;\n}\n#endif\n\nstatic int\nFcDirChecksumScandirSorter(const struct dirent **lhs, const struct dirent **rhs)\n{\n    return strcmp((*lhs)->d_name, (*rhs)->d_name);\n}\n\nstatic void\nfree_dirent (struct dirent **p)\n{\n    struct dirent **x;\n\n    for (x = p; *x != NULL; x++)\n\tfree (*x);\n\n    free (p);\n}\n\nint\nFcScandir (const char\t\t*dirp,\n\t   struct dirent\t***namelist,\n\t   int (*filter) (const struct dirent *),\n\t   int (*compar) (const struct dirent **, const struct dirent **));\n\nint\nFcScandir (const char\t\t*dirp,\n\t   struct dirent\t***namelist,\n\t   int (*filter) (const struct dirent *),\n\t   int (*compar) (const struct dirent **, const struct dirent **))\n{\n    DIR *d;\n    struct dirent *dent, *p, **dlist, **dlp;\n    size_t lsize = 128, n = 0;\n\n    d = opendir (dirp);\n    if (!d)\n\treturn -1;\n\n    dlist = (struct dirent **) malloc (sizeof (struct dirent *) * lsize);\n    if (!dlist)\n    {\n\tclosedir (d);\n\terrno = ENOMEM;\n\n\treturn -1;\n    }\n    *dlist = NULL;\n    while ((dent = readdir (d)))\n    {\n\tif (!filter || (filter) (dent))\n\t{\n\t    size_t dentlen = FcPtrToOffset (dent, dent->d_name) + strlen (dent->d_name) + 1;\n\t    dentlen = ((dentlen + ALIGNOF_VOID_P - 1) & ~(ALIGNOF_VOID_P - 1));\n\t    p = (struct dirent *) malloc (dentlen);\n\t    if (!p)\n\t    {\n\t\tfree_dirent (dlist);\n\t\tclosedir (d);\n\t\terrno = ENOMEM;\n\n\t\treturn -1;\n\t    }\n\t    memcpy (p, dent, dentlen);\n\t    if ((n + 1) >= lsize)\n\t    {\n\t\tlsize += 128;\n\t\tdlp = (struct dirent **) realloc (dlist, sizeof (struct dirent *) * lsize);\n\t\tif (!dlp)\n\t\t{\n\t\t    free (p);\n\t\t    free_dirent (dlist);\n\t\t    closedir (d);\n\t\t    errno = ENOMEM;\n\n\t\t    return -1;\n\t\t}\n\t\tdlist = dlp;\n\t    }\n\t    dlist[n++] = p;\n\t    dlist[n] = NULL;\n\t}\n    }\n    closedir (d);\n\n    qsort (dlist, n, sizeof (struct dirent *), (int (*) (const void *, const void *))compar);\n\n    *namelist = dlist;\n\n    return n;\n}\n\nstatic int\nFcDirChecksum (const FcChar8 *dir, time_t *checksum)\n{\n    struct Adler32 ctx;\n    struct dirent **files;\n    int n;\n    int ret = 0;\n    size_t len = strlen ((const char *)dir);\n\n    Adler32Init (&ctx);\n\n    n = FcScandir ((const char *)dir, &files,\n#ifdef HAVE_STRUCT_DIRENT_D_TYPE\n\t\t &FcDirChecksumScandirFilter,\n#else\n\t\t NULL,\n#endif\n\t\t &FcDirChecksumScandirSorter);\n    if (n == -1)\n\treturn -1;\n\n    while (n--)\n    {\n\tsize_t dlen = strlen (files[n]->d_name);\n\tint dtype;\n\n#ifdef HAVE_STRUCT_DIRENT_D_TYPE\n\tdtype = files[n]->d_type;\n\tif (dtype == DT_UNKNOWN)\n\t{\n#endif\n\tstruct stat statb;\n\tchar *f = malloc (len + 1 + dlen + 1);\n\n\tif (!f)\n\t{\n\t    ret = -1;\n\t    goto bail;\n\t}\n\tmemcpy (f, dir, len);\n\tf[len] = FC_DIR_SEPARATOR;\n\tmemcpy (&f[len + 1], files[n]->d_name, dlen);\n\tf[len + 1 + dlen] = 0;\n\tif (lstat (f, &statb) < 0)\n\t{\n\t    ret = -1;\n\t    free (f);\n\t    goto bail;\n\t}\n\tif (S_ISDIR (statb.st_mode))\n\t{\n\t    free (f);\n\t    goto bail;\n\t}\n\n\tfree (f);\n\tdtype = statb.st_mode;\n#ifdef HAVE_STRUCT_DIRENT_D_TYPE\n\t}\n#endif\n\tAdler32Update (&ctx, files[n]->d_name, dlen + 1);\n\tAdler32Update (&ctx, (char *)&dtype, sizeof (int));\n\n      bail:\n\tfree (files[n]);\n    }\n    free (files);\n    if (ret == -1)\n\treturn -1;\n\n    *checksum = Adler32Finish (&ctx);\n\n    return 0;\n}\n#endif /* _WIN32 */\n\nint\nFcStatChecksum (const FcChar8 *file, struct stat *statb)\n{\n    if (FcStat (file, statb) == -1)\n        return -1;\n\n#ifndef _WIN32\n    /* We have a workaround of the broken stat() in FcStat() for Win32.\n     * No need to do something further more.\n     */\n    if (FcIsFsMtimeBroken (file))\n    {\n        if (FcDirChecksum (file, &statb->st_mtime) == -1)\n            return -1;\n    }\n#endif\n\n    return 0;\n}\n\nstatic int\nFcFStatFs (int fd, FcStatFS *statb)\n{\n    const char *p = NULL;\n    int ret = -1;\n    FcBool flag = FcFalse;\n\n#if defined(HAVE_FSTATVFS) && (defined(HAVE_STRUCT_STATVFS_F_BASETYPE) || defined(HAVE_STRUCT_STATVFS_F_FSTYPENAME))\n    struct statvfs buf;\n\n    memset (statb, 0, sizeof (FcStatFS));\n\n    if ((ret = fstatvfs (fd, &buf)) == 0)\n    {\n#  if defined(HAVE_STRUCT_STATVFS_F_BASETYPE)\n\tp = buf.f_basetype;\n#  elif defined(HAVE_STRUCT_STATVFS_F_FSTYPENAME)\n\tp = buf.f_fstypename;\n#  endif\n    }\n#elif defined(HAVE_FSTATFS) && (defined(HAVE_STRUCT_STATFS_F_FLAGS) || defined(HAVE_STRUCT_STATFS_F_FSTYPENAME) || defined(__linux__))\n    struct statfs buf;\n\n    memset (statb, 0, sizeof (FcStatFS));\n\n    if ((ret = fstatfs (fd, &buf)) == 0)\n    {\n#  if defined(HAVE_STRUCT_STATFS_F_FLAGS) && defined(MNT_LOCAL)\n\tstatb->is_remote_fs = !(buf.f_flags & MNT_LOCAL);\n\tflag = FcTrue;\n#  endif\n#  if defined(HAVE_STRUCT_STATFS_F_FSTYPENAME)\n\tp = buf.f_fstypename;\n#  elif defined(__linux__)\n\tswitch (buf.f_type)\n\t{\n\tcase 0x6969: /* nfs */\n\t    statb->is_remote_fs = FcTrue;\n\t    break;\n\tcase 0x4d44: /* fat */\n\t    statb->is_mtime_broken = FcTrue;\n\t    break;\n\tdefault:\n\t    break;\n\t}\n\n\treturn ret;\n#  else\n#    error \"BUG: No way to figure out with fstatfs()\"\n#  endif\n    }\n#endif\n    if (p)\n    {\n\tif (!flag && strcmp (p, \"nfs\") == 0)\n\t    statb->is_remote_fs = FcTrue;\n\tif (strcmp (p, \"msdosfs\") == 0 ||\n\t    strcmp (p, \"pcfs\") == 0)\n\t    statb->is_mtime_broken = FcTrue;\n    }\n\n    return ret;\n}\n\nFcBool\nFcIsFsMmapSafe (int fd)\n{\n    FcStatFS statb;\n\n    if (FcFStatFs (fd, &statb) < 0)\n\treturn FcTrue;\n\n    return !statb.is_remote_fs;\n}\n\nFcBool\nFcIsFsMtimeBroken (const FcChar8 *dir)\n{\n    int fd = FcOpen ((const char *) dir, O_RDONLY);\n\n    if (fd != -1)\n    {\n\tFcStatFS statb;\n\tint ret = FcFStatFs (fd, &statb);\n\n\tclose (fd);\n\tif (ret < 0)\n\t    return FcFalse;\n\n\treturn statb.is_mtime_broken;\n    }\n\n    return FcFalse;\n}\n\n#define __fcstat__\n#include \"fcaliastail.h\"\n#undef __fcstat__\n` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstat.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":47,"offset":56}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":649,"col":28,"offset":0},"end":{"line":649,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":655,"col":24,"offset":0},"end":{"line":655,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":655,"col":37,"offset":0},"end":{"line":655,"col":50,"offset":13}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":662,"col":29,"offset":0},"end":{"line":662,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":662,"col":42,"offset":0},"end":{"line":662,"col":55,"offset":13}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":668,"col":1,"offset":0},"end":{"line":669,"col":47,"offset":57}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":676,"col":29,"offset":0},"end":{"line":676,"col":35,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":677,"col":18,"offset":0},"end":{"line":677,"col":33,"offset":15}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1895,"col":6,"offset":0},"end":{"line":1895,"col":12,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1900,"col":6,"offset":0},"end":{"line":1900,"col":12,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c:611:\n `FcChar8 *\nFcConfigGetCache (FcConfig  *config FC_UNUSED)` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":47,"offset":56}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":649,"col":28,"offset":0},"end":{"line":649,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":655,"col":24,"offset":0},"end":{"line":655,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":655,"col":37,"offset":0},"end":{"line":655,"col":50,"offset":13}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":662,"col":29,"offset":0},"end":{"line":662,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":662,"col":42,"offset":0},"end":{"line":662,"col":55,"offset":13}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":668,"col":1,"offset":0},"end":{"line":669,"col":47,"offset":57}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":676,"col":29,"offset":0},"end":{"line":676,"col":35,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":677,"col":18,"offset":0},"end":{"line":677,"col":33,"offset":15}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1895,"col":6,"offset":0},"end":{"line":1895,"col":12,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","start":{"line":1900,"col":6,"offset":0},"end":{"line":1900,"col":12,"offset":6}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjs.c:1:\n Failure: unallowed declarator as RHS to scope resolution","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjs.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":127,"col":1,"offset":0},"end":{"line":127,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c:125:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","start":{"line":127,"col":1,"offset":0},"end":{"line":127,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":40,"col":11,"offset":0},"end":{"line":40,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":41,"col":31,"offset":0},"end":{"line":41,"col":37,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":45,"col":11,"offset":0},"end":{"line":45,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":46,"col":33,"offset":0},"end":{"line":46,"col":39,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":50,"col":11,"offset":0},"end":{"line":50,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":51,"col":33,"offset":0},"end":{"line":51,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":260,"col":11,"offset":0},"end":{"line":260,"col":15,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c:40:\n `void` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":40,"col":11,"offset":0},"end":{"line":40,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":41,"col":31,"offset":0},"end":{"line":41,"col":37,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":45,"col":11,"offset":0},"end":{"line":45,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":46,"col":33,"offset":0},"end":{"line":46,"col":39,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":50,"col":11,"offset":0},"end":{"line":50,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":51,"col":33,"offset":0},"end":{"line":51,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","start":{"line":260,"col":11,"offset":0},"end":{"line":260,"col":15,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":783,"col":27,"offset":0},"end":{"line":783,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":784,"col":3,"offset":0},"end":{"line":784,"col":8,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":804,"col":28,"offset":0},"end":{"line":804,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":805,"col":4,"offset":0},"end":{"line":805,"col":9,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":822,"col":29,"offset":0},"end":{"line":822,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":823,"col":5,"offset":0},"end":{"line":823,"col":10,"offset":5}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c:783:\n `c` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":783,"col":27,"offset":0},"end":{"line":783,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":784,"col":3,"offset":0},"end":{"line":784,"col":8,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":804,"col":28,"offset":0},"end":{"line":804,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":805,"col":4,"offset":0},"end":{"line":805,"col":9,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":822,"col":29,"offset":0},"end":{"line":822,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","start":{"line":823,"col":5,"offset":0},"end":{"line":823,"col":10,"offset":5}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/src/fccache.c:1:\n `/*\n * Copyright © 2000 Keith Packard\n * Copyright © 2005 Patrick Lam\n *\n * Permission to use, copy, modify, distribute, and sell this software and its\n * documentation for any purpose is hereby granted without fee, provided that\n * the above copyright notice appear in all copies and that both that\n * copyright notice and this permission notice appear in supporting\n * documentation, and that the name of the author(s) not be used in\n * advertising or publicity pertaining to distribution of the software without\n * specific, written prior permission.  The authors make no\n * representations about the suitability of this software for any purpose.  It\n * is provided \"as is\" without express or implied warranty.\n *\n * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\n * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\n * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR\n * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n#include \"fcint.h\"\n#include \"fcarch.h\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <dirent.h>\n#include <string.h>\n#include <limits.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <sys/time.h>\n#include <assert.h>\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n#  include <unistd.h>\n#  include <sys/mman.h>\n#endif\n#if defined(_WIN32)\n#include <sys/locking.h>\n#else\n#include <uuid/uuid.h>\n#endif\n\n#ifndef O_BINARY\n#define O_BINARY 0\n#endif\n\nFcBool\nFcDirCacheCreateUUID (FcChar8  *dir,\n\t\t      FcBool    force,\n\t\t      FcConfig *config)\n{\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n    FcBool ret = FcTrue;\n#ifndef _WIN32\n    FcChar8 *uuidname;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n    uuidname = FcStrBuildFilename (target, \".uuid\", NULL);\n\n    if (!uuidname)\n    {\n\tFcStrFree (target);\n\treturn FcFalse;\n    }\n\n    if (force || access ((const char *) uuidname, F_OK) < 0)\n    {\n\tFcAtomic *atomic;\n\tint fd;\n\tuuid_t uuid;\n\tchar out[37];\n\tFcBool (* hash_add) (FcHashTable *, void*, void*);\n\tstruct stat statb;\n\tstruct timeval times[2];\n\n\tif (FcStat (target, &statb) != 0)\n\t{\n\t    ret = FcFalse;\n\t    goto bail1;\n\t}\n\tatomic = FcAtomicCreate (uuidname);\n\tif (!atomic)\n\t{\n\t    ret = FcFalse;\n\t    goto bail1;\n\t}\n\tif (!FcAtomicLock (atomic))\n\t{\n\t    ret = FcFalse;\n\t    goto bail2;\n\t}\n\tfd = FcOpen ((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT, 0644);\n\tif (fd == -1)\n\t{\n\t    ret = FcFalse;\n\t    goto bail3;\n\t}\n\tuuid_generate_random (uuid);\n\tif (force)\n\t    hash_add = FcHashTableReplace;\n\telse\n\t    hash_add = FcHashTableAdd;\n\tif (!hash_add (config->uuid_table, target, uuid))\n\t{\n\t    ret = FcFalse;\n\t    FcAtomicDeleteNew (atomic);\n\t    close (fd);\n\t    goto bail3;\n\t}\n\tuuid_unparse (uuid, out);\n\tif (FcDebug () & FC_DBG_CACHE)\n\t    printf (\"FcDirCacheCreateUUID %s: %s\\n\", uuidname, out);\n\twrite (fd, out, strlen (out));\n\tclose (fd);\n\tFcAtomicReplaceOrig (atomic);\n    bail3:\n\tFcAtomicUnlock (atomic);\n    bail2:\n\tFcAtomicDestroy (atomic);\n\n\tif (ret)\n\t{\n\t    /* revert mtime of the directory */\n\t    times[0].tv_sec = statb.st_atime;\n\t    times[1].tv_sec = statb.st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    times[0].tv_usec = statb.st_atim.tv_nsec / 1000;\n\t    times[1].tv_usec = statb.st_mtim.tv_nsec / 1000;\n#else\n\t    times[0].tv_usec = 0;\n\t    times[1].tv_usec = 0;\n#endif\n\t    if (utimes ((const  char *) target, times) != 0)\n\t    {\n\t\tfprintf (stderr, \"Unable to revert mtime: %s\\n\", target);\n\t    }\n\t}\n    }\nbail1:\n    FcStrFree (uuidname);\n    FcStrFree (target);\n#endif\n\n    return ret;\n}\n\nFcBool\nFcDirCacheDeleteUUID (const FcChar8  *dir,\n\t\t      FcConfig       *config)\n{\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n    FcBool ret = FcTrue;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, \".uuid\", NULL);\n    else\n\ttarget = FcStrBuildFilename (dir, \".uuid\", NULL);\n\n    ret = unlink ((char *) target) == 0;\n    FcHashTableRemove (config->uuid_table, target);\n    FcStrFree(target);\n\n    return ret;\n}\n\n#ifndef _WIN32\nstatic void\nFcDirCacheReadUUID (FcChar8  *dir,\n\t\t    FcConfig *config)\n{\n    void *u;\n    uuid_t uuid;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n\n    if (!FcHashTableFind (config->uuid_table, target, &u))\n    {\n\tFcChar8 *uuidname = FcStrBuildFilename (target, \".uuid\", NULL);\n\tint fd;\n\n\tif ((fd = FcOpen ((char *) uuidname, O_RDONLY)) >= 0)\n\t{\n\t    char suuid[37];\n\t    ssize_t len;\n\n\t    memset (suuid, 0, sizeof (suuid));\n\t    len = read (fd, suuid, 36);\n\t    if (len != -1)\n\t    {\n\t\tsuuid[len] = 0;\n\t\tmemset (uuid, 0, sizeof (uuid));\n\t\tif (uuid_parse (suuid, uuid) == 0)\n\t\t{\n\t\t    if (FcDebug () & FC_DBG_CACHE)\n\t\t\tprintf (\"FcDirCacheReadUUID %s -> %s\\n\", uuidname, suuid);\n\t\t    FcHashTableAdd (config->uuid_table, target, uuid);\n\t\t}\n\t    }\n\t    close (fd);\n\t}\n\telse\n\t{\n\t    if (FcDebug () & FC_DBG_CACHE)\n\t\tprintf (\"FcDirCacheReadUUID Unable to read %s\\n\", uuidname);\n\t}\n\tFcStrFree (uuidname);\n    }\n    else\n\tFcHashUuidFree (u);\n    FcStrFree (target);\n}\n#endif\n\nstruct MD5Context {\n        FcChar32 buf[4];\n        FcChar32 bits[2];\n        unsigned char in[64];\n};\n\nstatic void MD5Init(struct MD5Context *ctx);\nstatic void MD5Update(struct MD5Context *ctx, const unsigned char *buf, unsigned len);\nstatic void MD5Final(unsigned char digest[16], struct MD5Context *ctx);\nstatic void MD5Transform(FcChar32 buf[4], FcChar32 in[16]);\n\n#define CACHEBASE_LEN (1 + 36 + 1 + sizeof (FC_ARCHITECTURE) + sizeof (FC_CACHE_SUFFIX))\n\nstatic FcBool\nFcCacheIsMmapSafe (int fd)\n{\n    enum {\n      MMAP_NOT_INITIALIZED = 0,\n      MMAP_USE,\n      MMAP_DONT_USE,\n      MMAP_CHECK_FS,\n    } status;\n    static void *static_status;\n\n    status = (intptr_t) fc_atomic_ptr_get (&static_status);\n\n    if (status == MMAP_NOT_INITIALIZED)\n    {\n\tconst char *env = getenv (\"FONTCONFIG_USE_MMAP\");\n\tFcBool use;\n\tif (env && FcNameBool ((const FcChar8 *) env, &use))\n\t    status =  use ? MMAP_USE : MMAP_DONT_USE;\n\telse\n\t    status = MMAP_CHECK_FS;\n\t(void) fc_atomic_ptr_cmpexch (&static_status, NULL, (void *) status);\n    }\n\n    if (status == MMAP_CHECK_FS)\n\treturn FcIsFsMmapSafe (fd);\n    else\n\treturn status == MMAP_USE;\n\n}\n\nstatic const char bin2hex[] = { '0', '1', '2', '3',\n\t\t\t\t'4', '5', '6', '7',\n\t\t\t\t'8', '9', 'a', 'b',\n\t\t\t\t'c', 'd', 'e', 'f' };\n\nstatic FcChar8 *\nFcDirCacheBasenameMD5 (const FcChar8 *dir, FcChar8 cache_base[CACHEBASE_LEN])\n{\n    unsigned char \thash[16];\n    FcChar8\t\t*hex_hash;\n    int\t\t\tcnt;\n    struct MD5Context \tctx;\n\n    MD5Init (&ctx);\n    MD5Update (&ctx, (const unsigned char *)dir, strlen ((const char *) dir));\n\n    MD5Final (hash, &ctx);\n\n    cache_base[0] = '/';\n    hex_hash = cache_base + 1;\n    for (cnt = 0; cnt < 16; ++cnt)\n    {\n\thex_hash[2*cnt  ] = bin2hex[hash[cnt] >> 4];\n\thex_hash[2*cnt+1] = bin2hex[hash[cnt] & 0xf];\n    }\n    hex_hash[2*cnt] = 0;\n    strcat ((char *) cache_base, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX);\n\n    return cache_base;\n}\n\n#ifndef _WIN32\nstatic FcChar8 *\nFcDirCacheBasenameUUID (const FcChar8 *dir, FcChar8 cache_base[CACHEBASE_LEN], FcConfig *config)\n{\n    void *u;\n    FcChar8 *target;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n    if (FcHashTableFind (config->uuid_table, target, &u))\n    {\n\tuuid_unparse (u, (char *) cache_base);\n\tstrcat ((char *) cache_base, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX);\n\tFcHashUuidFree (u);\n\tFcStrFree (target);\n\treturn cache_base;\n    }\n    FcStrFree (target);\n    return NULL;\n}\n#endif\n\nFcBool\nFcDirCacheUnlink (const FcChar8 *dir, FcConfig *config)\n{\n    FcChar8\t*cache_hashed = NULL;\n    FcChar8\tcache_base[CACHEBASE_LEN];\n    FcStrList\t*list;\n    FcChar8\t*cache_dir;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n        return FcFalse;\n\t\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n        if (!cache_hashed)\n\t    break;\n\t(void) unlink ((char *) cache_hashed);\n\tFcDirCacheDeleteUUID (dir, config);\n\tFcStrFree (cache_hashed);\n    }\n    FcStrListDone (list);\n    /* return FcFalse if something went wrong */\n    if (cache_dir)\n\treturn FcFalse;\n    return FcTrue;\n}\n\nstatic int\nFcDirCacheOpenFile (const FcChar8 *cache_file, struct stat *file_stat)\n{\n    int\tfd;\n\n#ifdef _WIN32\n    if (FcStat (cache_file, file_stat) < 0)\n        return -1;\n#endif\n    fd = FcOpen((char *) cache_file, O_RDONLY | O_BINARY);\n    if (fd < 0)\n\treturn fd;\n#ifndef _WIN32\n    if (fstat (fd, file_stat) < 0)\n    {\n\tclose (fd);\n\treturn -1;\n    }\n#endif\n    return fd;\n}\n\n/*\n * Look for a cache file for the specified dir. Attempt\n * to use each one we find, stopping when the callback\n * indicates success\n */\nstatic FcBool\nFcDirCacheProcess (FcConfig *config, const FcChar8 *dir,\n\t\t   FcBool (*callback) (FcConfig *config, int fd, struct stat *fd_stat,\n\t\t\t\t       struct stat *dir_stat, void *closure),\n\t\t   void *closure, FcChar8 **cache_file_ret)\n{\n    int\t\tfd = -1;\n    FcChar8\tcache_base[CACHEBASE_LEN];\n    FcStrList\t*list;\n    FcChar8\t*cache_dir, *d;\n    struct stat file_stat, dir_stat;\n    FcBool\tret = FcFalse;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    if (sysroot)\n\td = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\td = FcStrdup (dir);\n    if (FcStatChecksum (d, &dir_stat) < 0)\n    {\n\tFcStrFree (d);\n        return FcFalse;\n    }\n    FcStrFree (d);\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n        return FcFalse;\n\t\n    while ((cache_dir = FcStrListNext (list)))\n    {\n        FcChar8\t*cache_hashed;\n\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n        if (!cache_hashed)\n\t    break;\n        fd = FcDirCacheOpenFile (cache_hashed, &file_stat);\n        if (fd >= 0) {\n\t    ret = (*callback) (config, fd, &file_stat, &dir_stat, closure);\n\t    close (fd);\n\t    if (ret)\n\t    {\n\t\tif (cache_file_ret)\n\t\t    *cache_file_ret = cache_hashed;\n\t\telse\n\t\t    FcStrFree (cache_hashed);\n\t\tbreak;\n\t    }\n\t}\n    \tFcStrFree (cache_hashed);\n    }\n    FcStrListDone (list);\n\n    return ret;\n}\n\n#define FC_CACHE_MIN_MMAP   1024\n\n/*\n * Skip list element, make sure the 'next' pointer is the last thing\n * in the structure, it will be allocated large enough to hold all\n * of the necessary pointers\n */\n\ntypedef struct _FcCacheSkip FcCacheSkip;\n\nstruct _FcCacheSkip {\n    FcCache\t    *cache;\n    FcRef\t    ref;\n    intptr_t\t    size;\n    void\t   *allocated;\n    dev_t\t    cache_dev;\n    ino_t\t    cache_ino;\n    time_t\t    cache_mtime;\n    long\t    cache_mtime_nano;\n    FcCacheSkip\t    *next[1];\n};\n\n/*\n * The head of the skip list; pointers for every possible level\n * in the skip list, plus the largest level in the list\n */\n\n#define FC_CACHE_MAX_LEVEL  16\n\n/* Protected by cache_lock below */\nstatic FcCacheSkip\t*fcCacheChains[FC_CACHE_MAX_LEVEL];\nstatic int\t\tfcCacheMaxLevel;\n\n\nstatic FcMutex *cache_lock;\n\nstatic void\nlock_cache (void)\n{\n  FcMutex *lock;\nretry:\n  lock = fc_atomic_ptr_get (&cache_lock);\n  if (!lock) {\n    lock = (FcMutex *) malloc (sizeof (FcMutex));\n    FcMutexInit (lock);\n    if (!fc_atomic_ptr_cmpexch (&cache_lock, NULL, lock)) {\n      FcMutexFinish (lock);\n      goto retry;\n    }\n\n    FcMutexLock (lock);\n    /* Initialize random state */\n    FcRandom ();\n    return;\n  }\n  FcMutexLock (lock);\n}\n\nstatic void\nunlock_cache (void)\n{\n  FcMutexUnlock (cache_lock);\n}\n\nstatic void\nfree_lock (void)\n{\n  FcMutex *lock;\n  lock = fc_atomic_ptr_get (&cache_lock);\n  if (lock && fc_atomic_ptr_cmpexch (&cache_lock, lock, NULL)) {\n    FcMutexFinish (lock);\n    free (lock);\n  }\n}\n\n\n\n/*\n * Generate a random level number, distributed\n * so that each level is 1/4 as likely as the one before\n *\n * Note that level numbers run 1 <= level <= MAX_LEVEL\n */\nstatic int\nrandom_level (void)\n{\n    /* tricky bit -- each bit is '1' 75% of the time */\n    long int\tbits = FcRandom () | FcRandom ();\n    int\tlevel = 0;\n\n    while (++level < FC_CACHE_MAX_LEVEL)\n    {\n\tif (bits & 1)\n\t    break;\n\tbits >>= 1;\n    }\n    return level;\n}\n\n/*\n * Insert cache into the list\n */\nstatic FcBool\nFcCacheInsert (FcCache *cache, struct stat *cache_stat)\n{\n    FcCacheSkip    **update[FC_CACHE_MAX_LEVEL];\n    FcCacheSkip    *s, **next;\n    int\t\t    i, level;\n\n    lock_cache ();\n\n    /*\n     * Find links along each chain\n     */\n    next = fcCacheChains;\n    for (i = fcCacheMaxLevel; --i >= 0; )\n    {\n\tfor (; (s = next[i]); next = s->next)\n\t    if (s->cache > cache)\n\t\tbreak;\n        update[i] = &next[i];\n    }\n\n    /*\n     * Create new list element\n     */\n    level = random_level ();\n    if (level > fcCacheMaxLevel)\n    {\n\tlevel = fcCacheMaxLevel + 1;\n\tupdate[fcCacheMaxLevel] = &fcCacheChains[fcCacheMaxLevel];\n\tfcCacheMaxLevel = level;\n    }\n\n    s = malloc (sizeof (FcCacheSkip) + (level - 1) * sizeof (FcCacheSkip *));\n    if (!s)\n\treturn FcFalse;\n\n    s->cache = cache;\n    s->size = cache->size;\n    s->allocated = NULL;\n    FcRefInit (&s->ref, 1);\n    if (cache_stat)\n    {\n\ts->cache_dev = cache_stat->st_dev;\n\ts->cache_ino = cache_stat->st_ino;\n\ts->cache_mtime = cache_stat->st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\ts->cache_mtime_nano = cache_stat->st_mtim.tv_nsec;\n#else\n\ts->cache_mtime_nano = 0;\n#endif\n    }\n    else\n    {\n\ts->cache_dev = 0;\n\ts->cache_ino = 0;\n\ts->cache_mtime = 0;\n\ts->cache_mtime_nano = 0;\n    }\n\n    /*\n     * Insert into all fcCacheChains\n     */\n    for (i = 0; i < level; i++)\n    {\n\ts->next[i] = *update[i];\n\t*update[i] = s;\n    }\n\n    unlock_cache ();\n    return FcTrue;\n}\n\nstatic FcCacheSkip *\nFcCacheFindByAddrUnlocked (void *object)\n{\n    int\t    i;\n    FcCacheSkip    **next = fcCacheChains;\n    FcCacheSkip    *s;\n\n    if (!object)\n\treturn NULL;\n\n    /*\n     * Walk chain pointers one level at a time\n     */\n    for (i = fcCacheMaxLevel; --i >= 0;)\n\twhile (next[i] && (char *) object >= ((char *) next[i]->cache + next[i]->size))\n\t    next = next[i]->next;\n    /*\n     * Here we are\n     */\n    s = next[0];\n    if (s && (char *) object < ((char *) s->cache + s->size))\n\treturn s;\n    return NULL;\n}\n\nstatic FcCacheSkip *\nFcCacheFindByAddr (void *object)\n{\n    FcCacheSkip *ret;\n    lock_cache ();\n    ret = FcCacheFindByAddrUnlocked (object);\n    unlock_cache ();\n    return ret;\n}\n\nstatic void\nFcCacheRemoveUnlocked (FcCache *cache)\n{\n    FcCacheSkip\t    **update[FC_CACHE_MAX_LEVEL];\n    FcCacheSkip\t    *s, **next;\n    int\t\t    i;\n    void            *allocated;\n\n    /*\n     * Find links along each chain\n     */\n    next = fcCacheChains;\n    for (i = fcCacheMaxLevel; --i >= 0; )\n    {\n\tfor (; (s = next[i]); next = s->next)\n\t    if (s->cache >= cache)\n\t\tbreak;\n        update[i] = &next[i];\n    }\n    s = next[0];\n    for (i = 0; i < fcCacheMaxLevel && *update[i] == s; i++)\n\t*update[i] = s->next[i];\n    while (fcCacheMaxLevel > 0 && fcCacheChains[fcCacheMaxLevel - 1] == NULL)\n\tfcCacheMaxLevel--;\n\n    allocated = s->allocated;\n    while (allocated)\n    {\n\t/* First element in allocated chunk is the free list */\n\tnext = *(void **)allocated;\n\tfree (allocated);\n\tallocated = next;\n    }\n    free (s);\n}\n\nstatic FcCache *\nFcCacheFindByStat (struct stat *cache_stat)\n{\n    FcCacheSkip\t    *s;\n\n    lock_cache ();\n    for (s = fcCacheChains[0]; s; s = s->next[0])\n\tif (s->cache_dev == cache_stat->st_dev &&\n\t    s->cache_ino == cache_stat->st_ino &&\n\t    s->cache_mtime == cache_stat->st_mtime)\n\t{\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    if (s->cache_mtime_nano != cache_stat->st_mtim.tv_nsec)\n\t\tcontinue;\n#endif\n\t    FcRefInc (&s->ref);\n\t    unlock_cache ();\n\t    return s->cache;\n\t}\n    unlock_cache ();\n    return NULL;\n}\n\nstatic void\nFcDirCacheDisposeUnlocked (FcCache *cache)\n{\n    FcCacheRemoveUnlocked (cache);\n\n    switch (cache->magic) {\n    case FC_CACHE_MAGIC_ALLOC:\n\tfree (cache);\n\tbreak;\n    case FC_CACHE_MAGIC_MMAP:\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\tmunmap (cache, cache->size);\n#elif defined(_WIN32)\n\tUnmapViewOfFile (cache);\n#endif\n\tbreak;\n    }\n}\n\nvoid\nFcCacheObjectReference (void *object)\n{\n    FcCacheSkip *skip = FcCacheFindByAddr (object);\n\n    if (skip)\n\tFcRefInc (&skip->ref);\n}\n\nvoid\nFcCacheObjectDereference (void *object)\n{\n    FcCacheSkip\t*skip;\n\n    lock_cache ();\n    skip = FcCacheFindByAddrUnlocked (object);\n    if (skip)\n    {\n\tif (FcRefDec (&skip->ref) == 1)\n\t    FcDirCacheDisposeUnlocked (skip->cache);\n    }\n    unlock_cache ();\n}\n\nvoid *\nFcCacheAllocate (FcCache *cache, size_t len)\n{\n    FcCacheSkip\t*skip;\n    void *allocated = NULL;\n\n    lock_cache ();\n    skip = FcCacheFindByAddrUnlocked (cache);\n    if (skip)\n    {\n      void *chunk = malloc (sizeof (void *) + len);\n      if (chunk)\n      {\n\t  /* First element in allocated chunk is the free list */\n\t  *(void **)chunk = skip->allocated;\n\t  skip->allocated = chunk;\n\t  /* Return the rest */\n\t  allocated = ((FcChar8 *)chunk) + sizeof (void *);\n      }\n    }\n    unlock_cache ();\n    return allocated;\n}\n\nvoid\nFcCacheFini (void)\n{\n    int\t\t    i;\n\n    for (i = 0; i < FC_CACHE_MAX_LEVEL; i++)\n\tassert (fcCacheChains[i] == NULL);\n    assert (fcCacheMaxLevel == 0);\n\n    free_lock ();\n}\n\nstatic FcBool\nFcCacheTimeValid (FcConfig *config, FcCache *cache, struct stat *dir_stat)\n{\n    struct stat\tdir_static;\n    FcBool fnano = FcTrue;\n\n    if (!dir_stat)\n    {\n\tconst FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\tFcChar8 *d;\n\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, FcCacheDir (cache), NULL);\n\telse\n\t    d = FcStrdup (FcCacheDir (cache));\n\tif (FcStatChecksum (d, &dir_static) < 0)\n\t{\n\t    FcStrFree (d);\n\t    return FcFalse;\n\t}\n\tFcStrFree (d);\n\tdir_stat = &dir_static;\n    }\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    fnano = (cache->checksum_nano == dir_stat->st_mtim.tv_nsec) || (dir_stat->st_mtim.tv_nsec == 0);\n    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tprintf (\"FcCacheTimeValid dir \\\"%s\\\" cache checksum %d.%ld dir checksum %d.%ld\\n\",\n\t\tFcCacheDir (cache), cache->checksum, (long)cache->checksum_nano, (int) dir_stat->st_mtime, dir_stat->st_mtim.tv_nsec);\n\tif (dir_stat->st_mtim.tv_nsec == 0)\n\t\tprintf (\"tv_nsec == 0, ignoring nanoseconds\\n\");\n    }\n#else\n    if (FcDebug () & FC_DBG_CACHE)\n\tprintf (\"FcCacheTimeValid dir \\\"%s\\\" cache checksum %d dir checksum %d\\n\",\n\t\tFcCacheDir (cache), cache->checksum, (int) dir_stat->st_mtime);\n#endif\n\n    return cache->checksum == (int) dir_stat->st_mtime && fnano;\n}\n\nstatic FcBool\nFcCacheOffsetsValid (FcCache *cache)\n{\n    char\t\t*base = (char *)cache;\n    char\t\t*end = base + cache->size;\n    intptr_t\t\t*dirs;\n    FcFontSet\t\t*fs;\n    int\t\t\t i, j;\n\n    if (cache->dir < 0 || cache->dir > cache->size - sizeof (intptr_t) ||\n        memchr (base + cache->dir, '\\0', cache->size - cache->dir) == NULL)\n        return FcFalse;\n\n    if (cache->dirs < 0 || cache->dirs >= cache->size ||\n        cache->dirs_count < 0 ||\n        cache->dirs_count > (cache->size - cache->dirs) / sizeof (intptr_t))\n        return FcFalse;\n\n    dirs = FcCacheDirs (cache);\n    if (dirs)\n    {\n        for (i = 0; i < cache->dirs_count; i++)\n        {\n            FcChar8\t*dir;\n\n            if (dirs[i] < 0 ||\n                dirs[i] > end - (char *) dirs - sizeof (intptr_t))\n                return FcFalse;\n\n            dir = FcOffsetToPtr (dirs, dirs[i], FcChar8);\n            if (memchr (dir, '\\0', end - (char *) dir) == NULL)\n                return FcFalse;\n         }\n    }\n\n    if (cache->set < 0 || cache->set > cache->size - sizeof (FcFontSet))\n        return FcFalse;\n\n    fs = FcCacheSet (cache);\n    if (fs)\n    {\n        if (fs->nfont > (end - (char *) fs) / sizeof (FcPattern))\n            return FcFalse;\n\n        if (!FcIsEncodedOffset(fs->fonts))\n            return FcFalse;\n\n        for (i = 0; i < fs->nfont; i++)\n        {\n            FcPattern\t\t*font = FcFontSetFont (fs, i);\n            FcPatternElt\t*e;\n            FcValueListPtr\t l;\n\t    char                *last_offset;\n\n            if ((char *) font < base ||\n                (char *) font > end - sizeof (FcFontSet) ||\n                font->elts_offset < 0 ||\n                font->elts_offset > end - (char *) font ||\n                font->num > (end - (char *) font - font->elts_offset) / sizeof (FcPatternElt) ||\n\t\t!FcRefIsConst (&font->ref))\n                return FcFalse;\n\n\n            e = FcPatternElts(font);\n            if (e->values != 0 && !FcIsEncodedOffset(e->values))\n                return FcFalse;\n\n\t    for (j = 0; j < font->num; j++)\n\t    {\n\t\tlast_offset = (char *) font + font->elts_offset;\n\t\tfor (l = FcPatternEltValues(&e[j]); l; l = FcValueListNext(l))\n\t\t{\n\t\t    if ((char *) l < last_offset || (char *) l > end - sizeof (*l) ||\n\t\t\t(l->next != NULL && !FcIsEncodedOffset(l->next)))\n\t\t\treturn FcFalse;\n\t\t    last_offset = (char *) l + 1;\n\t\t}\n\t    }\n        }\n    }\n\n    return FcTrue;\n}\n\n/*\n * Map a cache file into memory\n */\nstatic FcCache *\nFcDirCacheMapFd (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat)\n{\n    FcCache\t*cache;\n    FcBool\tallocated = FcFalse;\n\n    if (fd_stat->st_size > INTPTR_MAX ||\n        fd_stat->st_size < (int) sizeof (FcCache))\n\treturn NULL;\n    cache = FcCacheFindByStat (fd_stat);\n    if (cache)\n    {\n\tif (FcCacheTimeValid (config, cache, dir_stat))\n\t    return cache;\n\tFcDirCacheUnload (cache);\n\tcache = NULL;\n    }\n\n    /*\n     * Large cache files are mmap'ed, smaller cache files are read. This\n     * balances the system cost of mmap against per-process memory usage.\n     */\n    if (FcCacheIsMmapSafe (fd) && fd_stat->st_size >= FC_CACHE_MIN_MMAP)\n    {\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\tcache = mmap (0, fd_stat->st_size, PROT_READ, MAP_SHARED, fd, 0);\n#if (HAVE_POSIX_FADVISE) && defined(POSIX_FADV_WILLNEED)\n\tposix_fadvise (fd, 0, fd_stat->st_size, POSIX_FADV_WILLNEED);\n#endif\n\tif (cache == MAP_FAILED)\n\t    cache = NULL;\n#elif defined(_WIN32)\n\t{\n\t    HANDLE hFileMap;\n\n\t    cache = NULL;\n\t    hFileMap = CreateFileMapping((HANDLE) _get_osfhandle(fd), NULL,\n\t\t\t\t\t PAGE_READONLY, 0, 0, NULL);\n\t    if (hFileMap != NULL)\n\t    {\n\t\tcache = MapViewOfFile (hFileMap, FILE_MAP_READ, 0, 0,\n\t\t\t\t       fd_stat->st_size);\n\t\tCloseHandle (hFileMap);\n\t    }\n\t}\n#endif\n    }\n    if (!cache)\n    {\n\tcache = malloc (fd_stat->st_size);\n\tif (!cache)\n\t    return NULL;\n\n\tif (read (fd, cache, fd_stat->st_size) != fd_stat->st_size)\n\t{\n\t    free (cache);\n\t    return NULL;\n\t}\n\tallocated = FcTrue;\n    }\n    if (cache->magic != FC_CACHE_MAGIC_MMAP ||\n\tcache->version < FC_CACHE_VERSION_NUMBER ||\n\tcache->size != (intptr_t) fd_stat->st_size ||\n        !FcCacheOffsetsValid (cache) ||\n\t!FcCacheTimeValid (config, cache, dir_stat) ||\n\t!FcCacheInsert (cache, fd_stat))\n    {\n\tif (allocated)\n\t    free (cache);\n\telse\n\t{\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\t    munmap (cache, fd_stat->st_size);\n#elif defined(_WIN32)\n\t    UnmapViewOfFile (cache);\n#endif\n\t}\n\treturn NULL;\n    }\n\n    /* Mark allocated caches so they're freed rather than unmapped */\n    if (allocated)\n\tcache->magic = FC_CACHE_MAGIC_ALLOC;\n\t\n    return cache;\n}\n\nvoid\nFcDirCacheReference (FcCache *cache, int nref)\n{\n    FcCacheSkip *skip = FcCacheFindByAddr (cache);\n\n    if (skip)\n\tFcRefAdd (&skip->ref, nref);\n}\n\nvoid\nFcDirCacheUnload (FcCache *cache)\n{\n    FcCacheObjectDereference (cache);\n}\n\nstatic FcBool\nFcDirCacheMapHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure)\n{\n    FcCache *cache = FcDirCacheMapFd (config, fd, fd_stat, dir_stat);\n\n    if (!cache)\n\treturn FcFalse;\n    *((FcCache **) closure) = cache;\n    return FcTrue;\n}\n\nFcCache *\nFcDirCacheLoad (const FcChar8 *dir, FcConfig *config, FcChar8 **cache_file)\n{\n    FcCache *cache = NULL;\n\n#ifndef _WIN32\n    FcDirCacheReadUUID ((FcChar8 *) dir, config);\n#endif\n    if (!FcDirCacheProcess (config, dir,\n\t\t\t    FcDirCacheMapHelper,\n\t\t\t    &cache, cache_file))\n\treturn NULL;\n\n    return cache;\n}\n\nFcCache *\nFcDirCacheLoadFile (const FcChar8 *cache_file, struct stat *file_stat)\n{\n    int\tfd;\n    FcCache *cache;\n    struct stat\tmy_file_stat;\n\n    if (!file_stat)\n\tfile_stat = &my_file_stat;\n    fd = FcDirCacheOpenFile (cache_file, file_stat);\n    if (fd < 0)\n\treturn NULL;\n    cache = FcDirCacheMapFd (FcConfigGetCurrent (), fd, file_stat, NULL);\n    close (fd);\n    return cache;\n}\n\nstatic int\nFcDirChecksum (struct stat *statb)\n{\n    int\t\t\tret = (int) statb->st_mtime;\n    char\t\t*endptr;\n    char\t\t*source_date_epoch;\n    unsigned long long\tepoch;\n\n    source_date_epoch = getenv(\"SOURCE_DATE_EPOCH\");\n    if (source_date_epoch)\n    {\n\tepoch = strtoull(source_date_epoch, &endptr, 10);\n\n\tif (endptr == source_date_epoch)\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH invalid\\n\");\n\telse if ((errno == ERANGE && (epoch == ULLONG_MAX || epoch == 0))\n\t\t|| (errno != 0 && epoch == 0))\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH: strtoull: %s: %llu\\n\",\n\t\t     strerror(errno), epoch);\n\telse if (*endptr != '\\0')\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH has trailing garbage\\n\");\n\telse if (epoch > ULONG_MAX)\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH must be <= %lu but saw: %llu\\n\",\n\t\t     ULONG_MAX, epoch);\n\telse if (epoch < ret)\n\t    /* Only override if directory is newer */\n\t    ret = (int) epoch;\n    }\n\n    return ret;\n}\n\nstatic int64_t\nFcDirChecksumNano (struct stat *statb)\n{\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    /* No nanosecond component to parse */\n    if (getenv(\"SOURCE_DATE_EPOCH\"))\n\treturn 0;\n    return statb->st_mtim.tv_nsec;\n#else\n    return 0;\n#endif\n}\n\n/*\n * Validate a cache file by reading the header and checking\n * the magic number and the size field\n */\nstatic FcBool\nFcDirCacheValidateHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure FC_UNUSED)\n{\n    FcBool  ret = FcTrue;\n    FcCache\tc;\n\n    if (read (fd, &c, sizeof (FcCache)) != sizeof (FcCache))\n\tret = FcFalse;\n    else if (c.magic != FC_CACHE_MAGIC_MMAP)\n\tret = FcFalse;\n    else if (c.version < FC_CACHE_VERSION_NUMBER)\n\tret = FcFalse;\n    else if (fd_stat->st_size != c.size)\n\tret = FcFalse;\n    else if (c.checksum != FcDirChecksum (dir_stat))\n\tret = FcFalse;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    else if (c.checksum_nano != FcDirChecksumNano (dir_stat))\n\tret = FcFalse;\n#endif\n    return ret;\n}\n\nstatic FcBool\nFcDirCacheValidConfig (const FcChar8 *dir, FcConfig *config)\n{\n    return FcDirCacheProcess (config, dir,\n\t\t\t      FcDirCacheValidateHelper,\n\t\t\t      NULL, NULL);\n}\n\nFcBool\nFcDirCacheValid (const FcChar8 *dir)\n{\n    FcConfig\t*config;\n\n    config = FcConfigGetCurrent ();\n    if (!config)\n        return FcFalse;\n\n    return FcDirCacheValidConfig (dir, config);\n}\n\n/*\n * Build a cache structure from the given contents\n */\nFcCache *\nFcDirCacheBuild (FcFontSet *set, const FcChar8 *dir, struct stat *dir_stat, FcStrSet *dirs)\n{\n    FcSerialize\t*serialize = FcSerializeCreate ();\n    FcCache *cache;\n    int i;\n    FcChar8\t*dir_serialize;\n    intptr_t\t*dirs_serialize;\n    FcFontSet\t*set_serialize;\n\n    if (!serialize)\n\treturn NULL;\n    /*\n     * Space for cache structure\n     */\n    FcSerializeReserve (serialize, sizeof (FcCache));\n    /*\n     * Directory name\n     */\n    if (!FcStrSerializeAlloc (serialize, dir))\n\tgoto bail1;\n    /*\n     * Subdirs\n     */\n    FcSerializeAlloc (serialize, dirs, dirs->num * sizeof (FcChar8 *));\n    for (i = 0; i < dirs->num; i++)\n\tif (!FcStrSerializeAlloc (serialize, dirs->strs[i]))\n\t    goto bail1;\n\n    /*\n     * Patterns\n     */\n    if (!FcFontSetSerializeAlloc (serialize, set))\n\tgoto bail1;\n\n    /* Serialize layout complete. Now allocate space and fill it */\n    cache = malloc (serialize->size);\n    if (!cache)\n\tgoto bail1;\n    /* shut up valgrind */\n    memset (cache, 0, serialize->size);\n\n    serialize->linear = cache;\n\n    cache->magic = FC_CACHE_MAGIC_ALLOC;\n    cache->version = FC_CACHE_VERSION_NUMBER;\n    cache->size = serialize->size;\n    cache->checksum = FcDirChecksum (dir_stat);\n    cache->checksum_nano = FcDirChecksumNano (dir_stat);\n\n    /*\n     * Serialize directory name\n     */\n    dir_serialize = FcStrSerialize (serialize, dir);\n    if (!dir_serialize)\n\tgoto bail2;\n    cache->dir = FcPtrToOffset (cache, dir_serialize);\n\n    /*\n     * Serialize sub dirs\n     */\n    dirs_serialize = FcSerializePtr (serialize, dirs);\n    if (!dirs_serialize)\n\tgoto bail2;\n    cache->dirs = FcPtrToOffset (cache, dirs_serialize);\n    cache->dirs_count = dirs->num;\n    for (i = 0; i < dirs->num; i++)\n    {\n\tFcChar8\t*d_serialize = FcStrSerialize (serialize, dirs->strs[i]);\n\tif (!d_serialize)\n\t    goto bail2;\n\tdirs_serialize[i] = FcPtrToOffset (dirs_serialize, d_serialize);\n    }\n\n    /*\n     * Serialize font set\n     */\n    set_serialize = FcFontSetSerialize (serialize, set);\n    if (!set_serialize)\n\tgoto bail2;\n    cache->set = FcPtrToOffset (cache, set_serialize);\n\n    FcSerializeDestroy (serialize);\n\n    FcCacheInsert (cache, NULL);\n\n    return cache;\n\nbail2:\n    free (cache);\nbail1:\n    FcSerializeDestroy (serialize);\n    return NULL;\n}\n\nFcCache *\nFcDirCacheRebuild (FcCache *cache, struct stat *dir_stat, FcStrSet *dirs)\n{\n    FcCache *new;\n    FcFontSet *set = FcFontSetDeserialize (FcCacheSet (cache));\n    const FcChar8 *dir = FcCacheDir (cache);\n\n    new = FcDirCacheBuild (set, dir, dir_stat, dirs);\n    FcFontSetDestroy (set);\n\n    return new;\n}\n\n/* write serialized state to the cache file */\nFcBool\nFcDirCacheWrite (FcCache *cache, FcConfig *config)\n{\n    FcChar8\t    *dir = FcCacheDir (cache);\n    FcChar8\t    cache_base[CACHEBASE_LEN];\n    FcChar8\t    *cache_hashed;\n    int \t    fd;\n    FcAtomic \t    *atomic;\n    FcStrList\t    *list;\n    FcChar8\t    *cache_dir = NULL;\n    FcChar8\t    *test_dir, *d = NULL;\n    FcCacheSkip     *skip;\n    struct stat     cache_stat;\n    unsigned int    magic;\n    int\t\t    written;\n    const FcChar8   *sysroot = FcConfigGetSysRoot (config);\n\n    /*\n     * Write it to the first directory in the list which is writable\n     */\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n\treturn FcFalse;\n    while ((test_dir = FcStrListNext (list)))\n    {\n\tif (d)\n\t    FcStrFree (d);\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, test_dir, NULL);\n\telse\n\t    d = FcStrCopyFilename (test_dir);\n\n\tif (access ((char *) d, W_OK) == 0)\n\t{\n\t    cache_dir = FcStrCopyFilename (d);\n\t    break;\n\t}\n\telse\n\t{\n\t    /*\n\t     * If the directory doesn't exist, try to create it\n\t     */\n\t    if (access ((char *) d, F_OK) == -1) {\n\t\tif (FcMakeDirectory (d))\n\t\t{\n\t\t    cache_dir = FcStrCopyFilename (d);\n\t\t    /* Create CACHEDIR.TAG */\n\t\t    FcDirCacheCreateTagFile (d);\n\t\t    break;\n\t\t}\n\t    }\n\t    /*\n\t     * Otherwise, try making it writable\n\t     */\n\t    else if (chmod ((char *) d, 0755) == 0)\n\t    {\n\t\tcache_dir = FcStrCopyFilename (d);\n\t\t/* Try to create CACHEDIR.TAG too */\n\t\tFcDirCacheCreateTagFile (d);\n\t\tbreak;\n\t    }\n\t}\n    }\n    if (d)\n\tFcStrFree (d);\n    FcStrListDone (list);\n    if (!cache_dir)\n\treturn FcFalse;\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n    FcStrFree (cache_dir);\n    if (!cache_hashed)\n        return FcFalse;\n\n    if (FcDebug () & FC_DBG_CACHE)\n        printf (\"FcDirCacheWriteDir dir \\\"%s\\\" file \\\"%s\\\"\\n\",\n\t\tdir, cache_hashed);\n\n    atomic = FcAtomicCreate ((FcChar8 *)cache_hashed);\n    if (!atomic)\n\tgoto bail1;\n\n    if (!FcAtomicLock (atomic))\n\tgoto bail3;\n\n    fd = FcOpen((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT | O_BINARY, 0666);\n    if (fd == -1)\n\tgoto bail4;\n\n    /* Temporarily switch magic to MMAP while writing to file */\n    magic = cache->magic;\n    if (magic != FC_CACHE_MAGIC_MMAP)\n\tcache->magic = FC_CACHE_MAGIC_MMAP;\n\n    /*\n     * Write cache contents to file\n     */\n    written = write (fd, cache, cache->size);\n\n    /* Switch magic back */\n    if (magic != FC_CACHE_MAGIC_MMAP)\n\tcache->magic = magic;\n\n    if (written != cache->size)\n    {\n\tperror (\"write cache\");\n\tgoto bail5;\n    }\n\n    close(fd);\n    if (!FcAtomicReplaceOrig(atomic))\n        goto bail4;\n\n    /* If the file is small, update the cache chain entry such that the\n     * new cache file is not read again.  If it's large, we don't do that\n     * such that we reload it, using mmap, which is shared across processes.\n     */\n    if (cache->size < FC_CACHE_MIN_MMAP && FcStat (cache_hashed, &cache_stat))\n    {\n\tlock_cache ();\n\tif ((skip = FcCacheFindByAddrUnlocked (cache)))\n\t{\n\t    skip->cache_dev = cache_stat.st_dev;\n\t    skip->cache_ino = cache_stat.st_ino;\n\t    skip->cache_mtime = cache_stat.st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    skip->cache_mtime_nano = cache_stat.st_mtim.tv_nsec;\n#else\n\t    skip->cache_mtime_nano = 0;\n#endif\n\t}\n\tunlock_cache ();\n    }\n\n    FcStrFree (cache_hashed);\n    FcAtomicUnlock (atomic);\n    FcAtomicDestroy (atomic);\n    return FcTrue;\n\n bail5:\n    close (fd);\n bail4:\n    FcAtomicUnlock (atomic);\n bail3:\n    FcAtomicDestroy (atomic);\n bail1:\n    FcStrFree (cache_hashed);\n    return FcFalse;\n}\n\nFcBool\nFcDirCacheClean (const FcChar8 *cache_dir, FcBool verbose)\n{\n    DIR\t\t*d;\n    struct dirent *ent;\n    FcChar8\t*dir;\n    FcBool\tret = FcTrue;\n    FcBool\tremove;\n    FcCache\t*cache;\n    struct stat\ttarget_stat;\n    const FcChar8 *sysroot;\n\n    /* FIXME: this API needs to support non-current FcConfig */\n    sysroot = FcConfigGetSysRoot (NULL);\n    if (sysroot)\n\tdir = FcStrBuildFilename (sysroot, cache_dir, NULL);\n    else\n\tdir = FcStrCopyFilename (cache_dir);\n    if (!dir)\n    {\n\tfprintf (stderr, \"Fontconfig error: %s: out of memory\\n\", cache_dir);\n\treturn FcFalse;\n    }\n    if (access ((char *) dir, W_OK) != 0)\n    {\n\tif (verbose || FcDebug () & FC_DBG_CACHE)\n\t    printf (\"%s: not cleaning %s cache directory\\n\", dir,\n\t\t    access ((char *) dir, F_OK) == 0 ? \"unwritable\" : \"non-existent\");\n\tgoto bail0;\n    }\n    if (verbose || FcDebug () & FC_DBG_CACHE)\n\tprintf (\"%s: cleaning cache directory\\n\", dir);\n    d = opendir ((char *) dir);\n    if (!d)\n    {\n\tperror ((char *) dir);\n\tret = FcFalse;\n\tgoto bail0;\n    }\n    while ((ent = readdir (d)))\n    {\n\tFcChar8\t*file_name;\n\tconst FcChar8\t*target_dir;\n\n\tif (ent->d_name[0] == '.')\n\t    continue;\n\t/* skip cache files for different architectures and */\n\t/* files which are not cache files at all */\n\tif (strlen(ent->d_name) != 32 + strlen (\"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX) ||\n\t    strcmp(ent->d_name + 32, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX))\n\t    continue;\n\n\tfile_name = FcStrBuildFilename (dir, (FcChar8 *)ent->d_name, NULL);\n\tif (!file_name)\n\t{\n\t    fprintf (stderr, \"Fontconfig error: %s: allocation failure\\n\", dir);\n\t    ret = FcFalse;\n\t    break;\n\t}\n\tremove = FcFalse;\n\tcache = FcDirCacheLoadFile (file_name, NULL);\n\tif (!cache)\n\t{\n\t    if (verbose || FcDebug () & FC_DBG_CACHE)\n\t\tprintf (\"%s: invalid cache file: %s\\n\", dir, ent->d_name);\n\t    remove = FcTrue;\n\t}\n\telse\n\t{\n\t    FcChar8 *s;\n\n\t    target_dir = FcCacheDir (cache);\n\t    if (sysroot)\n\t\ts = FcStrBuildFilename (sysroot, target_dir, NULL);\n\t    else\n\t\ts = FcStrdup (target_dir);\n\t    if (stat ((char *) s, &target_stat) < 0)\n\t    {\n\t\tif (verbose || FcDebug () & FC_DBG_CACHE)\n\t\t    printf (\"%s: %s: missing directory: %s \\n\",\n\t\t\t    dir, ent->d_name, s);\n\t\tremove = FcTrue;\n\t    }\n\t    FcDirCacheUnload (cache);\n\t    FcStrFree (s);\n\t}\n\tif (remove)\n\t{\n\t    if (unlink ((char *) file_name) < 0)\n\t    {\n\t\tperror ((char *) file_name);\n\t\tret = FcFalse;\n\t    }\n\t}\n        FcStrFree (file_name);\n    }\n\n    closedir (d);\n  bail0:\n    FcStrFree (dir);\n\n    return ret;\n}\n\nint\nFcDirCacheLock (const FcChar8 *dir,\n\t\tFcConfig      *config)\n{\n    FcChar8 *cache_hashed = NULL;\n    FcChar8 cache_base[CACHEBASE_LEN];\n    FcStrList *list;\n    FcChar8 *cache_dir;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    int fd = -1;\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n\treturn -1;\n\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n\tif (!cache_hashed)\n\t    break;\n\tfd = FcOpen ((const char *)cache_hashed, O_RDWR);\n\tFcStrFree (cache_hashed);\n\t/* No caches in that directory. simply retry with another one */\n\tif (fd != -1)\n\t{\n#if defined(_WIN32)\n\t    if (_locking (fd, _LK_LOCK, 1) == -1)\n\t\tgoto bail;\n#else\n\t    struct flock fl;\n\n\t    fl.l_type = F_WRLCK;\n\t    fl.l_whence = SEEK_SET;\n\t    fl.l_start = 0;\n\t    fl.l_len = 0;\n\t    fl.l_pid = getpid ();\n\t    if (fcntl (fd, F_SETLKW, &fl) == -1)\n\t\tgoto bail;\n#endif\n\t    break;\n\t}\n    }\n    FcStrListDone (list);\n    return fd;\nbail:\n    FcStrListDone (list);\n    if (fd != -1)\n\tclose (fd);\n    return -1;\n}\n\nvoid\nFcDirCacheUnlock (int fd)\n{\n    if (fd != -1)\n    {\n#if defined(_WIN32)\n\t_locking (fd, _LK_UNLCK, 1);\n#else\n\tstruct flock fl;\n\n\tfl.l_type = F_UNLCK;\n\tfl.l_whence = SEEK_SET;\n\tfl.l_start = 0;\n\tfl.l_len = 0;\n\tfl.l_pid = getpid ();\n\tfcntl (fd, F_SETLK, &fl);\n#endif\n\tclose (fd);\n    }\n}\n\n/*\n * Hokey little macro trick to permit the definitions of C functions\n * with the same name as CPP macros\n */\n#define args1(x)\t    (x)\n#define args2(x,y)\t    (x,y)\n\nconst FcChar8 *\nFcCacheDir args1(const FcCache *c)\n{\n    return FcCacheDir (c);\n}\n\nFcFontSet *\nFcCacheCopySet args1(const FcCache *c)\n{\n    FcFontSet\t*old = FcCacheSet (c);\n    FcFontSet\t*new = FcFontSetCreate ();\n    int\t\ti;\n\n    if (!new)\n\treturn NULL;\n    for (i = 0; i < old->nfont; i++)\n    {\n\tFcPattern   *font = FcFontSetFont (old, i);\n\t\n\tFcPatternReference (font);\n\tif (!FcFontSetAdd (new, font))\n\t{\n\t    FcFontSetDestroy (new);\n\t    return NULL;\n\t}\n    }\n    return new;\n}\n\nconst FcChar8 *\nFcCacheSubdir args2(const FcCache *c, int i)\n{\n    return FcCacheSubdir (c, i);\n}\n\nint\nFcCacheNumSubdir args1(const FcCache *c)\n{\n    return c->dirs_count;\n}\n\nint\nFcCacheNumFont args1(const FcCache *c)\n{\n    return FcCacheSet(c)->nfont;\n}\n\n/*\n * This code implements the MD5 message-digest algorithm.\n * The algorithm is due to Ron Rivest.\tThis code was\n * written by Colin Plumb in 1993, no copyright is claimed.\n * This code is in the public domain; do with it what you wish.\n *\n * Equivalent code is available from RSA Data Security, Inc.\n * This code has been tested against that, and is equivalent,\n * except that you don't need to include two pages of legalese\n * with every copy.\n *\n * To compute the message digest of a chunk of bytes, declare an\n * MD5Context structure, pass it to MD5Init, call MD5Update as\n * needed on buffers full of bytes, and then call MD5Final, which\n * will fill a supplied 16-byte array with the digest.\n */\n\n#ifndef HIGHFIRST\n#define byteReverse(buf, len)\t/* Nothing */\n#else\n/*\n * Note: this code is harmless on little-endian machines.\n */\nvoid byteReverse(unsigned char *buf, unsigned longs)\n{\n    FcChar32 t;\n    do {\n\tt = (FcChar32) ((unsigned) buf[3] << 8 | buf[2]) << 16 |\n\t    ((unsigned) buf[1] << 8 | buf[0]);\n\t*(FcChar32 *) buf = t;\n\tbuf += 4;\n    } while (--longs);\n}\n#endif\n\n/*\n * Start MD5 accumulation.  Set bit count to 0 and buffer to mysterious\n * initialization constants.\n */\nstatic void MD5Init(struct MD5Context *ctx)\n{\n    ctx->buf[0] = 0x67452301;\n    ctx->buf[1] = 0xefcdab89;\n    ctx->buf[2] = 0x98badcfe;\n    ctx->buf[3] = 0x10325476;\n\n    ctx->bits[0] = 0;\n    ctx->bits[1] = 0;\n}\n\n/*\n * Update context to reflect the concatenation of another buffer full\n * of bytes.\n */\nstatic void MD5Update(struct MD5Context *ctx, const unsigned char *buf, unsigned len)\n{\n    FcChar32 t;\n\n    /* Update bitcount */\n\n    t = ctx->bits[0];\n    if ((ctx->bits[0] = t + ((FcChar32) len << 3)) < t)\n\tctx->bits[1]++; \t/* Carry from low to high */\n    ctx->bits[1] += len >> 29;\n\n    t = (t >> 3) & 0x3f;\t/* Bytes already in shsInfo->data */\n\n    /* Handle any leading odd-sized chunks */\n\n    if (t) {\n\tunsigned char *p = (unsigned char *) ctx->in + t;\n\n\tt = 64 - t;\n\tif (len < t) {\n\t    memcpy(p, buf, len);\n\t    return;\n\t}\n\tmemcpy(p, buf, t);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\tbuf += t;\n\tlen -= t;\n    }\n    /* Process data in 64-byte chunks */\n\n    while (len >= 64) {\n\tmemcpy(ctx->in, buf, 64);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\tbuf += 64;\n\tlen -= 64;\n    }\n\n    /* Handle any remaining bytes of data. */\n\n    memcpy(ctx->in, buf, len);\n}\n\n/*\n * Final wrapup - pad to 64-byte boundary with the bit pattern\n * 1 0* (64-bit count of bits processed, MSB-first)\n */\nstatic void MD5Final(unsigned char digest[16], struct MD5Context *ctx)\n{\n    unsigned count;\n    unsigned char *p;\n\n    /* Compute number of bytes mod 64 */\n    count = (ctx->bits[0] >> 3) & 0x3F;\n\n    /* Set the first char of padding to 0x80.  This is safe since there is\n       always at least one byte free */\n    p = ctx->in + count;\n    *p++ = 0x80;\n\n    /* Bytes of padding needed to make 64 bytes */\n    count = 64 - 1 - count;\n\n    /* Pad out to 56 mod 64 */\n    if (count < 8) {\n\t/* Two lots of padding:  Pad the first block to 64 bytes */\n\tmemset(p, 0, count);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\n\t/* Now fill the next block with 56 bytes */\n\tmemset(ctx->in, 0, 56);\n    } else {\n\t/* Pad block to 56 bytes */\n\tmemset(p, 0, count - 8);\n    }\n    byteReverse(ctx->in, 14);\n\n    /* Append length in bits and transform */\n    ((FcChar32 *) ctx->in)[14] = ctx->bits[0];\n    ((FcChar32 *) ctx->in)[15] = ctx->bits[1];\n\n    MD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n    byteReverse((unsigned char *) ctx->buf, 4);\n    memcpy(digest, ctx->buf, 16);\n    memset(ctx, 0, sizeof(*ctx));        /* In case it's sensitive */\n}\n\n\n/* The four core functions - F1 is optimized somewhat */\n\n/* #define F1(x, y, z) (x & y | ~x & z) */\n#define F1(x, y, z) (z ^ (x & (y ^ z)))\n#define F2(x, y, z) F1(z, x, y)\n#define F3(x, y, z) (x ^ y ^ z)\n#define F4(x, y, z) (y ^ (x | ~z))\n\n/* This is the central step in the MD5 algorithm. */\n#define MD5STEP(f, w, x, y, z, data, s) \\\n\t( w += f(x, y, z) + data,  w = w<<s | w>>(32-s),  w += x )\n\n/*\n * The core of the MD5 algorithm, this alters an existing MD5 hash to\n * reflect the addition of 16 longwords of new data.  MD5Update blocks\n * the data and converts bytes into longwords for this routine.\n */\nstatic void MD5Transform(FcChar32 buf[4], FcChar32 in[16])\n{\n    register FcChar32 a, b, c, d;\n\n    a = buf[0];\n    b = buf[1];\n    c = buf[2];\n    d = buf[3];\n\n    MD5STEP(F1, a, b, c, d, in[0] + 0xd76aa478, 7);\n    MD5STEP(F1, d, a, b, c, in[1] + 0xe8c7b756, 12);\n    MD5STEP(F1, c, d, a, b, in[2] + 0x242070db, 17);\n    MD5STEP(F1, b, c, d, a, in[3] + 0xc1bdceee, 22);\n    MD5STEP(F1, a, b, c, d, in[4] + 0xf57c0faf, 7);\n    MD5STEP(F1, d, a, b, c, in[5] + 0x4787c62a, 12);\n    MD5STEP(F1, c, d, a, b, in[6] + 0xa8304613, 17);\n    MD5STEP(F1, b, c, d, a, in[7] + 0xfd469501, 22);\n    MD5STEP(F1, a, b, c, d, in[8] + 0x698098d8, 7);\n    MD5STEP(F1, d, a, b, c, in[9] + 0x8b44f7af, 12);\n    MD5STEP(F1, c, d, a, b, in[10] + 0xffff5bb1, 17);\n    MD5STEP(F1, b, c, d, a, in[11] + 0x895cd7be, 22);\n    MD5STEP(F1, a, b, c, d, in[12] + 0x6b901122, 7);\n    MD5STEP(F1, d, a, b, c, in[13] + 0xfd987193, 12);\n    MD5STEP(F1, c, d, a, b, in[14] + 0xa679438e, 17);\n    MD5STEP(F1, b, c, d, a, in[15] + 0x49b40821, 22);\n\n    MD5STEP(F2, a, b, c, d, in[1] + 0xf61e2562, 5);\n    MD5STEP(F2, d, a, b, c, in[6] + 0xc040b340, 9);\n    MD5STEP(F2, c, d, a, b, in[11] + 0x265e5a51, 14);\n    MD5STEP(F2, b, c, d, a, in[0] + 0xe9b6c7aa, 20);\n    MD5STEP(F2, a, b, c, d, in[5] + 0xd62f105d, 5);\n    MD5STEP(F2, d, a, b, c, in[10] + 0x02441453, 9);\n    MD5STEP(F2, c, d, a, b, in[15] + 0xd8a1e681, 14);\n    MD5STEP(F2, b, c, d, a, in[4] + 0xe7d3fbc8, 20);\n    MD5STEP(F2, a, b, c, d, in[9] + 0x21e1cde6, 5);\n    MD5STEP(F2, d, a, b, c, in[14] + 0xc33707d6, 9);\n    MD5STEP(F2, c, d, a, b, in[3] + 0xf4d50d87, 14);\n    MD5STEP(F2, b, c, d, a, in[8] + 0x455a14ed, 20);\n    MD5STEP(F2, a, b, c, d, in[13] + 0xa9e3e905, 5);\n    MD5STEP(F2, d, a, b, c, in[2] + 0xfcefa3f8, 9);\n    MD5STEP(F2, c, d, a, b, in[7] + 0x676f02d9, 14);\n    MD5STEP(F2, b, c, d, a, in[12] + 0x8d2a4c8a, 20);\n\n    MD5STEP(F3, a, b, c, d, in[5] + 0xfffa3942, 4);\n    MD5STEP(F3, d, a, b, c, in[8] + 0x8771f681, 11);\n    MD5STEP(F3, c, d, a, b, in[11] + 0x6d9d6122, 16);\n    MD5STEP(F3, b, c, d, a, in[14] + 0xfde5380c, 23);\n    MD5STEP(F3, a, b, c, d, in[1] + 0xa4beea44, 4);\n    MD5STEP(F3, d, a, b, c, in[4] + 0x4bdecfa9, 11);\n    MD5STEP(F3, c, d, a, b, in[7] + 0xf6bb4b60, 16);\n    MD5STEP(F3, b, c, d, a, in[10] + 0xbebfbc70, 23);\n    MD5STEP(F3, a, b, c, d, in[13] + 0x289b7ec6, 4);\n    MD5STEP(F3, d, a, b, c, in[0] + 0xeaa127fa, 11);\n    MD5STEP(F3, c, d, a, b, in[3] + 0xd4ef3085, 16);\n    MD5STEP(F3, b, c, d, a, in[6] + 0x04881d05, 23);\n    MD5STEP(F3, a, b, c, d, in[9] + 0xd9d4d039, 4);\n    MD5STEP(F3, d, a, b, c, in[12] + 0xe6db99e5, 11);\n    MD5STEP(F3, c, d, a, b, in[15] + 0x1fa27cf8, 16);\n    MD5STEP(F3, b, c, d, a, in[2] + 0xc4ac5665, 23);\n\n    MD5STEP(F4, a, b, c, d, in[0] + 0xf4292244, 6);\n    MD5STEP(F4, d, a, b, c, in[7] + 0x432aff97, 10);\n    MD5STEP(F4, c, d, a, b, in[14] + 0xab9423a7, 15);\n    MD5STEP(F4, b, c, d, a, in[5] + 0xfc93a039, 21);\n    MD5STEP(F4, a, b, c, d, in[12] + 0x655b59c3, 6);\n    MD5STEP(F4, d, a, b, c, in[3] + 0x8f0ccc92, 10);\n    MD5STEP(F4, c, d, a, b, in[10] + 0xffeff47d, 15);\n    MD5STEP(F4, b, c, d, a, in[1] + 0x85845dd1, 21);\n    MD5STEP(F4, a, b, c, d, in[8] + 0x6fa87e4f, 6);\n    MD5STEP(F4, d, a, b, c, in[15] + 0xfe2ce6e0, 10);\n    MD5STEP(F4, c, d, a, b, in[6] + 0xa3014314, 15);\n    MD5STEP(F4, b, c, d, a, in[13] + 0x4e0811a1, 21);\n    MD5STEP(F4, a, b, c, d, in[4] + 0xf7537e82, 6);\n    MD5STEP(F4, d, a, b, c, in[11] + 0xbd3af235, 10);\n    MD5STEP(F4, c, d, a, b, in[2] + 0x2ad7d2bb, 15);\n    MD5STEP(F4, b, c, d, a, in[9] + 0xeb86d391, 21);\n\n    buf[0] += a;\n    buf[1] += b;\n    buf[2] += c;\n    buf[3] += d;\n}\n\nFcBool\nFcDirCacheCreateTagFile (const FcChar8 *cache_dir)\n{\n    FcChar8\t\t*cache_tag;\n    int \t\t fd;\n    FILE\t\t*fp;\n    FcAtomic\t\t*atomic;\n    static const FcChar8 cache_tag_contents[] =\n\t\"Signature: 8a477f597d28d172789f06886806bc55\\n\"\n\t\"# This file is a cache directory tag created by fontconfig.\\n\"\n\t\"# For information about cache directory tags, see:\\n\"\n\t\"#       http://www.brynosaurus.com/cachedir/\\n\";\n    static size_t\t cache_tag_contents_size = sizeof (cache_tag_contents) - 1;\n    FcBool\t\t ret = FcFalse;\n\n    if (!cache_dir)\n\treturn FcFalse;\n\n    if (access ((char *) cache_dir, W_OK) == 0)\n    {\n\t/* Create CACHEDIR.TAG */\n\tcache_tag = FcStrBuildFilename (cache_dir, \"CACHEDIR.TAG\", NULL);\n\tif (!cache_tag)\n\t    return FcFalse;\n\tatomic = FcAtomicCreate ((FcChar8 *)cache_tag);\n\tif (!atomic)\n\t    goto bail1;\n\tif (!FcAtomicLock (atomic))\n\t    goto bail2;\n\tfd = FcOpen((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT, 0644);\n\tif (fd == -1)\n\t    goto bail3;\n\tfp = fdopen(fd, \"wb\");\n\tif (fp == NULL)\n\t    goto bail3;\n\n\tfwrite(cache_tag_contents, cache_tag_contents_size, sizeof (FcChar8), fp);\n\tfclose(fp);\n\n\tif (!FcAtomicReplaceOrig(atomic))\n\t    goto bail3;\n\n\tret = FcTrue;\n      bail3:\n\tFcAtomicUnlock (atomic);\n      bail2:\n\tFcAtomicDestroy (atomic);\n      bail1:\n\tFcStrFree (cache_tag);\n    }\n\n    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n\n    return ret;\n}\n\nvoid\nFcCacheCreateTagFile (const FcConfig *config)\n{\n    FcChar8   *cache_dir = NULL, *d = NULL;\n    FcStrList *list;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    list = FcConfigGetCacheDirs (config);\n    if (!list)\n\treturn;\n\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (d)\n\t    FcStrFree (d);\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, cache_dir, NULL);\n\telse\n\t    d = FcStrCopyFilename (cache_dir);\n\tif (FcDirCacheCreateTagFile (d))\n\t    break;\n    }\n    if (d)\n\tFcStrFree (d);\n    FcStrListDone (list);\n}\n\n#define __fccache__\n#include \"fcaliastail.h\"\n#undef __fccache__\n` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccache.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":109,"col":1,"offset":0},"end":{"line":109,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":111,"col":1,"offset":0},"end":{"line":111,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c:109:\n `#else` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":109,"col":1,"offset":0},"end":{"line":109,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","start":{"line":111,"col":1,"offset":0},"end":{"line":111,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":160,"col":70,"offset":0},"end":{"line":160,"col":85,"offset":15}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":164,"col":48,"offset":0},"end":{"line":164,"col":63,"offset":15}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":278,"col":1,"offset":0},"end":{"line":278,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":280,"col":1,"offset":0},"end":{"line":280,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c:160:\n `FC_CACHE_SUFFIX` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":160,"col":70,"offset":0},"end":{"line":160,"col":85,"offset":15}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":164,"col":48,"offset":0},"end":{"line":164,"col":63,"offset":15}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":278,"col":1,"offset":0},"end":{"line":278,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","start":{"line":280,"col":1,"offset":0},"end":{"line":280,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":35,"offset":34}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":32,"col":41,"offset":0},"end":{"line":32,"col":47,"offset":6}},{"path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":33,"col":1,"offset":0},"end":{"line":34,"col":7,"offset":26}}]],"message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c:32:\n `#define FC_OBJECT(NAME, Type, Cmp)` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","spans":[{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":35,"offset":34}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":32,"col":41,"offset":0},"end":{"line":32,"col":47,"offset":6}},{"file":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","start":{"line":33,"col":1,"offset":0},"end":{"line":34,"col":7,"offset":26}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/fontconfig-2.13.1/.pc/0001-cache-If-nsec-is-zero-don-t-use-it-for-comparisons.patch/src/fccache.c:1:\n `/*\n * Copyright © 2000 Keith Packard\n * Copyright © 2005 Patrick Lam\n *\n * Permission to use, copy, modify, distribute, and sell this software and its\n * documentation for any purpose is hereby granted without fee, provided that\n * the above copyright notice appear in all copies and that both that\n * copyright notice and this permission notice appear in supporting\n * documentation, and that the name of the author(s) not be used in\n * advertising or publicity pertaining to distribution of the software without\n * specific, written prior permission.  The authors make no\n * representations about the suitability of this software for any purpose.  It\n * is provided \"as is\" without express or implied warranty.\n *\n * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\n * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\n * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR\n * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n#include \"fcint.h\"\n#include \"fcarch.h\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <dirent.h>\n#include <string.h>\n#include <limits.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <sys/time.h>\n#include <assert.h>\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n#  include <unistd.h>\n#  include <sys/mman.h>\n#endif\n#if defined(_WIN32)\n#include <sys/locking.h>\n#else\n#include <uuid/uuid.h>\n#endif\n\n#ifndef O_BINARY\n#define O_BINARY 0\n#endif\n\nFcBool\nFcDirCacheCreateUUID (FcChar8  *dir,\n\t\t      FcBool    force,\n\t\t      FcConfig *config)\n{\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n    FcBool ret = FcTrue;\n#ifndef _WIN32\n    FcChar8 *uuidname;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n    uuidname = FcStrBuildFilename (target, \".uuid\", NULL);\n\n    if (!uuidname)\n    {\n\tFcStrFree (target);\n\treturn FcFalse;\n    }\n\n    if (force || access ((const char *) uuidname, F_OK) < 0)\n    {\n\tFcAtomic *atomic;\n\tint fd;\n\tuuid_t uuid;\n\tchar out[37];\n\tFcBool (* hash_add) (FcHashTable *, void*, void*);\n\tstruct stat statb;\n\tstruct timeval times[2];\n\n\tif (FcStat (target, &statb) != 0)\n\t{\n\t    ret = FcFalse;\n\t    goto bail1;\n\t}\n\tatomic = FcAtomicCreate (uuidname);\n\tif (!atomic)\n\t{\n\t    ret = FcFalse;\n\t    goto bail1;\n\t}\n\tif (!FcAtomicLock (atomic))\n\t{\n\t    ret = FcFalse;\n\t    goto bail2;\n\t}\n\tfd = FcOpen ((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT, 0644);\n\tif (fd == -1)\n\t{\n\t    ret = FcFalse;\n\t    goto bail3;\n\t}\n\tuuid_generate_random (uuid);\n\tif (force)\n\t    hash_add = FcHashTableReplace;\n\telse\n\t    hash_add = FcHashTableAdd;\n\tif (!hash_add (config->uuid_table, target, uuid))\n\t{\n\t    ret = FcFalse;\n\t    FcAtomicDeleteNew (atomic);\n\t    close (fd);\n\t    goto bail3;\n\t}\n\tuuid_unparse (uuid, out);\n\tif (FcDebug () & FC_DBG_CACHE)\n\t    printf (\"FcDirCacheCreateUUID %s: %s\\n\", uuidname, out);\n\twrite (fd, out, strlen (out));\n\tclose (fd);\n\tFcAtomicReplaceOrig (atomic);\n    bail3:\n\tFcAtomicUnlock (atomic);\n    bail2:\n\tFcAtomicDestroy (atomic);\n\n\tif (ret)\n\t{\n\t    /* revert mtime of the directory */\n\t    times[0].tv_sec = statb.st_atime;\n\t    times[1].tv_sec = statb.st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    times[0].tv_usec = statb.st_atim.tv_nsec / 1000;\n\t    times[1].tv_usec = statb.st_mtim.tv_nsec / 1000;\n#else\n\t    times[0].tv_usec = 0;\n\t    times[1].tv_usec = 0;\n#endif\n\t    if (utimes ((const  char *) target, times) != 0)\n\t    {\n\t\tfprintf (stderr, \"Unable to revert mtime: %s\\n\", target);\n\t    }\n\t}\n    }\nbail1:\n    FcStrFree (uuidname);\n    FcStrFree (target);\n#endif\n\n    return ret;\n}\n\nFcBool\nFcDirCacheDeleteUUID (const FcChar8  *dir,\n\t\t      FcConfig       *config)\n{\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n    FcBool ret = FcTrue;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, \".uuid\", NULL);\n    else\n\ttarget = FcStrBuildFilename (dir, \".uuid\", NULL);\n\n    ret = unlink ((char *) target) == 0;\n    FcHashTableRemove (config->uuid_table, target);\n    FcStrFree(target);\n\n    return ret;\n}\n\n#ifndef _WIN32\nstatic void\nFcDirCacheReadUUID (FcChar8  *dir,\n\t\t    FcConfig *config)\n{\n    void *u;\n    uuid_t uuid;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    FcChar8 *target;\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n\n    if (!FcHashTableFind (config->uuid_table, target, &u))\n    {\n\tFcChar8 *uuidname = FcStrBuildFilename (target, \".uuid\", NULL);\n\tint fd;\n\n\tif ((fd = FcOpen ((char *) uuidname, O_RDONLY)) >= 0)\n\t{\n\t    char suuid[37];\n\t    ssize_t len;\n\n\t    memset (suuid, 0, sizeof (suuid));\n\t    len = read (fd, suuid, 36);\n\t    if (len != -1)\n\t    {\n\t\tsuuid[len] = 0;\n\t\tmemset (uuid, 0, sizeof (uuid));\n\t\tif (uuid_parse (suuid, uuid) == 0)\n\t\t{\n\t\t    if (FcDebug () & FC_DBG_CACHE)\n\t\t\tprintf (\"FcDirCacheReadUUID %s -> %s\\n\", uuidname, suuid);\n\t\t    FcHashTableAdd (config->uuid_table, target, uuid);\n\t\t}\n\t    }\n\t    close (fd);\n\t}\n\telse\n\t{\n\t    if (FcDebug () & FC_DBG_CACHE)\n\t\tprintf (\"FcDirCacheReadUUID Unable to read %s\\n\", uuidname);\n\t}\n\tFcStrFree (uuidname);\n    }\n    else\n\tFcHashUuidFree (u);\n    FcStrFree (target);\n}\n#endif\n\nstruct MD5Context {\n        FcChar32 buf[4];\n        FcChar32 bits[2];\n        unsigned char in[64];\n};\n\nstatic void MD5Init(struct MD5Context *ctx);\nstatic void MD5Update(struct MD5Context *ctx, const unsigned char *buf, unsigned len);\nstatic void MD5Final(unsigned char digest[16], struct MD5Context *ctx);\nstatic void MD5Transform(FcChar32 buf[4], FcChar32 in[16]);\n\n#define CACHEBASE_LEN (1 + 36 + 1 + sizeof (FC_ARCHITECTURE) + sizeof (FC_CACHE_SUFFIX))\n\nstatic FcBool\nFcCacheIsMmapSafe (int fd)\n{\n    enum {\n      MMAP_NOT_INITIALIZED = 0,\n      MMAP_USE,\n      MMAP_DONT_USE,\n      MMAP_CHECK_FS,\n    } status;\n    static void *static_status;\n\n    status = (intptr_t) fc_atomic_ptr_get (&static_status);\n\n    if (status == MMAP_NOT_INITIALIZED)\n    {\n\tconst char *env = getenv (\"FONTCONFIG_USE_MMAP\");\n\tFcBool use;\n\tif (env && FcNameBool ((const FcChar8 *) env, &use))\n\t    status =  use ? MMAP_USE : MMAP_DONT_USE;\n\telse\n\t    status = MMAP_CHECK_FS;\n\t(void) fc_atomic_ptr_cmpexch (&static_status, NULL, (void *) status);\n    }\n\n    if (status == MMAP_CHECK_FS)\n\treturn FcIsFsMmapSafe (fd);\n    else\n\treturn status == MMAP_USE;\n\n}\n\nstatic const char bin2hex[] = { '0', '1', '2', '3',\n\t\t\t\t'4', '5', '6', '7',\n\t\t\t\t'8', '9', 'a', 'b',\n\t\t\t\t'c', 'd', 'e', 'f' };\n\nstatic FcChar8 *\nFcDirCacheBasenameMD5 (const FcChar8 *dir, FcChar8 cache_base[CACHEBASE_LEN])\n{\n    unsigned char \thash[16];\n    FcChar8\t\t*hex_hash;\n    int\t\t\tcnt;\n    struct MD5Context \tctx;\n\n    MD5Init (&ctx);\n    MD5Update (&ctx, (const unsigned char *)dir, strlen ((const char *) dir));\n\n    MD5Final (hash, &ctx);\n\n    cache_base[0] = '/';\n    hex_hash = cache_base + 1;\n    for (cnt = 0; cnt < 16; ++cnt)\n    {\n\thex_hash[2*cnt  ] = bin2hex[hash[cnt] >> 4];\n\thex_hash[2*cnt+1] = bin2hex[hash[cnt] & 0xf];\n    }\n    hex_hash[2*cnt] = 0;\n    strcat ((char *) cache_base, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX);\n\n    return cache_base;\n}\n\n#ifndef _WIN32\nstatic FcChar8 *\nFcDirCacheBasenameUUID (const FcChar8 *dir, FcChar8 cache_base[CACHEBASE_LEN], FcConfig *config)\n{\n    void *u;\n    FcChar8 *target;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    if (sysroot)\n\ttarget = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\ttarget = FcStrdup (dir);\n    if (FcHashTableFind (config->uuid_table, target, &u))\n    {\n\tuuid_unparse (u, (char *) cache_base);\n\tstrcat ((char *) cache_base, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX);\n\tFcHashUuidFree (u);\n\tFcStrFree (target);\n\treturn cache_base;\n    }\n    FcStrFree (target);\n    return NULL;\n}\n#endif\n\nFcBool\nFcDirCacheUnlink (const FcChar8 *dir, FcConfig *config)\n{\n    FcChar8\t*cache_hashed = NULL;\n    FcChar8\tcache_base[CACHEBASE_LEN];\n    FcStrList\t*list;\n    FcChar8\t*cache_dir;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n        return FcFalse;\n\t\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n        if (!cache_hashed)\n\t    break;\n\t(void) unlink ((char *) cache_hashed);\n\tFcDirCacheDeleteUUID (dir, config);\n\tFcStrFree (cache_hashed);\n    }\n    FcStrListDone (list);\n    /* return FcFalse if something went wrong */\n    if (cache_dir)\n\treturn FcFalse;\n    return FcTrue;\n}\n\nstatic int\nFcDirCacheOpenFile (const FcChar8 *cache_file, struct stat *file_stat)\n{\n    int\tfd;\n\n#ifdef _WIN32\n    if (FcStat (cache_file, file_stat) < 0)\n        return -1;\n#endif\n    fd = FcOpen((char *) cache_file, O_RDONLY | O_BINARY);\n    if (fd < 0)\n\treturn fd;\n#ifndef _WIN32\n    if (fstat (fd, file_stat) < 0)\n    {\n\tclose (fd);\n\treturn -1;\n    }\n#endif\n    return fd;\n}\n\n/*\n * Look for a cache file for the specified dir. Attempt\n * to use each one we find, stopping when the callback\n * indicates success\n */\nstatic FcBool\nFcDirCacheProcess (FcConfig *config, const FcChar8 *dir,\n\t\t   FcBool (*callback) (FcConfig *config, int fd, struct stat *fd_stat,\n\t\t\t\t       struct stat *dir_stat, void *closure),\n\t\t   void *closure, FcChar8 **cache_file_ret)\n{\n    int\t\tfd = -1;\n    FcChar8\tcache_base[CACHEBASE_LEN];\n    FcStrList\t*list;\n    FcChar8\t*cache_dir, *d;\n    struct stat file_stat, dir_stat;\n    FcBool\tret = FcFalse;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    if (sysroot)\n\td = FcStrBuildFilename (sysroot, dir, NULL);\n    else\n\td = FcStrdup (dir);\n    if (FcStatChecksum (d, &dir_stat) < 0)\n    {\n\tFcStrFree (d);\n        return FcFalse;\n    }\n    FcStrFree (d);\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n        return FcFalse;\n\t\n    while ((cache_dir = FcStrListNext (list)))\n    {\n        FcChar8\t*cache_hashed;\n\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n        if (!cache_hashed)\n\t    break;\n        fd = FcDirCacheOpenFile (cache_hashed, &file_stat);\n        if (fd >= 0) {\n\t    ret = (*callback) (config, fd, &file_stat, &dir_stat, closure);\n\t    close (fd);\n\t    if (ret)\n\t    {\n\t\tif (cache_file_ret)\n\t\t    *cache_file_ret = cache_hashed;\n\t\telse\n\t\t    FcStrFree (cache_hashed);\n\t\tbreak;\n\t    }\n\t}\n    \tFcStrFree (cache_hashed);\n    }\n    FcStrListDone (list);\n\n    return ret;\n}\n\n#define FC_CACHE_MIN_MMAP   1024\n\n/*\n * Skip list element, make sure the 'next' pointer is the last thing\n * in the structure, it will be allocated large enough to hold all\n * of the necessary pointers\n */\n\ntypedef struct _FcCacheSkip FcCacheSkip;\n\nstruct _FcCacheSkip {\n    FcCache\t    *cache;\n    FcRef\t    ref;\n    intptr_t\t    size;\n    void\t   *allocated;\n    dev_t\t    cache_dev;\n    ino_t\t    cache_ino;\n    time_t\t    cache_mtime;\n    long\t    cache_mtime_nano;\n    FcCacheSkip\t    *next[1];\n};\n\n/*\n * The head of the skip list; pointers for every possible level\n * in the skip list, plus the largest level in the list\n */\n\n#define FC_CACHE_MAX_LEVEL  16\n\n/* Protected by cache_lock below */\nstatic FcCacheSkip\t*fcCacheChains[FC_CACHE_MAX_LEVEL];\nstatic int\t\tfcCacheMaxLevel;\n\n\nstatic FcMutex *cache_lock;\n\nstatic void\nlock_cache (void)\n{\n  FcMutex *lock;\nretry:\n  lock = fc_atomic_ptr_get (&cache_lock);\n  if (!lock) {\n    lock = (FcMutex *) malloc (sizeof (FcMutex));\n    FcMutexInit (lock);\n    if (!fc_atomic_ptr_cmpexch (&cache_lock, NULL, lock)) {\n      FcMutexFinish (lock);\n      goto retry;\n    }\n\n    FcMutexLock (lock);\n    /* Initialize random state */\n    FcRandom ();\n    return;\n  }\n  FcMutexLock (lock);\n}\n\nstatic void\nunlock_cache (void)\n{\n  FcMutexUnlock (cache_lock);\n}\n\nstatic void\nfree_lock (void)\n{\n  FcMutex *lock;\n  lock = fc_atomic_ptr_get (&cache_lock);\n  if (lock && fc_atomic_ptr_cmpexch (&cache_lock, lock, NULL)) {\n    FcMutexFinish (lock);\n    free (lock);\n  }\n}\n\n\n\n/*\n * Generate a random level number, distributed\n * so that each level is 1/4 as likely as the one before\n *\n * Note that level numbers run 1 <= level <= MAX_LEVEL\n */\nstatic int\nrandom_level (void)\n{\n    /* tricky bit -- each bit is '1' 75% of the time */\n    long int\tbits = FcRandom () | FcRandom ();\n    int\tlevel = 0;\n\n    while (++level < FC_CACHE_MAX_LEVEL)\n    {\n\tif (bits & 1)\n\t    break;\n\tbits >>= 1;\n    }\n    return level;\n}\n\n/*\n * Insert cache into the list\n */\nstatic FcBool\nFcCacheInsert (FcCache *cache, struct stat *cache_stat)\n{\n    FcCacheSkip    **update[FC_CACHE_MAX_LEVEL];\n    FcCacheSkip    *s, **next;\n    int\t\t    i, level;\n\n    lock_cache ();\n\n    /*\n     * Find links along each chain\n     */\n    next = fcCacheChains;\n    for (i = fcCacheMaxLevel; --i >= 0; )\n    {\n\tfor (; (s = next[i]); next = s->next)\n\t    if (s->cache > cache)\n\t\tbreak;\n        update[i] = &next[i];\n    }\n\n    /*\n     * Create new list element\n     */\n    level = random_level ();\n    if (level > fcCacheMaxLevel)\n    {\n\tlevel = fcCacheMaxLevel + 1;\n\tupdate[fcCacheMaxLevel] = &fcCacheChains[fcCacheMaxLevel];\n\tfcCacheMaxLevel = level;\n    }\n\n    s = malloc (sizeof (FcCacheSkip) + (level - 1) * sizeof (FcCacheSkip *));\n    if (!s)\n\treturn FcFalse;\n\n    s->cache = cache;\n    s->size = cache->size;\n    s->allocated = NULL;\n    FcRefInit (&s->ref, 1);\n    if (cache_stat)\n    {\n\ts->cache_dev = cache_stat->st_dev;\n\ts->cache_ino = cache_stat->st_ino;\n\ts->cache_mtime = cache_stat->st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\ts->cache_mtime_nano = cache_stat->st_mtim.tv_nsec;\n#else\n\ts->cache_mtime_nano = 0;\n#endif\n    }\n    else\n    {\n\ts->cache_dev = 0;\n\ts->cache_ino = 0;\n\ts->cache_mtime = 0;\n\ts->cache_mtime_nano = 0;\n    }\n\n    /*\n     * Insert into all fcCacheChains\n     */\n    for (i = 0; i < level; i++)\n    {\n\ts->next[i] = *update[i];\n\t*update[i] = s;\n    }\n\n    unlock_cache ();\n    return FcTrue;\n}\n\nstatic FcCacheSkip *\nFcCacheFindByAddrUnlocked (void *object)\n{\n    int\t    i;\n    FcCacheSkip    **next = fcCacheChains;\n    FcCacheSkip    *s;\n\n    if (!object)\n\treturn NULL;\n\n    /*\n     * Walk chain pointers one level at a time\n     */\n    for (i = fcCacheMaxLevel; --i >= 0;)\n\twhile (next[i] && (char *) object >= ((char *) next[i]->cache + next[i]->size))\n\t    next = next[i]->next;\n    /*\n     * Here we are\n     */\n    s = next[0];\n    if (s && (char *) object < ((char *) s->cache + s->size))\n\treturn s;\n    return NULL;\n}\n\nstatic FcCacheSkip *\nFcCacheFindByAddr (void *object)\n{\n    FcCacheSkip *ret;\n    lock_cache ();\n    ret = FcCacheFindByAddrUnlocked (object);\n    unlock_cache ();\n    return ret;\n}\n\nstatic void\nFcCacheRemoveUnlocked (FcCache *cache)\n{\n    FcCacheSkip\t    **update[FC_CACHE_MAX_LEVEL];\n    FcCacheSkip\t    *s, **next;\n    int\t\t    i;\n    void            *allocated;\n\n    /*\n     * Find links along each chain\n     */\n    next = fcCacheChains;\n    for (i = fcCacheMaxLevel; --i >= 0; )\n    {\n\tfor (; (s = next[i]); next = s->next)\n\t    if (s->cache >= cache)\n\t\tbreak;\n        update[i] = &next[i];\n    }\n    s = next[0];\n    for (i = 0; i < fcCacheMaxLevel && *update[i] == s; i++)\n\t*update[i] = s->next[i];\n    while (fcCacheMaxLevel > 0 && fcCacheChains[fcCacheMaxLevel - 1] == NULL)\n\tfcCacheMaxLevel--;\n\n    allocated = s->allocated;\n    while (allocated)\n    {\n\t/* First element in allocated chunk is the free list */\n\tnext = *(void **)allocated;\n\tfree (allocated);\n\tallocated = next;\n    }\n    free (s);\n}\n\nstatic FcCache *\nFcCacheFindByStat (struct stat *cache_stat)\n{\n    FcCacheSkip\t    *s;\n\n    lock_cache ();\n    for (s = fcCacheChains[0]; s; s = s->next[0])\n\tif (s->cache_dev == cache_stat->st_dev &&\n\t    s->cache_ino == cache_stat->st_ino &&\n\t    s->cache_mtime == cache_stat->st_mtime)\n\t{\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    if (s->cache_mtime_nano != cache_stat->st_mtim.tv_nsec)\n\t\tcontinue;\n#endif\n\t    FcRefInc (&s->ref);\n\t    unlock_cache ();\n\t    return s->cache;\n\t}\n    unlock_cache ();\n    return NULL;\n}\n\nstatic void\nFcDirCacheDisposeUnlocked (FcCache *cache)\n{\n    FcCacheRemoveUnlocked (cache);\n\n    switch (cache->magic) {\n    case FC_CACHE_MAGIC_ALLOC:\n\tfree (cache);\n\tbreak;\n    case FC_CACHE_MAGIC_MMAP:\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\tmunmap (cache, cache->size);\n#elif defined(_WIN32)\n\tUnmapViewOfFile (cache);\n#endif\n\tbreak;\n    }\n}\n\nvoid\nFcCacheObjectReference (void *object)\n{\n    FcCacheSkip *skip = FcCacheFindByAddr (object);\n\n    if (skip)\n\tFcRefInc (&skip->ref);\n}\n\nvoid\nFcCacheObjectDereference (void *object)\n{\n    FcCacheSkip\t*skip;\n\n    lock_cache ();\n    skip = FcCacheFindByAddrUnlocked (object);\n    if (skip)\n    {\n\tif (FcRefDec (&skip->ref) == 1)\n\t    FcDirCacheDisposeUnlocked (skip->cache);\n    }\n    unlock_cache ();\n}\n\nvoid *\nFcCacheAllocate (FcCache *cache, size_t len)\n{\n    FcCacheSkip\t*skip;\n    void *allocated = NULL;\n\n    lock_cache ();\n    skip = FcCacheFindByAddrUnlocked (cache);\n    if (skip)\n    {\n      void *chunk = malloc (sizeof (void *) + len);\n      if (chunk)\n      {\n\t  /* First element in allocated chunk is the free list */\n\t  *(void **)chunk = skip->allocated;\n\t  skip->allocated = chunk;\n\t  /* Return the rest */\n\t  allocated = ((FcChar8 *)chunk) + sizeof (void *);\n      }\n    }\n    unlock_cache ();\n    return allocated;\n}\n\nvoid\nFcCacheFini (void)\n{\n    int\t\t    i;\n\n    for (i = 0; i < FC_CACHE_MAX_LEVEL; i++)\n\tassert (fcCacheChains[i] == NULL);\n    assert (fcCacheMaxLevel == 0);\n\n    free_lock ();\n}\n\nstatic FcBool\nFcCacheTimeValid (FcConfig *config, FcCache *cache, struct stat *dir_stat)\n{\n    struct stat\tdir_static;\n    FcBool fnano = FcTrue;\n\n    if (!dir_stat)\n    {\n\tconst FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\tFcChar8 *d;\n\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, FcCacheDir (cache), NULL);\n\telse\n\t    d = FcStrdup (FcCacheDir (cache));\n\tif (FcStatChecksum (d, &dir_static) < 0)\n\t{\n\t    FcStrFree (d);\n\t    return FcFalse;\n\t}\n\tFcStrFree (d);\n\tdir_stat = &dir_static;\n    }\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    fnano = (cache->checksum_nano == dir_stat->st_mtim.tv_nsec);\n    if (FcDebug () & FC_DBG_CACHE)\n\tprintf (\"FcCacheTimeValid dir \\\"%s\\\" cache checksum %d.%ld dir checksum %d.%ld\\n\",\n\t\tFcCacheDir (cache), cache->checksum, (long)cache->checksum_nano, (int) dir_stat->st_mtime, dir_stat->st_mtim.tv_nsec);\n#else\n    if (FcDebug () & FC_DBG_CACHE)\n\tprintf (\"FcCacheTimeValid dir \\\"%s\\\" cache checksum %d dir checksum %d\\n\",\n\t\tFcCacheDir (cache), cache->checksum, (int) dir_stat->st_mtime);\n#endif\n\n    return cache->checksum == (int) dir_stat->st_mtime && fnano;\n}\n\nstatic FcBool\nFcCacheOffsetsValid (FcCache *cache)\n{\n    char\t\t*base = (char *)cache;\n    char\t\t*end = base + cache->size;\n    intptr_t\t\t*dirs;\n    FcFontSet\t\t*fs;\n    int\t\t\t i, j;\n\n    if (cache->dir < 0 || cache->dir > cache->size - sizeof (intptr_t) ||\n        memchr (base + cache->dir, '\\0', cache->size - cache->dir) == NULL)\n        return FcFalse;\n\n    if (cache->dirs < 0 || cache->dirs >= cache->size ||\n        cache->dirs_count < 0 ||\n        cache->dirs_count > (cache->size - cache->dirs) / sizeof (intptr_t))\n        return FcFalse;\n\n    dirs = FcCacheDirs (cache);\n    if (dirs)\n    {\n        for (i = 0; i < cache->dirs_count; i++)\n        {\n            FcChar8\t*dir;\n\n            if (dirs[i] < 0 ||\n                dirs[i] > end - (char *) dirs - sizeof (intptr_t))\n                return FcFalse;\n\n            dir = FcOffsetToPtr (dirs, dirs[i], FcChar8);\n            if (memchr (dir, '\\0', end - (char *) dir) == NULL)\n                return FcFalse;\n         }\n    }\n\n    if (cache->set < 0 || cache->set > cache->size - sizeof (FcFontSet))\n        return FcFalse;\n\n    fs = FcCacheSet (cache);\n    if (fs)\n    {\n        if (fs->nfont > (end - (char *) fs) / sizeof (FcPattern))\n            return FcFalse;\n\n        if (!FcIsEncodedOffset(fs->fonts))\n            return FcFalse;\n\n        for (i = 0; i < fs->nfont; i++)\n        {\n            FcPattern\t\t*font = FcFontSetFont (fs, i);\n            FcPatternElt\t*e;\n            FcValueListPtr\t l;\n\t    char                *last_offset;\n\n            if ((char *) font < base ||\n                (char *) font > end - sizeof (FcFontSet) ||\n                font->elts_offset < 0 ||\n                font->elts_offset > end - (char *) font ||\n                font->num > (end - (char *) font - font->elts_offset) / sizeof (FcPatternElt) ||\n\t\t!FcRefIsConst (&font->ref))\n                return FcFalse;\n\n\n            e = FcPatternElts(font);\n            if (e->values != 0 && !FcIsEncodedOffset(e->values))\n                return FcFalse;\n\n\t    for (j = 0; j < font->num; j++)\n\t    {\n\t\tlast_offset = (char *) font + font->elts_offset;\n\t\tfor (l = FcPatternEltValues(&e[j]); l; l = FcValueListNext(l))\n\t\t{\n\t\t    if ((char *) l < last_offset || (char *) l > end - sizeof (*l) ||\n\t\t\t(l->next != NULL && !FcIsEncodedOffset(l->next)))\n\t\t\treturn FcFalse;\n\t\t    last_offset = (char *) l + 1;\n\t\t}\n\t    }\n        }\n    }\n\n    return FcTrue;\n}\n\n/*\n * Map a cache file into memory\n */\nstatic FcCache *\nFcDirCacheMapFd (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat)\n{\n    FcCache\t*cache;\n    FcBool\tallocated = FcFalse;\n\n    if (fd_stat->st_size > INTPTR_MAX ||\n        fd_stat->st_size < (int) sizeof (FcCache))\n\treturn NULL;\n    cache = FcCacheFindByStat (fd_stat);\n    if (cache)\n    {\n\tif (FcCacheTimeValid (config, cache, dir_stat))\n\t    return cache;\n\tFcDirCacheUnload (cache);\n\tcache = NULL;\n    }\n\n    /*\n     * Large cache files are mmap'ed, smaller cache files are read. This\n     * balances the system cost of mmap against per-process memory usage.\n     */\n    if (FcCacheIsMmapSafe (fd) && fd_stat->st_size >= FC_CACHE_MIN_MMAP)\n    {\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\tcache = mmap (0, fd_stat->st_size, PROT_READ, MAP_SHARED, fd, 0);\n#if (HAVE_POSIX_FADVISE) && defined(POSIX_FADV_WILLNEED)\n\tposix_fadvise (fd, 0, fd_stat->st_size, POSIX_FADV_WILLNEED);\n#endif\n\tif (cache == MAP_FAILED)\n\t    cache = NULL;\n#elif defined(_WIN32)\n\t{\n\t    HANDLE hFileMap;\n\n\t    cache = NULL;\n\t    hFileMap = CreateFileMapping((HANDLE) _get_osfhandle(fd), NULL,\n\t\t\t\t\t PAGE_READONLY, 0, 0, NULL);\n\t    if (hFileMap != NULL)\n\t    {\n\t\tcache = MapViewOfFile (hFileMap, FILE_MAP_READ, 0, 0,\n\t\t\t\t       fd_stat->st_size);\n\t\tCloseHandle (hFileMap);\n\t    }\n\t}\n#endif\n    }\n    if (!cache)\n    {\n\tcache = malloc (fd_stat->st_size);\n\tif (!cache)\n\t    return NULL;\n\n\tif (read (fd, cache, fd_stat->st_size) != fd_stat->st_size)\n\t{\n\t    free (cache);\n\t    return NULL;\n\t}\n\tallocated = FcTrue;\n    }\n    if (cache->magic != FC_CACHE_MAGIC_MMAP ||\n\tcache->version < FC_CACHE_VERSION_NUMBER ||\n\tcache->size != (intptr_t) fd_stat->st_size ||\n        !FcCacheOffsetsValid (cache) ||\n\t!FcCacheTimeValid (config, cache, dir_stat) ||\n\t!FcCacheInsert (cache, fd_stat))\n    {\n\tif (allocated)\n\t    free (cache);\n\telse\n\t{\n#if defined(HAVE_MMAP) || defined(__CYGWIN__)\n\t    munmap (cache, fd_stat->st_size);\n#elif defined(_WIN32)\n\t    UnmapViewOfFile (cache);\n#endif\n\t}\n\treturn NULL;\n    }\n\n    /* Mark allocated caches so they're freed rather than unmapped */\n    if (allocated)\n\tcache->magic = FC_CACHE_MAGIC_ALLOC;\n\t\n    return cache;\n}\n\nvoid\nFcDirCacheReference (FcCache *cache, int nref)\n{\n    FcCacheSkip *skip = FcCacheFindByAddr (cache);\n\n    if (skip)\n\tFcRefAdd (&skip->ref, nref);\n}\n\nvoid\nFcDirCacheUnload (FcCache *cache)\n{\n    FcCacheObjectDereference (cache);\n}\n\nstatic FcBool\nFcDirCacheMapHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure)\n{\n    FcCache *cache = FcDirCacheMapFd (config, fd, fd_stat, dir_stat);\n\n    if (!cache)\n\treturn FcFalse;\n    *((FcCache **) closure) = cache;\n    return FcTrue;\n}\n\nFcCache *\nFcDirCacheLoad (const FcChar8 *dir, FcConfig *config, FcChar8 **cache_file)\n{\n    FcCache *cache = NULL;\n\n#ifndef _WIN32\n    FcDirCacheReadUUID ((FcChar8 *) dir, config);\n#endif\n    if (!FcDirCacheProcess (config, dir,\n\t\t\t    FcDirCacheMapHelper,\n\t\t\t    &cache, cache_file))\n\treturn NULL;\n\n    return cache;\n}\n\nFcCache *\nFcDirCacheLoadFile (const FcChar8 *cache_file, struct stat *file_stat)\n{\n    int\tfd;\n    FcCache *cache;\n    struct stat\tmy_file_stat;\n\n    if (!file_stat)\n\tfile_stat = &my_file_stat;\n    fd = FcDirCacheOpenFile (cache_file, file_stat);\n    if (fd < 0)\n\treturn NULL;\n    cache = FcDirCacheMapFd (FcConfigGetCurrent (), fd, file_stat, NULL);\n    close (fd);\n    return cache;\n}\n\nstatic int\nFcDirChecksum (struct stat *statb)\n{\n    int\t\t\tret = (int) statb->st_mtime;\n    char\t\t*endptr;\n    char\t\t*source_date_epoch;\n    unsigned long long\tepoch;\n\n    source_date_epoch = getenv(\"SOURCE_DATE_EPOCH\");\n    if (source_date_epoch)\n    {\n\tepoch = strtoull(source_date_epoch, &endptr, 10);\n\n\tif (endptr == source_date_epoch)\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH invalid\\n\");\n\telse if ((errno == ERANGE && (epoch == ULLONG_MAX || epoch == 0))\n\t\t|| (errno != 0 && epoch == 0))\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH: strtoull: %s: %llu\\n\",\n\t\t     strerror(errno), epoch);\n\telse if (*endptr != '\\0')\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH has trailing garbage\\n\");\n\telse if (epoch > ULONG_MAX)\n\t    fprintf (stderr,\n\t\t     \"Fontconfig: SOURCE_DATE_EPOCH must be <= %lu but saw: %llu\\n\",\n\t\t     ULONG_MAX, epoch);\n\telse if (epoch < ret)\n\t    /* Only override if directory is newer */\n\t    ret = (int) epoch;\n    }\n\n    return ret;\n}\n\nstatic int64_t\nFcDirChecksumNano (struct stat *statb)\n{\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    /* No nanosecond component to parse */\n    if (getenv(\"SOURCE_DATE_EPOCH\"))\n\treturn 0;\n    return statb->st_mtim.tv_nsec;\n#else\n    return 0;\n#endif\n}\n\n/*\n * Validate a cache file by reading the header and checking\n * the magic number and the size field\n */\nstatic FcBool\nFcDirCacheValidateHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure FC_UNUSED)\n{\n    FcBool  ret = FcTrue;\n    FcCache\tc;\n\n    if (read (fd, &c, sizeof (FcCache)) != sizeof (FcCache))\n\tret = FcFalse;\n    else if (c.magic != FC_CACHE_MAGIC_MMAP)\n\tret = FcFalse;\n    else if (c.version < FC_CACHE_VERSION_NUMBER)\n\tret = FcFalse;\n    else if (fd_stat->st_size != c.size)\n\tret = FcFalse;\n    else if (c.checksum != FcDirChecksum (dir_stat))\n\tret = FcFalse;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n    else if (c.checksum_nano != FcDirChecksumNano (dir_stat))\n\tret = FcFalse;\n#endif\n    return ret;\n}\n\nstatic FcBool\nFcDirCacheValidConfig (const FcChar8 *dir, FcConfig *config)\n{\n    return FcDirCacheProcess (config, dir,\n\t\t\t      FcDirCacheValidateHelper,\n\t\t\t      NULL, NULL);\n}\n\nFcBool\nFcDirCacheValid (const FcChar8 *dir)\n{\n    FcConfig\t*config;\n\n    config = FcConfigGetCurrent ();\n    if (!config)\n        return FcFalse;\n\n    return FcDirCacheValidConfig (dir, config);\n}\n\n/*\n * Build a cache structure from the given contents\n */\nFcCache *\nFcDirCacheBuild (FcFontSet *set, const FcChar8 *dir, struct stat *dir_stat, FcStrSet *dirs)\n{\n    FcSerialize\t*serialize = FcSerializeCreate ();\n    FcCache *cache;\n    int i;\n    FcChar8\t*dir_serialize;\n    intptr_t\t*dirs_serialize;\n    FcFontSet\t*set_serialize;\n\n    if (!serialize)\n\treturn NULL;\n    /*\n     * Space for cache structure\n     */\n    FcSerializeReserve (serialize, sizeof (FcCache));\n    /*\n     * Directory name\n     */\n    if (!FcStrSerializeAlloc (serialize, dir))\n\tgoto bail1;\n    /*\n     * Subdirs\n     */\n    FcSerializeAlloc (serialize, dirs, dirs->num * sizeof (FcChar8 *));\n    for (i = 0; i < dirs->num; i++)\n\tif (!FcStrSerializeAlloc (serialize, dirs->strs[i]))\n\t    goto bail1;\n\n    /*\n     * Patterns\n     */\n    if (!FcFontSetSerializeAlloc (serialize, set))\n\tgoto bail1;\n\n    /* Serialize layout complete. Now allocate space and fill it */\n    cache = malloc (serialize->size);\n    if (!cache)\n\tgoto bail1;\n    /* shut up valgrind */\n    memset (cache, 0, serialize->size);\n\n    serialize->linear = cache;\n\n    cache->magic = FC_CACHE_MAGIC_ALLOC;\n    cache->version = FC_CACHE_VERSION_NUMBER;\n    cache->size = serialize->size;\n    cache->checksum = FcDirChecksum (dir_stat);\n    cache->checksum_nano = FcDirChecksumNano (dir_stat);\n\n    /*\n     * Serialize directory name\n     */\n    dir_serialize = FcStrSerialize (serialize, dir);\n    if (!dir_serialize)\n\tgoto bail2;\n    cache->dir = FcPtrToOffset (cache, dir_serialize);\n\n    /*\n     * Serialize sub dirs\n     */\n    dirs_serialize = FcSerializePtr (serialize, dirs);\n    if (!dirs_serialize)\n\tgoto bail2;\n    cache->dirs = FcPtrToOffset (cache, dirs_serialize);\n    cache->dirs_count = dirs->num;\n    for (i = 0; i < dirs->num; i++)\n    {\n\tFcChar8\t*d_serialize = FcStrSerialize (serialize, dirs->strs[i]);\n\tif (!d_serialize)\n\t    goto bail2;\n\tdirs_serialize[i] = FcPtrToOffset (dirs_serialize, d_serialize);\n    }\n\n    /*\n     * Serialize font set\n     */\n    set_serialize = FcFontSetSerialize (serialize, set);\n    if (!set_serialize)\n\tgoto bail2;\n    cache->set = FcPtrToOffset (cache, set_serialize);\n\n    FcSerializeDestroy (serialize);\n\n    FcCacheInsert (cache, NULL);\n\n    return cache;\n\nbail2:\n    free (cache);\nbail1:\n    FcSerializeDestroy (serialize);\n    return NULL;\n}\n\nFcCache *\nFcDirCacheRebuild (FcCache *cache, struct stat *dir_stat, FcStrSet *dirs)\n{\n    FcCache *new;\n    FcFontSet *set = FcFontSetDeserialize (FcCacheSet (cache));\n    const FcChar8 *dir = FcCacheDir (cache);\n\n    new = FcDirCacheBuild (set, dir, dir_stat, dirs);\n    FcFontSetDestroy (set);\n\n    return new;\n}\n\n/* write serialized state to the cache file */\nFcBool\nFcDirCacheWrite (FcCache *cache, FcConfig *config)\n{\n    FcChar8\t    *dir = FcCacheDir (cache);\n    FcChar8\t    cache_base[CACHEBASE_LEN];\n    FcChar8\t    *cache_hashed;\n    int \t    fd;\n    FcAtomic \t    *atomic;\n    FcStrList\t    *list;\n    FcChar8\t    *cache_dir = NULL;\n    FcChar8\t    *test_dir, *d = NULL;\n    FcCacheSkip     *skip;\n    struct stat     cache_stat;\n    unsigned int    magic;\n    int\t\t    written;\n    const FcChar8   *sysroot = FcConfigGetSysRoot (config);\n\n    /*\n     * Write it to the first directory in the list which is writable\n     */\n\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n\treturn FcFalse;\n    while ((test_dir = FcStrListNext (list)))\n    {\n\tif (d)\n\t    FcStrFree (d);\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, test_dir, NULL);\n\telse\n\t    d = FcStrCopyFilename (test_dir);\n\n\tif (access ((char *) d, W_OK) == 0)\n\t{\n\t    cache_dir = FcStrCopyFilename (d);\n\t    break;\n\t}\n\telse\n\t{\n\t    /*\n\t     * If the directory doesn't exist, try to create it\n\t     */\n\t    if (access ((char *) d, F_OK) == -1) {\n\t\tif (FcMakeDirectory (d))\n\t\t{\n\t\t    cache_dir = FcStrCopyFilename (d);\n\t\t    /* Create CACHEDIR.TAG */\n\t\t    FcDirCacheCreateTagFile (d);\n\t\t    break;\n\t\t}\n\t    }\n\t    /*\n\t     * Otherwise, try making it writable\n\t     */\n\t    else if (chmod ((char *) d, 0755) == 0)\n\t    {\n\t\tcache_dir = FcStrCopyFilename (d);\n\t\t/* Try to create CACHEDIR.TAG too */\n\t\tFcDirCacheCreateTagFile (d);\n\t\tbreak;\n\t    }\n\t}\n    }\n    if (d)\n\tFcStrFree (d);\n    FcStrListDone (list);\n    if (!cache_dir)\n\treturn FcFalse;\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n    FcStrFree (cache_dir);\n    if (!cache_hashed)\n        return FcFalse;\n\n    if (FcDebug () & FC_DBG_CACHE)\n        printf (\"FcDirCacheWriteDir dir \\\"%s\\\" file \\\"%s\\\"\\n\",\n\t\tdir, cache_hashed);\n\n    atomic = FcAtomicCreate ((FcChar8 *)cache_hashed);\n    if (!atomic)\n\tgoto bail1;\n\n    if (!FcAtomicLock (atomic))\n\tgoto bail3;\n\n    fd = FcOpen((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT | O_BINARY, 0666);\n    if (fd == -1)\n\tgoto bail4;\n\n    /* Temporarily switch magic to MMAP while writing to file */\n    magic = cache->magic;\n    if (magic != FC_CACHE_MAGIC_MMAP)\n\tcache->magic = FC_CACHE_MAGIC_MMAP;\n\n    /*\n     * Write cache contents to file\n     */\n    written = write (fd, cache, cache->size);\n\n    /* Switch magic back */\n    if (magic != FC_CACHE_MAGIC_MMAP)\n\tcache->magic = magic;\n\n    if (written != cache->size)\n    {\n\tperror (\"write cache\");\n\tgoto bail5;\n    }\n\n    close(fd);\n    if (!FcAtomicReplaceOrig(atomic))\n        goto bail4;\n\n    /* If the file is small, update the cache chain entry such that the\n     * new cache file is not read again.  If it's large, we don't do that\n     * such that we reload it, using mmap, which is shared across processes.\n     */\n    if (cache->size < FC_CACHE_MIN_MMAP && FcStat (cache_hashed, &cache_stat))\n    {\n\tlock_cache ();\n\tif ((skip = FcCacheFindByAddrUnlocked (cache)))\n\t{\n\t    skip->cache_dev = cache_stat.st_dev;\n\t    skip->cache_ino = cache_stat.st_ino;\n\t    skip->cache_mtime = cache_stat.st_mtime;\n#ifdef HAVE_STRUCT_STAT_ST_MTIM\n\t    skip->cache_mtime_nano = cache_stat.st_mtim.tv_nsec;\n#else\n\t    skip->cache_mtime_nano = 0;\n#endif\n\t}\n\tunlock_cache ();\n    }\n\n    FcStrFree (cache_hashed);\n    FcAtomicUnlock (atomic);\n    FcAtomicDestroy (atomic);\n    return FcTrue;\n\n bail5:\n    close (fd);\n bail4:\n    FcAtomicUnlock (atomic);\n bail3:\n    FcAtomicDestroy (atomic);\n bail1:\n    FcStrFree (cache_hashed);\n    return FcFalse;\n}\n\nFcBool\nFcDirCacheClean (const FcChar8 *cache_dir, FcBool verbose)\n{\n    DIR\t\t*d;\n    struct dirent *ent;\n    FcChar8\t*dir;\n    FcBool\tret = FcTrue;\n    FcBool\tremove;\n    FcCache\t*cache;\n    struct stat\ttarget_stat;\n    const FcChar8 *sysroot;\n\n    /* FIXME: this API needs to support non-current FcConfig */\n    sysroot = FcConfigGetSysRoot (NULL);\n    if (sysroot)\n\tdir = FcStrBuildFilename (sysroot, cache_dir, NULL);\n    else\n\tdir = FcStrCopyFilename (cache_dir);\n    if (!dir)\n    {\n\tfprintf (stderr, \"Fontconfig error: %s: out of memory\\n\", cache_dir);\n\treturn FcFalse;\n    }\n    if (access ((char *) dir, W_OK) != 0)\n    {\n\tif (verbose || FcDebug () & FC_DBG_CACHE)\n\t    printf (\"%s: not cleaning %s cache directory\\n\", dir,\n\t\t    access ((char *) dir, F_OK) == 0 ? \"unwritable\" : \"non-existent\");\n\tgoto bail0;\n    }\n    if (verbose || FcDebug () & FC_DBG_CACHE)\n\tprintf (\"%s: cleaning cache directory\\n\", dir);\n    d = opendir ((char *) dir);\n    if (!d)\n    {\n\tperror ((char *) dir);\n\tret = FcFalse;\n\tgoto bail0;\n    }\n    while ((ent = readdir (d)))\n    {\n\tFcChar8\t*file_name;\n\tconst FcChar8\t*target_dir;\n\n\tif (ent->d_name[0] == '.')\n\t    continue;\n\t/* skip cache files for different architectures and */\n\t/* files which are not cache files at all */\n\tif (strlen(ent->d_name) != 32 + strlen (\"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX) ||\n\t    strcmp(ent->d_name + 32, \"-\" FC_ARCHITECTURE FC_CACHE_SUFFIX))\n\t    continue;\n\n\tfile_name = FcStrBuildFilename (dir, (FcChar8 *)ent->d_name, NULL);\n\tif (!file_name)\n\t{\n\t    fprintf (stderr, \"Fontconfig error: %s: allocation failure\\n\", dir);\n\t    ret = FcFalse;\n\t    break;\n\t}\n\tremove = FcFalse;\n\tcache = FcDirCacheLoadFile (file_name, NULL);\n\tif (!cache)\n\t{\n\t    if (verbose || FcDebug () & FC_DBG_CACHE)\n\t\tprintf (\"%s: invalid cache file: %s\\n\", dir, ent->d_name);\n\t    remove = FcTrue;\n\t}\n\telse\n\t{\n\t    FcChar8 *s;\n\n\t    target_dir = FcCacheDir (cache);\n\t    if (sysroot)\n\t\ts = FcStrBuildFilename (sysroot, target_dir, NULL);\n\t    else\n\t\ts = FcStrdup (target_dir);\n\t    if (stat ((char *) s, &target_stat) < 0)\n\t    {\n\t\tif (verbose || FcDebug () & FC_DBG_CACHE)\n\t\t    printf (\"%s: %s: missing directory: %s \\n\",\n\t\t\t    dir, ent->d_name, s);\n\t\tremove = FcTrue;\n\t    }\n\t    FcDirCacheUnload (cache);\n\t    FcStrFree (s);\n\t}\n\tif (remove)\n\t{\n\t    if (unlink ((char *) file_name) < 0)\n\t    {\n\t\tperror ((char *) file_name);\n\t\tret = FcFalse;\n\t    }\n\t}\n        FcStrFree (file_name);\n    }\n\n    closedir (d);\n  bail0:\n    FcStrFree (dir);\n\n    return ret;\n}\n\nint\nFcDirCacheLock (const FcChar8 *dir,\n\t\tFcConfig      *config)\n{\n    FcChar8 *cache_hashed = NULL;\n    FcChar8 cache_base[CACHEBASE_LEN];\n    FcStrList *list;\n    FcChar8 *cache_dir;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n    int fd = -1;\n\n#ifndef _WIN32\n    if (!FcDirCacheBasenameUUID (dir, cache_base, config))\n#endif\n\tFcDirCacheBasenameMD5 (dir, cache_base);\n    list = FcStrListCreate (config->cacheDirs);\n    if (!list)\n\treturn -1;\n\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (sysroot)\n\t    cache_hashed = FcStrBuildFilename (sysroot, cache_dir, cache_base, NULL);\n\telse\n\t    cache_hashed = FcStrBuildFilename (cache_dir, cache_base, NULL);\n\tif (!cache_hashed)\n\t    break;\n\tfd = FcOpen ((const char *)cache_hashed, O_RDWR);\n\tFcStrFree (cache_hashed);\n\t/* No caches in that directory. simply retry with another one */\n\tif (fd != -1)\n\t{\n#if defined(_WIN32)\n\t    if (_locking (fd, _LK_LOCK, 1) == -1)\n\t\tgoto bail;\n#else\n\t    struct flock fl;\n\n\t    fl.l_type = F_WRLCK;\n\t    fl.l_whence = SEEK_SET;\n\t    fl.l_start = 0;\n\t    fl.l_len = 0;\n\t    fl.l_pid = getpid ();\n\t    if (fcntl (fd, F_SETLKW, &fl) == -1)\n\t\tgoto bail;\n#endif\n\t    break;\n\t}\n    }\n    FcStrListDone (list);\n    return fd;\nbail:\n    FcStrListDone (list);\n    if (fd != -1)\n\tclose (fd);\n    return -1;\n}\n\nvoid\nFcDirCacheUnlock (int fd)\n{\n    if (fd != -1)\n    {\n#if defined(_WIN32)\n\t_locking (fd, _LK_UNLCK, 1);\n#else\n\tstruct flock fl;\n\n\tfl.l_type = F_UNLCK;\n\tfl.l_whence = SEEK_SET;\n\tfl.l_start = 0;\n\tfl.l_len = 0;\n\tfl.l_pid = getpid ();\n\tfcntl (fd, F_SETLK, &fl);\n#endif\n\tclose (fd);\n    }\n}\n\n/*\n * Hokey little macro trick to permit the definitions of C functions\n * with the same name as CPP macros\n */\n#define args1(x)\t    (x)\n#define args2(x,y)\t    (x,y)\n\nconst FcChar8 *\nFcCacheDir args1(const FcCache *c)\n{\n    return FcCacheDir (c);\n}\n\nFcFontSet *\nFcCacheCopySet args1(const FcCache *c)\n{\n    FcFontSet\t*old = FcCacheSet (c);\n    FcFontSet\t*new = FcFontSetCreate ();\n    int\t\ti;\n\n    if (!new)\n\treturn NULL;\n    for (i = 0; i < old->nfont; i++)\n    {\n\tFcPattern   *font = FcFontSetFont (old, i);\n\t\n\tFcPatternReference (font);\n\tif (!FcFontSetAdd (new, font))\n\t{\n\t    FcFontSetDestroy (new);\n\t    return NULL;\n\t}\n    }\n    return new;\n}\n\nconst FcChar8 *\nFcCacheSubdir args2(const FcCache *c, int i)\n{\n    return FcCacheSubdir (c, i);\n}\n\nint\nFcCacheNumSubdir args1(const FcCache *c)\n{\n    return c->dirs_count;\n}\n\nint\nFcCacheNumFont args1(const FcCache *c)\n{\n    return FcCacheSet(c)->nfont;\n}\n\n/*\n * This code implements the MD5 message-digest algorithm.\n * The algorithm is due to Ron Rivest.\tThis code was\n * written by Colin Plumb in 1993, no copyright is claimed.\n * This code is in the public domain; do with it what you wish.\n *\n * Equivalent code is available from RSA Data Security, Inc.\n * This code has been tested against that, and is equivalent,\n * except that you don't need to include two pages of legalese\n * with every copy.\n *\n * To compute the message digest of a chunk of bytes, declare an\n * MD5Context structure, pass it to MD5Init, call MD5Update as\n * needed on buffers full of bytes, and then call MD5Final, which\n * will fill a supplied 16-byte array with the digest.\n */\n\n#ifndef HIGHFIRST\n#define byteReverse(buf, len)\t/* Nothing */\n#else\n/*\n * Note: this code is harmless on little-endian machines.\n */\nvoid byteReverse(unsigned char *buf, unsigned longs)\n{\n    FcChar32 t;\n    do {\n\tt = (FcChar32) ((unsigned) buf[3] << 8 | buf[2]) << 16 |\n\t    ((unsigned) buf[1] << 8 | buf[0]);\n\t*(FcChar32 *) buf = t;\n\tbuf += 4;\n    } while (--longs);\n}\n#endif\n\n/*\n * Start MD5 accumulation.  Set bit count to 0 and buffer to mysterious\n * initialization constants.\n */\nstatic void MD5Init(struct MD5Context *ctx)\n{\n    ctx->buf[0] = 0x67452301;\n    ctx->buf[1] = 0xefcdab89;\n    ctx->buf[2] = 0x98badcfe;\n    ctx->buf[3] = 0x10325476;\n\n    ctx->bits[0] = 0;\n    ctx->bits[1] = 0;\n}\n\n/*\n * Update context to reflect the concatenation of another buffer full\n * of bytes.\n */\nstatic void MD5Update(struct MD5Context *ctx, const unsigned char *buf, unsigned len)\n{\n    FcChar32 t;\n\n    /* Update bitcount */\n\n    t = ctx->bits[0];\n    if ((ctx->bits[0] = t + ((FcChar32) len << 3)) < t)\n\tctx->bits[1]++; \t/* Carry from low to high */\n    ctx->bits[1] += len >> 29;\n\n    t = (t >> 3) & 0x3f;\t/* Bytes already in shsInfo->data */\n\n    /* Handle any leading odd-sized chunks */\n\n    if (t) {\n\tunsigned char *p = (unsigned char *) ctx->in + t;\n\n\tt = 64 - t;\n\tif (len < t) {\n\t    memcpy(p, buf, len);\n\t    return;\n\t}\n\tmemcpy(p, buf, t);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\tbuf += t;\n\tlen -= t;\n    }\n    /* Process data in 64-byte chunks */\n\n    while (len >= 64) {\n\tmemcpy(ctx->in, buf, 64);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\tbuf += 64;\n\tlen -= 64;\n    }\n\n    /* Handle any remaining bytes of data. */\n\n    memcpy(ctx->in, buf, len);\n}\n\n/*\n * Final wrapup - pad to 64-byte boundary with the bit pattern\n * 1 0* (64-bit count of bits processed, MSB-first)\n */\nstatic void MD5Final(unsigned char digest[16], struct MD5Context *ctx)\n{\n    unsigned count;\n    unsigned char *p;\n\n    /* Compute number of bytes mod 64 */\n    count = (ctx->bits[0] >> 3) & 0x3F;\n\n    /* Set the first char of padding to 0x80.  This is safe since there is\n       always at least one byte free */\n    p = ctx->in + count;\n    *p++ = 0x80;\n\n    /* Bytes of padding needed to make 64 bytes */\n    count = 64 - 1 - count;\n\n    /* Pad out to 56 mod 64 */\n    if (count < 8) {\n\t/* Two lots of padding:  Pad the first block to 64 bytes */\n\tmemset(p, 0, count);\n\tbyteReverse(ctx->in, 16);\n\tMD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n\n\t/* Now fill the next block with 56 bytes */\n\tmemset(ctx->in, 0, 56);\n    } else {\n\t/* Pad block to 56 bytes */\n\tmemset(p, 0, count - 8);\n    }\n    byteReverse(ctx->in, 14);\n\n    /* Append length in bits and transform */\n    ((FcChar32 *) ctx->in)[14] = ctx->bits[0];\n    ((FcChar32 *) ctx->in)[15] = ctx->bits[1];\n\n    MD5Transform(ctx->buf, (FcChar32 *) ctx->in);\n    byteReverse((unsigned char *) ctx->buf, 4);\n    memcpy(digest, ctx->buf, 16);\n    memset(ctx, 0, sizeof(*ctx));        /* In case it's sensitive */\n}\n\n\n/* The four core functions - F1 is optimized somewhat */\n\n/* #define F1(x, y, z) (x & y | ~x & z) */\n#define F1(x, y, z) (z ^ (x & (y ^ z)))\n#define F2(x, y, z) F1(z, x, y)\n#define F3(x, y, z) (x ^ y ^ z)\n#define F4(x, y, z) (y ^ (x | ~z))\n\n/* This is the central step in the MD5 algorithm. */\n#define MD5STEP(f, w, x, y, z, data, s) \\\n\t( w += f(x, y, z) + data,  w = w<<s | w>>(32-s),  w += x )\n\n/*\n * The core of the MD5 algorithm, this alters an existing MD5 hash to\n * reflect the addition of 16 longwords of new data.  MD5Update blocks\n * the data and converts bytes into longwords for this routine.\n */\nstatic void MD5Transform(FcChar32 buf[4], FcChar32 in[16])\n{\n    register FcChar32 a, b, c, d;\n\n    a = buf[0];\n    b = buf[1];\n    c = buf[2];\n    d = buf[3];\n\n    MD5STEP(F1, a, b, c, d, in[0] + 0xd76aa478, 7);\n    MD5STEP(F1, d, a, b, c, in[1] + 0xe8c7b756, 12);\n    MD5STEP(F1, c, d, a, b, in[2] + 0x242070db, 17);\n    MD5STEP(F1, b, c, d, a, in[3] + 0xc1bdceee, 22);\n    MD5STEP(F1, a, b, c, d, in[4] + 0xf57c0faf, 7);\n    MD5STEP(F1, d, a, b, c, in[5] + 0x4787c62a, 12);\n    MD5STEP(F1, c, d, a, b, in[6] + 0xa8304613, 17);\n    MD5STEP(F1, b, c, d, a, in[7] + 0xfd469501, 22);\n    MD5STEP(F1, a, b, c, d, in[8] + 0x698098d8, 7);\n    MD5STEP(F1, d, a, b, c, in[9] + 0x8b44f7af, 12);\n    MD5STEP(F1, c, d, a, b, in[10] + 0xffff5bb1, 17);\n    MD5STEP(F1, b, c, d, a, in[11] + 0x895cd7be, 22);\n    MD5STEP(F1, a, b, c, d, in[12] + 0x6b901122, 7);\n    MD5STEP(F1, d, a, b, c, in[13] + 0xfd987193, 12);\n    MD5STEP(F1, c, d, a, b, in[14] + 0xa679438e, 17);\n    MD5STEP(F1, b, c, d, a, in[15] + 0x49b40821, 22);\n\n    MD5STEP(F2, a, b, c, d, in[1] + 0xf61e2562, 5);\n    MD5STEP(F2, d, a, b, c, in[6] + 0xc040b340, 9);\n    MD5STEP(F2, c, d, a, b, in[11] + 0x265e5a51, 14);\n    MD5STEP(F2, b, c, d, a, in[0] + 0xe9b6c7aa, 20);\n    MD5STEP(F2, a, b, c, d, in[5] + 0xd62f105d, 5);\n    MD5STEP(F2, d, a, b, c, in[10] + 0x02441453, 9);\n    MD5STEP(F2, c, d, a, b, in[15] + 0xd8a1e681, 14);\n    MD5STEP(F2, b, c, d, a, in[4] + 0xe7d3fbc8, 20);\n    MD5STEP(F2, a, b, c, d, in[9] + 0x21e1cde6, 5);\n    MD5STEP(F2, d, a, b, c, in[14] + 0xc33707d6, 9);\n    MD5STEP(F2, c, d, a, b, in[3] + 0xf4d50d87, 14);\n    MD5STEP(F2, b, c, d, a, in[8] + 0x455a14ed, 20);\n    MD5STEP(F2, a, b, c, d, in[13] + 0xa9e3e905, 5);\n    MD5STEP(F2, d, a, b, c, in[2] + 0xfcefa3f8, 9);\n    MD5STEP(F2, c, d, a, b, in[7] + 0x676f02d9, 14);\n    MD5STEP(F2, b, c, d, a, in[12] + 0x8d2a4c8a, 20);\n\n    MD5STEP(F3, a, b, c, d, in[5] + 0xfffa3942, 4);\n    MD5STEP(F3, d, a, b, c, in[8] + 0x8771f681, 11);\n    MD5STEP(F3, c, d, a, b, in[11] + 0x6d9d6122, 16);\n    MD5STEP(F3, b, c, d, a, in[14] + 0xfde5380c, 23);\n    MD5STEP(F3, a, b, c, d, in[1] + 0xa4beea44, 4);\n    MD5STEP(F3, d, a, b, c, in[4] + 0x4bdecfa9, 11);\n    MD5STEP(F3, c, d, a, b, in[7] + 0xf6bb4b60, 16);\n    MD5STEP(F3, b, c, d, a, in[10] + 0xbebfbc70, 23);\n    MD5STEP(F3, a, b, c, d, in[13] + 0x289b7ec6, 4);\n    MD5STEP(F3, d, a, b, c, in[0] + 0xeaa127fa, 11);\n    MD5STEP(F3, c, d, a, b, in[3] + 0xd4ef3085, 16);\n    MD5STEP(F3, b, c, d, a, in[6] + 0x04881d05, 23);\n    MD5STEP(F3, a, b, c, d, in[9] + 0xd9d4d039, 4);\n    MD5STEP(F3, d, a, b, c, in[12] + 0xe6db99e5, 11);\n    MD5STEP(F3, c, d, a, b, in[15] + 0x1fa27cf8, 16);\n    MD5STEP(F3, b, c, d, a, in[2] + 0xc4ac5665, 23);\n\n    MD5STEP(F4, a, b, c, d, in[0] + 0xf4292244, 6);\n    MD5STEP(F4, d, a, b, c, in[7] + 0x432aff97, 10);\n    MD5STEP(F4, c, d, a, b, in[14] + 0xab9423a7, 15);\n    MD5STEP(F4, b, c, d, a, in[5] + 0xfc93a039, 21);\n    MD5STEP(F4, a, b, c, d, in[12] + 0x655b59c3, 6);\n    MD5STEP(F4, d, a, b, c, in[3] + 0x8f0ccc92, 10);\n    MD5STEP(F4, c, d, a, b, in[10] + 0xffeff47d, 15);\n    MD5STEP(F4, b, c, d, a, in[1] + 0x85845dd1, 21);\n    MD5STEP(F4, a, b, c, d, in[8] + 0x6fa87e4f, 6);\n    MD5STEP(F4, d, a, b, c, in[15] + 0xfe2ce6e0, 10);\n    MD5STEP(F4, c, d, a, b, in[6] + 0xa3014314, 15);\n    MD5STEP(F4, b, c, d, a, in[13] + 0x4e0811a1, 21);\n    MD5STEP(F4, a, b, c, d, in[4] + 0xf7537e82, 6);\n    MD5STEP(F4, d, a, b, c, in[11] + 0xbd3af235, 10);\n    MD5STEP(F4, c, d, a, b, in[2] + 0x2ad7d2bb, 15);\n    MD5STEP(F4, b, c, d, a, in[9] + 0xeb86d391, 21);\n\n    buf[0] += a;\n    buf[1] += b;\n    buf[2] += c;\n    buf[3] += d;\n}\n\nFcBool\nFcDirCacheCreateTagFile (const FcChar8 *cache_dir)\n{\n    FcChar8\t\t*cache_tag;\n    int \t\t fd;\n    FILE\t\t*fp;\n    FcAtomic\t\t*atomic;\n    static const FcChar8 cache_tag_contents[] =\n\t\"Signature: 8a477f597d28d172789f06886806bc55\\n\"\n\t\"# This file is a cache directory tag created by fontconfig.\\n\"\n\t\"# For information about cache directory tags, see:\\n\"\n\t\"#       http://www.brynosaurus.com/cachedir/\\n\";\n    static size_t\t cache_tag_contents_size = sizeof (cache_tag_contents) - 1;\n    FcBool\t\t ret = FcFalse;\n\n    if (!cache_dir)\n\treturn FcFalse;\n\n    if (access ((char *) cache_dir, W_OK) == 0)\n    {\n\t/* Create CACHEDIR.TAG */\n\tcache_tag = FcStrBuildFilename (cache_dir, \"CACHEDIR.TAG\", NULL);\n\tif (!cache_tag)\n\t    return FcFalse;\n\tatomic = FcAtomicCreate ((FcChar8 *)cache_tag);\n\tif (!atomic)\n\t    goto bail1;\n\tif (!FcAtomicLock (atomic))\n\t    goto bail2;\n\tfd = FcOpen((char *)FcAtomicNewFile (atomic), O_RDWR | O_CREAT, 0644);\n\tif (fd == -1)\n\t    goto bail3;\n\tfp = fdopen(fd, \"wb\");\n\tif (fp == NULL)\n\t    goto bail3;\n\n\tfwrite(cache_tag_contents, cache_tag_contents_size, sizeof (FcChar8), fp);\n\tfclose(fp);\n\n\tif (!FcAtomicReplaceOrig(atomic))\n\t    goto bail3;\n\n\tret = FcTrue;\n      bail3:\n\tFcAtomicUnlock (atomic);\n      bail2:\n\tFcAtomicDestroy (atomic);\n      bail1:\n\tFcStrFree (cache_tag);\n    }\n\n    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n\n    return ret;\n}\n\nvoid\nFcCacheCreateTagFile (const FcConfig *config)\n{\n    FcChar8   *cache_dir = NULL, *d = NULL;\n    FcStrList *list;\n    const FcChar8 *sysroot = FcConfigGetSysRoot (config);\n\n    list = FcConfigGetCacheDirs (config);\n    if (!list)\n\treturn;\n\n    while ((cache_dir = FcStrListNext (list)))\n    {\n\tif (d)\n\t    FcStrFree (d);\n\tif (sysroot)\n\t    d = FcStrBuildFilename (sysroot, cache_dir, NULL);\n\telse\n\t    d = FcStrCopyFilename (cache_dir);\n\tif (FcDirCacheCreateTagFile (d))\n\t    break;\n    }\n    if (d)\n\tFcStrFree (d);\n    FcStrListDone (list);\n}\n\n#define __fccache__\n#include \"fcaliastail.h\"\n#undef __fccache__\n` was unexpected","path":"/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/0001-cache-If-nsec-is-zero-don-t-use-it-for-comparisons.patch/src/fccache.c"}],"paths":{"scanned":["/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/0001-cache-If-nsec-is-zero-don-t-use-it-for-comparisons.patch/src/fccache.c","/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/05_lcdfilterlegacy.patch/src/fcname.c","/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/do_not_remove_uuid.patch/src/fcdir.c","/home/capstone/Desktop/root/fontconfig-2.13.1/.pc/path_max.patch/src/fccfg.c","/home/capstone/Desktop/root/fontconfig-2.13.1/config-fixups.h","/home/capstone/Desktop/root/fontconfig-2.13.1/doc/edit-sgml.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cache/fc-cache.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fc-case.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-case/fccase.tmpl.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-cat/fc-cat.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-conflist/fc-conflist.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fc-lang.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-lang/fclang.tmpl.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-list/fc-list.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-match/fc-match.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-pattern/fc-pattern.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-query/fc-query.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-scan/fc-scan.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fc-validate/fc-validate.c","/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcfreetype.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fcprivate.h","/home/capstone/Desktop/root/fontconfig-2.13.1/fontconfig/fontconfig.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcarch.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcatomic.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccache.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccfg.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccharset.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fccompat.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdbg.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdefault.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdeprecate.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcdir.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcformat.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfreetype.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcfs.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcftint.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fchash.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcinit.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcint.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclang.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fclist.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatch.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmatrix.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcmutex.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcname.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjs.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjs.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcobjshash.gperf.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcpat.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcptrlist.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcrange.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcserialize.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstat.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstdint.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcstr.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcweight.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcwindows.h","/home/capstone/Desktop/root/fontconfig-2.13.1/src/fcxml.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.c","/home/capstone/Desktop/root/fontconfig-2.13.1/src/ftglue.h"]},"interfile_languages_used":[],"skipped_rules":[]}